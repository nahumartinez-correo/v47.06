/****o* Pendientes de agrupación/OFB:tes:SENDtipo
* NOMBRE
*   OFB:tes:SENDtipo
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   tes:TRANabm_tipo 
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSEND.h"

SUB tes:SENDtipo
  LOCAL l_tabla LIKE admin:tabla 
  LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

	//gpb:AUT-2430
	//realizo la validacion de los campos obligatorios (no es la solucion ideal realizarlo aca)
	//se tendria que replantear como esta hecho el ABM
	IF (TESTFLAG(admin:mode_flags,update) || TESTFLAG(admin:mode_flags,delete)) THEN
		RESETVALDONE tes:adt_tipo_cod
		CALL post:MISCFtrim(tes:adt_tipo_cod)
		IF (tes:adt_tipo_cod.NUMCHARS == 0) THEN
			NEXTFIELD tes:adt_tipo_cod
			UNGETKEY RT_TAB
			RETURN (-2)
		END IF
	END IF
	
	/* Marcela */
	call post:MISCAutorizoModif("ProdTipo")
	if (retval < 0) then
		return (-2)
	endif
	drv:save_button = drv:last_button
	IF (TESTFLAG(admin:mode_flags,update)) THEN
		CALL tes:CDStipo_save
		unprotfield adt_tipo_lugar
		unprotfield adt_tipo_mone
		drv:button = 3
		call drv:but_enable
		drv:button = 4
		call drv:but_enable
		CALL drv:side_bar_disable
		RESETFLAG admin:mode_flags,update
		call post:MISCJournalTablas
	ELSE
		IF (TESTFLAG(admin:mode_flags,delete)) THEN
			RESETFLAG admin:mode_flags,delete
			CALL MISCindProdTipo  /*impacto en tablas*/
			CALL lib:MISCchk_impacto
			IF (retval < 0) THEN
				RETURN (retval)
			END IF
			CALL lib:adt_delete_verify
			IF (RETVAL == 0) THEN
				CALL drv:side_bar_disable
				CALL tes:CDStipo_del
				IF (RETVAL != 0) THEN
					drv:button = drv:save_button
					CALL drv:but_up_enable
					unprotfield adt_tipo_lugar
					unprotfield adt_tipo_mone
					drv:button = 3
					call drv:but_enable
					drv:button = 4
					call drv:but_enable
					RETURN (-1)
         ELSE
					call post:MISCJournalTablas
					CALL CSR:proc_list(170,LST:LISTtipo_flds)
					CALL CSR:proc_list(190,LST:LISTtipo_flds)
					unprotfield adt_tipo_lugar
					unprotfield adt_tipo_mone
					drv:button = 3
					call drv:but_enable
					drv:button = 4
					call drv:but_enable
					RETURN (-1)
				END IF
			END IF
		ELSE
			IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
				RESETFLAG admin:mode_flags,imprimir
				/*siaf:adt_tabla_context = DSC:adt_tipo_ctx
				siaf:INDencab_lis = OFB:MISCencab_tipo 
				siaf:INDselect_tabla = OFB:CDStipo_select
				siaf:INDpaso_str_tabla = OFB:MISCpaso_str_d
				siaf:INDestado_clave = OFB:MISCclave_tipo
				siaf:INDadt_sval = 0
				CALL siaf:TRANimprimo_driver*/
				
				//Inicio gpb:AUT-2415 
				/*CALL MISCdumptable 
				CALL CDSdumptable*/  
				//resguardo los valores originales
				LET l_tabla = admin:tabla 
				LET l_INDCamposTablas = post:INDCamposTablas                  
				CALL post:MISCdumptableNew 
				admin:tabla = "ProdTipo"
				post:INDCamposTablas = LST:LISTtipo_flds
				CALL post:CDSdumptableNew  
				//recupero los valores originales
				LET admin:tabla = l_tabla
				LET post:INDCamposTablas = l_INDCamposTablas
				//Fin gpb:AUT-2415 
				
				CALL CSR:proc_list(170,LST:LISTtipo_flds)
				CALL CSR:proc_list(190,LST:LISTtipo_flds)
				unprotfield adt_tipo_lugar
				unprotfield adt_tipo_mone
				drv:button = 3
				call drv:but_enable
				drv:button = 4
				call drv:but_enable
				RETURN (-1)
			END IF
		END IF
		RETURN (-1)
  END IF
  CALL CSR:proc_list(170,LST:LISTtipo_flds)
  CALL CSR:proc_list(190,LST:LISTtipo_flds)
  unprotfield adt_tipo_lugar
  unprotfield adt_tipo_mone
  unprotfield adt_tipo_medio
  drv:button = 3
  call drv:but_enable
  drv:button = 4
  call drv:but_enable
  drv:button = 5
  call drv:but_enable
  
  RETURN (-1)
END SUB

/*******/
