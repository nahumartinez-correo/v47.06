/****o* Pendientes de agrupación/OFB:tes:PBborrar_pase_espv
* NOMBRE
*   OFB:tes:PBborrar_pase_espv
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tespb.h"

SUB tes:PBborrar_pase_espv
local idx like siaf:i

	IF (login_dest.numchars == 0 || siaf:importe == 0 || tes:espv_cod.numchars == 0) then
		errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	    drv:button = drv:last_button
        call drv:but_up_enable
	    return (-1)
    end if
    
    drv:button = drv:last_button
    call drv:but_down_disable

    if (drv:dt_app == 4) then 
    	let adt_evaux_tesoro = "S"
    else
        let adt_evaux_tesoro = "N"

    endif
	let adt_evaux_op = op:op_operator_id
    let adt_evaux_suc = op:op_branch_id
    let adt_evaux_codigo = espv_cod

	idx = PL_GETITEM
	do
		call csr:myPickcontrol(dsc:PICPasesDisp,common:csr_string,idx)
		if (retval < 0)
			break
		end if
		adt_evaux_subcod = substr(common:csr_string,0,20)
		adt_espv_valor = substr(common:csr_string,21,13)
		adt_evaux_cantidad = substr(common:csr_string,35,6)
		adt_evaux_importe = substr(common:csr_string,42,13)

		Call CDSauxespv_del
		if (retval < 0)
			break
		end if

		idx = idx + 1
	loop

    Call MISClimpia_pase_espv

	drv:button = drv:last_button
    call drv:but_up_enable
END SUB

/*******/
