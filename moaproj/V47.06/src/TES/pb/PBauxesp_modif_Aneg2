/****o* Especies Valorizadas/OFB:tes:PBauxesp_modif_Aneg2
* NOMBRE
*   OFB:tes:PBauxesp_modif_Aneg2
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:tes:BUTsalida_tes_ev2
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tespb.h"

SUB tes:PBauxesp_modif_Aneg2
    /* Modifica registros de la tabla AuxEspV */
    if (adt_evaux_subcod.numchars == 0 || adt_evaux_cantidad == 0 || \
	adt_evaux_importe == 0) then
	 errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	 drv:button = drv:last_button
         call drv:but_up_enable
         return (-1)
    endif 
    if (!(tes:adt_evaux_subcod.valdone)) then
        nextfield tes:adt_evaux_subcod
        ungetkey RT_TAB
        drv:button = drv:last_button
         call drv:but_up_enable
        return -1
    end if

    call FVALsubesp_mov2_pb
    if (retval < 0) then
        drv:button = drv:last_button
        call drv:but_up_enable
        return (-2)
    end if
    call FVALcantidad_ev_pb
    if (retval < 0) then
        drv:button = drv:last_button
        call drv:but_up_enable
        return (-2)
    end if
    call FVALimporte_ev_pb
    if (retval < 0) then
        drv:button = drv:last_button
        call drv:but_up_enable
        return (-2)
    end if
    
    drv:button = drv:last_button
    call drv:but_disable

    // Por tesoro
    if (drv:dt_app == 4) then 
    	let adt_evaux_tesoro = "S"
        let adt_evaux_op = op:op_tesoro_id
    else
        let adt_evaux_tesoro = "N"
	let adt_evaux_op = op:op_operator_id
    endif
    let adt_evaux_suc = op:op_branch_id    
    let adt_evaux_codigo = espv_cod
    call CDSauxesp_save
    let siaf:importe = siaf:importe - post:importe_aux + adt_evaux_importe
    let siaf:cantidad = siaf:cantidad - post:cantidad  + adt_evaux_cantidad
    refresh siaf:importe
    CALL MISCdisplay_especies
    call ABMauxesp_clear
    call ABMauxesp_refresh

    NEXTFIELD adt_evaux_codigo
    drv:button = drv:last_button
    call drv:but_up_enable
    call drv:but_disable
    drv:button = 3
    call drv:but_enable
    drv:button = 5
    call drv:but_disable
    ;setvaldone adt_evaux_subcod
    resetvaldone adt_evaux_subcod
    
END SUB

/*******/
