/****o* Pendientes de agrupación/OFB:tes:PBlogin_dest
* NOMBRE
*   OFB:tes:PBlogin_dest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tespb.h"

SUB tes:PBlogin_dest
local cont_aux like tes:cont1

	drv:button = 1 //Boton del picklist de los movimientos ingresados
    call drv:but_down_disable

    if (!testflag(tlr:tran_flags,correction)) then
        call CDSadt_operator
        if (retval < 0) then
            clearfield login_dest
			drv:button = 1 //Boton del picklist de los movimientos ingresados
			call drv:but_up_enable

		    /* Rehabilito el boton*/
		    let drv:button = drv:last_button
		    call drv:but_up_enable
		    call drv:but_redraw
            return (retval)
        end if
        move op:adt_login_id to login_dest

		//Controlo que el operador no este cargados en la AuxCheq                
        Call CDSverif_pase_sal
        if (retval == 0)
            clearfield login_dest
			drv:button = 1 //Boton del picklist de los movimientos ingresados
			call drv:but_up_enable

		    /* Rehabilito el boton*/
		    let drv:button = drv:last_button
		    call drv:but_up_enable
		    call drv:but_redraw
			errmsg lst:common:errmsg_list,"El pase que intenta ingresar ya esta cargado."
           	call MISClimpia_pase
        	return -2
        end if
        
        refresh login_dest        
        protfield login_dest   
    end if

    /* Rehabilito el boton*/
    let drv:button = drv:last_button
    call drv:but_up_enable
    call drv:but_redraw

	drv:button = 1 //Boton del picklist de los movimientos ingresados
    call drv:but_up_enable
    
	//Habilito los campos de importe
    let cont1 = 0  
    DO
      	if (cont1 > (cant_mp - 1)) then
			break
      	end if
		UNPROTFIELD tes:importes_pase[cont1]
		cont1 = cont1 + 1
	LOOP
	nextfield importes_pase[0]
END SUB

/*******/
