/****o* Pendientes de agrupación/OFB:tes:PBcheques_ingresados
* NOMBRE
*   OFB:tes:PBcheques_ingresados
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesPB.h"

SUB tes:PBcheques_ingresados

local idx like siaf:i
local varl_tipo_cheque like siaf:moneda
local varl_banco  like post:cod_banco
local varl_cuenta like post:cuenta
local varl_cheque like post:nro_cheque
local varl_monto  like siaf:importe
local varl_fec_e  like post:fecha_vencimiento
local varl_fec_v  like post:fecha_vencimiento
local varl_marca  like tes:tes_marca_cierre
local varl_clearing like tes:clearing

    drv:button = drv:last_button
    CALL drv:but_down_disable
  

    /*Seteo de flags a modo picklist, para que el foco este en el picklist*/
    SETFLAG drv:mode_flags,picklist_mode
    /*Mediante esta rutina csr se muestra el picklist*/
    CALL csr:f_sadopl DSC:cheques_os post:csr_string_250
    /*Si el usuario selecciona una opciòn del picklist entonces queda en la linea */
    /*para que se pueda marcar/desmarcar*/
    If (RETVAL < 0) then
		clearfield cheques_recibidos_os
    else
        let cheques_recibidos_os = substr (post:csr_string_250,0,43)
        varl_tipo_cheque = substr(post:csr_string_250,0,2)
		varl_banco  = substr(post:csr_string_250,3,3)
		varl_cuenta = substr(post:csr_string_250,7,20)
		varl_cheque = substr(post:csr_string_250,28,8)
		varl_monto  = substr(post:csr_string_250,37,16)
		varl_fec_e  = substr(post:csr_string_250,54,2) +  substr(post:csr_string_250,57,2) * 100 + substr(post:csr_string_250,60,4) * 10000
		varl_fec_v  = substr(post:csr_string_250,65,2) +  substr(post:csr_string_250,68,2) * 100 + substr(post:csr_string_250,71,4) * 10000
		varl_marca  = substr(post:csr_string_250,75,1)
		varl_clearing = substr(post:csr_string_250,82,3)
				
        /* si esta marcado, se lo desmarca y biceversa */
        IF (varl_marca == "*")
	        LET varl_marca = " "
        ELSE
	        LET varl_marca = "*"
        END IF
                
		idx = PL_GETITEM
        do
			call csr:myPickcontrol(dsc:cheques_os,post:csr_string_250,idx)
			if (retval < 0)
				break
			end if
	        if (substr(post:csr_string_250,0,43) == cheques_recibidos_os)
	        	//Lo elimino del picklist y lo vuelvo a cargar con la marca actualizada
				siaf:i = idx - PL_GETITEM
				CALL CSR:myPickdelete(dsc:cheques_os,post:csr_string_250,siaf:i)
				idx = idx - 1
				fprint post:csr_string_250,"%02.2s %03.3s %-20.20s %08.8s %16.16e %10.10e %10.10e%-1.1s      %3e", \
				varl_tipo_cheque,varl_banco,varl_cuenta,varl_cheque,varl_monto,varl_fec_e,varl_fec_v,varl_marca,varl_clearing				
				Call csr:f_saaddpl dsc:cheques_os post:csr_string_250
				break
			else
				idx = idx + 1
			end if
			
        loop    
		cheques_recibidos_os = post:csr_string_250
		refresh cheques_recibidos_os
		//Ordeno el picklis para que quede igual que antes...(por subespecie)
		//CALL csr:PickOp 4 dsc:cheques_os "0,15"

	End If
	refresh cheques_recibidos_os
	/*Reseteo de flags de modo picklist*/
	RESETFLAG drv:mode_flags,picklist_mode
	
	drv:button = drv:last_button
	CALL drv:but_up_enable


END SUB

/*******/
