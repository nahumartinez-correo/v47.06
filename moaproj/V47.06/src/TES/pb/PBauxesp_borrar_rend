/****o* Especies Valorizadas/OFB:tes:PBauxesp_borrar_rend
* NOMBRE
*   OFB:tes:PBauxesp_borrar_rend
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Esta rutina no está referenciada en ningún lado.
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tespb.h"

SUB tes:PBauxesp_borrar_rend
    if (adt_evaux_subcod.numchars == 0) then    	
	    errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	    drv:button = drv:last_button
        call drv:but_up_enable
	    return (-1)
    else
        if (adt_evaux_cantidad == 0 && adt_evaux_importe != 0) then
            errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	        drv:button = drv:last_button
            call drv:but_up_enable
	        return (-1)
	    end if
        if (adt_evaux_cantidad.numchars == 0 ||	adt_evaux_importe == 0) then
            call CDSimp_rend_es_cero
            if (retval < 0) then /* No */
                errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	            drv:button = drv:last_button
                call drv:but_up_enable
	            return (-1)
	        end if
	    end if
    end if 
    drv:button = drv:last_button
    call drv:but_down_disable
    
    // Por tesoro
    if (drv:dt_app == 4) then 
    	let adt_evaux_tesoro = "S"
        let adt_evaux_op = op:op_tesoro_id
    else
        let adt_evaux_tesoro = "N"
	    let adt_evaux_op = op:op_operator_id
    endif
    let adt_evaux_suc = op:op_branch_id  
    let adt_evaux_codigo = espv_cod
    call tes:CDSauxesp_load
    call CDSauxesp_del
  	if (post:cli_tipo != 1 && \
  		post:enCombo != "S") then
	    //cgw:si no es un producto de un combo, calcula importes.
        let siaf:importe = siaf:importe - adt_evaux_importe
        refresh siaf:importe
    end if
    let siaf:cantidad = siaf:cantidad - adt_evaux_cantidad   
    call ABMauxesp_clear
    call ABMauxesp_refresh
    clearfield cheques_ingresados

    drv:button = 2
    call drv:but_enable
    drv:button = 3
    call drv:but_enable
    drv:button = 4
    call drv:but_disable
    drv:button = 5
    call drv:but_up_enable
    call drv:but_disable
    clearfield cheques_ingresados
    refresh tes:cheques_ingresados
    NEXTFIELD adt_evaux_subcod
    ;setvaldone adt_evaux_subcod
    resetvaldone adt_evaux_subcod
END SUB

/*******/
