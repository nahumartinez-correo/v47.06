/****o* Pendientes de agrupación/OFB:tes:JNLsalida_ev
* NOMBRE
*   OFB:tes:JNLsalida_ev
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesJNL.h"

SUB tes:JNLsalida_ev
    IF (!TESTFLAG(common:rt_flags,reentry_active) && !TESTFLAG(tlr:tran_flags,correction)) THEN
		// para las transacciones que graban en TesEspVMov (para que queden grbadas en el journal)
		adt_espv_suc = op:op_branch_id
		adt_espv_op_orig = op:op_operator_id
		adt_espv_orig = op:op_login_id
		adt_espv_op_dest = operator_id_dest
		adt_espv_dest = login_dest
		adt_espv_hora = tlr:jnl_time
		adt_espv_codtran = siaf:codigo_siaf
        adt_espv_cod = espv_cod
		adt_espv_subcod = espv_subcod
		adt_espv_seq = tlr:jnl_sequence	
		if (adt_espv_seq_pase.numchars == 0)
			adt_espv_seq_pase = adt_espv_seq
		end if
    END IF
    cds append tlr:CONjnl_write \
	espv_cod \
	espv_subcod \
	login_dest \
	FLD:siaf:importe \
	fld:siaf:cantidad \
    fld:adt_espv_cantidad \
	FLD:es_tesoro \
    adt_espv_suc \
    adt_espv_orig \
    adt_espv_dest \
    adt_espv_hora \
	aux_sequence_mov \
	adt_espv_cod \
	adt_espv_subcod \
    adt_espv_seq \
    adt_espv_fecha \
    adt_espv_seq_pase
END SUB

/*******/
