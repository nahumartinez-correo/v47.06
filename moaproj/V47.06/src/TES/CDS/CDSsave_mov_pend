/****o* Pendientes de agrupación/OFB:tes:CDSsave_mov_pend
* NOMBRE
*   OFB:tes:CDSsave_mov_pend
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSsave_mov_pend

    CDS SELECT from DSC:tes:AnteTM_tbl BECOMES DSC:tes:AnteTM_ctx WHERE \
    tes:suc_fecha == tlr:set_bus_date  // tes:suc_fecha
    CDS FINDFIRST DSC:tes:AnteTM_ctx NOLOCK
    let lib:err_retval = CDSRETVAL
    if (lib:err_retval == 0)
       //borro los reg del contexto porque los vuelvo a grabar actualizados
       CDS DELETE DSC:tes:AnteTM_ctx ALL
    end if


    CDS SELECT from DSC:tes:teso_mov_table BECOMES DSC:tes:teso_mov_context WHERE \
    (tes:tmov_marca_ing == "" || tes:tmov_marca_ing == "E" || \
    tes:tmov_marca_ing == "S")
    CDS FINDFIRST DSC:tes:teso_mov_context NOLOCK
    let lib:err_retval = CDSRETVAL

    DO
       if (lib:err_retval < 0) then
	        break
       end if

       CDS EXTRACT DSC:tes:teso_mov_context ALL
       //Inserto el reg en la tabla auxiliar de teso_mov (AnteTM)
       CDS CLEARBUFFER DSC:tes:AnteTM_ctx
       CDS APPEND DSC:tes:AnteTM_ctx \
       FLD:tes:suc_fecha     FLD:tmov_moneda      FLD:tmov_suc_id        \
       FLD:tmov_login_dest   FLD:tmov_op_id_orig  FLD:tmov_sequence_orig \
       FLD:tmov_hora_orig    FLD:tmov_codigo_siaf FLD:tmov_login_orig    \
       FLD:tmov_marca_ing                                                \
       FLD:tmov_importes[00] FLD:tmov_importes[01] FLD:tmov_importes[02] \
       FLD:tmov_importes[03] FLD:tmov_importes[04] FLD:tmov_importes[05] \
       FLD:tmov_importes[06] FLD:tmov_importes[07] FLD:tmov_importes[08] \
       FLD:tmov_importes[09] FLD:tmov_importes[10] FLD:tmov_importes[11] \
       FLD:tmov_importes[12] FLD:tmov_importes[13]                       \
       FLD:tmov_total        FLD:tmov_op_id_dest                         \
       hcomm:tran_status as tes:tmov_hcomm_status                        \
       FLD:tmov_pase_tesoro
       
       CDS INSERT DSC:tes:AnteTM_ctx lock
       CDS FINDNEXT DSC:tes:teso_mov_context NOLOCK
       let lib:err_retval = CDSRETVAL
    LOOP
    CDS ENDSELECT DSC:tes:teso_mov_context
    // Grabo los pendientes de cheques

    cds select from dsc:CheqMov_tbl becomes dsc:CheqMov_ctx where \
    (chmov_nro_cheque != 0  && chmov_cuenta    != 0 && chmov_banco != 0) &&  \
    (chmov_marca_ing  == "" || chmov_marca_ing == "E" || \
     chmov_marca_ing == "S")
    /* Busco todos los mov que no sean encabezados */

    cds findfirst dsc:CheqMov_ctx nolock
    do
        if (cdsretval < 0) then
            break
        end if
        cds extract dsc:CheqMov_ctx all

        CDS CLEARBUFFER DSC:tes:AnteTM_ctx
        CDS APPEND DSC:tes:AnteTM_ctx           \
        fld:tes:suc_fecha                       \
        fld:chmov_moneda     as fld:tmov_moneda \
        fld:chmov_suc_id     as fld:tmov_suc_id \
        fld:chmov_login_dest as fld:tmov_login_dest

        CDS APPEND DSC:tes:AnteTM_ctx                     \
        fld:chmov_op_id_orig    as fld:tmov_op_id_orig    \
        fld:chmov_sequence_orig as fld:tmov_sequence_orig \
        fld:chmov_hora_orig     as fld:tmov_hora_orig     \
        fld:chmov_codtran       as fld:tmov_codigo_siaf   \
        fld:chmov_login_orig    as fld:tmov_login_orig

        CDS APPEND DSC:tes:AnteTM_ctx                \
        fld:chmov_marca_ing as fld:tmov_marca_ing    \
        fld:chmov_banco                              \
        fld:chmov_cuenta                             \
        fld:chmov_nro_cheque                         \
        fld:chmov_importe     as fld:tmov_total      \
        fld:chmov_op_id_dest  as fld:tmov_op_id_dest \
        FLD:chmov_pase_tesoro as FLD:tmov_pase_tesoro
        
        CDS INSERT DSC:tes:AnteTM_ctx lock

        CDS FINDNEXT DSC:CheqMov_ctx NOLOCK
     loop
     CDS UNLOCK DSC:tes:AnteTM_ctx
     CDS ENDSELECT DSC:tes:AnteTM_ctx
     cds endselect dsc:CheqMov_ctx

END SUB

/*******/
