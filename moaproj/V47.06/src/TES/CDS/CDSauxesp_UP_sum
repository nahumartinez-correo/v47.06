/****o* Pendientes de agrupación/OFB:tes:CDSauxesp_UP_sum
* NOMBRE
*   OFB:tes:CDSauxesp_UP_sum
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSauxesp_UP_sum(NroTran)
local NroTransaccion like tes:adt_evaux_prestran

	let NroTransaccion = NroTran

	/* Esta CDS suma en la tabla AuxIvaUP, después de una modificación en la tran.
	de Especies - Gabriel Falciola*/
	cds select from DSC:AuxEspV_tbl becomes DSC:AuxEspV_ctx \
	where tes:adt_evaux_suc == fld:op:op_branch_id && \
	tes:adt_evaux_tesoro == "N" && \
	tes:adt_evaux_op == fld:op:op_operator_id && \
	tes:adt_evaux_prestran == NroTransaccion
	cds findfirst dsc:AuxEspV_ctx NOLOCK
	while (cdsretval == 0) then
		cds extract dsc:AuxEspV_ctx post:ImpServUP post:AliServUP adt_espv_formfiscal
		post:PreDForFis = adt_espv_formfiscal
		if (post:PreDForFis.numchars == 0)
			post:EstadoFormu = SIN_FORM
		else
			post:EstadoFormu = CON_FORM
		end if		
   		/*Actualizo importes para Ventas UP - Gabriel Falciola*/
		call post:CDSAcumImpUP(0,post:ImpServUP,siaf:adt_tran_fliatran,post:AliServUP,siaf:adt_tran_afec_efvo,post:PresNro)

		cds findnext dsc:AuxEspV_ctx NOLOCK
	end while
    cds endselect DSC:AuxEspV_ctx
END SUB

/*******/
