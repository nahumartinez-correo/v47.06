/****o* Pendientes de agrupación/OFB:tes:CDScargo_pase_espv
* NOMBRE
*   OFB:tes:CDScargo_pase_espv
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDScargo_pase_espv
	if (siaf:codigo_siaf == 8530) then
		login_dest = 0
	end if
	CDS SELECT FROM DSC:AuxEspV_tbl BECOMES DSC:AuxEspV_ctx \
	WHERE adt_evaux_suc == fld:op:op_branch_id && \
	adt_evaux_op == fld:op:op_operator_id && \
	adt_evaux_codigo == fld:espv_cod && \
	login_dest == fld:login_dest && \
	tes:adt_evaux_tesoro == FLD:tes:adt_evaux_tesoro

	CDS FINDFIRST DSC:AuxEspV_ctx nolock
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval == 0) THEN
		//Creo el picklist que contendra los pases de las especies
		call csr:f_sadroppl dsc:PICPasesDisp
		call CSR:f_sanewpl dsc:PICPasesDisp pic:PICPasesDisp 605,332
	END IF
	cont1 = 0
	siaf:importe = 0
	PasesDisp_cant = 0
	PasesDisp_idx = 0
	Do
		IF (lib:err_retval != 0) THEN
	  		BREAK
	  	END IF
		CDS EXTRACT DSC:AuxEspV_ctx all
		
		if (cont1 < 10)
			espv_vsubcod[cont1] = adt_evaux_subcod
			espv_valor[cont1] = adt_espv_valor
			espv_cantidad[cont1] = adt_evaux_cantidad
			val_importes[cont1] = adt_evaux_importe
			refresh espv_vsubcod[cont1]
			refresh espv_valor[cont1]
			refresh espv_cantidad[cont1]
			refresh val_importes[cont1]
			
			unprotfield espv_cantidad[cont1]
			unprotfield val_importes[cont1]
		end if
		
		fprint common:csr_string "%-20s %13.13e %6s %13.13e",\
		adt_evaux_subcod,adt_espv_valor,adt_evaux_cantidad,adt_evaux_importe
		Call csr:f_saaddpl dsc:PICPasesDisp common:csr_string
		PasesDisp_cant = PasesDisp_cant + 1
		siaf:importe = siaf:importe + adt_evaux_importe
				
		cont1 = cont1 + 1
		CDS FINDNEXT DSC:AuxEspV_ctx nolock
		lib:err_retval = CDSRETVAL
	Loop
	CDS ENDSELECT DSC:AuxEspV_ctx
	refresh siaf:importe
	
	if (PasesDisp_cant <= 10)	
    	disablecontrol PBespv_abajo
        disablecontrol PBespv_arriba
		call post:MISCflecha_restore
	else
    	enablecontrol PBespv_abajo
        enablecontrol PBespv_arriba
		keydef f29,PBespv_arriba
	    keydef f32,PBespv_abajo
	end if
    if (PasesDisp_idx == 0)
    	disablecontrol PBespv_arriba
    end if
END SUB

/*******/
