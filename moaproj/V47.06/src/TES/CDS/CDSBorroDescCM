/****o* Pendientes de agrupación/OFB:tes:CDSBorroDescCM
* NOMBRE
*   OFB:tes:CDSBorroDescCM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSBorroDescCM

   CDS SELECT FROM DSC:post:TABPresuDeta BECOMES DSC:post:CONPresuDeta \
		WHERE post:fecha    == FLD:common:system_date && \
		post:op_operator_id == FLD:op:op_operator_id && \
		post:PresNro        == post:PresNro && \
		post:PreDNroTrnAsoc == post:PreDNroTrn && \
		siaf:codigo_siaf    == 99300
		     
	CDS FINDFIRST DSC:post:CONPresuDeta NOLOCK
	lib:err_retval = CDSRETVAL

    post:PreDNroTrnAsoc = post:PreDNroTrn
    
    //BORRO TODOS LOS DESCUENTOS ASOCIADOS A LA VENTA Y LUEGO EN BASE A LA AUXESPV LOS REGENERO
	DO
		IF (lib:err_retval == 0) THEN	
         		//recupero el nro de la transaccion que voy a borrar!!
         		cds extract dsc:post:CONPresuDeta post:PreDNroTrn into post:PreDNroTrnCM
         		post:Imp_DctoCliMed = 0
         		post:Dcto_CliMed = 0
         	  	siaf:importe = post:Imp_DctoCliMed
         		CALL post:MISCagregTrnDctoCM(siaf:adt_tran_fliatran,tes:adt_espv_aliciva,siaf:importe)
    	ELSE
    		
    		CDS ENDSELECT DSC:post:CONPresuDeta
    		BREAK
    	END IF
       	CDS FINDNEXT DSC:post:CONPresuDeta NOLOCK
    	lib:err_retval = CDSRETVAL
    LOOP
    clearfield post:PreDNroTrnAsoc
END SUB

/*******/
