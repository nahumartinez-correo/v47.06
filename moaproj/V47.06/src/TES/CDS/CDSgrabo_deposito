/****o* Caja Buzón/OFB:tes:CDSgrabo_deposito
* NOMBRE
*   OFB:tes:CDSgrabo_deposito
* DESCRIPCION
*   Esta rutina guarda los datos del deposito en la tabla DepBuzon.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*  OFB:tes:SVALdep_buzon,OFB:tes:SVALdep_buzon_tes,OFB:tes:SVALdep_ev_buzon,OFB:tes:SVALdeposito_cheques
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSgrabo_deposito(suc,buz,tipo,bol,mon,cod,subcod)

        let adt_depbuzon_suc = suc
        let adt_depbuzon_caja = buz
        let adt_depbuzon_tipo = tipo
        let adt_depbuzon_bolsa = bol
        let adt_depbuzon_moneda = mon
        let adt_depbuzon_cod = cod
        let adt_depbuzon_subcod = subcod

        let adt_depbuzon_fecha = common:system_date
        let adt_depbuzon_op = op:op_operator_id
        clearfield adt_depbuzon_imp_dec
	//NI 50183
	adt_depbuzon_hora = common:time_of_day
	
        cds select from dsc:DepBuzon_tbl becomes dsc:DepBuzon_ctx where \
        adt_depbuzon_suc == adt_depbuzon_suc && adt_depbuzon_caja == adt_depbuzon_caja && \
        adt_depbuzon_tipo == adt_depbuzon_tipo && adt_depbuzon_bolsa == adt_depbuzon_bolsa && \
        adt_depbuzon_subcod == adt_depbuzon_subcod
        cds findfirst dsc:DepBuzon_ctx lock
        let lib:err_retval = cdsretval
        select (lib:err_retval)
        case 0
            /* Ya Existe */
            cds extract dsc:DepBuzon_ctx tes:adt_depbuzon_importe tes:adt_depbuzon_impori
            let tes:adt_depbuzon_importe = siaf:importe + tes:adt_depbuzon_importe
            let tes:adt_depbuzon_impori = post:importe_origen + tes:adt_depbuzon_impori
            cds findagain dsc:DepBuzon_ctx lock
            cds clearbuffer dsc:DepBuzon_ctx
            cds append dsc:DepBuzon_ctx adt_depbuzon_importe adt_depbuzon_impori
            cds update dsc:DepBuzon_ctx lock
            break
        case -801
            cds clearbuffer dsc:DepBuzon_ctx            
            let adt_depbuzon_importe = siaf:importe
            adt_depbuzon_impori = post:importe_origen
            
            let adt_depbuzon_status = " "
            cds append dsc:DepBuzon_ctx adt_depbuzon_suc \
            adt_depbuzon_caja adt_depbuzon_tipo \
            adt_depbuzon_bolsa \
            adt_depbuzon_moneda adt_depbuzon_cod adt_depbuzon_subcod \
            adt_depbuzon_fecha adt_depbuzon_op \
            adt_depbuzon_importe adt_depbuzon_imp_dec adt_depbuzon_status \
	    adt_depbuzon_impori \
	    adt_depbuzon_hora
            cds insert dsc:DepBuzon_ctx lock
            break
        case else
            cds unlock dsc:DepBuzon_ctx
            cds endselect dsc:DepBuzon_ctx
            return (-1)
      end select
            cds unlock dsc:DepBuzon_ctx
            cds endselect dsc:DepBuzon_ctx
END SUB

/*******/
