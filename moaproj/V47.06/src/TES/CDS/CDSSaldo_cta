/****o* Pendientes de agrupación/OFB:tes:CDSSaldo_cta
* NOMBRE
*   OFB:tes:CDSSaldo_cta
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSSaldo_cta(bco,tipo_cta,nro_cta,fvalor,saldo_cuenta)
    Local LRetval like lib:err_retval

    call CDSleo_saldo(bco,tipo_cta,nro_cta)
    saldo_cuenta = sdo_cta_efvo
/*
    sdo_br_id = common:sucursal_activa
    sdo_banco = bco
    sdo_tipo_cuenta = tipo_cta
    sdo_nro_cuenta = nro_cta

    cds select from dsc:SaldoCta_tbl becomes dsc:SaldoCta_ctx where \
    sdo_br_id == sdo_br_id && \
    sdo_banco == sdo_banco && \
    sdo_tipo_cuenta == sdo_tipo_cuenta && \
    sdo_nro_cuenta == sdo_nro_cuenta

    cds findfirst dsc:SaldoCta_ctx nolock
    let lib:err_retval = cdsretval
    select (cdsretval)
    case 0
          cds extract dsc:SaldoCta_ctx all
          if (sdo_actualizado == "X")
          	 Debo reconstruir saldos porque se cayó
          	FYIMSG LST:common:fyimsg_list,"(L) RECONSTRUYENDO EL SALDO DE LA CUENTA"
    		call CDSreconst_saldo(sdo_banco,sdo_tipo_cuenta,sdo_nro_cuenta)
    		let LRetval = retval
    		FYIMSG CLEAR
    		if (LRetval < 0)
    		    errmsg lst:common:errmsg_list, "Error Reconstruyendo Saldo"
    		    cds endselect dsc:SaldoCta_ctx
    		    return (-1)
    		end if
    	  end if
    	  saldo_cuenta = sdo_cta_efvo
          break
    case -801
          saldo_cuenta = 0
          sdo_cta_efvo = 0
          sdo_cta_cheq = 0
          sdo_cant_nopagar = 0
          break
    case else
          Errmsg lst:common:errmsg_list, "No se puede leer tabla de saldos"
          cds endselect dsc:SaldoCta_ctx
          return (-1)
          break
    end select
    cds endselect dsc:SaldoCta_ctx
    */
    mov_bus_date = fvalor
    if (fvalor != common:system_date)
        Cds select from dsc:MovimCta_tbl becomes dsc:MovimCta_ctx where \
        mov_br_id == common:sucursal_activa && \
        mov_banco == sdo_banco && \
        mov_tipo_cuenta == sdo_tipo_cuenta && \
        mov_nro_cuenta == sdo_nro_cuenta && \
        mov_bus_date > mov_bus_date && \
        mov_codigo_siaf == 6000
        /* Deberia ser el primer saldo inicial que se graba posterior a la
        fecha de mov */
        cds findfirst dsc:MovimCta_ctx nolock
        select (cdsretval)
                case 0
                        cds extract dsc:MovimCta_ctx mov_importe
                        break
                case -801
                        /* No tenia saldo al momento */
                        mov_importe = 0
                        break
        end select
        saldo_cuenta = mov_importe
    end if
END SUB

/*******/
