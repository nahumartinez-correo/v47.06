/****o* Pendientes de agrupación/OFB:tes:CDSauxesp_sel
* NOMBRE
*   OFB:tes:CDSauxesp_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSauxesp_sel 
offset_0000:
	CDS SELECT FROM DSC:AuxEspV_tbl BECOMES DSC:AuxEspV_ctx \
	WHERE adt_evaux_suc == fld:adt_evaux_suc && \
	adt_evaux_op == fld:adt_evaux_op && \
	adt_evaux_tesoro == fld:adt_evaux_tesoro && \
        adt_evaux_es_venta == "N"

	let siaf:last_key = LASTKEY

	CDS MULTIDISPLAY DSC:AuxEspV_ctx LISTadt_mov_esp
	IF (CDSRETVAL == 0x01FD) THEN
		GOTO offset_0000
	END IF
	LET lib:err_retval = CDSRETVAL
	IF (lib:err_retval == 0) THEN
		RETURN (-2)
	END IF
	LET lib:err_retval = CDSRETVAL
	CALL lib:MISCcds_find_err
	IF (RETVAL != 0) THEN
	  RETURN (-1)
	END IF
	CLEARFIELD tes:adt_evaux_descCM
	CDS EXTRACT DSC:AuxEspV_ctx ALL
	let espv_cod = adt_evaux_codigo
	let post:importe_aux = adt_evaux_importe
	let post:cantidad = adt_evaux_cantidad
	CDS unlock  DSC:AuxEspV_ctx
END SUB

/*******/
