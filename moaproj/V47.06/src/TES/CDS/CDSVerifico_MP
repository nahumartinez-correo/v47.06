/****o* Pendientes de agrupación/OFB:tes:CDSVerifico_MP
* NOMBRE
*   OFB:tes:CDSVerifico_MP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSVerifico_MP
	local moneda_MP like siaf:moneda
	local totalMP like siaf:importe
	
	/* Armo un picklist con los medios de Pago del tipo Efvo, sin importar el saldo */
	call post:MISCrest_saldo(common:sucursal_activa,"pic:PICmedios","N","operador")

    /*Leo el picklist con las monedas del motivo y cargo una tabla auxiliar
    con las monedas y descripciones correspondientes del motivo*/
    idx = 0 
    let idx = 0
	let i_idx = PL_GETITEM + 0
    

    
    do
        ;idx = idx + PL_GETITEM 
        call csr:myPickcontrol(dsc:post:pic_medios,common:csr_string,i_idx)
		if (retval < 0)
		    break
		end if
        moneda_MP = SUBSTR(common:csr_string,0,2)
        let adt_limha_mp = moneda_MP
        clearfield adt_limha_caja
      	call tes:CDSlimihabi_load
      	totalMP = siaf:tefec_inic_vec[moneda_MP] + siaf:tefectivo_vec[moneda_MP]
      	/* Si alguno de los medios de pago supera el minimo en caja ya tiene que hacer un pase */
      	if (totalMP > adt_limha_caja) then
      		return (0)
      	end if	
        idx = idx + 1
        let i_idx = PL_GETITEM + idx

    loop
    call csr:f_sadroppl PIC:post:PICmedios
    return (-2)
    /* No hace falta hacer ningun pase */
end sub

/*******/
