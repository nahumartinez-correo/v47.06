/****o* Pendientes de agrupación/OFB:tes:CDScta_sel
* NOMBRE
*   OFB:tes:CDScta_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDScta_sel

/*Se agrega el filtrado de tablas. Diego Priore 04/04/2000*/

    local adt_cta_suctmp like adt_cta_suc
    local adt_cta_lugartmp like adt_cta_lugar
    local adt_cta_bancotmp like adt_cta_banco
    local adt_cta_tipotmp like adt_cta_tipo
    local adt_cta_nrotmp like adt_cta_nro
    local adt_cta_limitetmp like adt_cta_limite
    local adt_cta_fvaltmp like adt_cta_fval
    local adt_cta_monetmp like adt_cta_moneda
offset_0018:
    move adt_cta_suc    to adt_cta_suctmp 	
    move adt_cta_lugar  to adt_cta_lugartmp 	
    move adt_cta_banco  to adt_cta_bancotmp 	
    move adt_cta_tipo   to adt_cta_tipotmp 	
    move adt_cta_nro    to adt_cta_nrotmp 	
    move adt_cta_limite to adt_cta_limitetmp 
    move adt_cta_fval   to adt_cta_fvaltmp   
    move adt_cta_moneda to adt_cta_monetmp	
    
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars != 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where (tes:adt_cta_suc == tes:adt_cta_suc)
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars != 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where (tes:adt_cta_banco == tes:adt_cta_banco)
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars != 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where (tes:adt_cta_tipo == tes:adt_cta_tipo)
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
     
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars != 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where (tes:adt_cta_nro == tes:adt_cta_nro)
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars != 0) && (tes:adt_cta_banco.numchars != 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_suc == tes:adt_cta_suc) && (tes:adt_cta_banco == tes:adt_cta_banco))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars != 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars != 0) && (tes:adt_cta_nro.numchars == 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_suc == tes:adt_cta_suc) && (tes:adt_cta_tipo == tes:adt_cta_tipo))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars != 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars != 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_suc == tes:adt_cta_suc) && (tes:adt_cta_nro == tes:adt_cta_nro))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
        
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars != 0) && (tes:adt_cta_tipo.numchars == 0) && (tes:adt_cta_nro.numchars != 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_banco == tes:adt_cta_banco) && (tes:adt_cta_nro == tes:adt_cta_nro))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars == 0) && (tes:adt_cta_tipo.numchars != 0) && (tes:adt_cta_nro.numchars != 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_tipo == tes:adt_cta_tipo) && (tes:adt_cta_nro == tes:adt_cta_nro))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    IF ((tes:adt_cta_suc.numchars == 0) && (tes:adt_cta_banco.numchars != 0) && (tes:adt_cta_tipo.numchars != 0) && (tes:adt_cta_nro.numchars != 0)) THEN
    	cds select from dsc:adt_cta_tbl becomes dsc:adt_cta_ctx \
    	where ((tes:adt_cta_tipo == tes:adt_cta_tipo) && (tes:adt_cta_nro == tes:adt_cta_nro) && (tes:adt_cta_banco == tes:adt_cta_banco))
    	cds multidisplay dsc:adt_cta_ctx LISTctasnro
    END IF
    
    
    if (cdsretval == 0x01FD) then
        goto offset_0018
    end if
    lib:err_retval = cdsretval
    if (lib:err_retval == 0) then
      	move adt_cta_suctmp 	to adt_cta_suc       
      	move adt_cta_lugartmp  	to adt_cta_lugar 	
      	move adt_cta_bancotmp  	to adt_cta_banco 	
      	move adt_cta_tipotmp 	to adt_cta_tipo      
      	move adt_cta_nrotmp 	to adt_cta_nro       
      	move adt_cta_limitetmp 	to adt_cta_limite    
      	move adt_cta_fvaltmp 	to adt_cta_fval      
        move adt_cta_monetmp    to adt_cta_moneda
      	call CDScta_load
      	return (-2)
    end if
    lib:err_retval = cdsretval
    call lib:MISCcds_find_err
    
    if (retval != 0) then
    	call CSR:proc_list(F_CLEAR,lst:LISTctasbanco_flds)
    	call CSR:proc_list(F_REFRESH,lst:LISTctasbanco_flds)
        return (-1)
    end if
    
    cds extract dsc:adt_cta_ctx all
    cds unlock dsc:adt_cta_ctx
    call CSR:proc_list(F_COPY,lst:LISTctasbanco_flds,lst:LISTbck_ctasbanco)
    
END SUB

/*******/
