/****o* Pendientes de agrupación/OFB:tes:CDScup_dep_rech
* NOMBRE
*   OFB:tes:CDScup_dep_rech
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDScup_dep_rech
    cds select from dsc:tlr:TABjnl becomes dsc:Journal_anul_Ctx \
        where tlr:jnl_branch   == common:sucursal_activa && \
	      tlr:jnl_operator == op:op_operator_id      && \
	      tlr:jnl_date     == tlr:jnl_date           && \
	      tlr:jnl_time     == tlr:jnl_time           && \
	      tlr:jnl_bus_date == tlr:jnl_bus_date       && \
	      tlr:jnl_sequence != tlr:jnl_sequence
    cds findfirst dsc:Journal_anul_Ctx nolock
    let lib:err_retval = cdsretval
    if (lib:err_retval < 0) then
	return (-1)
    end if
	
    do
	    if (lib:err_retval < 0)
	        break
	    end if
	    cds extract dsc:Journal_anul_Ctx siaf:cod_banco \
	                                     siaf:cheqcuenta \
	                                     siaf:nro_cupcheq \
	                                     siaf:moneda
	    cds select from dsc:TesoCheq_tbl becomes dsc:TesoCheq_ctx \
	        where teso_cheq_suc    == common:sucursal_activa && \
	              teso_cheq_banco  == siaf:cod_banco         && \
	              teso_cheq_cuenta == siaf:cheqcuenta        && \
	              teso_cheq_nro    == siaf:nro_cupcheq       && \
	              teso_cheq_moneda == siaf:moneda
	    cds findfirst dsc:TesoCheq_ctx nolock
	    if (cdsretval != 0) then
	   	errmsg lst:common:errmsg_list, "Error leyendo comprobante"
	   	cds endselect dsc:TesoCheq_ctx
	   	cds endselect dsc:Journal_anul_Ctx
	   	return (-1)
	    end if
	    cds extract dsc:TesoCheq_ctx tes:teso_cheq_acred \
	                                 tes:teso_cheq_estado \
	                                 tes:teso_cheq_auto
	 /* Si fue depositado en una cuenta propia verifico que no haya
	    sido rechazado */
	    if (teso_cheq_estado == "P" && teso_cheq_acred == "R")
	   	cds endselect dsc:TesoCheq_ctx
	        errmsg lst:common:errmsg_list "Existe uno o mas comprobantes rechazados"
	   	cds endselect dsc:Journal_anul_Ctx
	   	return (-1)
	    end if
	    cds endselect dsc:TesoCheq_ctx
	    cds findnext dsc:Journal_anul_Ctx nolock
	    let lib:err_retval = cdsretval
    loop	 
 /* Si llegue aca esta todo OK */
    cds endselect dsc:Journal_anul_Ctx
    return (0)
END SUB

/*******/
