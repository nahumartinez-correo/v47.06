/****o* Pendientes de agrupación/OFB:tes:CDSact_clave_pase
* NOMBRE
*   OFB:tes:CDSact_clave_pase
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSact_clave_pase
	//Busco si algun registro de este operador destino ya fue marcado...
	//De ser asi, lo desmarco para que vuelva a pedir la clave.
	cds select from dsc:AuxCheq_tbl BECOMES dsc:AuxCheq_ctx WHERE \
	tes:adt_cheqaux_suc    == op:op_branch_id   && \
	tes:adt_cheqaux_op     == op:op_operator_id && \
	tes:login_dest         == fld:tes:login_dest && \
	tes:adt_cheqaux_cuenta == fld:adt_cheqaux_cuenta && \
	tes:adt_cheqaux_clave  == "1"
	cds findfirst dsc:AuxCheq_ctx lock
	let lib:err_retval = cdsretval	
	do
        if (lib:err_retval != 0) then
            break
        end if
        cds extract dsc:AuxCheq_ctx all

		cds clearbuffer DSC:AuxCheq_ctx
		LET adt_cheqaux_clave = "0"
		cds append DSC:AuxCheq_ctx fld:adt_cheqaux_clave
		cds update DSC:AuxCheq_ctx lock

        cds unlock dsc:AuxCheq_ctx
        cds findnext dsc:AuxCheq_ctx lock
    	let lib:err_retval = cdsretval
    loop	
    cds endselect dsc:AuxCheq_ctx
END SUB

/*******/
