/****o* Pendientes de agrupación/OFB:tes:CDSrev_MovimCta
* NOMBRE
*   OFB:tes:CDSrev_MovimCta
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSrev_MovimCta(bco,tipo_cta,nro_cta,fvalor,fdia,hora_mov,op,seq)
    local tipo_mov like tes:mov_tipo_mov

    mov_br_id = common:sucursal_activa
    mov_banco = bco
    mov_tipo_cuenta = tipo_cta
    mov_nro_cuenta = nro_cta
    mov_bus_date = fvalor
    mov_date = fdia
    mov_time = hora_mov
    mov_operator = op
    mov_sequence = seq

/* Pongo la marca de actualizacion */
    call CDSupdate_saldo(tes:mov_banco,tes:mov_tipo_cuenta,tes:mov_nro_cuenta,"X")

    cds select from dsc:MovimCta_tbl becomes dsc:MovimCta_ctx where \
    mov_br_id == mov_br_id && \
    mov_banco == mov_banco && \
    mov_tipo_cuenta == mov_tipo_cuenta && \
    mov_nro_cuenta == mov_nro_cuenta && \
    mov_bus_date == mov_bus_date && \
    mov_date == mov_date && \
    mov_time == mov_time && \
    mov_operator == mov_operator && \
    mov_sequence == mov_sequence

    cds findfirst dsc:MovimCta_ctx lock
    let lib:err_retval = cdsretval
    if (lib:err_retval == 0) then
    	cds extract dsc:MovimCta_ctx mov_tipo_mov into tipo_mov
    	cds findagain dsc:MovimCta_ctx lock
        cds clearbuffer dsc:MovimCta_ctx
        let mov_marca_rev = "R"
        cds append dsc:MovimCta_ctx mov_marca_rev
        cds update dsc:MovimCta_ctx lock
    end if
    cds unlock dsc:MovimCta_ctx
    cds endselect dsc:MovimCta_ctx



    select (tipo_mov)
    	case DEBITO
    		call CDSupd_saldo_inic(mov_banco,mov_tipo_cuenta,mov_nro_cuenta,mov_bus_date,siaf:importe,CREDITO)
    		break
    	case CREDITO
		call CDSupd_saldo_inic(mov_banco,mov_tipo_cuenta,mov_nro_cuenta,mov_bus_date,siaf:importe,DEBITO)
		break
    end select
END SUB

/*******/
