/****o* Pendientes de agrupación/OFB:tes:CDSsuma_subteso
* NOMBRE
*   OFB:tes:CDSsuma_subteso
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSsuma_subteso

	/*Controlo la fecha y verifico si es una "apertura"*/
	Call tes:MISCaper_subteso
	
   	CDS SELECT from DSC:tes:subteso_table BECOMES DSC:tes:subteso_context \
        WHERE   tes:subtes_moneda == siaf:moneda && \
                subtes_suc_id == op:op_branch_id
    CDS FINDFIRST DSC:tes:subteso_context LOCK
    let lib:err_retval = cdsretval
    select (lib:err_retval)
    case -801
    	/*
       call csr:cleararray(subtes_importes)
       call csr:cleararray(subtes_entrada)
       call csr:cleararray(subtes_salida)
       call csr:cleararray(subtes_sdoinic)
		*/
       clearfield tes:subtes_total
       clearfield tes:subtes_tot_entrada
       clearfield tes:subtes_tot_salida
       clearfield tes:subtes_tot_inic
		
	   /*	
       CDS APPEND DSC:tes:subteso_context \
       common:sucursal_activa as tes:subtes_suc_id \
       common:system_date as tes:subtes_fecha \
       siaf:moneda as tes:subtes_moneda \
       array tes:subtes_salida \
       array tes:subtes_sdoinic \
       tes:subtes_tot_salida \
       tes:subtes_tot_inic
       */
       
       CDS APPEND DSC:tes:subteso_context \
       common:sucursal_activa as tes:subtes_suc_id \
       common:system_date as tes:subtes_fecha \
       siaf:moneda as tes:subtes_moneda \
       tes:subtes_tot_salida \
       tes:subtes_tot_inic

       /* Para la primera vez grabo el registro  también en la teso_bak */
       //call CDSgrabo_teso_bak(siaf:moneda)
       break
    case 0
       CDS EXTRACT DSC:tes:subteso_context ALL
       break
    case else
       fprint common:csr_string "No Se Pudo Sumar el Dinero para Habilitacion \n %-s",common:Cds_error_message
       errmsg lst:common:errmsg_list, fld:common:csr_string

       /* Guardo el Log con los datos del lockeo */
       dprint " %s %s %s\r\n",op:op_operator_id,common:time_of_day,common:Cds_error_message
       cds endselect dsc:subteso_context
       return (-2)
       break
    end select
    /*
    cont1 = 0
    DO
      IF (cont1 < 14) THEN
         subtes_importes[cont1] = subtes_importes[cont1] + importes[cont1]
         subtes_entrada[cont1]  = subtes_entrada[cont1] + importes[cont1]
         cont1 = cont1 + 1
      else
         break
      END IF
    LOOP
    */
    let tes:subtes_tot_entrada = tes:subtes_tot_entrada + post:importe_origen
    let tes:subtes_total = tes:subtes_total + post:importe_origen    
    /*
    CDS APPEND DSC:tes:subteso_context FLD:subtes_importes[00] \
        FLD:subtes_importes[01] FLD:subtes_importes[02] FLD:subtes_importes[03]\
        FLD:subtes_importes[04] FLD:subtes_importes[05] FLD:subtes_importes[06]\
        FLD:subtes_importes[07] FLD:subtes_importes[08] FLD:subtes_importes[09]\
        FLD:subtes_importes[10] FLD:subtes_importes[11] FLD:subtes_importes[12]\
        FLD:subtes_importes[13]
    CDS APPEND DSC:tes:subteso_context FLD:subtes_entrada[00]\
        FLD:subtes_entrada[01] FLD:subtes_entrada[02] FLD:subtes_entrada[03]\
        FLD:subtes_entrada[04] FLD:subtes_entrada[05] FLD:subtes_entrada[06]\
        FLD:subtes_entrada[07] FLD:subtes_entrada[08] FLD:subtes_entrada[09]\
        FLD:subtes_entrada[10] FLD:subtes_entrada[11] FLD:subtes_entrada[12]\
        FLD:subtes_entrada[13]
    */
    CDS APPEND DSC:tes:subteso_context fld:subtes_tot_entrada fld:subtes_total
    if (lib:err_retval == 0) then
        CDS UPDATE DSC:tes:subteso_context lock
    else
        cds insert dsc:tes:subteso_context lock
    end if
    CDS UNLOCK DSC:tes:subteso_context
    CDS ENDSELECT DSC:tes:subteso_context
END SUB

/*******/
