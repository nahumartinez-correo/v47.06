/****o* Pendientes de agrupación/OFB:tes:CDScliUPPickList
* NOMBRE
*   OFB:tes:CDScliUPPickList
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

sub tes:CDScliUPPickList(idx)
	if (tes:rest_up[idx].numchars > 0)
		CDS SELECT FROM DSC:post:cliocaUP_tbl BECOMES DSC:post:cliUP_ctx WHERE \
		post:NisUP == tes:rest_up[idx]
	else
		CDS SELECT FROM DSC:post:cliocaUP_tbl BECOMES DSC:post:cliUP_ctx
	endif

	CDS FINDFIRST DSC:post:cliUP_ctx nolock
	if (cdsretval != 0)
		CDS ENDSELECT DSC:post:cliUP_ctx
		CDS SELECT FROM DSC:post:cliocaUP_tbl BECOMES DSC:post:cliUP_ctx
	endif

offset_0000:
	;Debe aparecer otro mensaje cuando es UP.
	CDS MULTIDISPLAY DSC:post:cliUP_ctx LISTCloRazUPRest
	IF (lastkey == RT_ESC) THEN
		RETURN (-1)
	END IF

	LET lib:err_retval = CDSRETVAL

	CALL lib:MISCcds_find_err
	IF (RETVAL != 0) THEN
		RETURN (-1)
	END IF
	CDS EXTRACT DSC:post:cliUP_ctx ALL
	CDS UNLOCK DSC:post:cliUP_ctx
	CDS ENDSELECT DSC:post:cliUP_ctx
end sub

/*******/
