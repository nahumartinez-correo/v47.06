/****o* Pendientes de agrupación/OFB:tes:CDSupd_habilitador
* NOMBRE
*   OFB:tes:CDSupd_habilitador
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"


SUB tes:CDSupd_habilitador

	local varl_subtesoro like giros:adt_chk_habilitador

	// DETERMINAR SI ES PERFIL HABILITADOR
	CDS SELECT FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context WHERE \
    	op:op_branch_id   == tes:adt_chk_suc && \
	op:op_operator_id == giros:adt_chk_op

	clearfield varl_subtesoro

    	CDS FINDFIRST DSC:op:adt_op_context NOLOCK
    	lib:err_retval = cdsretval
    	IF (lib:err_retval == 0)
        	CDS EXTRACT DSC:op:adt_op_context \
			op:op_subtesoro into varl_subtesoro
    	END IF
    	CDS ENDSELECT DSC:op:adt_op_context

	move varl_subtesoro to giros:adt_chk_habilitador
	if (giros:adt_chk_tesoro == "S" )
		clearfield giros:adt_chk_habilitador
	end if

	// ACTUALIZAR EL REGISTRO DE LA CHEQUERA CON EL PERFIL HABILITADOR DEL OPERADOR DEL PASE
	CDS SELECT FROM dsc:RecepChk BECOMES dsc:RecepChk WHERE \
        giros:adt_chk_suc == adt_chk_suc && \
        giros:adt_chk_serie == adt_chk_serie && \
        giros:adt_chk_nrogiro == adt_chk_nrogiro

	CDS FINDFIRST DSC:RecepChk LOCK
	IF (CDSRETVAL < 0) THEN
		CDS ENDSELECT DSC:RecepChk
		RETURN (-2)
	END IF
	CDS CLEARBUFFER DSC:RecepChk
	CDS APPEND DSC:RecepChk giros:adt_chk_habilitador
	CDS UPDATE DSC:RecepChk LOCK
	CDS UNLOCK DSC:RecepChk
	CDS ENDSELECT DSC:RecepChk
END SUB



/*******/
