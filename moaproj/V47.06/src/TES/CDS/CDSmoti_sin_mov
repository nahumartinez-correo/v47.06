/****o* Pendientes de agrupación/OFB:tes:CDSmoti_sin_mov
* NOMBRE
*   OFB:tes:CDSmoti_sin_mov
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSmoti_sin_mov
       
   
LOCAL mot LIKE siaf:motivo
LOCAL cant_items LIKE siaf:cant
LOCAL moti1 LIKE common:csr_string
LOCAL moti2 LIKE common:csr_string
LOCAL moti3 LIKE common:csr_string
LOCAL moti4 LIKE common:csr_string
LOCAL msg2 LIKE common:csr_string
LOCAL msg3 LIKE siaf:motivo
LOCAL err_retval2 LIKE lib:err_retval
	
	LET suma_mot = 0

	CALL csr:f_sadroppl dsc:analitico
	CALL csr:f_sanewpl dsc:analitico pic:analitico

/* Se agrego al select la pregunta por la reversa - Maricel 14/7/2000 */	
/* Se pregunta por la fecha del proceso, en lugar de common:system_date para que al cierre forzado liste los mov */
	CDS SELECT FROM "journal" BECOMES "jnl" WHERE  \
    	(((siaf:codigo_siaf == 6600) || (siaf:codigo_siaf == 6800)) && \
    	(tlr:jnl_branch == op:op_branch_id) && (tlr:jnl_date == siaf:fecha_proceso) && \
    	(tlr:jnl_sequence_corr == 0)) 
    	
    	CDS FINDFIRST "jnl" LOCK
   	lib:err_retval = CDSRETVAL
   	IF (lib:err_retval != -801)
   		
   		CDS EXTRACT "jnl" ALL     		
   	ELSE
   		MSGBOX "No se encontraron movimientos de motivos",OFB_OK,"Error"
   		RETURN (-2)
   	ENDIF
   	
   	WHILE (lib:err_retval != -801)
   		mot = siaf:motivo
   		WHILE ((mot == siaf:motivo) && (lib:err_retval ==0)) 
   			/*FPRINT common:csr_string,"%-5.5s %-30.30s %8.8s %-5.5s %8.8e %-5.5s %-30.30s %-1.1s",siaf:motivo  siaf:adt_mot_desc_tmp siaf:nro_impre siaf:Nis_Destino siaf:importe siaf:codigo_siaf siaf:observaciones post:adt_intext*/
   		    
   			/* Se elevó la cantidad de 8 a 13 para el campo importe porque truncaba - Maricel 4/10 */
   			FPRINT common:csr_string,"%-5.5s %-30.30s %8.8s %-5.5s %13.13e %-5.5s %-30.30s %-1.1s",siaf:motivo  siaf:adt_mot_desc_tmp siaf:nro_impre siaf:Nis_Destino siaf:importe siaf:codigo_siaf siaf:observaciones post:adt_intext
   			
   			
   			
   			CALL csr:f_saaddpl dsc:analitico common:csr_string
   			
    			LET cant_items = cant_items + 1
    			CDS FINDNEXT "jnl" LOCK
    			LET lib:err_retval = CDSRETVAL
    			IF (lib:err_retval == 0) THEN
    				CDS EXTRACT "jnl" ALL
    			END IF
    		END WHILE
    		    		
    	END WHILE
    	
    	 	
    	/*Esta funcion C se encarga de ordenar el contenido del picklist. Diego Priore 08/03/2000*/
    	CALL csr:PickOp 4 dsc:analitico "0,5"
    	
    	LET i_idx = PL_GETITEM + 0
    	LET idx = 0
    	LET common:csr_string = ""
    	CALL csr:myPickcontrol dsc:analitico common:csr_string i_idx
    	LET moti1 = substr(common:csr_string,0,5)
    	
    	DO
    	    IF (RETVAL < 0)
    		BREAK
    	    END IF
    	        	    
    	    IF (moti1 != moti2) THEN
    	    	suma_mot = 0
    	      /*	FPRINT moti3,"%-5.5s    %-5.5s     %-30.30s",substr(common:csr_string,61,65) substr(common:csr_string,0,5) substr(common:csr_string,6,37) */
             /*AL imprimirse el importe con 13 posiciones ahora. se desplazo todo 5 posiciones - Maricel 4-10 */
	  	FPRINT moti3,"%-5.5s    %-5.5s     %-30.30s",substr(common:csr_string,66,70) substr(common:csr_string,0,5) substr(common:csr_string,6,37)
    	   
    	    	CALL MISCwrite_file(5,moti3)    
    	    	FPRINT moti3," "
    		CALL MISCwrite_file(5,moti3) 	    
    	    END IF
    	    
    	    LET moti1 = substr(common:csr_string,0,5)
    	   
    	   /* msg3 = substr(common:csr_string,98,1)*/
    	   /*AL impromirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	   msg3 = substr(common:csr_string,103,1)
    	    IF (msg3 == "E") THEN
    	    	/*FPRINT moti2,"%-30.30s                 %8.8s  %-5.5s     %8.8s", substr(common:csr_string,67,96) substr(common:csr_string,38,45) substr(common:csr_string,46,50) substr(common:csr_string,53,60)*/
    	    	/*AL impromirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	    	FPRINT moti2,"%-30.30s                 %8.8s  %-5.5s     %13.13s", substr(common:csr_string,72,101) substr(common:csr_string,37,44) substr(common:csr_string,46,50) substr(common:csr_string,52,64)
    	    	CALL MISCwrite_file(5,moti2)    	        	    
    	    ELSE
    	    	/*FPRINT moti2,"%-30.30s      %8.8s             %-5.5s     %8.8s", substr(common:csr_string,67,96) substr(common:csr_string,38,45) substr(common:csr_string,46,50) substr(common:csr_string,53,60)*/
    	    	/*AL impromirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	    	FPRINT moti2,"%-30.30s      %8.8s            %-5.5s      %13.13s", substr(common:csr_string,72,101) substr(common:csr_string,37,44) substr(common:csr_string,46,50) substr(common:csr_string,52,64)
    	    	
    	    	CALL MISCwrite_file(5,moti2)    	        	    
    	    END IF
    	    
    	    /*suma_mot = suma_mot + substr(moti2,65,72)*/
    	    	/*AL imprimirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	    suma_mot = suma_mot + substr(moti2,66,78)
    	       	   
    	        	    
    	    LET idx = idx + 1
    	    LET i_idx = PL_GETITEM + idx
    	    LET common:csr_string = ""
    	    CALL csr:myPickcontrol dsc:analitico common:csr_string i_idx
    	    LET moti2 = substr(common:csr_string,0,5)
    	        	    
    	    IF (moti1 != moti2) THEN
    	    	FPRINT moti3," "
    		CALL MISCwrite_file(5,moti3)
    	    	/*FPRINT moti3, "TOTAL                                                             %8.8s",suma_mot*/
    	    	/*AL impromirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	    	 FPRINT moti3, "TOTAL                                                              %13.13e",suma_mot
    	      	CALL MISCwrite_file(5,moti3)
    	    	FPRINT moti3," "
    		CALL MISCwrite_file(5,moti3) 
    	    END IF
    	        	    
    	LOOP
    	
    	/* elimino esto porque no funcionaba 4/10/2000 */
    	;common:csr_string = ""
    	/*Con esto imprime el ultimo total del ultimo registro del listado.*/
    	;FPRINT moti3,"%s",common:csr_string
   	;CALL MISCwrite_file(5,moti3)
     	/*FPRINT moti3, "TOTAL                                                             %8.8s",suma_mot*/
    	/*AL impromirse el importe con 8 posiciones se desplazo todo 5 posiciones - Maricel 12-9 */
    	 ;FPRINT moti3, "TOTAL                                                              %13.13e",suma_mot
      	;CALL MISCwrite_file(5,moti3)
     	;FPRINT moti3,"%s",common:csr_string
   	;CALL MISCwrite_file(5,moti3)
   	  
     	
    	CDS UNLOCK "jnl"
    	CDS ENDSELECT "jnl"
   
	/*En esta parte imprime los motivos que no tuvieron movimientos. Diego Priore 11/5/2000*/
	CDS SELECT FROM DSC:siaf:adt_motiv_table BECOMES DSC:siaf:adt_motiv_context
	CDS FINDFIRST DSC:siaf:adt_motiv_context NOLOCK
	LET lib:err_retval = CDSRETVAL      
	
	WHILE (lib:err_retval == 0)
  		CDS EXTRACT DSC:siaf:adt_motiv_context siaf:adt_mot_codigo siaf:adt_mot_submodulo siaf:adt_mot_desc
		CDS SELECT FROM "journal" BECOMES "jnl" WHERE  \
   		((siaf:motivo == siaf:adt_mot_codigo) && (tlr:jnl_branch == op:op_branch_id) && (tlr:jnl_date == siaf:fecha_proceso))
   		CDS FINDFIRST "jnl" NOLOCK
   		LET err_retval2 = CDSRETVAL
   		
   		IF (err_retval2 != 0)
   			FPRINT common:csr_string,"%-5.5s    %-5.5s     %-30.30s  SIN MOVIMIENTOS", siaf:adt_mot_submodulo siaf:adt_mot_codigo  siaf:adt_mot_desc
     			CALL MISCwrite_file(5,fld:common:csr_string)
     	END IF
   	  	
   		CDS FINDNEXT DSC:siaf:adt_motiv_context  NOLOCK
   		LET lib:err_retval = CDSRETVAL
	END WHILE
 	 	
 	CDS ENDSELECT DSC:siaf:adt_motiv_context     
      	CDS ENDSELECT "jnl"
      	        	
END SUB

/*******/
