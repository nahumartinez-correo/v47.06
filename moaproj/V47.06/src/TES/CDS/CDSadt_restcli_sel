/****o* Pendientes de agrupación/OFB:tes:CDSadt_restcli_sel
* NOMBRE
*   OFB:tes:CDSadt_restcli_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSadt_restcli_sel
offset_0000:
    
    clearfield tes:es_restcli
    IF ((adt_restesp_esp.numchars == 0) && (adt_restesp_subesp.numchars == 0) && \
        (tes:es_restcli.numchars == 0)) THEN
    	CDS SELECT FROM DSC:RestCli_tbl BECOMES DSC:RestCli_ctx
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:RestCli_ctx LISTadt_restcli
    END IF
    
    IF ((adt_restesp_esp.numchars != 0) && (adt_restesp_subesp.numchars == 0) && \
        (tes:es_restcli.numchars == 0)) THEN
    	CDS SELECT FROM DSC:RestCli_tbl BECOMES DSC:RestCli_ctx \
    	WHERE (adt_restesp_esp == adt_restesp_esp)
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:RestCli_ctx LISTadt_restcli
    END IF
    
    IF ((adt_restesp_esp.numchars == 0) && (adt_restesp_subesp.numchars != 0) && \
    	(tes:es_restcli.numchars == 0)) THEN
    	CDS SELECT FROM DSC:RestCli_tbl BECOMES DSC:RestCli_ctx \
    	WHERE (adt_restesp_subesp == adt_restesp_subesp)
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:RestCli_ctx LISTadt_restcli
    END IF
    
    IF ((adt_restesp_esp.numchars != 0) && (adt_restesp_subesp.numchars != 0) && \
        (tes:es_restcli.numchars == 0)) THEN
    	CDS SELECT FROM DSC:RestCli_tbl BECOMES DSC:RestCli_ctx \
    	WHERE ((adt_restesp_esp == adt_restesp_esp) && \
    			(adt_restesp_subesp == adt_restesp_subesp))
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:RestCli_ctx LISTadt_restcli
    END IF
    	    
    IF (CDSRETVAL == 0x01FD) THEN
        CDS ENDSELECT DSC:RestCli_ctx
        GOTO offset_0000
    END IF
    
    IF (CDSRETVAL == 0) THEN
        CALL CSR:proc_list(F_CLEAR,LST:LISTrestcli_flds)
        CALL CSR:proc_list(F_REFRESH,LST:LISTrestcli_flds)
        CALL post:MISCset_sidebar(0, 0, 0, 0)
        CDS ENDSELECT DSC:RestCli_ctx
      	RETURN (-1)
    END IF

    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    
    IF (RETVAL != 0) THEN
        CALL CSR:proc_list(F_CLEAR,LST:LISTrestcli_flds)
        CALL CSR:proc_list(F_REFRESH,LST:LISTrestcli_flds)
        CALL post:MISCset_sidebar(0, 0, 0, 0)
        CDS ENDSELECT DSC:RestCli_ctx
      	RETURN (-1)
    END IF

    CDS EXTRACT DSC:RestCli_ctx ALL
    CDS UNLOCK DSC:RestCli_ctx

    /* siempre encuenta en el picklist */
    PICKVERIFY FLD:tes:adt_restesp_cli,PIC:post:cli_tipo,update
	tes:adt_restesp_cli_desc = SUBSTR(common:csr_string,2,20)	
	refresh tes:adt_restesp_cli_desc

	//journalizacion ABM Restriccion Especie por Tipo de Cliente
	call MISCto_bck_RestCli

    CDS ENDSELECT DSC:RestCli_ctx
END SUB

/*******/
