/****o* Pendientes de agrupación/OFB:tes:CDSev_fecha
* NOMBRE
*   OFB:tes:CDSev_fecha
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSev_fecha(suc)
    LOCAL especie_ant LIKE adt_espv_cod
    LOCAL total_imp LIKE adt_espv_importe
    LOCAL total_imp_inic LIKE adt_espv_imp_inic
    LOCAL total_imp_ent LIKE adt_espv_imp_ent
    LOCAL total_imp_sal LIKE adt_espv_imp_sal
    LOCAL no_esta LIKE siaf:cant
    LOCAL abrio LIKE rend_marca_cierre

    CALL MISCencab_est_suc_ev 

    CDS SELECT UNIQUE adt_espv_suc adt_espv_es_tesoro adt_espv_id FROM  \
    DSC:post:espval_aux BECOMES DSC:post:espval_aux_ctx
    CDS FINDFIRST DSC:post:espval_aux_ctx NOLOCK
    DO
       IF (CDSRETVAL < 0) THEN
	  BREAK
       END IF
       CDS EXTRACT DSC:post:espval_aux_ctx FLD:adt_espv_es_tesoro FLD:adt_espv_id
       IF (CDSRETVAL < 0) THEN
	  BREAK
       END IF
       no_esta = 0
       //abrio = "S"

       FPRINT common:csr_string," "
       CALL MISCwrite_file(1,common:csr_string)
       op:adt_operator_id = adt_espv_id
       CALL CDScons_tesor_id  //para saber si es tesoro
       IF (adt_espv_es_tesoro == "S") THEN
	  ;CALL op:CDSadt_op_teso_load
	  FPRINT common:csr_string,"  Tesoro: %s ",adt_espv_id
       ELSE
	  CALL op:CDSadt_op_opid_load //extract de profiles
	  IF (RETVAL < 0) THEN
	     no_esta = 1
	  ELSE
	     FPRINT common:csr_string,"  Cajero: %8.8s Id: %s Nombre: %s", \
	     op:adt_login_id,adt_espv_id,op:adt_title
	     /*
	     CDS SELECT FROM DSC:rend_caj_table BECOMES DSC:rend_caj_context  \
	     WHERE rend_suc_id == suc && rend_op_id == FLD:op:adt_operator_id
	     CDS FINDFIRST DSC:rend_caj_context NOLOCK
	     lib:err_retval = CDSRETVAL
	     IF (lib:err_retval == 0) THEN
		CDS EXTRACT DSC:rend_caj_context ALL
		CDS ENDSELECT DSC:rend_caj_context
		*/
		FPRINT common:csr_string,"  Cajero: %8.8s Id: %s Nombre: %s", \
		op:adt_login_id,adt_espv_id,op:adt_title
		/*
		IF (rend_fecha != common:system_date) THEN
		   abrio = "N"
		END IF

	     ELSE
		no_esta = 1
	     END IF
	     */
	  END IF
       END IF
       IF (no_esta == 0) THEN
	  CALL MISCwrite_file(1,common:csr_string)
	  especie_ant = ""
	  CDS SELECT FROM DSC:Especie BECOMES "Esp1"
	  CDS FINDFIRST "Esp1" NOLOCK
	  DO
	     IF (CDSRETVAL < 0) THEN
		BREAK
	     END IF
	     CDS EXTRACT "Esp1" FLD:adt_espv_cod FLD:adt_espv_subcod
	     IF (CDSRETVAL < 0) THEN
		BREAK
	     END IF
	     IF (especie_ant != adt_espv_cod) THEN
		IF (especie_ant != "") THEN
		   FPRINT common:csr_string," "
		   CALL MISCwrite_file(1,common:csr_string)
		   // modificar los espaciados

		   FPRINT common:csr_string, \
		   "  TOTAL               %10.10s    %10.10s    %10.10s    %10.10s",\
		   total_imp_inic, total_imp_ent,total_imp_sal,total_imp
		   CALL MISCwrite_file(1,common:csr_string)
		END IF
		total_imp = 0
		total_imp_inic = 0
		total_imp_ent = 0
		total_imp_sal = 0
		especie_ant = adt_espv_cod
		FPRINT common:csr_string," "
		CALL MISCwrite_file(1,common:csr_string)
		FPRINT common:csr_string," "
		CALL MISCwrite_file(1,common:csr_string)
		FPRINT common:csr_string,"  %-20.20s",adt_espv_cod
		CALL MISCwrite_file(1,common:csr_string)
		FPRINT common:csr_string," "
		CALL MISCwrite_file(1,common:csr_string)
		FPRINT common:csr_string, \
		"  TIPO                 INIC. EN $   ENTRADA EN $   SALIDA EN $   ACTUAL EN $"
		CALL MISCwrite_file(1,common:csr_string)
	     END IF


	     CDS SELECT FROM DSC:post:espval_aux BECOMES "ctx_espval_aux" WHERE  \
	     adt_espv_suc == suc && adt_espv_es_tesoro == FLD:adt_espv_es_tesoro &&  \
	     adt_espv_id == FLD:adt_espv_id && adt_espv_cod == FLD:adt_espv_cod &&  \
	     adt_espv_subcod == FLD:adt_espv_subcod
	     adt_espv_importe = 0
	     adt_espv_imp_inic = 0
	     adt_espv_imp_ent = 0
	     adt_espv_imp_sal = 0
	     CDS FINDFIRST "ctx_espval_aux" NOLOCK
	     IF (CDSRETVAL == 0) THEN
		CDS EXTRACT "ctx_espval_aux" FLD:adt_espv_importe  \
		FLD:adt_espv_imp_inic FLD:adt_espv_imp_ent FLD:adt_espv_imp_sal
		IF (abrio == "N") THEN
		   adt_espv_imp_ent = 0
		   adt_espv_imp_sal = 0
		   adt_espv_imp_inic = adt_espv_importe
		END IF
	     END IF



	     FPRINT common:csr_string, \
	     "  %-20.20s   %7.7s    %10.10s    %10.10s    %10.10s",adt_espv_subcod, \
	     adt_espv_imp_inic,adt_espv_imp_ent,adt_espv_imp_sal,adt_espv_importe
	     CALL MISCwrite_file(1,common:csr_string)
	     total_imp = total_imp + adt_espv_importe
	     total_imp_inic = total_imp_inic + adt_espv_imp_inic
	     total_imp_ent = total_imp_ent + adt_espv_imp_ent
	     total_imp_sal = total_imp_sal + adt_espv_imp_sal
	     CDS FINDNEXT "Esp1" NOLOCK
	     IF (CDSRETVAL < 0) THEN
		BREAK
	     END IF
	  LOOP
	  IF (especie_ant != "") THEN
	     FPRINT common:csr_string," "
	     CALL MISCwrite_file(1,common:csr_string)
	     FPRINT common:csr_string, \
	     "  TOTAL               $%10e   $%10e   $%10e   $%10e",total_imp_inic, \
	     total_imp_ent,total_imp_sal,total_imp
	     CALL MISCwrite_file(1,common:csr_string)
	     FPRINT common:csr_string," "
	     CALL MISCwrite_file(1,common:csr_string)
	     FPRINT common:csr_string," "
	     CALL MISCwrite_file(1,common:csr_string)
	  END IF
       END IF
       CDS FINDNEXT DSC:post:espval_aux_ctx NOLOCK
    LOOP
END SUB

/*******/
