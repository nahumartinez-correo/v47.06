/****o* Pendientes de agrupación/OFB:tes:CDSverif_cheq_ing
* NOMBRE
*   OFB:tes:CDSverif_cheq_ing
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSverif_cheq_ing(tes,nro)
	local importe_cheques like siaf:importe

	let adt_cheqaux_tesoro = tes
	let adt_cheqaux_op = nro
/* Esta rutina calcula el total de cheque cargados en la tabla */
	let importe_cheques = 0

	cds select from dsc:AuxCheq_tbl becomes dsc:AuxCheq_ctx where \
	tes:adt_cheqaux_suc == op:op_branch_id && \
    tes:adt_cheqaux_tesoro == adt_cheqaux_tesoro && \
	tes:adt_cheqaux_op == adt_cheqaux_op && \
	tes:adt_cheqaux_moneda == tes:jnl_moneda

	cds findfirst dsc:AuxCheq_ctx nolock
	let lib:err_retval = CDSRETVAL
	if (lib:err_retval == -801 ) then
		cds endselect dsc:AuxCheq_ctx
		return (-1)
	endif
	do
		if (lib:err_retval < 0) then
			break
		end if
		cds extract dsc:AuxCheq_ctx all
		let importe_cheques = importe_cheques + tes:adt_cheqaux_importe
		call tes:CDSverif_cheque_tes(adt_cheqaux_moneda,adt_cheqaux_nro,adt_cheqaux_banco,adt_cheqaux_cuenta)
		if (retval < 0) then
			/* Si tiene estado 'U' es porque fue a otra sucursal y pudo haber vuelto */
			if (tes:teso_cheq_estado != "U") then
				errmsg lst:common:errmsg_list "Cheque Existente en la Sucursal"
				cds endselect dsc:AuxCheq_ctx
				return (-2)
			end if
		end if
		cds findnext dsc:AuxCheq_ctx nolock
		let lib:err_retval = CDSRETVAL
	loop
	cds endselect dsc:AuxCheq_ctx
    let post:importe_origen = importe_cheques
	return (0)
END SUB

/*******/
