/****o* Pendientes de agrupación/OFB:tes:CDSstatus_TesEspV
* NOMBRE
*   OFB:tes:CDSstatus_TesEspV
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

sub tes:CDSstatus_TesEspV(s, suc, es_tes, ident)
    local status like adt_espv_marca_cierr
    local es_tesoro like adt_espv_es_tesoro
    local i like cont1
    status = s
    es_tesoro = es_tes
    i = 0
    //debug
;    fprint common:csr_string "CDSstatus_TesEspV('%s', '%s', '%s', '%s')" \
;	s, suc, es_tes, ident
;    msgbox common:csr_string,OFB_OK,"Aviso"
    //debug
    /* Esto se controla antes de cerrar las cajas
    if (status != " ") // Cierre de tesoro
	cds select from TesEspVMov becomes TesEspVMov where \
	    adt_espv_suc == suc && \
	    adt_espv_op_dest == ident && \
	    adt_espv_marca_ing == ""
	cds findfirst TesEspVMov nolock
	if (cdsretval != -801)
	    errmsg lst:common:errmsg_list "TIENE MOVIMIENTOS PENDIENTES DE ACREDITACION"
	    return -2
	end if
    end if
    */
    cds select from TesEspV becomes TesEspV where \
	adt_espv_suc == suc && adt_espv_es_tesoro == es_tesoro && \
	adt_espv_id == ident
    cds findfirst TesEspV lock
    do
	if (cdsretval < 0)
	    break
	end if
	cds extract TesEspV all
	if (cdsretval < 0)
	    break
	end if
	if (status == " ") // Apertura de tesoro
	    adt_espv_imp_inic = adt_espv_importe
	    adt_espv_imp_ent = 0
	    adt_espv_imp_sal = 0
	end if
	cds clearbuffer TesEspV
	cds append TesEspV \
	    status as adt_espv_marca_cierr \
	    common:system_date as adt_espv_fecha \
	    adt_espv_imp_inic \
	    adt_espv_imp_ent \
	    adt_espv_imp_sal
	cds update TesEspV lock
	cds unlock TesEspV
	cds findnext TesEspV lock
    loop
    cds endselect TesEspV
end sub

/*******/
