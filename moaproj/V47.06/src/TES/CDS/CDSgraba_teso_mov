/****o* Pendientes de agrupación/OFB:tes:CDSgraba_teso_mov
* NOMBRE
*   OFB:tes:CDSgraba_teso_mov
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSgraba_teso_mov /*Graba tabla intermedia  teso_mov*/
    tmov_fecha         = common:system_date
    tmov_moneda        = siaf:moneda
    tmov_suc_id        = op:op_branch_id
    tmov_login_dest    = tes:login_dest
    tmov_op_id_orig    = op:op_operator_id
    tmov_sequence_orig = tlr:jnl_sequence
    tmov_hora_orig     = tlr:jnl_time
    tmov_codigo_siaf   = siaf:codigo_siaf
    tmov_login_orig    = op:op_login_id
    //tmov_marca_ing     = ""
    tmov_total         = post:importe_origen
    tmov_op_id_dest    = tes:operator_id_dest
    tes:tmov_es_rechazo = "N"
	if (tmov_sequence_pase.numchars == 0)
		tmov_sequence_pase = tmov_sequence_orig
	end if

    cont1 = 0
    DO
        IF (cont1 < 14) THEN
	        tmov_importes[cont1] = tes:importes[cont1]
	        cont1 = cont1 + 1
        ELSE
	        break
        END IF
    LOOP

    /* Grabo una marca que indica si el pase es desde el tesoro
    o desde caja */

    if (drv:dt_app == 4) then
        tes:tmov_pase_tesoro = "S"
    else

    	/*Si el pase es de Habilitación, pongo la marquita */
		;if (siaf:codigo_siaf == 8990) then
        	;tes:tmov_pase_tesoro = "H"
        	/* lo trucho como supervisado para que en los listados aparezca del lado del 
        	operador y no le permita rechazarlo */
        	;tes:tmov_marca_ing = "S"
        ;else
        ;end if
        tes:tmov_pase_tesoro = "N"
      

    end if

    CDS SELECT from DSC:tes:teso_mov_table becomes DSC:tes:teso_mov_context WHERE \
    tmov_fecha         == tmov_fecha         && \
    tmov_moneda        == tmov_moneda        && \
    tmov_suc_id        == tmov_suc_id        && \
    tmov_login_dest    == tmov_login_dest    && \
    tmov_op_id_orig    == tmov_op_id_orig    && \
    tmov_sequence_orig == tmov_sequence_orig && \
    tmov_hora_orig     == tmov_hora_orig
    
    CDS FINDFIRST DSC:tes:teso_mov_context lock
    lib:err_retval = CDSRETVAL
    CDS CLEARBUFFER DSC:tes:teso_mov_context

    CDS APPEND DSC:tes:teso_mov_context FLD:tmov_fecha FLD:tmov_moneda \
	FLD:tmov_suc_id FLD:tmov_login_dest FLD:tmov_op_id_orig\
	FLD:tmov_sequence_orig FLD:tmov_hora_orig FLD:tmov_codigo_siaf\
	FLD:tmov_login_orig FLD:tmov_marca_ing FLD:tmov_importes[00]\
	FLD:tmov_importes[01] FLD:tmov_importes[02] FLD:tmov_importes[03]\
	FLD:tmov_importes[04] FLD:tmov_importes[05] FLD:tmov_importes[06]\
	FLD:tmov_importes[07] FLD:tmov_importes[08] FLD:tmov_importes[09]\
	FLD:tmov_importes[10] FLD:tmov_importes[11] FLD:tmov_importes[12]\
	FLD:tmov_importes[13] FLD:tmov_total FLD:tmov_op_id_dest \
	hcomm:tran_status as tes:tmov_hcomm_status \
	tes:tmov_pase_tesoro \
	tes:tmov_es_rechazo \
	tes:tmov_sequence_pase
	
    IF (lib:err_retval == -801) then
       CDS INSERT DSC:tes:teso_mov_context lock
    else
       CDS REPLACE DSC:tes:teso_mov_context lock
    END IF
    CDS UNLOCK DSC:tes:teso_mov_context
    CDS ENDSELECT DSC:tes:teso_mov_context
END SUB

/*******/
