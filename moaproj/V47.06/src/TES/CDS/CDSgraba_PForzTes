/****o* Pendientes de agrupación/OFB:tes:CDSgraba_PForzTes
* NOMBRE
*   OFB:tes:CDSgraba_PForzTes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSgraba_PForzTes
    pfmov_fecha          = common:system_date
    pfmov_login_dest     = tes:tes_login_dest
    pfmov_op_id_orig     = tes:tes_operator_id_orig
    pfmov_sequence_inter = 0
    pfmov_hora_inter     = common:time_of_day
    pfmov_login_orig     = tes:tes_login_orig
    pfmov_op_id_dest     = tes:tes_operator_id_dest
    pfmov_suc_id         = common:sucursal_activa //op:op_branch_id
    pfmov_login_inter    = tes:tes_login_inter
    pfmov_op_id_inter    = tes:tes_op_inter
    pfmov_codtran        = siaf:codigo_siaf
    pfmov_marca_ing      = ""

    call csr:cleararray(pfmov_marca_mone)

    /*
    cont1 = 0
    DO
      IF (cont1 < 20) THEN  //20 monedas distintas
	 pfmov_importes[cont1] = tes:importes[cont1]
	 cont1 = cont1 + 1
      ELSE
	 break
      END IF
    LOOP
    */


    CDS SELECT from DSC:tes:PForzTes_tbl becomes DSC:tes:PForzTes_ctx WHERE \
    pfmov_suc_id         == pfmov_suc_id         && \
    pfmov_login_dest     == pfmov_login_dest     && \
    pfmov_op_id_orig     == pfmov_op_id_orig     && \
    pfmov_sequence_inter == pfmov_sequence_inter && \
    pfmov_hora_inter     == pfmov_hora_inter

    CDS FINDFIRST DSC:tes:PForzTes_ctx lock
    lib:err_retval = CDSRETVAL
    CDS CLEARBUFFER DSC:tes:PForzTes_ctx

    CDS APPEND DSC:tes:PForzTes_ctx \
    pfmov_fecha            \
    pfmov_login_dest       \
    pfmov_op_id_orig       \
    pfmov_sequence_inter   \
    pfmov_hora_inter       \
    pfmov_login_orig       \
    pfmov_op_id_dest       \
    pfmov_suc_id           \
    pfmov_login_inter      \
    pfmov_op_id_inter      \
    pfmov_codtran          \
    pfmov_marca_ing        \
    array pfmov_importes \
    array pfmov_marca_mone

    IF (lib:err_retval == -801) then
       CDS INSERT DSC:tes:PForzTes_ctx lock
    else
       CDS REPLACE DSC:tes:PForzTes_ctx lock
    END IF
    CDS UNLOCK DSC:tes:PForzTes_ctx
    CDS ENDSELECT DSC:tes:PForzTes_ctx
END SUB

/*******/
