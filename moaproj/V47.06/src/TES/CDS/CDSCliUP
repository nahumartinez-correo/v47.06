/****o* Pendientes de agrupación/OFB:tes:CDSCliUP
* NOMBRE
*   OFB:tes:CDSCliUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSCliUP

offset_0000:

    if (tes:adt_restesp_up.numchars > 0)
		CDS SELECT FROM DSC:post:cliocaUP_tbl BECOMES DSC:post:cliUP_ctx WHERE \
		post:NisUP == adt_restesp_up
	else
		CDS SELECT FROM DSC:post:cliocaUP_tbl BECOMES DSC:post:cliUP_ctx
	endif
	CDS MULTIDISPLAY DSC:post:cliUP_ctx LISTCloRazUPRest
	IF (lastkey == RT_ESC) THEN
		CDS ENDSELECT DSC:post:cliUP_ctx
		RETURN (-1)
	END IF

    IF (CDSRETVAL == 0x01FD) THEN
    	CDS ENDSELECT DSC:post:cliUP_ctx
        GOTO offset_0000
    END IF

    IF (CDSRETVAL == 0) THEN
	    CALL CSR:proc_list(F_CLEAR,LST:LISTrestup_flds)
        CALL CSR:proc_list(F_REFRESH,LST:LISTrestup_flds)
        CALL post:MISCset_sidebar(0, 0, 0, 0)
        CDS ENDSELECT DSC:post:cliUP_ctx
     	RETURN (-1)
	END IF

	IF (CDSRETVAL == -801) THEN
		clearfield tes:adt_restesp_up
		CDS ENDSELECT DSC:post:cliUP_ctx
	    GOTO offset_0000
	END IF

    LET lib:err_retval = CDSRETVAL

	CALL lib:MISCcds_find_err

   	IF (RETVAL != 0) THEN
	    CALL CSR:proc_list(F_CLEAR,LST:LISTrestup_flds)
        CALL CSR:proc_list(F_REFRESH,LST:LISTrestup_flds)
        CALL post:MISCset_sidebar(0, 0, 0, 0)
        CDS ENDSELECT DSC:post:cliUP_ctx
     	RETURN (-1)
	END IF

    CDS EXTRACT DSC:post:cliUP_ctx ALL
	CDS UNLOCK DSC:post:cliUP_ctx
	CDS ENDSELECT DSC:post:cliUP_ctx
END SUB

/*******/
