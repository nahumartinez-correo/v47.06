/****o* Pendientes de agrupación/OFB:tes:CDSactMarcaTesChkMov
* NOMBRE
*   OFB:tes:CDSactMarcaTesChkMov
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSactMarcaTesChkMov
    //si la marca en la TesChkMov = P (esta en un pase) entonces la paso a un estado intermedio I (para poder
    //se usada, temporalmente por el operador)
    CDS SELECT FROM DSC:TesChkMov BECOMES DSC:TesChkMov \
	    where adt_chk_suc == common:sucursal_activa && \
	    adt_chk_serie == giros:adt_chk_serie && \
	    adt_chk_nrogiro == giros:adt_chk_nrogiro
	    
	CDS FINDFIRST DSC:TesChkMov LOCK
	IF (CDSRETVAL < 0) THEN
		CDS UNLOCK DSC:TesChkMov
		CDS ENDSELECT DSC:TesChkMov
		RETURN (-2)
	END IF
	
	CDS EXTRACT DSC:TesChkMov adt_chk_marca_ing //adt_chk_marca_ant
	IF (adt_chk_marca_ing == "P")	
		tes:adt_chk_marca_ing = "I"
	END IF

	//LET tes:adt_chk_proxim = giros:adt_chk_nrogiro + giros:adt_chk_usado
    //LET tes:adt_chk_libres = giros:adt_chk_cantid  - giros:adt_chk_usado

	
	CDS CLEARBUFFER DSC:tes:TesChkMov
	CDS APPEND DSC:tes:TesChkMov \
    	tes:adt_chk_marca_ing
    CDS UPDATE DSC:tes:TesChkMov LOCK
    CDS UNLOCK DSC:tes:TesChkMov
    CDS ENDSELECT DSC:tes:TesChkMov
END SUB

/*******/
