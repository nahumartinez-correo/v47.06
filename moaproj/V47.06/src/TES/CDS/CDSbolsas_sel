/****o* Pendientes de agrupación/OFB:tes:CDSbolsas_sel
* NOMBRE
*   OFB:tes:CDSbolsas_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesCDS.h"

SUB tes:CDSbolsas_sel
    local cod_ant like tes:adt_depbuzon_bolsa
    local codigo like common:csr_string
offset_0000:
        /*
    cds select unique adt_depbuzon_suc adt_depbuzon_tipo adt_depbuzon_caja \
    adt_depbuzon_bolsa \
    from dsc:DepBuzon_tbl becomes dsc:DepBuzon_ctx where \
    tes:adt_depbuzon_suc == common:sucursal_activa && \
    tes:adt_depbuzon_caja == buzon && \
    (tes:adt_depbuzon_status != " ")
*/
    clearfield cod_ant
    cds select from dsc:DepBuzon_tbl becomes dsc:DepBuzon_ctx where \
    tes:adt_depbuzon_suc == common:sucursal_activa && \
    tes:adt_depbuzon_caja == buzon && \
    (tes:adt_depbuzon_status != " ")

    cds findfirst dsc:DepBuzon_ctx nolock
    let lib:err_retval = cdsretval
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF
    call csr:f_sadroppl dsc:Bolsas
    call csr:f_sanewpl dsc:Bolsas pic:Bolsas
    do
        if (cdsretval != 0) then
                cds endselect dsc:DepBuzon_ctx
                break
        end if
	;cds extract dsc:DepBuzon_ctx all
	call tes:CDS_MD_DepBuzon
	if (cod_ant != tes:adt_depbuzon_bolsa)
	    fprint common:csr_string, "%-8s  %-s",adt_depbuzon_bolsa,dsc_codigo_siaf
	    call csr:f_saaddpl dsc:Bolsas common:csr_string
	end if
        cod_ant = tes:adt_depbuzon_bolsa
	cds findnext dsc:DepBuzon_ctx nolock
    loop
    codigo = ""
    call csr:f_sadopl dsc:Bolsas codigo
    ;ret = retval
    call csr:f_sadroppl dsc:Bolsas
    tes:adt_depbuzon_bolsa = substr(codigo,0,8)
    call csr:trimfield(tes:adt_depbuzon_bolsa)
    tes:adt_depbuzon_caja = buzon
    call tes:CDSbolsa_buz_load
    if (retval < 0) then
        return (-1)
    end if


        /*
    CDS MULTIDISPLAY DSC:DepBuzon_ctx tes:LIST_MD_DepBuzon
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN

        MOVE buzon TO adt_buzon_nro
        CALL CDSbuzon_load

        RETURN (-2)
    END IF
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF
    */
    /*
    CDS EXTRACT DSC:DepBuzon_ctx ALL
    CDS UNLOCK DSC:DepBuzon_ctx
    CDS endselect dsc:DepBuzon_ctx
    */
END SUB

/*******/
