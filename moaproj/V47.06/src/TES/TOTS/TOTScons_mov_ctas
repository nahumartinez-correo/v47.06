/****o* Pendientes de agrupación/OFB:tes:TOTScons_mov_ctas
* NOMBRE
*   OFB:tes:TOTScons_mov_ctas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesTOTS.h"

SUB tes:TOTScons_mov_ctas
	LOCAL existe_dif LIKE siaf:i
	LOCAL importe LIKE siaf:importe
	LOCAL copias_aux LIKE siaf:i //para cant. de copias del listado.
  
	IF (siaf:pantalla_impreso != "P") THEN
		;LMB - PS 9780 - 13.06.2008
		FPRINT siaf:dnix_cmd, "%-s%-s", common:dirTemporal , "movctas.lis"
		CALL CSR:file_open 1 siaf:dnix_cmd "w"
		IF (RETVAL < 0) THEN
			ERRMSG LST:common:errmsg_list,"Error al abrir el archivo movctas.lis"
			RETURN (-2)
		END IF
	END IF

	LET siaf:pick_titulo = "movctas"
	CALL CSR:f_sanewpl siaf:pick_titulo pic:movctas
	
	existe_dif = 0
	siaf:i = 0
	siaf:cta_hojas = 1
	
	encabezado = 0   

	SELECT (post:umev_opcion)
		CASE "TODAS" 
			CDS SELECT FROM DSC:MovimCta_tbl BECOMES DSC:MovimCta2_ctx \
				WHERE (mov_br_id == common:sucursal_activa) \
				&& (mov_bus_date >= post:adt_umov_fecha_ini) \
				&& (mov_bus_date <= post:adt_umov_fecha_fin)
		BREAK
		CASE "CUENTA"
			CDS SELECT FROM DSC:MovimCta_tbl BECOMES DSC:MovimCta2_ctx \
				WHERE (mov_br_id == common:sucursal_activa)\
				&& (mov_banco == FLD:banco_codigo) \
				&& (mov_tipo_cuenta == tipo_cuenta) \
				&& (mov_nro_cuenta == nro_cuenta) \
				&& (mov_bus_date >= post:adt_umov_fecha_ini) \
				&& (mov_bus_date <= post:adt_umov_fecha_fin)
			BREAK    
	END SELECT

	IF (CDSRETVAL != 0) THEN
		ERRMSG LST:common:errmsg_list,ERRmovctas_select
		RESET tran
		CALL csr:file_close(1)
		IF (siaf:pantalla_impreso != "P") THEN
			FPRINT common:tmpDirTemporal, "%s%s", common:dirTemporal , "movctas.lis"
			FPRINT post:linea_spvCM "cmd /c del %s" common:tmpDirTemporal
			CALL csr:create_process post:linea_spvCM,SW_HIDE,CSR_WAIT    
			EXEC post:linea_spvCM                 
		END IF        
		RETURN (-2)
	END IF

	CDS FINDFIRST DSC:MovimCta2_ctx NOLOCK
	post:err_retval = CDSRETVAL
	post:cant_mov = 0

	IF (post:err_retval == 0) THEN 
		CDS EXTRACT DSC:MovimCta2_ctx ALL
		CALL MISCmovctas_encabez
		CALL MISCmov_enc_sub        	
		tmp_mov_banco = mov_banco
		tmp_mov_tipo_cuenta = mov_tipo_cuenta
		tmp_mov_nro_cuenta = mov_nro_cuenta
		tmp_mov_bus_date = 19970101
		saldo_mov_inic = mov_importe
	ELSE
		//si es cierre suc o cierre forzado suc NO debe emitir mesaje
		IF (siaf:codigo_siaf_list != 9540 && siaf:codigo_siaf_list != 9550)
			MSGBOX "NO EXISTEN REGISTROS COINCIDENTES",OFB_OK,"AVISO"
		END IF
		IF (siaf:modo == "CLOSESUC") THEN
			CALL csr:file_close(1)
			IF (siaf:pantalla_impreso != "P") THEN
				FPRINT common:tmpDirTemporal, "%s%s", common:dirTemporal , "movctas.lis"
				FPRINT post:linea_spvCM "cmd /c del %s" common:tmpDirTemporal
				CALL csr:create_process post:linea_spvCM,SW_HIDE,CSR_WAIT    
				EXEC post:linea_spvCM                 
			END IF        
			RETURN -2
		END IF
	END IF
    
	WHILE (post:err_retval == 0)
		CALL CDSleo_saldo(mov_banco,mov_tipo_cuenta,mov_nro_cuenta)
		
		WHILE (mov_banco == tmp_mov_banco && \
			mov_tipo_cuenta == tmp_mov_tipo_cuenta && \
			mov_nro_cuenta == tmp_mov_nro_cuenta && \
			post:err_retval == 0)
			
			IF (mov_marca_rev != "R" && mov_codigo_siaf != 6000) THEN
				IF (mov_tipo_mov == "D") THEN
					total_imp_mov = total_imp_mov - mov_importe
				ELSE
					total_imp_mov = total_imp_mov + mov_importe
				END IF
				CALL MISCimprimo_mov_cta
			END IF
			CDS FINDNEXT DSC:MovimCta2_ctx NOLOCK
			post:err_retval = CDSRETVAL
			IF (post:err_retval == 0)
				CDS EXTRACT DSC:MovimCta2_ctx ALL
			END IF
		END WHILE           
		IF (post:err_retval == 0) THEN
			saldo_mov_fin = saldo_mov_inic + total_imp_mov
			CALL MISCctas_pie
			saldo_mov_fin = 0
			post:cant_mov = 0
			IF (mov_banco != tmp_mov_banco) THEN
				IF (encabezado != 1) THEN
					CALL MISCmov_enc_banco
				END IF
				encabezado = 0
			END IF
			CALL MISCmov_enc_sub
			tmp_mov_banco = mov_banco
			tmp_mov_tipo_cuenta = mov_tipo_cuenta
			tmp_mov_nro_cuenta = mov_nro_cuenta
			tmp_mov_bus_date = 19970101
			saldo_mov_inic = mov_importe
		END IF
	END WHILE  
       
  mov_codigo_siaf = 6000
  saldo_mov_fin = saldo_mov_inic + total_imp_mov
  CALL MISCctas_pie

  FYIMSG CLEAR
  CLEARFIELD common:csr_string

	IF (siaf:pantalla_impreso == "P") THEN
		CLEARFIELD common:csr_string
		;LMB - PS 9780 - 13.06.2008
		FPRINT common:csr_string, "%-s%-s", common:dirTemporal ,"movctas.lis"
		KEYDEF PUSH
		CALL csr:f_sadopl siaf:pick_titulo common:csr_string 
		KEYDEF POP
	ELSE
;		/* Avanza hasta el final para imprimir la Cantidad de hojas */   
;		DO
;			IF (siaf:i < 59) THEN 
;				LET common:csr_string = "    "
;				CALL MISCwrite_ctas
;			ELSE
;				BREAK
;			END IF
;		LOOP
;		FPRINT common:csr_string "                                                     Cantidad de Hojas : %s" siaf:cta_hojas
;		CALL MISCwrite_ctas    

		FYIMSG LST:common:fyimsg_list,"(L) SE ESTAN IMPRIMIENDO LOS MOVIMIENTOS"
		CALL csr:file_close(1)

		LET copias_aux = 1
		LET siaf:indica_calcu = siaf:cta_hojas

		//gpb:NI50572 - Digitalizacion de Reportes
		CALL tes:MISCflowPDF("movctas.lis")
  	//Si es impreso y no es Cierre /Cierre Forzado de Sucursal/Tesoro
;;	IF (siaf:pantalla_impreso == "I" || RETVAL < 0) THEN
		IF (siaf:pantalla_impreso == "I" && RETVAL == -5) THEN
			//Genero el PDF y lo imprimo
			CALL tes:MISCcrearPDF("movctas.lis")

;;			WHILE (copias_aux <= siaf:nro_copias) 		
;;				;LMB - PS 9780 - 13.06.2008	
;;				FPRINT common:tmpDirTemporal, "%s%s", common:dirTemporal, "movctas.lis"
;;				CALL CSR:file_open(7,common:tmpDirTemporal,"r")
;;				IF (RETVAL < 0) THEN
;;					MSGBOX "No se puede abrir el archivo a imprimir",0x00000000,"Error"
;;					RETURN 
;;				END IF 
;; 				PRINTDOC OFB:siaf:PDOCfile_print_gral,"laser","Imprimiendo Documento, un momento por favor..."
;; 				CALL CSR:file_close(7) 
;;				LET copias_aux = copias_aux + 1 			
;;			END WHILE
		END IF
        
		;LMB - PS 9780 - 13.06.2008	
		FPRINT common:csr_string "cmd /c del %-s%-s", common:dirTemporal, "movctas.lis"
		CALL csr:create_process common:csr_string,SW_HIDE ,CSR_WAIT   		                        
		EXEC common:csr_string
	END IF
	    
END SUB

/*******/
