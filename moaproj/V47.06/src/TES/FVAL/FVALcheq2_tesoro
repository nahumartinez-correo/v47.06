/****o* Pendientes de agrupación/OFB:tes:FVALcheq2_tesoro
* NOMBRE
*   OFB:tes:FVALcheq2_tesoro
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALcheq2_tesoro
    IF (!testflag(tlr:tran_flags,correction)) then
        let tes:teso_cheq_suc    = op:op_branch_id
        let tes:teso_cheq_banco  = siaf:cod_banco
        let tes:teso_cheq_cuenta = siaf:cheqcuenta
        let tes:teso_cheq_nro    = siaf:nro_cheque
        ;let tes:teso_cheq_importe = siaf:importe
        let tes:teso_cheq_moneda = siaf:moneda
        if (drv:dt_app == 4) then
            tes:teso_cheq_estado = "T"
            tes:teso_cheq_id = op:op_tesoro_id
        else
            tes:teso_cheq_estado = "O"
            tes:teso_cheq_id = op:op_operator_id 
        end if
        call CDStesoro_cheq_load
        if (retval < 0) then
		    let teso_cheq_suc = op:op_branch_id
		    let teso_cheq_moneda = siaf:moneda
			call CDStesoro_cheq_sel(tes:teso_cheq_estado,tes:teso_cheq_id)
			if (lastkey == RT_ESC) || (retval < 0) then
				drv:button = 3
				call drv:but_disable
				return (-2)
			else
	            siaf:cod_banco      = substr(common:csr_string,1,3)
        		siaf:cheqcuenta     = substr(common:csr_string,6,20)
        		siaf:nro_cheque     = substr(common:csr_string,28,8)
        		post:importe_origen = substr(common:csr_string,39,13)
        		call csr:trimfield(siaf:cod_banco)
        		call csr:trimfield(siaf:cheqcuenta)              
        		call csr:trimfield(siaf:nro_cheque)
				call csr:trimfield(post:importe_origen)
        		refresh siaf:nro_cheque
        		refresh siaf:cheqcuenta
        		refresh siaf:cod_banco	        
        		refresh post:importe_origen

        		drv:button = 5
        		call drv:but_enable    
        		return (0)
			end if
        endif
        /* No se permite sacar un cheque pendiente de reemplazo */
        if (tes:teso_cheq_recep == "S") then
        	errmsg lst:common:errmsg_list "Cheque Pendiente de Reemplazo"
	        drv:button = 5
	        call drv:but_enable           	
        	return (-2)
        end if        

        let siaf:nro_cheque = teso_cheq_nro
        let siaf:cheqcuenta = teso_cheq_cuenta
        let siaf:cod_banco  = teso_cheq_banco
        refresh siaf:nro_cheque
        refresh siaf:cheqcuenta
        refresh siaf:cod_banco
        let post:importe_origen = teso_cheq_importe
        refresh post:importe_origen
        refresh siaf:importe
        drv:button = 5
        call drv:but_enable    
        call csr:set_currentfield siaf:cod_banco
        CALL FVALBco_Cheq2 
        resetvaldone tes:clearing
    endif
END SUB

/*******/
