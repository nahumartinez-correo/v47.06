/****o* Pendientes de agrupación/OFB:tes:FVALarqueo_imp
* NOMBRE
*   OFB:tes:FVALarqueo_imp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALarqueo_imp
local idx like siaf:i
local encontro like tes:es_tesoro
local lcodmone like siaf:moneda

    if (!(testflag(tlr:tran_flags,correction)))
		CALL CSR:getrowcol arqueo_espv_imp, nrow, ncol
		encontro = "N"
		idx = PL_GETITEM
		do
			call csr:myPickcontrol(dsc:PICPasesDisp,common:csr_string,idx)
			if (retval < 0 || encontro == "S")
				break
			end if
			if (arqueo_espv_cod[ncol] == substr(common:csr_string,0,20) && arqueo_espv_imp[ncol] != substr(common:csr_string,21,16) && encontro == "N")
				//Lo elimino del picklist y lo vuelvo a cargar con el importe actualizado
	            siaf:i = idx - PL_GETITEM
	            CALL CSR:myPickdelete(dsc:PICPasesDisp,common:csr_string,siaf:i)
				idx = idx - 1
				lcodmone = substr(common:csr_string,38,2)
				
				fprint common:csr_string "%-20s %16.16e %-2s",arqueo_espv_cod[ncol],arqueo_espv_imp[ncol],lcodmone
				Call csr:f_saaddpl dsc:PICPasesDisp common:csr_string
				
				encontro = "S"
			end if
			idx = idx + 1
		loop
		//Ordeno el picklis para que quede igual que antes...
		CALL csr:PickOp 4 dsc:PICPasesDisp "38,2"
    end if
END SUB

/*******/
