/****o* Pendientes de agrupación/OFB:tes:FVALcliRestCli
* NOMBRE
*   OFB:tes:FVALcliRestCli
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALcliRestCli
	local col like siaf:i
	local l_retval like lib:err_retval
	local l_string like common:csr_string
	local l_cli like post:cli_tipo

	call csr:getrowcol rest_cli
	col = retval

	if (rest_cli[col].numchars == 0)
		return (0)
	endif

	call MISCprotTodoRestEspM
	call post:MISCflecha_restore
	PICKVERIFY FLD:tes:rest_cli[col],PIC:post:cli_tipo,update
	; tengo que guardar estos datos porque la MISCproc_rest... los pisa.
	l_retval = retval
	l_string = common:csr_string
	l_cli = tes:rest_cli[col]

	enablecontrol drv:PBcb0
	enablecontrol drv:PBcb1
	call tes:MISChabDeshabFlechas(col)
	; vuelvo a procesar la grilla
	call tes:MISCproc_restEspM

	fprint common:csr_string " - %s", substr(l_string, 2, 999)
	tes:rest_cli[col] = l_cli

	keydef f29,drv:PBcb13 //flecha arriba
	keydef f32,drv:PBcb14  //flecha abajo
	IF (l_retval >= 0)
		;MOVE admin:adt_br_branch to rest_cli[col]
		REFRESH rest_cli[col]
	ELSE
		ERRMSG lst:common:errmsg_list,"(L) TIPO DE CLIENTE NO EXISTE"
		clearfield rest_cli[col]
		refresh rest_cli[col]
		RETURN (-2)
	END IF
	call tes:PBcomunSelEsp(col, false)
	; Solamente devuelvo -2 para que no se vaya del campo... no porque hubieron errores.
	RETURN (-2)
END SUB

/*******/
