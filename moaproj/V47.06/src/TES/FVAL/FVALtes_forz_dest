/****o* Pendientes de agrupación/OFB:tes:FVALtes_forz_dest
* NOMBRE
*   OFB:tes:FVALtes_forz_dest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALtes_forz_dest
    local i like siaf:i
    local S_N like post:SiNo
    local LSuc like common:sucursal_activa

    if (currentfield.NUMCHARS > 0 && tes:tes_login_dest != tes_login_inter)
	/* Se ingreso un login a mano => verifico que pueda ser tesoro */
	let op:adt_login_id = tes:tes_login_dest
	clearfield op:adt_tlr_auth
	clearfield op:adt_sup_auth
	clearfield op:adt_tes_auth

	
	call op:CDSadt_op_load
	if (!(op:adt_branch_id == tes:sucursal            && \
	   op:adt_operator_id  != tes:tes_op_inter           && \
	   op:adt_operator_id  != tes:tes_operator_id_orig   && \
	   op:adt_llave_tesoro != "S"                        && \
	   op:adt_tesoro       != "S"                        && \
	  (op:adt_tes_auth == "X" || op:adt_sup_auth == "X") && \
	   op:adt_tlr_auth == "X" )                          || \
	   retval < 0) then
	   common:csr_string = "(L) OPERADOR DESTINO NO PUEDE SER TESORO"
	   errmsg common:errmsg_list,fld:common:csr_string
	   return (-2)
	end if
        if (op:adt_node_id == "") then
            common:csr_string = "(L) OPERADOR NO IDENTIFICADO"
	    errmsg common:errmsg_list,fld:common:csr_string
	    return (-2)
	end if

	/*guarda los cajeros que se encuentran abiertos el dia de hoy*/
	LSuc = op:op_branch_id
	op:op_branch_id = tes:sucursal
	CALL tes:CDSestado_cajas(common:system_date,"IQUAL")
	tes:cant_open_caj = retval //cantidad de operadores sin rendir
	op:op_branch_id = LSuc

	S_N = "N"
	i = 1
	DO 
	   if (i > tes:cant_open_caj)
	      break
	   end if
	   if (texto_aux[i] == op:adt_operator_id)
	      S_N = "S"
	      break
	   end if
	   i = i + 1
	LOOP
	if (S_N == "N") //no tiene la caja abierta
	   common:csr_string = "(L) OPERADOR DESTINO NO PUEDE SER TESORO"
	   errmsg common:errmsg_list,fld:common:csr_string
	   return (-2)
	end if



	let tes:tes_operator_id_dest = op:adt_operator_id
	refresh tes:tes_operator_id_dest
    else
	//call PBmuestra_posib_tes
	call PBver_posib_tes_for
	if (retval <= 0) then 
	    return (-2)
	end if
    end if
END SUB 

/*******/
