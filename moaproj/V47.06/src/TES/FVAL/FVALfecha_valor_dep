/****o* Pendientes de agrupación/OFB:tes:FVALfecha_valor_dep
* NOMBRE
*   OFB:tes:FVALfecha_valor_dep
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALfecha_valor_dep
    local dif_fecha like adt_cta_limite
    local LContexto like common:csr_string
    local LRetVal like lib:err_retval
    
    FLD:LContexto = "adt_cta_ctx2"
    LRetVal = 0
    
    IF (!TESTFLAG(tlr:tran_flags,correction)) THEN
       call csr:date_compare(currentfield,currentfield)
       if (retval < 0) then
          errmsg LST:common:errmsg_list,"FECHA INVALIDA."
          return -2
       end if    
    
       call siaf:FVALcampo_requerido
       if (retval < 0) then
    	  return (-2)
       end if   
      
       CALL siaf:MISCdia_habil_dep("B",currentfield)           
       if (retval != 0)
          errmsg LST:common:errmsg_list,"FECHA NO CORRESPONDE A UN DIA HABIL."
          return (-2)
       end if
    
       cds select from DSC:adt_cta_tbl BECOMES FLD:LContexto  \
       where tes:adt_cta_suc    == op:op_branch_id          && \
             tes:adt_cta_banco  == banco_codigo             && \
             tes:adt_cta_tipo   == tipo_cuenta              && \
             tes:adt_cta_lugar  == FLD:lugar_cuenta         && \
             tes:adt_cta_moneda == moneda_dep
       cds findfirst FLD:LContexto nolock
       let lib:err_retval = cdsretval
    
       if (lib:err_retval == 0) then
    	  cds extract FLD:LContexto adt_cta_fval
      	  call csr:date_subtract(common:system_date, fecha_valor)
          let LRetVal = retval
          
    	  if (retval < 0) then
    	     msgbox "FECHA INVALIDA, SUPERA AL DIA DE HOY.",0x00,"ERROR"
             LRetVal = -2    	     
    	  else
    	     CALL siaf:MISCctrl_fecha_tope(common:system_date, tes:adt_cta_fval, "B" ,post:fecha)
    	     call csr:date_compare(fecha_valor, post:fecha)    	     
    	     let LRetVal = retval
    	     if (retval == 2) then /*fecha_valor < fecha_tope*/    	         	   	        
    	        msgbox "SUPERA LA CANTIDAD LIMITE DE DIAS HABILES.",0x00,"ERROR"
    	        LRetVal = -2
    	     else
    	         CALL tes:MISCdia_laborable(tes:fecha_valor)
   		 IF (RETVAL < 0) THEN
    		     msgbox "LA FECHA INGRESADA NO CORRESPONDE A UN DIA LABORABLE PARA LA SUCURSAL.",0x00,"ERROR"
        	     LRetVal = -2
    		 ELSE
    	      	     LRetVal = 0
              	     refresh fecha_valor
              	 ENDIF
             end if
          end if    
       else

          msgbox "NO TIENE CANTIDAD LIMITE DE DIAS.",0x00,"ERROR"
    	  LRetVal = -2
       end if
       cds endselect FLD:LContexto

    end if ; Reversa

    Return (LRetVal)
END SUB

/*******/
