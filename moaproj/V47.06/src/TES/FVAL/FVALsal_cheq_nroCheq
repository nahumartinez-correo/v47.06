/****o* Pendientes de agrupación/OFB:tes:FVALsal_cheq_nroCheq
* NOMBRE
*   OFB:tes:FVALsal_cheq_nroCheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALsal_cheq_nroCheq
    IF (lastkey != RT_SEND || (lastkey == RT_SEND && TESTFLAG(admin:mode_flags,grb) || TESTFLAG(admin:mode_flags,bor))) then
    	let tes:teso_cheq_suc     = op:op_branch_id
        let tes:teso_cheq_banco   = siaf:cod_banco
        if (post:adt_mp_admban == "S") then 
            ;Administración Bancaria
    	    tes:teso_cheq_banco   = siaf:cod_banco
            tes:teso_cheq_cuenta  = siaf:cheqcuenta
        else
            tes:teso_cheq_banco  = 0
            if (post:adt_mp_auto == "S" && post:adt_mp_int == "S") then
                tes:teso_cheq_cuenta  = post:codigo_interno
            else
                tes:teso_cheq_cuenta  = 0
            end if            
        end if
        
        let tes:teso_cheq_nro     = siaf:nro_cheque
        siaf:nro_cupcheq = siaf:nro_cheque
        let tes:teso_cheq_moneda  = siaf:moneda
        if (drv:dt_app == 4) then
            tes:teso_cheq_estado = "T"
            tes:teso_cheq_id = op:op_tesoro_id
        else
            tes:teso_cheq_estado = "O"
            tes:teso_cheq_id = op:op_operator_id 
        end if
        call CDStesoro_cheq_load
        if (retval < 0) then
            call drv:but_number(ofb:tes:PBtesoro_cheques)
            drv:last_button = retval
            call PBtesoro_cheques
            if (retval < 0) then
            	return (-2)
            end if
        end if
        ; No se permite sacar un cheque pendiente de reemplazo
        if (tes:teso_cheq_recep == "S") then
        	errmsg lst:common:errmsg_list "Cheque Pendiente de Reemplazo"
        	return (-2)
        end if
        call CDSsal_cheq_cargado
        if (retval == 0) then
            call drv:but_number(ofb:drv:PBninguno)
            drv:button = retval
            call drv:but_enable
            call drv:but_number(ofb:drv:PBagregar)
            drv:button = retval
            call drv:but_disable
            call drv:but_number(ofb:drv:PBborrar)
            drv:button = retval
            call drv:but_up_enable
            call drv:but_number(OFB:PBmoneda_cheque)
            drv:button = retval
            call drv:but_disable
            call drv:but_number(OFB:PBbanco_gral)
            drv:button = retval
            call drv:but_disable
            call drv:but_number(OFB:PBtesoro_cheques)
            drv:button = retval
            call drv:but_disable
            CALL CSR:proc_list(F_PROTECT,LST:LISTsal_cheq)
        else
            call drv:but_number(ofb:drv:PBninguno)
            drv:button = retval
            call drv:but_up_enable
            call drv:but_number(ofb:drv:PBagregar)
            drv:button = retval
            call drv:but_up_enable
            call drv:but_number(ofb:drv:PBborrar)
            drv:button = retval
            call drv:but_disable
            call drv:but_number(OFB:PBmoneda_cheque)
            drv:button = retval
            call drv:but_up_enable
            call drv:but_number(OFB:PBbanco_gral)
            drv:button = retval
            call drv:but_up_enable
            call drv:but_number(OFB:PBtesoro_cheques)
            drv:button = retval
            call drv:but_up_enable
            CALL CSR:proc_list(F_UNPROTECT,LST:LISTsal_cheq)
        end if
        post:importe_origen = tes:teso_cheq_importe
        refresh post:importe_origen	
    end if
END SUB

/*******/
