/****o* Pendientes de agrupación/OFB:tes:FVALcantidad_ev_pb
* NOMBRE
*   OFB:tes:FVALcantidad_ev_pb
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALcantidad_ev_pb
    local importe like adt_espv_importe
    local loc_importe like tes:adt_evaux_importe
    if (adt_evaux_cantidad.numchars != 0 && adt_evaux_cantidad != 0)

        /*MDG calcula importe tomando el descuento por promocion post:fld_promo_imp*/
		call csr:f_sadroppl dsc:post:pic_promo_Detalle
		call csr:f_sanewpl  dsc:post:pic_promo_Detalle, PIC:post:PICpromo_Detalle
 		CALL post:MISCaplicaBonif(TIPO_ESPECIES_VS)
		IF (post:aplica_bonif_esvs ==	"S") THEN
        	CALL post:CDScalcBonifGral( TIPO_DETALLE_BONIF_ESPECIE, "")
		END IF
		tes:adt_evaux_importe = adt_evaux_cantidad * adt_espv_valor

        if (drv:dt_app == 4) then
            call CDSget_imp_TesEspV(op:op_branch_id, "S", op:op_tesoro_id,\
				     espv_cod, adt_evaux_subcod,importe)
		else
	    	call CDSget_imp_TesEspV(op:op_branch_id, "N", op:op_operator_id,\
				     espv_cod, adt_evaux_subcod,importe)
		end if
		/* supera al tesoro del cajero */
		if (retval < 0 || adt_evaux_importe > importe)
		    errmsg clear
	    	errmsg lst:common:errmsg_list,ERRsupera_stock
		    clearfield adt_evaux_importe
		    refresh adt_evaux_importe
	    	return -2
		end if
    else
        if (adt_evaux_cantidad == 0) then
            errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
            return (-2)
        end if
    end if
END SUB

/*******/
