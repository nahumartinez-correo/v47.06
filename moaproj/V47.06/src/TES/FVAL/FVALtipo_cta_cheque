/****o* Pendientes de agrupación/OFB:tes:FVALtipo_cta_cheque
* NOMBRE
*   OFB:tes:FVALtipo_cta_cheque
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesFVAL.h"

SUB tes:FVALtipo_cta_cheque
    if (siaf:moneda.numchars == 0)
    	errmsg lst:common:errmsg_list,"Debe seleccionar el Tipo de Cheque"
    	return (-2)
    end if
    if (!TESTFLAG(tlr:tran_flags,correction))
        if (tipo_cuenta.numchars == 0) then
            call HELPtipo_cta_cheq
            if (retval < 0 ) then
                cds endselect DSC:adt_tipo_ctx
                return retval
            else              
                refresh moneda_dep
                refresh tipo_tipo
                refresh tipo_cuenta
                cds endselect DSC:adt_tipo_ctx
            end if
        else         
            cds select from DSC:adt_tipo_tbl BECOMES DSC:adt_tipo_ctx \
                where tes:adt_tipo_cod == tipo_cuenta && \
                      tes:adt_tipo_lugar == lugar_cuenta && \
                      tes:adt_tipo_mone == post:adt_mp_mon
                      
            cds findfirst DSC:adt_tipo_ctx nolock
            let lib:err_retval = cdsretval
            if (lib:err_retval == -801)
                msgbox "TIPO DE CUENTA INEXISTENTE",0x00,"ERROR"
                call HELPtipo_cta_cheq
                if (retval < 0 ) then
                    cds endselect DSC:adt_tipo_ctx
                    return retval
                end if
            else
                cds extract DSC:adt_tipo_ctx all
                moneda_dep = tes:adt_tipo_mone
                tipo_tipo  = tes:adt_tipo_tipo
                tipo_cuenta = tes:adt_tipo_cod
            end if
            refresh tipo_cuenta
            refresh tipo_tipo            
            refresh moneda_dep
            cds endselect DSC:adt_tipo_ctx
        end if
    setvaldone tipo_cuenta
    end if
END SUB	

/*******/
