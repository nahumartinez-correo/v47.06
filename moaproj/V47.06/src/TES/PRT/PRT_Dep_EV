/****o* Pendientes de agrupación/OFB:tes:PRT_Dep_EV
* NOMBRE
*   OFB:tes:PRT_Dep_EV
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesPRT.h"

SUB tes:PRT_Dep_EV
    LOCAL indice like post:cantidad
    local idx like post:cantidad
    local ant_especie like common:csr_string
    local cant_char like siaf:i
    /*ACP-SC 50170 */
    local Limporte like post:importe_sesion
    
    PRT transparent SETEODEFAULT
    call  tes:PRT_Hdr_Ticket
    call  tes:PRT_Subencabezado
    
    fprint common:csr_string "%5.5e %-30.30s \n", \
                 siaf:codigo_siaf,siaf:nombre_transac
    call post:PRTtransparent(common:csr_string) 

    Prt Transparent LINEANUEVA    	
    fprint common:csr_string "%s %5.5e \n", \
                  dsc:buzon_nro,buzon
    call post:PRTtransparent(common:csr_string)
    
    fprint common:csr_string "%s %8.8e \n", \
                  dsc:bolsa,bolsa
    call post:PRTtransparent(common:csr_string)

    Prt Transparent LINEANUEVA    	
    fprint common:csr_string "%s   %s        %s \n", \
                  dsc:DAUdenominacion,dsc:DAUcantidad,dsc:DAUimporte
    call post:PRTtransparent(common:csr_string)
    

    let indice = indice + 1
    let idx = 0
    let i_idx = PL_GETITEM + 0
    call csr:PickOp 4 dsc:Especie "0,20"
    call csr:myPickcontrol dsc:Especie common:csr_string i_idx
    DO
           if (retval < 0)
                break
           end if
           if (substr(common:csr_string,0,20) != ant_especie) then
	           ant_especie = common:csr_string
	           fprint common:csr_string "%s:  %-20.20s \n", \
	                     dsc:Especie,ant_especie    
	           Prt Transparent LINEANUEVA
	           call post:PRTtransparent(common:csr_string)
               common:csr_string = ant_especie
               ant_especie = substr(ant_especie,0,20)
               let indice = indice + 2
	       end if
	       cant_char = common:csr_string.numchars
           common:csr_string = substr(common:csr_string,21,99)
           
           call post:PRTtransparent(common:csr_string)
           let idx = idx + 1
           let indice = indice + 1
           let i_idx = PL_GETITEM + idx
           call csr:myPickcontrol dsc:Especie common:csr_string i_idx
    LOOP

    call post:PRTtransparent(LINE_GUIONES)
    let indice = indice + 1
    //ACP:SC 50170 (Redondea a dos decimales)
    INIT 22,1
       Limporte = post:importe
    INIT 22,0
    /*fprint common:csr_string "%s                  %13.13e \n", \
                  dsc:DAUtotales,post:importe*/
    fprint common:csr_string "%s                  %13.13e \n", \
                  dsc:DAUtotales,Limporte              
    call post:PRTtransparent(common:csr_string)
    let indice = indice + 1
    fprint common:csr_string "%s \n",siaf:DAUdestinatario
    call post:PRTtransparent(common:csr_string)
    let indice = indice + 6
    call post:MISCavaz_linea_imp(indice)
    call post:PRT_Ticket_Corte
    
END SUB

/*******/
