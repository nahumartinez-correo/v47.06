/****o* Pendientes de agrupación/OFB:tes:PRT_salida_ev
* NOMBRE
*   OFB:tes:PRT_salida_ev
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesPRT.h"

SUB tes:PRT_salida_ev
    LOCAL indice like post:cantidad
    local idx like post:cantidad
    local ant_especie like common:csr_string
    local cant_char like siaf:i
     /*ACP-SC 50170 */
    local Limporte like post:importe_sesion
    
    if (siaf:codigo_siaf == 0)
        dsc_codigo_siaf = ""
        clearfield prt_codigo_siaf
        clearfield dsc_oper_dest
    else
        dsc_codigo_siaf = dsc:DAUcodigo_siaf
        prt_codigo_siaf = siaf:codigo_siaf
        select (siaf:codigo_siaf)
                case 9246 /* Salida de Esp.Val. de Tes.  a Otra Sucursal*/
                case 9286 /* Salida de Esp.Val. de Caja. a Otra Sucursal*/
                     dsc_oper_dest = "Sucursal Destino:"
                     break
                case 9266 /* Entrada de Esp.Val. a Tes.  de Otra Sucursal*/ 
                case 9306 /* Entrada de Esp.Val. a Caja. de Otra Sucursal*/ 
                     dsc_oper_dest = "Sucursal Origen:"
                     break
                case else
                     dsc_oper_dest = "Operador Destino"
                     break
        end select
    end if

    indice = 0
    PRT transparent SETEODEFAULT
    call  tes:PRT_Hdr_Ticket
    let indice = indice + 3
    call  tes:PRT_Subencabezado
    let indice = indice + 4

    
    fprint common:csr_string "%s  %s  \n",,dsc_codigo_siaf,prt_codigo_siaf
    call post:PRTtransparent(common:csr_string)
    let indice = indice + 1


    fprint common:csr_string "%-30.30s \n", \
                      siaf:nombre_transac
    call post:PRTtransparent(common:csr_string)
    
    
    select (siaf:codigo_siaf)
            case 9246 /* Salida de Esp.Val. de Tes.  a Otra Sucursal*/
            case 9266 /* Salida de Esp.Val. de Caja. a Otra Sucursal*/
            case 9286 /* Entrada de Esp.Val. a Tes.  de Otra Sucursal*/ 
            case 9306 /* Entrada de Esp.Val. a Caja. de Otra Sucursal*/ 
                 fprint common:csr_string "%s : %-s \n",dsc_oper_dest,tes:sucursal
                 break
            case else
                 if (login_dest.numchars == 0) then
                     fprint common:csr_string "%s :   - \n",dsc_oper_dest
                 else
                     fprint common:csr_string "%s : %-s \n",dsc_oper_dest,login_dest
                 end if                
                 break
    end select
    
    
   
    let indice = indice + 1
    call post:PRTtransparent(common:csr_string)
    Prt Transparent LINEANUEVA
    let indice = indice + 1

    /* La salida a otra sucurtsal imprime codigo de autorizacion */    
    if (siaf:codigo_siaf == 9246 || siaf:codigo_siaf == 9286)
        fprint common:csr_string "%-s\n", \
                  dsc:cod_autoriz
        call post:PRTtransparent(common:csr_string) 

        fprint common:csr_string "%-s\n", \
                  codigo_autoriz
        call post:PRTtransparent(common:csr_string) 
        let indice = indice + 2
    end if

    let idx = 0
    let i_idx = PL_GETITEM + 0
    call csr:PickOp 4 dsc:Especie "0,20"
    call csr:myPickcontrol dsc:Especie common:csr_string i_idx
    DO
           if (retval < 0)  /* || idx >= JSCN_LIST_CANT_ITEMS)  >= */
                break
           end if
           if (substr(common:csr_string,0,20) != ant_especie) then
	           ant_especie = common:csr_string
	           fprint common:csr_string "%s:  %-20.20s \n", \
	                     dsc:Especie,ant_especie    
	           Prt Transparent LINEANUEVA
	           call post:PRTtransparent(common:csr_string)
               common:csr_string = ant_especie
               ant_especie = substr(ant_especie,0,20)
               let indice = indice + 2
	       end if
	       cant_char = common:csr_string.numchars
           common:csr_string = substr(common:csr_string,21,99)
           
           call post:PRTtransparent(common:csr_string)
           ;let y_idx = y_idx + 1
           let idx = idx + 1
           let indice = indice + 1
           let i_idx = PL_GETITEM + idx
           call csr:myPickcontrol dsc:Especie common:csr_string i_idx
    LOOP

    call post:PRTtransparent(LINE_GUIONES)
    let indice = indice + 1
   //ACP:SC 50170 (Redondea a dos decimales)
        INIT 22,1
          Limporte = post:importe
        INIT 22,0
    /*fprint common:csr_string "%s                 %13.13e \n", \
                  dsc:DAUtotales,post:importe*/
     fprint common:csr_string "%s                 %13.13e \n", \
                  dsc:DAUtotales,Limporte   
                             
    call post:PRTtransparent(common:csr_string)
    let indice = indice + 1    
        
    select (siaf:codigo_siaf)
           case 9286
           case 9246               
                fprint common:csr_string "FORM. 2480  %s \n",siaf:DAUdestinatario
                break
           case else                
                fprint common:csr_string "%s \n",siaf:DAUdestinatario
                break
    end select
    
    call post:PRTtransparent(common:csr_string)
    let indice = indice + 6
    ;call post:MISCavaz_linea_imp(indice)
	call post:MISCavaz_linea_imp(12)    
    call post:PRT_Ticket_Corte
END SUB

/*******/
