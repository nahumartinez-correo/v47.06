/****o* Pendientes de agrupación/OFB:tes:SVALsalida_caja
* NOMBRE
*   OFB:tes:SVALsalida_caja
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALsalida_caja
    IF (!(testflag(tlr:tran_flags,correction))) THEN
       IF (siaf:importe == 0) THEN
	  move "(L) IMPORTE TOTAL NO PUEDE SER 0" to drv:error_msg
	  call  OFB:drv:error_msg
	  nextfield tes:cantidad[0]
	  return (-2)
       END IF

       CALL tes:CDSimp_sup_tot
       IF (retval < 0)
	  move "(L) IMPORTE TOTAL SUPERA TOTALES" to drv:error_msg
	  call  OFB:drv:error_msg
	  nextfield tes:cantidad[0]
	  return (-2)
       END IF

       popup tes:SCRNconfirma
       if (siaf:continua_transaccion == "N" || lastkey == RT_ESC) then
	  return (-2)
       END IF
    else
	//verificar que no fue rechazada, en ese caso no se puede reversar
	if (tes:tmov_marca_ing == "R" || \
	    tes:tmov_marca_ing == "E" || \
	   (tes:tmov_marca_ing == "A" && tes:es_reenvio == "S"))
	   let common:csr_string = "(L) IMPOSIBLE REVERSAR. PASE RECHAZADO"
	   errmsg common:errmsg_list,fld:common:csr_string
	   return (-3)
	end if
    end if
    CALL siaf:SVALnivel_sup
    if (retval < 0)
       return (-2)
    end if
    unprotfield siaf:moneda
    unprotfield siaf:importe


    // Proy. POST: se envia un mensaje al receptor del pase.
    if (!testflag(tlr:tran_flags,correction)) then
       call MISCsend_msg_dest(tes:login_dest,"LE HA HECHO UN PASE")
    end if
END SUB

/*******/
