/****o* Pendientes de agrupación/OFB:tes:SVALdep_cheque_cta
* NOMBRE
*   OFB:tes:SVALdep_cheque_cta
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALdep_cheque_cta

    local superviso    like tes:rend_marca_cierre
    local total_caja   like siaf:importe
    local banco_desc   like siaf:adt_banco_desc
    local hora_aux     like tlr:jnl_time
    local saldo_cuenta like siaf:importe
            
    if (testflag(tlr:tran_flags,correction))
		call tes:CDSctasbanc_lock	
     /* Esta lockeado */
        if (retval < 0)
            return (-2)
        end if
     /* Verifico que los cheques no hayan sido rechazados */
        call tes:CDScheq_dep_rech
        if (retval < 0)
            return (-2)
        end if
    end if    
    
    let cant_cheques = 0
    let siaf:cant = 0
    if (drv:dt_app == 4) then
        adt_cheqaux_op = op:op_tesoro_id
        adt_cheqaux_tesoro = "S"
    else
        adt_cheqaux_op = op:op_operator_id
        adt_cheqaux_tesoro = "N"
    end if

    if (!testflag(tlr:tran_flags,correction)) then
    	
        let total_caja = siaf:tefectivo_vec[siaf:moneda] + siaf:tefec_inic_vec [siaf:moneda]
        call CDSverif_impcheques(adt_cheqaux_tesoro,adt_cheqaux_op)
        select (retval)
	        case -1
	  	     errmsg lst:common:errmsg_list,"No hay ningún Cheque cargado"
		     return (-1)
        end select
	
        popup tes:SCRNconfirma
        if (siaf:continua_transaccion == "N" || lastkey == RT_ESC) then
            return (-2)
        end if
    end if
 /* Lo hago con las cuentas del tipo 1 */
    if (tes:lugar_cuenta == 1)
        call tes:CDSSaldo_cta(tes:banco_codigo,tes:tipo_cuenta,tes:nro_cuenta,fecha_valor,saldo_cuenta)
        if (retval < 0) 
            return (-2)
        end if
    end if

    call siaf:SVALnivel_sup
    if (retval < 0)
        return (-2)
    end if
 /* Guardo si fue supervisada para marcar las otras */
    if (testflag(tlr:tran_flags,supovr_granted)) then
        let superviso = "S"
    else
        let superviso = "N"
    endif
    
    if (!testflag(tlr:tran_flags,correction)) then 
        let siaf:nro_cheque = 0
        let siaf:cheqcuenta = 0
        let siaf:cod_banco  = 0
        clearfield clearing
        clearfield post:importe_origen
        clearfield siaf:importe

        ungetkey RT_ESC
        call siaf:MISClleno_modalidad
        let drv:INDscr = scr:tes:SCRNtotal_ch_tp_caj

        call tlr:JNLtran

     /* le sumo 6 al codigo de transacción porque cada uno de los pases
        tiene ese código de transacción */
        let hora_aux = siaf:hora

        let siaf:codigo_siaf = siaf:codigo_siaf + 6
        call siaf:PRESfecha_hora
        let siaf:hora = hora_aux
                
        cds select from dsc:AuxCheq_tbl becomes dsc:AuxCheq2_ctx \
            where  tes:adt_cheqaux_suc == op:op_branch_id    && \
                   adt_cheqaux_op      == adt_cheqaux_op     && \
                   adt_cheqaux_tesoro  == adt_cheqaux_tesoro && \
                   adt_cheqaux_moneda  == siaf:moneda
	        
        cds findfirst dsc:AuxCheq2_ctx lock
        let lib:err_retval = cdsretval	

        call csr:f_sadroppl dsc:Cheque
        call csr:f_sanewpl dsc:Cheque pic:Cheque
     /* En post:importe voy acumulando el total */
        let post:importe = 0
        
        do
        
            if (lib:err_retval != 0) then
                break
            end if
            cds extract dsc:AuxCheq2_ctx all
		    move tes:adt_cheqaux_banco    to siaf:cod_banco
		    move tes:adt_cheqaux_cuenta   to siaf:cheqcuenta
		    move tes:adt_cheqaux_nro      to siaf:nro_cheque
		    move tes:adt_cheqaux_importe  to post:importe_origen
		    move tes:adt_cheqaux_clearing to clearing
	    
		    select (siaf:codigo_siaf)
		            case 7616
		            case 7646	                
		                 call CDSleer_fecha_dep(op:op_branch_id,siaf:moneda,siaf:cod_banco,siaf:cheqcuenta,"O",siaf:nro_cheque,adt_cheqaux_op)
		                 break
		            case 7536
		            case 7566
		                 call CDSleer_fecha_dep(op:op_branch_id,siaf:moneda,siaf:cod_banco,siaf:cheqcuenta,"T",siaf:nro_cheque,adt_cheqaux_op)
		                 break
		    end select
		    move tes:teso_cheq_fvto to post:fec_d
	      
		    call post:MISCconvierto_coti(post:importe_origen)
		    call ABMcheques_refresh
		 /* Restauro la pantalla de cada uno de los movimientos y dejo
		    que le asigno los totales */
		    let drv:INDscr = SCR:tes:SCRNdche_caj
	        ;FLD:drv:INDjnl_rtn = OFB:tes:JNLdche_caj
            clearfield tlr:INDtots_append  ;FLOR
            clearfield drv:INDspc_rtn[0]         
            if (drv:dt_app == 2 || drv:dt_app == 3)
                if (lugar_cuenta == 1)
                    let tlr:INDtots_append = LST:siaf:TOTS7610
                    let drv:INDspc_rtn[0]  = LST:siaf:TOTS7610
                else
                    ;let tlr:INDtots_append = LST:siaf:TOTS7630
                    ;let drv:INDspc_rtn[0]  = LST:siaf:TOTS7630
                   	let tlr:INDtots_append = LST:siaf:TOTS7640
                    let drv:INDspc_rtn[0]  = LST:siaf:TOTS7640
                    
                end if
            end if
            let tes:es_tesoro = "S"
            if (superviso == "S") then
	     /* si la primera fue supervisada , marco todas */
	        setflag tlr:tran_flags,supovr_granted
    	    end if

            ;ungetkey 0x190
		    setflag giros:tran_send_mode,trat_cheques

		    if (siaf:codigo_siaf == 7616 || siaf:codigo_siaf == 7536) then
		    	call post:CDSobtiene_secuen("STAN")
		    	giros:codigo_procesamiento = 998010
		    	giros:hora_viaje = common:time_of_day
		    	giros:dia_viaje  = common:system_date
			    drv:INDhcomm_rtn  = OFB:post:SENDdeposito_cheq_cp
			    drv:INDspc_rtn[1] = OFB:post:RCVEdeposito_cheq_cp
			else
				call post:CDSobtiene_secuen("STAN")
		    	giros:codigo_procesamiento = 998110
		    	giros:hora_viaje = common:time_of_day
		    	giros:dia_viaje  = common:system_date
			    drv:INDhcomm_rtn  = OFB:post:SENDdeposito_cheq_tr
			    drv:INDspc_rtn[1] = OFB:post:RCVEdeposito_cheq_tr
			endif
			
			call post:MISCarmar_cuenta
			
	    	call hcomm:COMM_stat_init
	    	
			call tlr:JNLtran

	    	if (hcomm:tran_status == HOST_ACCEPTED )

            	siaf:adt_banco_codigo = adt_cheqaux_banco
            	call siaf:CDSadt_banco_load
            	if (retval == 0) then
                	banco_desc = siaf:adt_banco_desc
            	else             
                	banco_desc = "Banco desconocido"
            	end if

            	fprint common:csr_string "%3s  %20.20e      %8.8e \n",\
            	adt_cheqaux_banco,adt_cheqaux_cuenta,adt_cheqaux_nro
            	call csr:f_saaddpl dsc:Cheque common:csr_string
            	fprint common:csr_string,\
				"     %13.13e  %10.10e    %3.3e\n",adt_cheqaux_importe,post:fec_d,adt_cheqaux_clearing
	    		call csr:f_saaddpl dsc:Cheque common:csr_string

            	let post:importe = post:importe + tes:adt_cheqaux_importe
 	    		cds delete dsc:AuxCheq2_ctx
            	cds unlock dsc:AuxCheq2_ctx
	    	else
				if (hcomm:tran_status > HOST_REJECTED )
					break
				end if
	    	end if

			clearfield hcomm:INDhost_sndrt
			clearfield hcomm:INDhost_rcvrt

            cds findnext dsc:AuxCheq2_ctx lock
	    	let lib:err_retval = cdsretval

        loop

        clearfield drv:INDjnl_rtn
		clearfield drv:INDhcomm_rtn
		clearfield drv:INDspc_rtn[1]

        let drv:INDspc_rtn[2] = ofb:tes:TRANBancos_Cheques

        cds unlock dsc:AuxCheq2_ctx
        cds endselect dsc:AuxCheq2_ctx
    else
        call MISCrev_sesion_envio
        if (retval < 0) then
            return (-2)
        end if
    end if
    CALL  csr:f_sadroppl DSC:admin:PickSucursales  
    cds unlock dsc:adt_cta_ctx
    cds endselect dsc:adt_cta_ctx
END SUB

/*******/
