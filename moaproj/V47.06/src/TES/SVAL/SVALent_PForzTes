/****o* Pendientes de agrupación/OFB:tes:SVALent_PForzTes
* NOMBRE
*   OFB:tes:SVALent_PForzTes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALent_PForzTes
    local varl_i like siaf:i // contador auxiliar para indices de un arreglo
    local varl_suma like siaf:importe // guarda sumatoria de un arreglo
    let varl_i = 0

    IF (!(testflag(tlr:tran_flags,correction))) THEN
	  
       popup tes:SCRNconfirma  
       if (siaf:continua_transaccion == "N" || lastkey == RT_ESC) then
	  return (-2)
       END IF

    END IF
    CALL siaf:SVALnivel_sup
    if (retval < 0)
       return (-2)
    end if
    
    IF (!(testflag(tlr:tran_flags,correction))) THEN
	let drv:INDscr = SCR:tes:SCRNpase_forz_tes
	clearfield siaf:importe
	clearfield post:medio_pago_desc
	UNGETKEY 0x190
	/* Grabo el Encabezado del mov */
	 CALL tlr:JNLtran
	 
	 
	/* Grabo el resto de los movimientos */
	let drv:INDscr = SCR:tes:SCRNimp_pf_tes
	call tes:MISCmov_ent_pft  //(superviso)
	;let drv:INDspc_rtn[2] = ofb:TRANprint_cheques
	clearfield drv:INDspc_rtn[2]
	CLEARFIELD drv:INDjnl_rtn
    End If


    // cuando ingreso el pase le aviso al operador origen
    IF (testflag(tlr:tran_flags,correction)) THEN
       call MISCsend_msg_dest(tes:pfmov_login_orig,\
       "INGRESO SU PASE DE MARCA DE TESORO")
    END IF
    
    
    
    /* destrye picklist - libera memoria */
    call csr:f_sadroppl("pase_teso")
END SUB

/*******/
