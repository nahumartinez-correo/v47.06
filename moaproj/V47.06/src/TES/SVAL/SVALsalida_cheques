/****o* Pendientes de agrupación/OFB:tes:SVALsalida_cheques
* NOMBRE
*   OFB:tes:SVALsalida_cheques
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALsalida_cheques
	LOCAL superviso LIKE tes:rend_marca_cierre
	LOCAL i LIKE siaf:i
	/*ACP-SC50170 se cambio por el post:importe_sesion ya que es de 2 decimales  */
	//LOCAL ltotimp LIKE post:importe
	LOCAL ltotimp LIKE post:importe_sesion
	LOCAL loperador LIKE tes:login_dest
	LOCAL ldestinatario LIKE tes:login_dest

	IF (!TESTFLAG(tlr:tran_flags,correction)) THEN
		//Limpio la pantalla
		CALL MISClimpia_pase_chq
	END IF
	
	CALL MISCctrl_sval_chq
	IF (RETVAL < 0) THEN
		CALL MISClimpia_pase_chq
		RETURN (-2)
	END IF    
     
	// Guardo si fue supervisada para marcar las otras
	IF (TESTFLAG(tlr:tran_flags,supovr_granted)) THEN
		LET superviso = "S"
	ELSE
		LET superviso = "N"
	END IF
    
	IF (!TESTFLAG(tlr:tran_flags,correction)) THEN 
		CDS SELECT FROM DSC:AuxCheq_tbl BECOMES DSC:AuxCheq2_ctx \
			WHERE tes:adt_cheqaux_suc == op:op_branch_id \
			&& tes:adt_cheqaux_op == op:op_operator_id

		CDS FINDFIRST DSC:AuxCheq2_ctx LOCK
		LET lib:err_retval = CDSRETVAL	
		IF (lib:err_retval != 0) THEN
			RETURN (-2)
		END IF
        
    CDS EXTRACT DSC:AuxCheq2_ctx ALL
		loperador = adt_cheqaux_cuenta
		ldestinatario = tes:login_dest
		
		CLEARFIELD chmov_sequence_pase
		ltotimp = 0
		
		//Creo otro picklist que contiene solo los datos del operador que deseo imprimir
		CALL csr:f_sadroppl DSC:pases
		CALL csr:f_sanewpl DSC:pases pic:pic_pase
		FPRINT common:csr_string "Operador Destino:  %-8.8s\n",login_dest
		CALL csr:f_saaddpl DSC:pases common:csr_string
		common:csr_string = " "
		CALL csr:f_saaddpl DSC:pases common:csr_string
		
		//Recorro la tabla temporal (Ordenada por Operador y MP)
		DO        	
			IF (lib:err_retval != 0) THEN
				BREAK
			END IF
				
			//Primero grabo una cabecera por cada pase correspondiente a un Medio_de_Pago-Operador
			//Inicializo los campos necesarios
			IF (superviso == "S") THEN
				// si la primera fue supervisada , marco todas
				SETFLAG tlr:tran_flags,supovr_granted
			END IF		
	    	    
			IF (tes:adt_cheqaux_clave == 1) THEN
				chmov_marca_ing = "S"
			ELSE
				chmov_marca_ing = ""			
			END IF	
				
			IF (drv:dt_app == 4) THEN
				siaf:codigo_siaf = 8850
				tlr:tran_mnemonic = "ISALCHT"
				siaf:nombre_transac = "INICIO SAL VEL DE TESORO"
			ELSE				
				siaf:codigo_siaf = 8580
				LET tlr:tran_mnemonic = "TOSALCH"
				LET siaf:nombre_transac = "INICIO SAL VAL DE CAJA"
			END IF
		        
			LET tes:es_tesoro = "S"
			LET siaf:moneda = adt_cheqaux_moneda
			post:adt_mp_cod = siaf:moneda
			CALL post:CDSadt_MedPago_load
			siaf:desc_moneda = post:adt_mp_desc
			/* Agrego descripcion de moneda */
			post:medio_pago_desc = post:adt_mp_desc
	
			LET operator_id_dest = adt_cheqaux_cuenta
			LET siaf:nro_cupcheq = 0
			LET siaf:cheqcuenta = 0
			LET siaf:cod_banco  = 0
			CLEARFIELD post:codigo_interno
			CLEARFIELD post:importe_origen
			CLEARFIELD siaf:importe
			CLEARFIELD tlr:INDtots_append
			CLEARFIELD drv:INDspc_rtn[0]
			LET drv:INDscr = SCR:tes:SCRNtotal_cheqmov
			LET FLD:drv:INDjnl_rtn = OFB:tes:JNLsalida_cheques

			/*IF (siaf:hora == common:time_of_day) THEN
				siaf:hora = common:time_of_day + 1
			ELSE
				siaf:hora = common:time_of_day
			END IF*/
			UNGETKEY 0x191
			CALL siaf:MISClleno_modalidad
			CALL tlr:JNLtran	
		     	
			// le sumo 6 al codigo de transacción porque cada uno de los pases
			// tiene ese código de transacción
			LET siaf:codigo_siaf = siaf:codigo_siaf + 6
			IF (drv:dt_app == 4) THEN
				LET siaf:nombre_transac = "SALIDA DE VALORES DE TESORO"
				LET tlr:tran_mnemonic = "SALCHT"
			ELSE
				LET siaf:nombre_transac = "SALIDA DE VALORES DE CAJA"
				LET tlr:tran_mnemonic = "TESALCH"
			END IF			
			
			//Picklist para impresion (Titulos Moneda y Valores)
			FPRINT common:csr_string "%2.2e-%-s \n",siaf:moneda,post:adt_mp_desc
			CALL csr:f_saaddpl dsc:pases common:csr_string		
			FPRINT common:csr_string "%s   %s/COD INTERNO   %s\n",dsc:siaf:banco,dsc:siaf:cuenta,dsc:siaf:nro_comp
			CALL csr:f_saaddpl dsc:pases common:csr_string
			FPRINT common:csr_string "                              %s \n",dsc:DAUimporte		  
			CALL csr:f_saaddpl dsc:pases common:csr_string
		    	
			//Por cada MP-Ope-Chq grabo un pase, como se hacia antes
			//y para cada uno guardo la secuencia del pase de la cabecera en chmov_sequence_pase
			i = 0
			DO
				IF (i > 9) THEN
					BREAK
				END IF
					
				IF (val_importes[i] != 0 && acepta_val[i] == "S") THEN
					siaf:moneda = adt_cheqaux_moneda
					post:adt_mp_cod = siaf:moneda
					CALL post:CDSadt_MedPago_load
					siaf:desc_moneda = post:adt_mp_desc
					/* Agrego descripcion de moneda */
					post:medio_pago_desc = post:adt_mp_desc
											
					siaf:cod_banco = cod_banco[i]
					siaf:cheqcuenta = cheqcuenta[i]
					post:codigo_interno = codigo_interno[i]
					IF (post:adt_mp_admban == "N") THEN
						siaf:cod_banco = 0
						IF (post:adt_mp_auto == "S" && post:adt_mp_int == "S") THEN
							//Esto porque el codigo interno lo guarda como cheqcuenta
							siaf:cheqcuenta = post:codigo_interno
						ELSE
							siaf:cheqcuenta = 0
						END IF
					END IF
				    
					siaf:nro_cupcheq = nro_cupcheq[i]
					post:importe_origen = val_importes[i]
					tes:termi_win = tes:termi_win_arr[i]
					
					CALL post:MISCconvierto_coti(post:importe_origen)
				    	
					LET drv:INDscr = SCR:tes:SCRNsalida_cheques
					FLD:drv:INDjnl_rtn = OFB:tes:JNLsalida_cheques
					IF (drv:dt_app != 4) THEN
						LET tlr:INDtots_append = LST:siaf:TOTS8620
						LET drv:INDspc_rtn[0] = LST:siaf:TOTS8620
					END IF
					LET tes:es_tesoro      = "S"
					IF (superviso == "S") THEN
						// si la primera fue supervisada , marco todas
						SETFLAG tlr:tran_flags,supovr_granted
					END IF
					UNGETKEY 0x191
					CALL siaf:MISClleno_modalidad
					CALL tlr:JNLtran
				        
					//Picklist para impresion		        
					FPRINT common:csr_string "%-3s  %-20.20e    %8.8e \n",cod_banco[i],siaf:cheqcuenta,siaf:nro_cupcheq
					CALL csr:f_saaddpl DSC:pases common:csr_string
					FPRINT common:csr_string "                        %13.13e \n",val_importes[i]
					CALL csr:f_saaddpl DSC:pases common:csr_string
					ltotimp = ltotimp + val_importes[i]       
				END IF
				i = i + 1
			LOOP			
	             	    	
			CDS DELETE DSC:AuxCheq2_ctx
			CDS UNLOCK DSC:AuxCheq2_ctx
	            
			CDS FINDNEXT DSC:AuxCheq2_ctx LOCK
			LET lib:err_retval = CDSRETVAL
			IF (lib:err_retval == 0) THEN
				CDS EXTRACT DSC:AuxCheq2_ctx ALL
			END IF
	
			IF (loperador != adt_cheqaux_cuenta || lib:err_retval != 0) THEN
				//Cambio el operador...
				common:csr_string = " "
				CALL csr:f_saaddpl DSC:pases common:csr_string
				FPRINT common:csr_string "%s                 %13.13e \n",DSC:DAUtotales,ltotimp
				CALL csr:f_saaddpl DSC:pases common:csr_string
				//Imprimo Ticket        		
				CALL TRANprint_cheques
	
				/*Solicitud 50088 - Evento 6: Cuando el se hacen pases a si mismo
				no debe mandarse un mensaje*/         
				IF (op:op_login_id != ldestinatario)
					//Mando mensaje
					CALL MISCsend_msg_dest(login_dest,"LE HA HECHO UN PASE")
				END IF
	        		
				ltotimp = 0
				//Elimino y vuelvo a crear el picklist para imprimir solo los datos de este operador
				CALL csr:f_sadroppl dsc:pases
				CALL csr:f_sanewpl dsc:pases pic:pic_pase
				FPRINT common:csr_string "Operador Destino:  %-8.8s\n",login_dest
				CALL csr:f_saaddpl dsc:pases common:csr_string
				common:csr_string = " "
				CALL csr:f_saaddpl dsc:pases common:csr_string
	
				//Cambio secuencia pase
				CLEARFIELD chmov_sequence_pase
				loperador = adt_cheqaux_cuenta
				ldestinatario = tes:login_dest
	
			END IF
		LOOP
			
		CLEARFIELD drv:INDjnl_rtn
		CDS UNLOCK DSC:AuxCheq2_ctx
		CDS ENDSELECT DSC:AuxCheq2_ctx
		CALL post:MISCactivar_buts 		
		
		IF (tes:en_cierre == "S" && drv:dt_app != 4) THEN
			/* Le envío el estado actula para que busque el próximo */
			INIT 33,0
			CALL tes:CDSProximo_Estado(SALIDA_VALORES)
		END IF        
	ELSE
		CALL MISCreverso_sesion
		IF (RETVAL < 0) THEN
			RETURN (-2)
		END IF
		CDS UNLOCK CheqMov_ctx
		CDS ENDSELECT DSC:CheqMov_ctx
	END IF
    
END SUB

/*******/
