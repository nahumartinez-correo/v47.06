/****o* Pendientes de agrupación/OFB:tes:SVALsal_val_AR_tes
* NOMBRE
*   OFB:tes:SVALsal_val_AR_tes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALsal_val_AR_tes
    local superviso like tes:rend_marca_cierre
    local total_caja like siaf:importe
    local banco_desc like siaf:adt_banco_desc

    let cant_cheques = 0
    let siaf:cant = 0
    if (!testflag(tlr:tran_flags,correction)) then
        call CDSverif_impcomp("S",op:op_tesoro_id)
        select (retval)
	   case -1
	        errmsg lst:common:errmsg_list,"No hay ningún Cheque cargado"
	        return (-1)
        end select
	
        popup tes:SCRNconfirma
        if (siaf:continua_transaccion == "N" || lastkey == RT_ESC) then
            return (-2)
        end if
    else
     /* Verifico el estado de los cheques */
        call tes:CDScup_dep_rechAR
        if (retval < 0)
            return (-2)
        end if
    end if
    
    CALL siaf:SVALnivel_sup
    if (retval < 0)
        return (-2)
    end if
 /* Guardo si fue supervisada para marcar las otras */
    if (testflag(tlr:tran_flags,supovr_granted)) then
        let superviso = "S"
    else
        let superviso = "N"
    endif
    
    if (!TESTFLAG(tlr:tran_flags,correction)) then 
        ;let siaf:nro_cupcheq = 0
        let siaf:cheqcuenta  = 0
        let siaf:cod_banco   = 0
        fld:drv:INDjnl_rtn = ofb:tes:JNLsal_val_AR
        ungetkey 0x190
        call siaf:MISClleno_modalidad
        let drv:INDscr = scr:tes:SCRNtotal_cheq_tp
        clearfield post:importe_origen
        call tlr:JNLtran

     /* Le sumo 6 al codigo de transacción porque cada uno de los pases
        tiene ese código de transacción */
        let siaf:codigo_siaf = siaf:codigo_siaf + 6
        let siaf:nombre_transac = "SAL VAL.TES. A ADM.REG."
        move "SVTAR" to tlr:tran_mnemonic
        cds select from dsc:AuxCheq_tbl becomes dsc:AuxCheq2_ctx where \
        adt_cheqaux_suc     == op:op_branch_id && \
        adt_cheqaux_op      == op:op_tesoro_id && \
        adt_cheqaux_tesoro  == "S"             && \
        adt_cheqaux_moneda  == siaf:moneda
	        
        cds findfirst dsc:AuxCheq2_ctx lock
        let lib:err_retval = cdsretval	

        call csr:f_sadroppl dsc:Cheque
        call csr:f_sanewpl dsc:Cheque pic:Cheque
     
     /* En post:importe voy acumulando el total */
        let post:importe = 0 
        
        do
            if (lib:err_retval != 0) then
                break
            end if
            cds extract dsc:AuxCheq2_ctx all
	    move tes:adt_cheqaux_banco   to siaf:cod_banco
	    move tes:adt_cheqaux_cuenta  to post:codigo_interno
	    move tes:adt_cheqaux_nro     to siaf:nro_cupcheq
	    move tes:adt_cheqaux_importe to post:importe_origen
	    
	    call post:MISCconvierto_coti(post:importe_origen)
	    
	    call ABMcheques_refresh
	 
	 /* Restauro la pantalla de cada uno de los movimientos y dejo
	    que le asigno los totales */
	    let drv:INDscr = scr:tes:SCRNsal_val_AR
            fld:drv:INDjnl_rtn = ofb:tes:JNLsal_val_AR
            clearfield tlr:INDtots_append
            clearfield drv:INDspc_rtn[0]
            
            let tes:es_tesoro = "S"
            
            if (superviso == "S") then
	     /* si la primera fue supervisada , marco todas */
	        setflag tlr:tran_flags,supovr_granted
    	    end if

            ungetkey 0x190
            call tlr:JNLtran            
            
            call CDSexiste_codint(adt_cheqaux_cuenta)  
            fprint common:csr_string "%20.20e %-30.30s %6.6e             %13e", \
            adt_cheqaux_nro,post:adt_codint_desc,adt_cheqaux_cuenta,adt_cheqaux_importe

	    call csr:f_saaddpl dsc:Cheque common:csr_string
	    let post:importe = post:importe + post:importe_origen 
 	    cds delete dsc:AuxCheq2_ctx
            cds unlock dsc:AuxCheq2_ctx
            cds findnext dsc:AuxCheq2_ctx lock
	    let lib:err_retval = cdsretval
        loop

        clearfield drv:INDjnl_rtn
        if (!(testflag(tlr:tran_flags,correction))) then
            call TRANprt_sal_cheqtp
        end if
        cds unlock dsc:AuxCheq2_ctx
        cds endselect dsc:AuxCheq2_ctx
    else
        call MISCreverso_sesion
        if (retval < 0) then
            return (-2)
        end if
    end if
END SUB

/*******/
