/****o* Especies Valorizadas/OFB:tes:SVALcarga_inic_ev
* NOMBRE
*   OFB:tes:SVALcarga_inic_ev
* DESCRIPCION
*   Sval de las transacciones de ajuste negativo y ajuste positivo de especies valorizadas
* ENTRADAS
* SALIDAS
* IMPACTOS
* REFERENCIADO POR
*   tes:TRAN8610
*	tes:TRAN8810
* DOCUMENTACION
* SOURCE
*/
#include "tesSVAL.h"

SUB tes:SVALcarga_inic_ev
    local superviso like tes:rend_marca_cierre
    local tmp_importe like siaf:importe
    local tmp_cantidad like siaf:cantidad    
    local l_corte like siaf:i
    IF (!(testflag(tlr:tran_flags,correction)))
        
        cds select FROM DSC:AuxEspV_tbl becomes DSC:AuxEspV_ctx \
            where tes:adt_evaux_suc == op:op_branch_id && \
	              adt_evaux_op == op:op_operator_id && \
	              adt_evaux_tesoro == "N" && \
		          adt_evaux_es_venta == "N"
        cds findfirst DSC:AuxEspV_ctx NOLOCK
        let lib:err_retval = CDSRETVAL  
		    
	    do
	        if (lib:err_retval != 0) then
	            break
	        end if
	                
	    	cds extract DSC:AuxEspV_ctx adt_evaux_codigo into espv_cod
                
       	    call CDSTesEspV_load
            if (retval < 0) then
	            fprint drv:error_msg "(L) Nunca realizo una entrada de la especie %s.\nNo se puede ajustar",espv_cod
	            CALL drv:error_msg
	            return (-2)
            end if
        	cds findnext DSC:AuxEspV_ctx NOLOCK
	    	let lib:err_retval = CDSRETVAL
	    loop

        if (siaf:importe == 0)
            fprint drv:error_msg "(L) El importe total no puede ser 0 (cero)"
            call  OFB:drv:error_msg
            nextfield adt_evaux_cantidad
            return (-2)
        end if
        popup tes:SCRNconfirma
        if (siaf:continua_transaccion == "N" || lastkey == RT_ESC)
            return (-2)
        end if
    END IF

    CALL siaf:SVALnivel_sup_ev
    if (retval < 0)
        return (-2)
    end if
    // Guardo si fue supervisada para marcar las otras
    if (testflag(tlr:tran_flags,supovr_granted)) then
	    let superviso = "S"
    else
	    let superviso = "N"
    endif

    IF (!(testflag(tlr:tran_flags,correction)))
   
        let adt_evaux_importe = 0
	    let adt_evaux_cantidad = 0
	    ;let espv_subcod = TOTAL_TESO
	    clearfield espv_subcod
	    clearfield espv_cod
	    clearfield adt_espv_cod
        clearfield adt_espv_subcod
        /* El header de los movimientos graba el importe total
        y la cantidad correspondiente en cero. 27/08/99 - Andrea */  
        tmp_importe = siaf:importe
        tmp_cantidad = siaf:cantidad
	    siaf:importe = 0
	    siaf:cantidad = 0
	 
	    FLD:drv:INDjnl_rtn = OFB:tes:JNLajuste_recaud_ev
	    ungetkey 0x190
	    call siaf:MISClleno_modalidad
        let drv:INDscr = SCR:tes:SCRNmov_ev_hdr
	    call tlr:JNLtran
	    let drv:INDscr = SCR:tes:SCRNmov_ev
        aux_sequence_mov = tlr:jnl_sequence
        
        siaf:importe = tmp_importe
        siaf:cantidad = tmp_cantidad
        refresh siaf:importe
        refresh siaf:cantidad
                        
	    // le sumo 6 al codigo de transacción porque cada uno de los pases
	    // tiene ese código de transacción
	    let siaf:codigo_siaf = siaf:codigo_siaf + 6
	    select (siaf:codigo_siaf)
	        case 8616	                 
	             let siaf:nombre_transac = "AJUSTE ESP.INIC.NEG."
	             move "TECVIN" to tlr:tran_mnemonic
	             break
	        case 8816
	             let siaf:nombre_transac = "AJUSTE ESP.INIC.POS."
	             move "TECVIP" to tlr:tran_mnemonic
	             break
	    end select	
	    
	    let drv:INDscr = SCR:tes:SCRNmov_ev
        cds select FROM DSC:AuxEspV_tbl becomes DSC:AuxEspV_ctx \
            where tes:adt_evaux_suc == op:op_branch_id && \
	              adt_evaux_op == op:op_operator_id && \
	              adt_evaux_tesoro == "N" && \
		          adt_evaux_es_venta == "N"
	    cds findfirst DSC:AuxEspV_ctx LOCK
        let lib:err_retval = CDSRETVAL  
		call csr:f_sadroppl dsc:Especie
        call csr:f_sanewpl dsc:Especie pic:Especie	
        post:cantidad = 1
        l_corte = 15
        siaf:i = 0
	    do
	        if (lib:err_retval != 0) then
	            break
	        end if
	                
	    	cds extract DSC:AuxEspV_ctx ALL
	    	move tes:adt_evaux_codigo to espv_cod
	    	move tes:adt_evaux_codigo to adt_espv_cod
	    	move tes:adt_evaux_subcod to adt_espv_subcod
	    	move tes:adt_evaux_subcod to espv_subcod
	    	move tes:adt_evaux_importe to siaf:importe
	    	move adt_evaux_cantidad to siaf:cantidad
	    	move tes:adt_evaux_suc to adt_espv_suc
	    	let tes:es_tesoro = "S"
	    	
	    	FLD:drv:INDjnl_rtn = OFB:tes:JNLajuste_recaud_ev
	    	ungetkey 0x190
	    	call siaf:MISClleno_modalidad
            if (superviso == "S") then
	    	    // si la primera fue supervisada , marco todas
	            setflag tlr:tran_flags,supovr_granted
	        endif
	    	call tlr:JNLtran
	    	fprint common:csr_string "%-8.8s     %-20.20s %-20.20s %13.13s", \
                   adt_evaux_cantidad,adt_evaux_codigo,adt_evaux_subcod,adt_evaux_importe
	        call csr:f_saaddpl dsc:Especie common:csr_string
	        siaf:i = siaf:i + 1
	        if (siaf:i > l_corte) then
	            l_corte = 43
	            siaf:i = 0
    	        post:cantidad = post:cantidad + 1
            end if
	        let post:importe = post:importe + siaf:importe 	         
 	    	cds delete dsc:AuxEspV_ctx
	    	cds unlock DSC:AuxEspV_ctx
	    	cds findnext DSC:AuxEspV_ctx LOCK
	    	let lib:err_retval = CDSRETVAL
	    loop
	    CLEARFIELD drv:INDjnl_rtn
        cds endselect DSC:AuxEspV_ctx
        if (siaf:codigo_siaf == 8616) then
            let drv:INDspc_rtn[2] = ofb:TRANnotiFallaNegEpsV
        end if
        
        call post:MISCactivar_buts
    ELSE
        if (siaf:codigo_siaf == 8610 || siaf:codigo_siaf == 8810) then
            CALL MISCreverso_sesion
	        if (retval < 0) then
	            return (-2)
	        end if
	    end if	   
    END IF
END SUB

/*******/
