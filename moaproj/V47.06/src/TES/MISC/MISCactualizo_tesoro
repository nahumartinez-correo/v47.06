/****o* Pendientes de agrupación/OFB:tes:MISCactualizo_tesoro
* NOMBRE
*   OFB:tes:MISCactualizo_tesoro
* DESCRIPCION
*	Este OFB tiene como finalidad actualizar los datos de la tabla tesoro
*	de acuerdo a los importes de los vectores auxiliares.
*	Se debe tener en cuenta que: 
*		importes_aux1 refleja tes_importes
*       importes_aux2 refleja tes_salida
*       importes_aux3 refleja tes_entrada
*	si en el futuro se piensa realizar alguna modificacion
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCactualizo_tesoro(prm_moneda)
    local j like siaf:i

    /* limpio el vector para que no deje basura en la proxima vuelta */
    call csr:cleararray tes:importes

    /* selecciono los registros de la tabla tesoro de esta sucursal */
    CDS SELECT FROM DSC:tes:tesoro_table BECOMES DSC:tes:tesoro_context \
    WHERE tes:tes_suc_id == op:op_branch_id && \
          tes:tes_moneda == prm_moneda
    CDS FINDFIRST DSC:tes:tesoro_context LOCK
    if (cdsretval == -801) then
        return (-2)
    end if
    do
        /* extraigo los datos del registro tesoro */
        CDS EXTRACT DSC:tes:tesoro_context ALL

        /* reemplazo los valores por los nuevos para la tabla tesoro */
        let j = 0
        do
            if (j > 13) then
            break
            end if
            let tes_importes[j] =  importes_aux1[j]
            let tes_salida[j] =  importes_aux2[j]
            let tes_entrada[j] = importes_aux3[j]
            let j = j + 1
        loop
        let tes_fecha = common:system_date
        let tes_marca_cierre = " "

        tes_total = imp_aux1
        tes_tot_salida = imp_aux2
        tes_tot_entrada = imp_aux3

        /* realizo la actualizacion */
        CDS CLEARBUFFER DSC:tes:tesoro_context

        CDS APPEND DSC:tes:tesoro_context \
            FLD:tes:tes_suc_id, \
            FLD:tes:tes_tes_id,FLD:tes:tes_moneda, \
            FLD:tes:tes_fecha,FLD:tes:tes_marca_cierre
        CDS APPEND DSC:tes:tesoro_context \
            ARRAY FLD:tes:tes_importes \
            ARRAY FLD:tes:tes_salida \
            ARRAY FLD:tes:tes_entrada \
            tes:tes_total \
            tes:tes_tot_salida \
            tes:tes_tot_entrada
        CDS UPDATE DSC:tes:tesoro_context LOCK

        /* busco el siguiente registro de la tabla tesoro */
        /* NOTA: no se supone que haya mas de una registro por moneda
            dejo el buscar un siguiente registro por las dudas */
        CDS FINDNEXT DSC:tes:tesoro_context LOCK
        if (cdsretval == -801) then
            break
        end if
        /* limpio el vector para que no deje basura en la prox vuelta */
        call csr:cleararray tes:importes
    loop
    CDS ENDSELECT DSC:tes:tesoro_context
END SUB

/*******/
