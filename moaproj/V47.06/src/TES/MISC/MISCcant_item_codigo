/****o* Pendientes de agrupación/OFB:tes:MISCcant_item_codigo
* NOMBRE
*   OFB:tes:MISCcant_item_codigo
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCcant_item_codigo
    LOCAL cant_items_motivo LIKE adt_espv_cantidad
    LOCAL motivo            LIKE common:csr_string
    LOCAL moti1             LIKE common:csr_string
    LOCAL idx               LIKE adt_espv_cantidad
    LOCAL oper              LIKE op:op_operator_id
    LOCAL oper1             LIKE op:op_operator_id
	
	LET cant_hojas_analitico = 0
	LET idx = 0
	LET i_idx = PL_GETITEM + 0	
    LET common:csr_string = ""
    
    CALL csr:myPickcontrol dsc:analitico common:csr_string i_idx
    
    /*Cargo el motivo*/
    LET moti1 = substr(common:csr_string,21,5) 
    LET motivo = substr(common:csr_string,21,5) 
    
    DO
    	IF (moti1 == "" && motivo == "") THEN
    		BREAK
    	END IF
    
    	LET cant_items_motivo =  23 // 20 de encabezado + 1 del motivo + 1 blanco + 1 importe
    	
    	oper1 = substr(common:csr_string,0,5)
    	while (moti1 == motivo)    	        	    
    	    oper  = substr(common:csr_string,0,5)
    	    if (oper1 != oper)
    	        cant_items_motivo = cant_items_motivo + 3 //blanco + dato oper + blanco
    	        oper1 = substr(common:csr_string,0,5)
    	    end if    	
    	          	    
	        LET cant_items_motivo = cant_items_motivo + 1
    	    LET common:csr_string = ""
	        LET idx = idx + 1
    	    LET i_idx = PL_GETITEM + idx 
		    CALL csr:myPickcontrol dsc:analitico common:csr_string i_idx
    	    LET oper1 = substr(common:csr_string,0,5)     	        	  
    	    LET moti1 = substr(common:csr_string,21,5) 
	    end while	  
	    
    	LET cant_items_motivo = cant_items_motivo + 2 //1 por la linea en blanco entre el ultimo mot y el total, otra por la linea del total    	
    	LET motivo = substr(common:csr_string,21,5) 
    	
    	IF (moti1 == "") THEN
    		cant_hojas_analitico = cant_hojas_analitico + 1
    	ELSE		
			IF (cant_items_motivo > 60 && cant_items_motivo != 0) THEN
	   			cant_hojas_analitico = cant_hojas_analitico + 1 + ((cant_items_motivo / 60) * 1)
			ELSE
		   		cant_hojas_analitico = cant_hojas_analitico + 1
			END IF
		END IF
	
	LOOP
	
END SUB

/*******/
