/****o* Pendientes de agrupación/OFB:tes:MISCaper_teso
* NOMBRE
*   OFB:tes:MISCaper_teso
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCaper_teso
    local i like siaf:i
    /* borro la marca de cierre */
        call CDStes_marca_cierre("","")

    /* actualizo la fecha de la tabla e inicializo los vectores*/
    CDS SELECT FROM DSC:tes:tesoro_table \
    BECOMES DSC:tes:tesoro_context WHERE \
        tes:tes_suc_id == op:op_branch_id
    CDS CLEARBUFFER DSC:tes:tesoro_context
    CDS FINDFIRST DSC:tes:tesoro_context LOCK
    if (cdsretval < 0) then
        let common:csr_string = "No Hay registros en tabla Tesoro"
        errmsg common:errmsg_list,FLD:common:csr_string
        call tlr:APPLterm
        return (-2)
    end if
    do
        CDS EXTRACT DSC:tes:tesoro_context ALL
        let tes:tes_fecha = common:system_date
        call csr:cleararray tes:tes_entrada
        call csr:cleararray tes:tes_salida
        call csr:cleararray tes:tes_sdoinic
        let tes:tes_tot_inic = tes:tes_total
        clearfield tes:tes_tot_entrada
        clearfield tes:tes_tot_salida
        clearfield tes:tes_tot_inic
        
        /* MLD Limpio el vector de arqueo y la marca*/
        call CSR:cleararray tes:tes_marca_arqueo
        clearfield tes:tes_marca_arqueo
        
        /* MLD Para reingenieria se eliminan las denominaciones limpio el vector 
        de total tambien para evitar que quede información que no se usará mas*/
        call csr:cleararray tes:tes_importes
        /******/
        
        
        let i = 0
        do
            /* pongo el pico del tesoro como saldo inicial */
            if (i > 13) then // los vectores son de 14 posiciones
                break
            end if
            let tes:tes_sdoinic[i] = tes:tes_importes[i]
            let i = i + 1
        loop
        let tes:tes_tot_inic = tes:tes_total
        CDS APPEND DSC:tes:tesoro_context \
                op:op_branch_id AS tes:tes_suc_id \
                tes:tes_tes_id tes:tes_fecha tes:tes_moneda \
                ARRAY tes:tes_importes \
                ARRAY tes:tes_salida \
                ARRAY tes:tes_entrada \
                ARRAY tes:tes_sdoinic \
                tes:tes_tot_entrada \
                tes:tes_tot_salida \
                tes:tes_tot_inic \
                tes:tes_total \
                array tes:tes_arqueo \
                tes:tes_marca_arqueo

        CDS REPLACE DSC:tes:tesoro_context LOCK
        CDS FINDNEXT DSC:tes:tesoro_context LOCK
        if (cdsretval < 0) then
            break
        end if
        CDS CLEARBUFFER DSC:tes:tesoro_context
    loop
    CDS ENDSELECT DSC:tes:tesoro_context

    setflag op:op_state_flags,tesoro_abierto
    // la fecha se pierde en el SEND
    let tlr:bus_date = common:system_date
END SUB

/*******/
