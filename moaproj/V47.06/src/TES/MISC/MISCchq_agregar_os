/****o* Pendientes de agrupación/OFB:tes:MISCchq_agregar_os
* NOMBRE
*   OFB:tes:MISCchq_agregar_os
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCchq_agregar_os
 /* Agrega registros a la tabla AuxCheq */

local idx like siaf:i

	if (drv:dt_app == 4) then 
		let adt_cheqaux_tesoro = "S"
	else
		let adt_cheqaux_tesoro = "N"
	endif    
    
    /*Seteo de flags a modo picklist, para que el foco este en el picklist*/
    SETFLAG drv:mode_flags,picklist_mode
    
	idx = PL_GETITEM
    
    do
		call csr:myPickcontrol(dsc:cheques_os,post:csr_string_250,idx)
		if (retval < 0)
			break
		end if
	   
	   call csr:trimfield post:csr_string_250
	   
	   if (substr(post:csr_string_250,75,1) == "*") then
	        
	        call csr:proc_list(F_CLEAR,LST:LSTfld_cheq_os)
	        
	        let tes:adt_cheqaux_suc     = op:op_branch_id
	        if (drv:dt_app == 4) then
	        	let tes:adt_cheqaux_op	    = op:op_tesoro_id
	        	let tes:adt_cheqaux_tesoro = "S"
	        else
	        	let tes:adt_cheqaux_op	    = op:op_operator_id
	        	let tes:adt_cheqaux_tesoro = "N"
			end if	        
			let tes:adt_cheqaux_moneda  = substr(post:csr_string_250,0,2)
			let tes:adt_cheqaux_banco   = substr(post:csr_string_250,3,3)
			let tes:adt_cheqaux_cuenta  = substr(post:csr_string_250,7,20)
			let tes:adt_cheqaux_nro     = substr(post:csr_string_250,28,8)
			let tes:adt_cheqaux_importe = substr(post:csr_string_250,37,16)
			let tes:adt_cheqaux_emi     = substr(post:csr_string_250,54,2) +  substr(post:csr_string_250,57,2) * 100 + substr(post:csr_string_250,60,4) * 10000
			let tes:adt_cheqaux_vto     = substr(post:csr_string_250,65,2) +  substr(post:csr_string_250,68,2) * 100 + substr(post:csr_string_250,71,4) * 10000
			let tes:adt_cheqaux_clearing = substr(post:csr_string_250,82,3)			
	        
	        
			call tes:CDSverif_cheque_tes(adt_cheqaux_moneda,adt_cheqaux_nro,adt_cheqaux_banco,adt_cheqaux_cuenta)

			if (retval < 0) then
				/* Si tiene estado 'U' es porque fue a otra sucursal y pudo haber vuelto */
				if (tes:teso_cheq_estado != "U") then
					errmsg lst:common:errmsg_list, "Cheque existente en la sucursal"
					cds endselect dsc:TesoCheq_ctx
					return (-1)
				end if
			end if
			cds endselect dsc:TesoCheq_ctx
	        
			//GRABO EN LA TABLA
			CALL CDScheques_save	
		endif
		idx = idx + 1
		
      loop    

	/*Reseteo de flags de modo picklist*/
	RESETFLAG drv:mode_flags,picklist_mode
	
   
END SUB

/*******/
