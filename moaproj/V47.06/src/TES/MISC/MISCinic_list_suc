/****o* Pendientes de agrupación/OFB:tes:MISCinic_list_suc
* NOMBRE
*   OFB:tes:MISCinic_list_suc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCinic_list_suc
	//limpio los array correspondientes
	CALL CSR:proc_list(F_CLEAR,LST:LISTrep_desc_fld)
	CALL CSR:proc_list(F_CLEAR,LST:LISTrep_cant_fld)
	CALL CSR:proc_list(F_REFRESH,LST:LISTrep_desc_fld)
	CALL CSR:proc_list(F_REFRESH,LST:LISTrep_cant_fld)
	CALL CSR:proc_list(F_PROTECT,LST:LISTrep_desc_fld)	
	CALL CSR:proc_list(F_UNPROTECT,LST:LISTrep_cant_fld)
	CLEARFIELD list_cant_tot
	
	//Limpio los campos de los listados por si hubo una modificacion"
	CALL CSR:proc_list(F_CLEAR,LST:LISTlist_listados)
	CALL CSR:proc_list(F_CLEAR,LST:LISTcant_listados)
	CLEARFIELD common:csr_string_171
	
	//creo el picklist que va a almacenar los datos de la tabla de listados
	//para mopstrar en la grilla	
	CALL csr:f_sadroppl "Listado_pic"
	CALL csr:f_sanewpl "Listado_pic" ,PIC:post:PICaux_comp
	
	//Recorro la tabla de listados para cargar el picklist
	CDS SELECT FROM DSC:post:listados_table BECOMES DSC:post:listados_context WHERE post:adt_list_incluye == "S"
	CDS FINDFIRST DSC:post:listados_context NOLOCK
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval < 0) THEN
		CALL csr:proc_list(F_PROTECT,LST:LISTrep_cant_fld)
		//Deshabilito las flechas Arriba y Abajo
		DISABLECONTROL PBlist_arriba //PBcomp_arriba
		DISABLECONTROL PBlist_abajo //PBcomp_abajo	
		CDS ENDSELECT DSC:post:listados_context
	ELSE
		CALL csr:proc_list(F_UNPROTECT,LST:LISTrep_cant_fld)
		//Deshabilito las flechas Arriba y Abajo
		ENABLECONTROL PBlist_arriba //PBcomp_arriba
		ENABLECONTROL PBlist_abajo //PBcomp_abajo			
		WHILE (lib:err_retval == 0)
			CDS EXTRACT DSC:post:listados_context ALL

			FPRINT common:csr_string_171 "%-53.53s %1.1s %1.1e",post:adt_list_nombre,post:adt_list_incluye,post:adt_list_cant
			
			//gpb:NI50572 - Digitalizacion de Reportes
			FPRINT common:csr_string_171,"%s %1.1s %20.20s %1.1s ",common:csr_string_171,post:adt_list_tipo_salida,post:adt_list_rep_codigo,post:adt_list_onbase

			CALL csr:f_saaddpl "Listado_pic" common:csr_string_171
			
			list_cant_tot = list_cant_tot + 1
					
			CDS FINDNEXT DSC:post:listados_context NOLOCK
			lib:err_retval = cdsretval
			END WHILE 
		CDS ENDSELECT DSC:post:listados_context
		
		//Ordeno la grilla por orden alfabetico de la Descripcion	
		CALL csr:PickOp PICKOP_SORT "Listado_pic" "0,52"	
		
		//Proceso la grilla
		CALL MISCproc_grilla_list
	
	END IF	
END SUB

/*******/
