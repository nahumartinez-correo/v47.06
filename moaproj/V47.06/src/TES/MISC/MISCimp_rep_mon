/****o* Reportes/OFB:tes:MISCimp_rep_mon
* NOMBRE
*   OFB:tes:MISCimp_rep_mon
* DESCRIPCION
*   Esta rutina lista la informacion del dinero existente en la sucursal (pesos,dolares, cupon)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:tes:MISCimpri_inf_suc,OFB:tes:MISCinfo_tes_fecha
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCimp_rep_mon(tipo)
    local suma1          like tes:imp_totales
    local suma2          like tes:imp_totales
    local suma3          like tes:imp_totales
    local total_efvo     like tes:imp_totales
    local total_cheq     like tes:imp_totales
    local total_buzon    like tes:imp_totales
    local loc_tot_tesoro like tes:imp_totales
    local loc_tot_caja   like tes:imp_totales
    local loc_tot_buzon  like tes:imp_totales
    local total_sucu     like tes:imp_totales
    local loc_tot_hab    like tes:imp_totales
	local total_cheq_rech like tes:imp_totales
    suma1 = 0
    suma2 = 0
    suma3 = 0

    total_efvo  = 0
    total_cheq  = 0
    total_buzon = 0

    loc_tot_tesoro = 0
    loc_tot_caja   = 0
    loc_tot_buzon  = 0

    total_sucu = 0

    let common:csr_string = "    "
    
    call MISCwrite_file1(5,fld:common:csr_string)    
    fprint common:csr_string "  INFORMACION DEL DINERO DE LA SUCURSAL EN %-30s ",post:adt_mon_desc
    call MISCwrite_file1(5,fld:common:csr_string)
    let common:csr_string = "    "
    call MISCwrite_file1(5,fld:common:csr_string)

    common:csr_string = "---------------------------------------------------------------------------------"
    call MISCwrite_file1(5,fld:common:csr_string)
    common:csr_string = " ITEM           DISPONIBLE    CHEQUES  CHEQ RECH         DEUDA         TOTAL"
    call MISCwrite_file1(5,fld:common:csr_string)
    common:csr_string = "---------------------------------------------------------------------------------"
    call MISCwrite_file1(5,fld:common:csr_string)

    let common:csr_string = "    "

    call MISCwrite_file1(5,fld:common:csr_string)
    loc_tot_tesoro = matriz_dinero[post:adt_mon_cod][0] + matriz_dinero[post:adt_mon_cod][1] + matriz_dinero[post:adt_mon_cod][8]
    fprint common:csr_string "TESORO         %13.13e %10.10e %10.10e ************* %13.13e",matriz_dinero[post:adt_mon_cod][0],matriz_dinero[post:adt_mon_cod][1],matriz_dinero[post:adt_mon_cod][8],loc_tot_tesoro
    call MISCwrite_file1(5,fld:common:csr_string)
    loc_tot_caja = matriz_dinero[post:adt_mon_cod][2] + matriz_dinero[post:adt_mon_cod][3] + matriz_dinero[post:adt_mon_cod][9]
    fprint common:csr_string "CAJAS          %13.13e %10.10e %10.10e ************* %13.13e",matriz_dinero[post:adt_mon_cod][2],matriz_dinero[post:adt_mon_cod][3],matriz_dinero[post:adt_mon_cod][9],loc_tot_caja
    call MISCwrite_file1(5,fld:common:csr_string)

    loc_tot_hab = matriz_dinero[post:adt_mon_cod][6]
    fprint common:csr_string "FONDO HABILIT  %13.13e %10.10e %10.10e ************* %13.13e",matriz_dinero[post:adt_mon_cod][6],matriz_dinero[post:adt_mon_cod][7],matriz_dinero[post:adt_mon_cod][10],loc_tot_hab
    call MISCwrite_file1(5,fld:common:csr_string)
    
    loc_tot_buzon = matriz_dinero[post:adt_mon_cod][4] + matriz_dinero[post:adt_mon_cod][5]
    fprint common:csr_string "CAJA BUZON     %13.13e %10.10e %10.10e ************* %13.13e",matriz_dinero[post:adt_mon_cod][4],matriz_dinero[post:adt_mon_cod][5],matriz_dinero[post:adt_mon_cod][11],loc_tot_buzon
    call MISCwrite_file1(5,fld:common:csr_string)

    if (tipo == 1)
        call MISCimp_cta_saldo(suma1,suma2,suma3)
    else
        call MISCimp_cta_sdo_ant(suma1,suma2,suma3)
    end if
    
    /*tes:CDSfinal_cta(bco,tipocta,nrocta,fechalis,sdo_ef,sdo_cheq)*/
	;Sumo tambien el total de cheques rechazados
    total_efvo  = suma1 + matriz_dinero[post:adt_mon_cod][0] + matriz_dinero[post:adt_mon_cod][2] + \
    matriz_dinero[post:adt_mon_cod][4] + matriz_dinero[post:adt_mon_cod][6] 
    ;matriz_dinero[post:adt_mon_cod][9] + matriz_dinero[post:adt_mon_cod][8]
    
    total_cheq  = suma2 + matriz_dinero[post:adt_mon_cod][1] + matriz_dinero[post:adt_mon_cod][3] + matriz_dinero[post:adt_mon_cod][5]
	total_cheq_rech = matriz_dinero[post:adt_mon_cod][8] + matriz_dinero[post:adt_mon_cod][9]

    common:csr_string = "---------------------------------------------------------------------------------"
    call MISCwrite_file1(5,fld:common:csr_string)

    total_sucu  = total_efvo + total_cheq + total_cheq_rech - suma3
    if (suma3 != 0) then
    	if (total_sucu < 0) then
            fprint common:csr_string "TOTAL SUCUR    %13.13e %10.10e %10.10e(%13.13e)(%13.13e)",total_efvo,total_cheq,total_cheq_rech,suma3,total_sucu
        else
            fprint common:csr_string "TOTAL SUCUR    %13.13e %10.10e %10.10e(%13.13e) %13.13e",total_efvo,total_cheq,total_cheq_rech,suma3,total_sucu
        end if
    else
        if (total_sucu < 0) then
            fprint common:csr_string "TOTAL SUCUR    %13.13e %10.10e %10.10e %13.13e(%13.13e)",total_efvo,total_cheq,total_cheq_rech,suma3,total_sucu
        else
            fprint common:csr_string "TOTAL SUCUR    %13.13e %10.10e %10.10e %13.13e %13.13e ",total_efvo,total_cheq,total_cheq_rech,suma3,total_sucu
        end if
    end if    
    call MISCwrite_file1(5,fld:common:csr_string)
    
    /*let common:csr_string = "    "
    call MISCwrite_file1(5,fld:common:csr_string)
    let common:csr_string = "    "
    call MISCwrite_file1(5,fld:common:csr_string)*/
    let common:csr_string = "    "
    call MISCwrite_file1(5,fld:common:csr_string)

END SUB

/*******/
