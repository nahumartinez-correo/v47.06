/****o* Pendientes de agrupación/OFB:tes:MISCespv_ctrl_stock
* NOMBRE
*   OFB:tes:MISCespv_ctrl_stock
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCespv_ctrl_stock
    local importe_espv 	like tes:adt_evaux_importe
    local importe 		like adt_espv_importe
    local LMensaje 		like common:csr_string

    select (post:estado_presu)
    case 1
        return (0)
    case 2
     /* Trae los registros para igual especie y subespecie del
        operador, que no pertenezcan a la venta actual(adt_evaux_prestran = 0) */
        cds select from DSC:AuxEspV_tbl becomes DSC:AuxEspV_ctx \
            where adt_evaux_suc == op:op_branch_id && \
	          adt_evaux_op == op:op_operator_id && \
	          adt_evaux_tesoro == "N" && \
	          adt_evaux_codigo == fld:espv_cod && \
	          adt_evaux_subcod == fld:adt_evaux_subcod && \
	          adt_evaux_envio == "N" && \
	          adt_evaux_es_venta == "S" && \
	          adt_evaux_prestran != 0
    break
    case 3
     /* Trae los registros para igual especie y subespecie del
        operador, que no sean del nro. de transac, de presupuesto
        actual y que no correspondan a la copia */
        cds select from DSC:AuxEspV_tbl becomes DSC:AuxEspV_ctx \
            where adt_evaux_suc == op:op_branch_id && \
	          adt_evaux_op == op:op_operator_id && \
	          adt_evaux_tesoro == "N" && \
	          adt_evaux_codigo == fld:espv_cod && \
	          adt_evaux_envio == "N" && \
	          adt_evaux_es_venta == "S" && \
	          adt_evaux_subcod == fld:adt_evaux_subcod && \
	         (adt_evaux_prestran != fld:post:PreDNroTrn && adt_evaux_prestran != 0)
    break
    end select

    cds findfirst DSC:AuxEspV_ctx lock
    lib:err_retval = cdsretval
    if (lib:err_retval == 0) then
     /* Sumo todo lo que tengo para la subespecie del operador para
        el mismo número de presupuesto */
        cds aggregate DSC:AuxEspV_ctx sum tes:adt_evaux_importe
        cds extract DSC:AuxEspV_ctx tes:adt_evaux_importe into importe_espv
    else
     /* No encontró nada, o sea se trata de la primera venta para esa
        subespecie en esa especie */
        importe_espv = 0
    end if

 /* Busco el stock de la subespecie en la TesEspV */
    call CDSget_imp_TesEspV(op:op_branch_id, "N", op:op_operator_id,\
                            espv_cod, adt_evaux_subcod,importe)

 /* supera al tesoro del cajero */
 /* sumo al importe de la subespecie que se está procesando, el total
    que se vendió hasta el momento y lo comparo con el total de la TesEspV */
    if (retval < 0 || (adt_evaux_importe + importe_espv) > importe)
   	   if (post:enCombo == "S") then
        	//cgw:muestra la especie/denominacion del combo con falta de stock.
        	FPRINT LMensaje "PARA %s %s FALTA STOCK" \
            post:adt_concb_producto, post:adt_concb_interno
            MSGBOX LMensaje,0x00,"AVISO"
       else
			errmsg clear
			errmsg lst:common:errmsg_list,ERRsupera_stock
			adt_evaux_importe = 0
			adt_evaux_cantidad = 0
			refresh adt_evaux_importe
			refresh adt_evaux_cantidad
	   endif
	return (-2)
    end if
END SUB

/*******/
