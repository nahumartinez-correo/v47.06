/****o* Pendientes de agrupación/OFB:tes:MISCestado_pase_cheq
* NOMBRE
*   OFB:tes:MISCestado_pase_cheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCestado_pase_cheq

    local moneda_ant   like tes:tmov_moneda
    local lista_moneda like siaf:tipo_moneda
    local lista_estado like post:medio_pago_desc
    local principio like tes:rend_marca_cierre

    let siaf:lineas_cl = 0 // inicializo el conteo de lineas
    let fld:tes:INDsheet_header = OFB:tes:MISCencab_ie_cheq

    call tes:MISCencab_simple

    CDS SELECT                                                        \
    fld:chmov_moneda        fld:chmov_login_dest fld:chmov_op_id_orig \
    fld:chmov_sequence_orig fld:chmov_hora_orig  fld:chmov_login_orig \
    fld:chmov_importe       fld:chmov_marca_ing  fld:chmov_codtran    \
    fld:chmov_banco         fld:chmov_cuenta     fld:chmov_nro_cheque \
	FROM DSC:tes:CheqMov_tbl BECOMES DSC:tes:CheqMov_ctx WHERE        \
	tes:chmov_fecha == common:system_date && \
	tes:chmov_suc_id == op:op_branch_id &&                            \
	chmov_banco      != 0               &&                            \
	chmov_cuenta     != 0               &&                            \
	chmov_nro_cheque != 0
    CDS FINDFIRST DSC:tes:CheqMov_ctx NOLOCK
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval < 0)
	    IF (lib:err_retval == -801)
	        move "(L) No hay movimientos para listar" to common:csr_string
	        msgbox common:csr_string,OFB_OK,"Aviso"
	        CDS ENDSELECT DSC:tes:CheqMov_ctx
	        return (-8)
	    end if
	    return (-2)
    end if
    do
	    CDS EXTRACT DSC:tes:CheqMov_ctx ALL
	    /*let post:adt_mon_cod = chmov_moneda
	    call post:CDSadt_moneda_load*/
	    
	    let post:adt_mp_cod = chmov_moneda
	    call post:CDSadt_MedPago_load
	    
	    if (chmov_moneda != moneda_ant) then
	        call MISCwrite_file(5,"                   ")
	        fprint common:csr_string " "
	        call MISCwrite_file(5,fld:common:csr_string)
            fprint common:csr_string "MEDIO DE PAGO: %-s",post:adt_mp_desc
	        call MISCwrite_file(5,fld:common:csr_string)
	        fprint common:csr_string "-----------------------------------------------------------------------------"
	        call MISCwrite_file(5,fld:common:csr_string)
	        fprint common:csr_string  \
	        "OPER.ORIG.    OPER.DEST.    BANCO     CUENTA            CHEQUE     IMPORTE"
	        call MISCwrite_file(5,fld:common:csr_string)
	        fprint common:csr_string  \
	        "ESTADO TRAN   HORA   SEC."
	        call MISCwrite_file(5,fld:common:csr_string)	    
	        fprint common:csr_string "-----------------------------------------------------------------------------"
	        call MISCwrite_file(5,fld:common:csr_string)

	    end if
	    let moneda_ant = chmov_moneda
	    select (chmov_marca_ing)
	        case "A"
		        let lista_estado = "ANUL."
		        break
	        case "I"
		        let lista_estado = "ACEP."
		        break
	        case ""
		        let lista_estado = "PEND."
		        break
	        case "R"
		        let lista_estado = "RECH."
		        break
	        case "E"
		        let lista_estado = "REEN."
		        break
		    case "S"
				let lista_estado = "PEND(SUP)"		
				break
		        
	    end  select	

	    fprint common:csr_string "%-14s %-14s %3.3s %20.20e %8.8s %13.13s" chmov_login_orig,chmov_login_dest,chmov_banco,chmov_cuenta,chmov_nro_cheque,chmov_importe
	    call MISCwrite_file(5,fld:common:csr_string)

	    fprint common:csr_string "%-9.9s  %4.4s %8.8e %4.4s" lista_estado,chmov_codtran,chmov_hora_orig,chmov_sequence_orig
	    call MISCwrite_file(5,fld:common:csr_string)

	    CDS FINDNEXT DSC:tes:CheqMov_ctx  NOLOCK
	    LET lib:err_retval = CDSRETVAL
	    IF (lib:err_retval < 0)
	        IF (lib:err_retval == -801)
		        break
	        end if
	        return (-2)
	    end if
    loop
    call MISCwrite_file(5,"                   ")
END SUB

/*******/
