/****o* Reportes/OFB:tes:MISCestado_tes
* NOMBRE
*   OFB:tes:MISCestado_tes
* DESCRIPCION
*	Este OFB lee la tabla tesoro registro por registro y graba cada uno de los
*	elementos en el archivo
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:tes:MISCimpri_inf_suc
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCestado_tes
    local i              like siaf:i
    local total_inic     like siaf:aux_suma_monto
    local total_entradas like siaf:aux_suma_monto
    local total_salidas  like siaf:aux_suma_monto
    local loc_err        like lib:err_retval
    local indice         like siaf:i
    local loc_imp_pases  like siaf:aux_suma_monto
    local loc_imp_fisico like siaf:aux_suma_monto
    local loc_total_rech like siaf:aux_suma_monto
    local loc_total_venta like siaf:aux_suma_monto    
    local total_final    like siaf:aux_suma_monto
    local cant_deno 	 like siaf:aux


    common:csr_string = "  "
    call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string "MEDIO DE PAGO: %-2s-%-30s",post:adt_mp_cod,post:adt_mp_desc
    call MISCwrite_file1(5,fld:common:csr_string)
    move "  " to common:csr_string
    call MISCwrite_file1(5,fld:common:csr_string)
    move "  " to common:csr_string
    ;let common:csr_string = "INFORMACION DE TESORO: "

    call op:CDSnombre_tesorero
    fprint common:csr_string "  INFORMACION DE TESORO                      TESORERO: %5s-%s",op:aux_operator_id,op:adt_login_tesoro


    call MISCwrite_file1(5,fld:common:csr_string)
    move "  " to common:csr_string
    call MISCwrite_file1(5,fld:common:csr_string)
	
	/*
    call csr:cleararray tes_importes
    call csr:cleararray tes_entrada
    call csr:cleararray tes_salida
    call csr:cleararray tes_sdoinic
    */
    let total_inic     = 0
    let total_entradas = 0
    let total_salidas  = 0
    let total_final    = 0
    clearfield tes_tot_salida
    clearfield tes_tot_entrada
    clearfield tes_tot_inic
    clearfield tes_total

    cds select from dsc:tesoro_table becomes dsc:tesoro_context where \
    tes:tes_suc_id == op:op_branch_id && \
    tes:tes_moneda == tes:tes_moneda
    
    cds findfirst dsc:tesoro_context nolock

    indice = 0

    if (cdsretval == 0)
        cds extract dsc:tesoro_context all
    else
        clearfield tes_fecha
    end if

    move "  " to common:csr_string
    call MISCwrite_file1(5,fld:common:csr_string)

    if (tes:tes_marca_arqueo == "S") && ((post:adt_mp_adm == "G") && (post:adt_mp_monet == "S")) then

		/* Imprimo el Argqueo */
		;let common:csr_string = " DENOMIN.   SALDO INICIAL     ENTRADAS         SALIDAS       SALDO FINAL  "
		;call MISCwrite_file1(5,fld:common:csr_string)
    	let common:csr_string = "ARQUEO DE TESORO "


    	call MISCwrite_file1(5,fld:common:csr_string)
		//NI 50183
		move " --------------------------------------------------------------------------------" to common:csr_string
		call MISCwrite_file1(5,fld:common:csr_string)
		let common:csr_string = "DENOMINACION          CANTIDAD                                 IMPORTE"
		call MISCwrite_file1(5,fld:common:csr_string)
		move " --------------------------------------------------------------------------------" to common:csr_string
		call MISCwrite_file1(5,fld:common:csr_string)
		;move "  " to common:csr_string
		;call MISCwrite_file1(5,fld:common:csr_string)


		//Busco las denominaciones
		cds select from dsc:den_mon_table becomes dsc:den_mon_context where \
		tes:den_moneda == post:adt_mp_cod
		cds findfirst dsc:den_mon_context nolock
		if (cdsretval < 0) then
		   return (-2)
		end if
		cds extract dsc:den_mon_context all
		let i = 0
		do
			if ((i > 13) || (den_texto[i] == "")) then
				/* salgo de las denominaciones cuando llegue al
				final de array o cuando ya no tengo descr. */
				break
			end if
			/* saco los totales */
			cant_deno = tes:tes_arqueo[i] / tes:den_valor[i]				
			fprint common:csr_string " %-14.14s      %4.4e                                   %13.13e" den_texto[i],cant_deno,tes:tes_arqueo[i]
			call MISCwrite_file1(5,fld:common:csr_string)
			
			let i = i + 1
		loop
		move "  " to common:csr_string
		call MISCwrite_file1(5,fld:common:csr_string)
		
	end if
    /* saco los totales */
    if (siaf:fecha_proceso != tes:tes_fecha) then
       /* Si no abrio el dia el tesoro copio los valores */
       let tes:tes_tot_inic = tes:tes_total
       clearfield tes:tes_tot_entrada
       clearfield tes:tes_tot_salida
    end if
    let total_inic     = tes_tot_inic
    let total_entradas = tes_tot_entrada
    let total_salidas  = tes_tot_salida
    let total_final    = tes_total
	 /* Imprimo el Total del Tesoro */
	//NI 50183
	move " --------------------------------------------------------------------------------" to common:csr_string
	call MISCwrite_file1(5,fld:common:csr_string)
	let common:csr_string = "             SALDO INICIAL     ENTRADAS         SALIDAS       SALDO FINAL  "
	call MISCwrite_file1(5,fld:common:csr_string)
	move " --------------------------------------------------------------------------------" to common:csr_string
	call MISCwrite_file1(5,fld:common:csr_string)

    ;if (post:adt_mon_tipo == "CHEQ")
    if (post:adt_mp_adm == "I")  /*Cheque*/
        call tes:CDSpases_pend_cheq(common:sucursal_activa, "", tes:tes_moneda, "S")
    else
        call tes:CDSpases_pend(common:sucursal_activa, "", tes:tes_moneda, "S")
    end if

    loc_imp_pases  = siaf:importe
    siaf:importe   = siaf:importe + total_final
    loc_imp_fisico = siaf:importe

    let siaf:importe_total = siaf:importe_total + total_final
    ;let common:csr_string = " ------------------------------------------------------------------------"
    ;call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL DISP.%13.13e   %13.13e   %13.13e   %13.13e" total_inic,total_entradas,total_salidas,total_final
    call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL EN PASES                                             %13.13e" loc_imp_pases
    call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL FISICO                                               %13.13e" loc_imp_fisico
    call MISCwrite_file1(5,fld:common:csr_string)

   /**************************************************************************/
   /* Se carga en la matriz la información del dinero de la sucursal.        */
   /* Esta matriz funciona de la siguiente manera: cada fila es la moneda y  */
   /* cada columna significa:                                                */
   /* - col 0 : Efectivo Tesoro                                              */
   /* - col 1 : Cheques  Tesoro                                              */
   /* - col 2 : Efectivo Cajas                                               */
   /* - col 3 : Cheques  Cajas                                               */
   /* - col 4 : Efectivo Buzon                - Andrea -                     */
   /* - col 5 : Cheques  Buzon                                               */  
   /**************************************************************************/
	/* si es cheque, calculo la cantidad de rechazados */
	if (post:adt_mp_adm == "I" && post:adt_mp_admban == "S") then
		call tes:CDSSum_cheques(tes_tes_id,"T",tes:tes_moneda,"S",loc_total_rech)
		call tes:CDSSum_cheques(tes_tes_id,"T",tes:tes_moneda,"N",loc_total_venta)
		;saldo_efec = loc_total_rech + loc_total_venta + siaf:monto_inic_vec[tes:tes_moneda]
	end if                	
   /* Efectivo */
   if (post:adt_mp_adm == "G") && (post:adt_mp_monet == "S")
      matriz_dinero[post:adt_mon_cod][0] = loc_imp_fisico + matriz_dinero[post:adt_mon_cod][0] 
   endif
   
   /* Cheque */
   if (post:adt_mp_adm == "I" && post:adt_mp_admban == "S")
      ;matriz_dinero[post:adt_mon_cod][1] = loc_imp_fisico + matriz_dinero[post:adt_mon_cod][1]
      matriz_dinero[post:adt_mon_cod][1] = loc_total_venta + matriz_dinero[post:adt_mon_cod][1]      
      matriz_dinero[post:adt_mon_cod][8] = matriz_dinero[post:adt_mon_cod][8] + loc_total_rech
   endif
   /* Fin de carga de la matriz */

   cds endselect dsc:tesoro_context
END SUB

/*******/
