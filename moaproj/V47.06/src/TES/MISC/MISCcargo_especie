/****o* Pendientes de agrupación/OFB:tes:MISCcargo_especie
* NOMBRE
*   OFB:tes:MISCcargo_especie
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCcargo_especie(op,tes)
local total_imp like siaf:importe
	
	//limpio los campos de la nueva pantalla
	call csr:cleararray arqueo_espv_cod
	call csr:cleararray arqueo_espv_imp
	tes:cont1 = 0
	PasesDisp_cant = 0
	PasesDisp_idx = 0
	
	cds select unique adt_espv_cod from Especie becomes "Esp1"
    cds findfirst "Esp1" nolock
    let lib:err_retval = cdsretval
	IF (lib:err_retval == 0) THEN
		//Creo el picklist que contendra los arqueos de las especies
		call csr:f_sadroppl dsc:PICPasesDisp
		call CSR:f_sanewpl dsc:PICPasesDisp pic:PICPasesDisp 605,332
	END IF

    do
        if (lib:err_retval < 0)
           break
        end if

		cds extract "Esp1" adt_espv_cod
		let tes:espv_cod = adt_espv_cod
        protfield espv_cod
        clearfield post:importe

        let siaf:importe = 0
		cds select from Especie becomes "Esp2" where \
	    adt_espv_cod == adt_espv_cod
		cds findfirst "Esp2" nolock
		if (cdsretval == 0)
			do
	  			cds extract "Esp2" adt_espv_subcod adt_espv_valor
          		if (cdsretval < 0)
                	break
	  			end if
	  			let tes:adt_espv_es_tesoro = tes
	  			let tes:adt_espv_id = op
	  			cds select from TesEspV becomes TesEspV where \
          			adt_espv_suc == op:op_branch_id && \
          			adt_espv_es_tesoro == tes:adt_espv_es_tesoro && \
	  				adt_espv_id == tes:adt_espv_id && \
	  				adt_espv_cod == adt_espv_cod && \
	  				adt_espv_subcod == adt_espv_subcod
	  				adt_espv_importe = 0
	  			cds findfirst TesEspV nolock
	  			if (cdsretval == 0)
					cds extract TesEspV adt_espv_importe
	  			end if
	  			siaf:importe = siaf:importe + adt_espv_importe
	  			cds endselect TesEspV
	  			cds findnext "Esp2" nolock
	  			if (cdsretval < 0)
	     			break
          		end if
	        loop
        endif
        cds endselect "Esp2"

		if (tes:cont1 < 13) then
			protfield tes:arqueo_espv_cod[tes:cont1]
			tes:arqueo_espv_cod[tes:cont1] = espv_cod
			tes:arqueo_espv_imp[tes:cont1] = 0
			unprotfield tes:arqueo_espv_imp[tes:cont1]
		end if
		siaf:importe2 = 0
		/*GRabo en el picklist el total que tiene en la caja y el campo que va a cargar en 0 */
		fprint common:csr_string "%-20s %13.13e %13.13e",espv_cod,siaf:importe2,siaf:importe
		Call csr:f_saaddpl dsc:PICPasesDisp common:csr_string
        tes:cont1 = tes:cont1 + 1
        PasesDisp_cant = PasesDisp_cant + 1
        cds findnext "Esp1" nolock
        let lib:err_retval = cdsretval
        FYIMSG CLEAR
    loop
	if (tes:cont1 < 13) then
		do
			if (tes:cont1 >= 13) then
				break
			end if
			protfield tes:arqueo_espv_cod[tes:cont1]
			clearfield tes:arqueo_espv_cod[tes:cont1]
			refresh tes:arqueo_espv_cod[tes:cont1]
			protfield tes:arqueo_espv_imp[tes:cont1]
			clearfield tes:arqueo_espv_imp[tes:cont1]
			refresh tes:arqueo_espv_imp[tes:cont1]
			tes:cont1 = tes:cont1 + 1
		loop
	end if
    // Llama a el tipo de arqueo que hay que hacer
    post:importe_origen = siaf:importe
    cds endselect "Esp1"
END SUB

/*******/
