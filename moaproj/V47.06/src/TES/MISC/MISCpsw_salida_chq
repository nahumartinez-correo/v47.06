/****o* Pendientes de agrupación/OFB:tes:MISCpsw_salida_chq
* NOMBRE
*   OFB:tes:MISCpsw_salida_chq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCpsw_salida_chq
local ltesoro like op:op_tesoro
local lsubtesoro like op:op_subtesoro
local lmarcado like op:op_tesoro
local lsup like op:op_tes_auth
    
    cds select from dsc:AuxCheq_tbl BECOMES dsc:AuxCheq2_ctx where \
	tes:adt_cheqaux_suc    == op:op_branch_id   && \
	tes:adt_cheqaux_op     == op:op_operator_id && \
	tes:adt_cheqaux_clave  == "0"
	//Selecciono todos los que no hayan sido confirmado antes (adt_cheqaux_clave=0), cuando confirma lo pongo en 1
    cds findfirst dsc:AuxCheq2_ctx lock
	let lib:err_retval = cdsretval	
    //Recorro la tabla temporal
    do
        if (lib:err_retval != 0) then
            break
        end if
        cds extract dsc:AuxCheq2_ctx all

	    //Si el operador destino es tesoro o subtesoro, pido clave
		cds select FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context  \
	    WHERE op:op_login_id == fld:tes:login_dest && \
	    op:op_branch_id == fld:tes:adt_cheqaux_suc && \
	    op:op_operator_id == fld:adt_cheqaux_cuenta
        CDS FINDFIRST DSC:op:adt_op_context NOLOCK
	    lib:err_retval = cdsretval
    	if (lib:err_retval == 0)
			CDS EXTRACT DSC:op:adt_op_context FLD:op:op_tesoro INTO ltesoro \
		    FLD:op:op_subtesoro INTO lsubtesoro \
		    fld:op:op_tes_auth into lsup
    		CDS ENDSELECT DSC:op:adt_op_context
			
			/* Si estoy en cierre guiado lo obligo a que supervise */
			if ((ltesoro == "S" || lsubtesoro == "S" || lsup == "X") || tes:en_cierre == "S")
				
				/*Solicitud 50088 - Evento 6: Cuando el se hacen pases a si mismo
				no debe pedirse la password*/ 
				IF (op:op_login_id != fld:tes:login_dest)
				
					lmarcado = "N"
					//Busco si algun registro de este operador destino ya fue marcado...
					//De ser asi, marco este sin volver a mostrar la pantalla
				    cds select from dsc:AuxCheq_tbl BECOMES dsc:AuxCheq_ctx WHERE \
				    tes:adt_cheqaux_suc    == op:op_branch_id   && \
				    tes:adt_cheqaux_op     == op:op_operator_id && \
				    tes:login_dest         == fld:tes:login_dest && \
				    tes:adt_cheqaux_cuenta == fld:adt_cheqaux_cuenta && \
					tes:adt_cheqaux_clave  == "1"
					cds findfirst dsc:AuxCheq_ctx nolock
					if (cdsretval == 0)
						cds endselect dsc:AuxCheq_ctx
						lmarcado = "S"
					end if
	
					if (lmarcado == "N")
						protfield tes:login_dest
						clearfield tes:tes_passwd
						popup tes:SCRNpsw_salida_chq
						
						IF (LASTKEY == RT_ESC) THEN
							call MISClimpia_pase
							cds unlock dsc:AuxCheq2_ctx
							cds endselect dsc:AuxCheq2_ctx
							return (-2)
						END IF
						call ovr:MISCValidaPassNT(tes:login_dest,tes:tes_passwd)
						IF (retval != 0) THEN
							call MISClimpia_pase
							cds unlock dsc:AuxCheq2_ctx
							cds endselect dsc:AuxCheq2_ctx
							return (-2)						
						END IF
					end if
					
					CDS CLEARBUFFER DSC:AuxCheq2_ctx
					LET adt_cheqaux_clave = "1"
					CDS APPEND DSC:AuxCheq2_ctx fld:adt_cheqaux_clave
					CDS UPDATE DSC:AuxCheq2_ctx LOCK
					
				END IF
			end if
		end if
				
        cds unlock dsc:AuxCheq2_ctx
        cds findnext dsc:AuxCheq2_ctx lock
    	let lib:err_retval = cdsretval
    loop
    cds endselect dsc:AuxCheq2_ctx
END SUB

/*******/
