/****o* Pendientes de agrupación/OFB:tes:MISCimpri_inf_tes
* NOMBRE
*   OFB:tes:MISCimpri_inf_tes
* DESCRIPCION
*	Este OFB lee la tabla tesoro registro por registro y graba cada uno de los
*	elementos en el archivo
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCimpri_inf_tes
    local i like siaf:i
    local total_inic like siaf:aux_suma_monto
    local total_entradas like  siaf:aux_suma_monto
    local total_salidas like siaf:aux_suma_monto
    local total_final like siaf:aux_suma_monto
    local indice like siaf:i


    ;let siaf:lineas_cl = 0 // pone a cero el conteo de lineas

    CDS SELECT FROM DSC:tesoro_table BECOMES DSC:tesoro_context  \
    WHERE tes:tes_suc_id == op:op_branch_id
    CDS FINDFIRST DSC:tesoro_context NOLOCK
    if (cdsretval < 0) then
       return (-2)
    end if
    let common:csr_string = "  INFORMACION DE TESORO: "
    call MISCwrite_file(5,fld:common:csr_string)
    move "  " to common:csr_string
    call MISCwrite_file(5,fld:common:csr_string)
    move "  " to common:csr_string
    call MISCwrite_file(5,fld:common:csr_string)
    indice = 0
    do
       let siaf:importe_total = 0
       call csr:cleararray tes_importes
       call csr:cleararray tes_entrada
       call csr:cleararray tes_salida
       call csr:cleararray tes_sdoinic
       let total_inic = 0
       let total_entradas = 0
       let total_salidas = 0
       let total_final = 0
       let total_inic = 0
       let total_entradas = 0
       let total_salidas = 0
       let total_final = 0
       clearfield tes_tot_salida
       clearfield tes_tot_entrada
       clearfield tes_tot_inic
       clearfield tes_total

       CDS EXTRACT DSC:tesoro_context ALL
       let post:adt_mon_cod = tes:tes_moneda
       call post:CDSadt_moneda_load
       if (cdsretval < 0) then
	  return (-2)
       end if

       fprint common:csr_string " MONEDA: %-20s",post:adt_mon_desc
       call MISCwrite_file(5,fld:common:csr_string)
       move "  " to common:csr_string
       call MISCwrite_file(5,fld:common:csr_string)
       let common:csr_string = " DENOMIN.   SALDO INICIAL     ENTRADAS         SALIDAS       SALDO FINAL  "
       call MISCwrite_file(5,fld:common:csr_string)
       move " ------------------------------------------------------------------------" to common:csr_string
       call MISCwrite_file(5,fld:common:csr_string)
       move "  " to common:csr_string
       call MISCwrite_file(5,fld:common:csr_string)
       if (siaf:fecha_proceso != tes:tes_fecha) then
           /* Si la fecha de tesoro es diferente a la del listado
        no imprimo las entradas y salidas que quedaron */
              call csr:cleararray tes_salida
              call csr:cleararray tes_entrada
              clearfield tes:tes_tot_entrada
              clearfield tes:tes_tot_salida
       end if

       if (post:adt_mon_tipo == "EFEC") then
           CDS SELECT FROM DSC:den_mon_table BECOMES DSC:den_mon_context \
           WHERE tes:den_moneda == tes:tes_moneda
           CDS FINDFIRST DSC:den_mon_context NOLOCK
           if (cdsretval < 0) then
	      return (-2)
           end if
           CDS EXTRACT DSC:den_mon_context ALL

           let i = 0

           do
	     if ((i > 13) || (den_texto[i] == "")) then
	        /* salgo de las denominaciones cuando llegue al
	        final de array o cuando ya no tengo descr. */
	        break
	     end if
	    /* saco los totales */
	     if (siaf:fecha_proceso != tes:tes_fecha) then
	        /* Si no abrio el dia el tesoro copio los valores */
	        let tes:tes_sdoinic[i] = tes:tes_importes[i]
	     end if
	     let total_inic = total_inic + tes_sdoinic[i]
	     let total_entradas = total_entradas + tes_entrada[i]
	     let total_salidas = total_salidas + tes_salida[i]
	     let total_final = total_final + tes_importes[i]

	     fprint common:csr_string " %-8.8s   %13.13e   %13.13e   %13.13e   %13.13e" den_texto[i],tes_sdoinic[i],tes_entrada[i],tes_salida[i],tes_importes[i]
             call MISCwrite_file(5,fld:common:csr_string)

	     let i = i + 1
          loop
        else
           /* saco los totales */
	   if (siaf:fecha_proceso != tes:tes_fecha) then
	        /* Si no abrio el dia el tesoro copio los valores */
	        let tes:tes_tot_inic = tes:tes_total
	   end if
           let total_inic = tes_tot_inic
           let total_entradas = tes_tot_entrada
           let total_salidas = tes_tot_salida
           let total_final = tes_total
       end if
       let siaf:importe_total = siaf:importe_total + total_final
       let common:csr_string = " ------------------------------------------------------------------------"
       call MISCwrite_file(5,fld:common:csr_string)
       fprint common:csr_string " TOTALES    %13.13e   %13.13e   %13.13e   %13.13e" total_inic,total_entradas,total_salidas,total_final

       call MISCwrite_file(5,fld:common:csr_string)
       move "  " to common:csr_string
       call MISCwrite_file(5,fld:common:csr_string)
       move "  " to common:csr_string
       call MISCwrite_file(5,fld:common:csr_string)
       call MISCwrite_file(5,"               ")
       CDS FINDNEXT DSC:tesoro_context NOLOCK
       if (cdsretval == -801) then
	  break
       end if
    loop
END SUB

/*******/
