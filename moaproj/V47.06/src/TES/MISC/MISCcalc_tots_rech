/****o* Pendientes de agrupación/OFB:tes:MISCcalc_tots_rech
* NOMBRE
*   OFB:tes:MISCcalc_tots_rech
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCcalc_tots_rech
/*
 * FGB 13.12.2005: se comenta el contenido anterior y se agregan los cambios ya que la rutina
 *                 parece haber cambiado totalmente.
 *
Como graba una cabecera nueva, necesito los totales de los movimientos que 
pertenecen a la misma. Recorro el picklis y obtengo los valores que correspondan
local idx like siaf:i
    idx = PL_GETITEM   
    adt_espv_cantidad = 0
    adt_espv_importe = 0
	//Recorro el picklist y grabo primero todo lo que sea NO aceptado
	do
    	call csr:myPickcontrol(dsc:PICPasesDisp,common:csr_string,idx)
		if ((retval < 0) || (adt_espv_cantidad != 0 && adt_espv_cod != substr(common:csr_string,56,20)))
			break
		end if
		if (adt_espv_cod == substr(common:csr_string,56,20))
			//Busco este pase en el picklist de rechazados
			sequence_val[0] = substr(common:csr_string,77,4)
			Call MISCverif_rechazo(0)
			if (retval == 0) //Lo encontre !
				adt_espv_cantidad = adt_espv_cantidad  + substr(common:csr_string,35,6)
				adt_espv_importe = adt_espv_importe + substr(common:csr_string,42,13)
			end if
		end if
		idx = idx + 1
	loop
 *
 * FGB fin
 */

	call csr:cleararray(total_chrech)
	call csr:cleararray(total_chrech_tes)
    cds select from dsc:TesoCheq_tbl becomes dsc:TesoCheq_ctx where \
    teso_cheq_suc == common:sucursal_activa && \
    (tes:teso_cheq_estado == "T" || tes:teso_cheq_estado == "O") && \
	teso_cheq_recep == "S"

    cds findfirst dsc:TesoCheq_ctx nolock
    let lib:err_retval = cdsretval
    do
    	if (lib:err_retval < 0) then

    		break
    	end if
    	cds extract dsc:TesoCheq_ctx all
    	if (tes:teso_cheq_estado == "T") then
    		total_chrech_tes[tes:teso_cheq_moneda] = total_chrech_tes[tes:teso_cheq_moneda] + \
    		tes:teso_cheq_importe
    	else
    		total_chrech[tes:teso_cheq_moneda] = total_chrech[tes:teso_cheq_moneda] + \
    		tes:teso_cheq_importe
		end if    	
    	
   		cds findnext dsc:TesoCheq_ctx nolock
   		let lib:err_retval = cdsretval
   	loop
    cds endselect dsc:TesoCheq_ctx


END SUB

/*******/
