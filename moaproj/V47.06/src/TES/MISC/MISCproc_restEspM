/****o* Pendientes de agrupación/OFB:tes:MISCproc_restEspM
* NOMBRE
*   OFB:tes:MISCproc_restEspM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCproc_restEspM
	/************************************************************/
	/* Esta rutina carga en un vector que simula un picklist    */
	/* el cual se va a ir moviendo segun el boton presionado    */
	/************************************************************/
    local idx  like post:Tarif_idx
    local idx2 like post:Tarif_idx
    local col  like siaf:i
    local modificado like common:csr_string
	local esSelMultiple like siaf:i

	if (testflag(tipo_sel,todas))
    	call MISCsobra_restEspM(-1)
		esSelMultiple = true
	else
		esSelMultiple = false
	endif

	if (post:tarif_cant_tot <= 0)
        disablecontrol drv:PBcb13
        disablecontrol drv:PBcb14
		return 0
	endif

    idx  = post:Tarif_idx + PL_GETITEM
    idx2 = 0
    call csr:cleararray(rest_esp)
    call csr:cleararray(rest_subesp)

	col = 0
	while (col < 11)
		call MISCrestMultgeneral("CLEAR", col, "")
		col = col + 1
	end while

    call csr:getrowcol rest_esp
    col = retval

    //Recorro el picklist y proceso la informacion de cada item
    WHILE (idx2 < 11)
        call csr:myPickcontrol(dsc:post:aux_pic_medios,common:csr_string,idx)
        modificado = substr(common:csr_string,0,1)
        rest_esp[idx2] = substr(common:csr_string,2,20)
        rest_subesp[idx2] = substr(common:csr_string,22,20)

        ; Si le agregue una restriccion a esta clave, marco el renglon.
        if (modificado != "S")
        	rest_esp[idx2].HIGHLITE = 0
        	rest_subesp[idx2].HIGHLITE = 0
		else
        	rest_esp[idx2].HIGHLITE = 1
        	rest_subesp[idx2].HIGHLITE = 1
        endif
        refresh rest_esp[idx2]
        refresh rest_subesp[idx2]

		if (esSelMultiple)
			if (post:Tarif_idx == 0 && idx2 == 0)
				call MISCrestMultgeneral("UNPROT", idx2, "")
				call MISCactBotones("DESPROT",idx2)
			endif
		else
			call MISCrestMultgeneral("UNPROT", idx2, "")
			call MISCactBotones("DESPROT",idx2)
		endif

        if ((idx - PL_GETITEM) == post:tarif_cant_tot - 1)
        	//Se limpian los items que sobran para simular el scroll
            call MISCsobra_restEspM(idx2)
            break
        end if

        idx  = idx  + 1
        idx2 = idx2 + 1

    End While

	call MISChabDeshabFlechas(col)
END SUB

/*******/
