/****o* Pendientes de agrupación/OFB:tes:MISCpasa_mov_a_str
* NOMBRE
*   OFB:tes:MISCpasa_mov_a_str
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCpasa_mov_a_str
    local moneda_ant   like tes:tmov_moneda
    local lista_moneda like siaf:tipo_moneda
    local lista_estado like post:medio_pago_desc

    let siaf:lineas_cl = 0 // inicializo el conteo de lineas
    let fld:tes:INDsheet_header = OFB:tes:MISCencab_ing_egr

    call tes:MISCencab_ing_egr

    let moneda_ant = 99

    CDS SELECT tmov_moneda,tmov_login_dest,tmov_op_id_orig,tmov_sequence_orig, \
           tmov_hora_orig,tmov_login_orig,tmov_total,tmov_marca_ing, \
           tmov_codigo_siaf \
        FROM DSC:tes:teso_mov_table BECOMES DSC:tes:teso_mov_context \
        WHERE tes:tmov_suc_id == op:op_branch_id && tes:tmov_fecha == common:system_date
    CDS FINDFIRST DSC:tes:teso_mov_context NOLOCK
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval < 0)
        IF (lib:err_retval == -801)
        move "(L) No hay movimientos para listar" to common:csr_string
        msgbox common:csr_string,OFB_OK,"Aviso"
        CDS ENDSELECT DSC:tes:teso_mov_context
        return (-8)
        end if
        return (-2)
    end if
    do
        CDS EXTRACT DSC:tes:teso_mov_context ALL
        let post:adt_mp_cod = tmov_moneda
        call post:CDSadt_MedPago_load
        if (tmov_moneda != moneda_ant) then
            call MISCwrite_file(5,"                   ")
            fprint common:csr_string " "
            call MISCwrite_file(5,fld:common:csr_string)

            fprint common:csr_string "MEDIO DE PAGO: %-s",post:adt_mp_desc
            call MISCwrite_file(5,fld:common:csr_string)

            fprint common:csr_string "-----------------------------------------------------------------------------"
            call MISCwrite_file(5,fld:common:csr_string)
            fprint common:csr_string  \
            "OPER.ORIG.     OPER.DEST.          IMPORTE      ESTADO   TRAN   HORA   SEC."
            call MISCwrite_file(5,fld:common:csr_string)
            fprint common:csr_string "-----------------------------------------------------------------------------"
            call MISCwrite_file(5,fld:common:csr_string)

        end if

        let moneda_ant = tmov_moneda
        select (tmov_marca_ing)
	    case "A"
		let lista_estado = "ANUL."
		break
	    case "I"
		let lista_estado = "ACEP."
		break
	    case ""
		let lista_estado = "PEND."
		break
	    case "R"
		let lista_estado = "RECH."
		break
	    case "E"
		let lista_estado = "REEN."
		break
	    case "S"
		let lista_estado = "PEND(SUP)"		
		break

        end  select

        fprint common:csr_string "%-14s  %-14s  %13.13s %-9.9s   %4.4s %8.8e %4.4s" tmov_login_orig,tmov_login_dest,tmov_total,lista_estado tmov_codigo_siaf,tmov_hora_orig,tmov_sequence_orig
        call MISCwrite_file(5,fld:common:csr_string)
	CDS FINDNEXT DSC:tes:teso_mov_context  NOLOCK
           LET lib:err_retval = CDSRETVAL
           IF (lib:err_retval < 0)
              IF (lib:err_retval == -801)
                  break
              end if
              return (-2)
           end if
    loop
    call MISCwrite_file(5,"                   ")
END SUB

/*******/
