/****o* Pendientes de agrupación/OFB:tes:MISCrestMultgeneral
* NOMBRE
*   OFB:tes:MISCrestMultgeneral
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

sub tes:MISCrestMultgeneral(ope, idx, valor)
	local l_retval like lib:err_retval
	local l_suc like admin:adt_br_branch
	local l_cli like post:cli_tipo
	local l_up like admin:adt_br_branch
	local l_str like common:csr_string
	local l_prov like post:adt_pcia_cod

	; Esta rutina tiene funciones especiales para
	; poder generalizar todos los otros fuentes
	; referidos a las restricciones sobre especies.
	; De esta manera queda todo integrado.

	select (ope)
		case "CLEAR"
			select (abmRestActual)
				case "RestEspSuc"
					clearfield rest_suc[idx]
					break
				case "RestEspCli"
					clearfield rest_cli[idx]
					break
				case "RestEspUp"
					clearfield rest_up[idx]
					break
				case "RestEspProv"
					clearfield rest_prov[idx]
					break
			end select
			break
		case "PROT"
			select (abmRestActual)
				case "RestEspSuc"
					protfield rest_suc[idx]
					break
				case "RestEspCli"
					protfield rest_cli[idx]
					break
				case "RestEspUp"
					protfield rest_up[idx]
					break
				case "RestEspProv"
					protfield rest_prov[idx]
					break
			end select
			break
		case "PICKLIST"
			call MISCprotTodoRestEspM
			select (abmRestActual)
				case "RestEspSuc"
					call admin:CDSadt_br_sel
					if (retval >= 0)
						rest_suc[idx] = admin:adt_br_branch
						refresh rest_suc[idx]
					endif
					break
				case "RestEspCli"
					clearfield tes:rest_cli[idx]
					PICKVERIFY FLD:tes:rest_cli[idx], PIC:post:cli_tipo,update
					fprint common:csr_string " - %s",substr(common:csr_string,2,999)
					refresh tes:rest_cli[idx]
					break
				case "RestEspUp"
					call tes:CDScliUPPickList(idx)
					if (retval < 0)
						clearfield rest_up[idx]
						refresh rest_up[idx]
					endif
					break
				case "RestEspProv"
					call post:CDSadt_pcia_sel
					if (retval >= 0)
						rest_prov[idx] = post:adt_pcia_cod
						refresh rest_prov[idx]
					endif
					break
			end select
			l_retval = retval
			l_suc = rest_suc[idx]
			l_cli = rest_cli[idx]
			l_up = rest_up[idx]
			l_prov = rest_prov[idx]
			l_str = common:csr_string

			enablecontrol drv:PBcb0
			enablecontrol drv:PBcb1
			call tes:MISChabDeshabFlechas(idx)
			; vuelvo a procesar la grilla
			call tes:MISCproc_restEspM

			rest_suc[idx] = l_suc
			rest_cli[idx] = l_cli
			rest_up[idx] = l_up
			rest_prov[idx] = l_prov
			common:csr_string = l_str
			return l_retval
			break
		case "REFRESH"
			select (abmRestActual)
				case "RestEspSuc"
					refresh rest_suc[idx]
					break
				case "RestEspCli"
					refresh rest_cli[idx]
					break
				case "RestEspUp"
					refresh rest_up[idx]
					break
				case "RestEspProv"
					refresh rest_prov[idx]
					break
			end select
			break
		case "UNPROT"
			select (abmRestActual)
				case "RestEspSuc"
					unprotfield rest_suc[idx]
					break
				case "RestEspCli"
					unprotfield rest_cli[idx]
					break
				case "RestEspUp"
					unprotfield rest_up[idx]
					break
				case "RestEspProv"
					unprotfield rest_prov[idx]
					break
			end select
			break
		case "GETROWCOL"
			select (abmRestActual)
				case "RestEspSuc"
				    call csr:getrowcol rest_suc
					break
				case "RestEspCli"
				    call csr:getrowcol rest_cli
					break
				case "RestEspUp"
				    call csr:getrowcol rest_up
					break
				case "RestEspProv"
				    call csr:getrowcol rest_prov
					break
			end select
			break
		case "CONTEXTO"
			select (abmRestActual)
				case "RestEspSuc"
			 		post:tablaCli = DSC:RestSuc_tbl
				 	post:contextoCli = DSC:RestSuc_ctx
					break
				case "RestEspCli"
			 		post:tablaCli = DSC:RestCli_tbl
				 	post:contextoCli = DSC:RestCli_ctx
					break
				case "RestEspUp"
			 		post:tablaCli = DSC:RestUp_tbl
				 	post:contextoCli = DSC:RestUp_ctx
					break
				case "RestEspProv"
			 		post:tablaCli = DSC:RestProv_tbl
				 	post:contextoCli = DSC:RestProv_ctx
					break
			end select
			break
		case "GENERAPIC"
			select (abmRestActual)
				case "RestEspSuc"
					call csr:f_sanewpl dsc:pic_tmp_elegidos, PIC:PICaux_restEspSuc
					break
				case "RestEspCli"
					call csr:f_sanewpl dsc:pic_tmp_elegidos, PIC:PICaux_restEspCli
					break
				case "RestEspUp"
					call csr:f_sanewpl dsc:pic_tmp_elegidos, PIC:PICaux_restEspUp
					break
				case "RestEspProv"
					call csr:f_sanewpl dsc:pic_tmp_elegidos, PIC:PICaux_restEspProv
					break
			end select
			break
		case "APPEND"
			select (abmRestActual)
				case "RestEspSuc"
					adt_restesp_suc = valor
				    CDS APPEND FLD:post:contextoCli \
				    			FLD:adt_restesp_suc
					break
				case "RestEspCli"
					adt_restesp_cli = valor
				    CDS APPEND FLD:post:contextoCli \
				    			FLD:adt_restesp_cli
					break
				case "RestEspUp"
					adt_restesp_up = substr(valor, 0,5)
					adt_restesp_tipdoc = substr(valor, 6,2)
					adt_restesp_cuit = substr(valor, 9,11)
				    CDS APPEND FLD:post:contextoCli \
				    			FLD:adt_restesp_up \
				    			FLD:adt_restesp_tipdoc \
				    			FLD:adt_restesp_cuit
					break
				case "RestEspProv"
					adt_restesp_prov = valor
				    CDS APPEND FLD:post:contextoCli \
				    			FLD:adt_restesp_prov
					break
			end select
			break
		case "ARMAFPRINT"
			select (abmRestActual)
				case "RestEspSuc"
					if (valor != "")
					    FPRINT common:csr_string "%-20s%-20s%-5s",rest_esp[idx], rest_subesp[idx], valor
					else
						FPRINT common:csr_string "%-20s%-20s%-5s - %-35s",rest_esp[idx], rest_subesp[idx], rest_suc[idx], admin:adt_br_bank_name
					endif
					break
				case "RestEspUp"
					if (valor != "")
					    FPRINT common:csr_string "%-20s%-20s%-5s",rest_esp[idx], rest_subesp[idx], valor
					else
						FPRINT common:csr_string "%-20s%-20s%-5s-%-2s-%-11s-%-50s",rest_esp[idx], rest_subesp[idx], post:NisUP, post:CloTipDoc, post:CloCuit, post:CloRazon
					endif
					break
				case "RestEspCli"
					if (valor != "")
					    FPRINT common:csr_string "%-20s%-20s%-1s",rest_esp[idx], rest_subesp[idx], valor
					else
						FPRINT common:csr_string "%-20s%-20s%-1s%-21s",rest_esp[idx], rest_subesp[idx], rest_cli[idx], common:csr_string
					endif
					break
				case "RestEspProv"
					if (valor != "")
					    FPRINT common:csr_string "%-20s%-20s%-5s",rest_esp[idx], rest_subesp[idx], valor
					else
						FPRINT common:csr_string "%-20s%-20s%-1s - %-30s",rest_esp[idx], rest_subesp[idx], rest_prov[idx], post:adt_pcia_desc
					endif
					break
			end select
			break
		case "TOMAFPRINT"
			select (abmRestActual)
				case "RestEspSuc"
					common:csr_string = substr(valor,40,43)
					break
				case "RestEspCli"
					common:csr_string = substr(valor,40,22)
					break
				case "RestEspUp"
					common:csr_string = substr(valor,40,71)
					break
				case "RestEspProv"
					common:csr_string = substr(valor,40,34)
					break
			end select
			break
		case "LEYENDA"
			select (abmRestActual)
				case "RestEspSuc"
					common:csr_string = "CARGA POR LOTES RESTRICCION ESPECIE POR SUCURSAL"
					break
				case "RestEspCli"
					common:csr_string = "CARGA POR LOTES RESTRICCION ESPECIE POR CLIENTE"
					break
				case "RestEspUp"
					common:csr_string = "CARGA POR LOTES RESTRICCION ESPECIE POR UP"
					break
				case "RestEspProv"
					common:csr_string = "CARGA POR LOTES RESTRICCION ESPECIE POR PROVINCIA"
					break
			end select
			break
		case "INDJOURNAL"
			select (abmRestActual)
				case "RestEspSuc"
					let FLD:tlr:INDjnl_append = OFB:tes:JNLRestEspM_suc
					let FLD:drv:INDjnl_rtn = OFB:tes:JNLRestEspM_suc
					let post:INDCamposTablas = LST:tes:LISTrestsuc_flds
					let post:INDBackupTablas = LST:tes:LISTrestsuc_bck
					break
				case "RestEspCli"
					let FLD:tlr:INDjnl_append = OFB:tes:JNLRestEspM_cli
					let FLD:drv:INDjnl_rtn = OFB:tes:JNLRestEspM_cli
					let post:INDCamposTablas = LST:tes:LISTrestcli_flds
					let post:INDBackupTablas = LST:tes:LISTrestcli_bck
					break
				case "RestEspUp"
					let FLD:tlr:INDjnl_append = OFB:tes:JNLRestEspM_up
					let FLD:drv:INDjnl_rtn = OFB:tes:JNLRestEspM_up
					let post:INDCamposTablas = LST:tes:LISTrestup_flds
					let post:INDBackupTablas = LST:tes:LISTrestup_bck
					break
				case "RestEspProv"
					let FLD:tlr:INDjnl_append = OFB:tes:JNLRestEspM_prov
					let FLD:drv:INDjnl_rtn = OFB:tes:JNLRestEspM_prov
					let post:INDCamposTablas = LST:tes:LISTrestprov_flds
					let post:INDBackupTablas = LST:tes:LISTrestprov_bck
					break
			end select
			break
	end select
end sub

/*******/
