/****o* Reportes/OFB:tes:MISCpasa_buz_ev
* NOMBRE
*   OFB:tes:MISCpasa_buz_ev
* DESCRIPCION
*   Esta rutina arma el listado de Valores Depositados en Caja Buzon (Especies Valorizadas)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:tes:TRANcons_est_buz_ev,OFB:tes:MISCimpri_inf_suc
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCpasa_buz_ev
    local especie_ant like tes:espv_cod
    local listar like teso_cheq_estado
    local total_caja like siaf:importe
    local total_moneda like siaf:importe
    local buzon_ant like tes:buzon
    local loc_err_retval like lib:err_retval
    local bolsa_ant like tes:bolsa
    
    /*NI 50183
    let siaf:lineas_cl = 0 // inicializo el conteo de lineas
    let fld:tes:INDsheet_header = OFB:tes:MISCencab_simple
    call tes:MISCencab_simple*/

    let listar = "N"

    cds select from DepBuzon_tbl becomes DepBuzon_ctx where \
    tes:adt_depbuzon_suc == common:sucursal_activa && \
    tes:adt_depbuzon_tipo == "E" ascending sort "DepB_ord"
    cds findfirst dsc:DepBuzon_ctx nolock
    let loc_err_retval = cdsretval
    if (loc_err_retval < 0) then
       /* Para que no mande el mensaje en caso de ser un cierre */
       if (drv:descrip == "ESTBUZON") then
           move "(L) No hay depositos para listar" to common:csr_string
           msgbox common:csr_string,OFB_OK,"Aviso"
       end if
       cds endselect dsc:DepBuzon_ctx
       return (-8)
    else
        cds extract dsc:DepBuzon_ctx all
        let buzon_ant = tes:adt_depbuzon_caja
        let especie_ant = tes:adt_depbuzon_cod
        let bolsa_ant = ""
    end if

    While (loc_err_retval == 0) then
        fprint common:csr_string  \
        "  NRO DE CAJA: %s",adt_depbuzon_caja
        call MISCwrite_file1(5,fld:common:csr_string)
        let total_caja = 0
	//NI 50183
	fprint common:csr_string "-----------------------------------------------------------------------------"
        call MISCwrite_file1(5,fld:common:csr_string)
         fprint common:csr_string  \
        "  BOLSA      SUBCOD           FECHA/HORA DEPOSITO    OPERADOR       IMPORTE"
         call MISCwrite_file1(5,fld:common:csr_string)
         fprint common:csr_string "-----------------------------------------------------------------------------"
         call MISCwrite_file1(5,fld:common:csr_string)

        While (loc_err_retval == 0 && adt_depbuzon_caja == buzon_ant)
        /*
             let post:adt_mon_cod = siaf:moneda
             call post:CDSadt_moneda_load
             */
             fprint common:csr_string  \
             "%-15s",adt_depbuzon_cod
             call MISCwrite_file1(5,fld:common:csr_string)

             move " " to common:csr_string

             call MISCwrite_file1(5,fld:common:csr_string)
             let total_moneda = 0
             While (loc_err_retval == 0 && adt_depbuzon_caja == buzon_ant && adt_depbuzon_cod == especie_ant) then
                /*
                 fprint common:csr_string  \
	             "    BOLSA    SUBCOD    FECHA DEPOSITO     OPERADOR              IMPORTE"
	         call MISCwrite_file1(5,fld:common:csr_string)
	         fprint common:csr_string "-----------------------------------------------------------------------------"
	        */
	         //PS9678
	         ;if (tes:adt_depbuzon_bolsa == bolsa_ant) then
             ;           fprint common:csr_string "                 %-15s  %e     %5s   %15e", \
             ;           adt_depbuzon_subcod,adt_depbuzon_fecha,adt_depbuzon_op,adt_depbuzon_importe
             ;           call MISCwrite_file1(5,fld:common:csr_string)
             ;    else
                        fprint common:csr_string "  %-8.8s   %-15.15s  %e %e    %5.5s   %15e", \
                        adt_depbuzon_bolsa,adt_depbuzon_subcod,adt_depbuzon_fecha,adt_depbuzon_hora,adt_depbuzon_op,adt_depbuzon_importe
                        call MISCwrite_file1(5,fld:common:csr_string)
                        let bolsa_ant = adt_depbuzon_bolsa
              ;   end if
                 let total_moneda = adt_depbuzon_importe + total_moneda
                 cds findnext dsc:DepBuzon_ctx nolock
                 let loc_err_retval = cdsretval
                 if (loc_err_retval == 0)
                    cds extract dsc:DepBuzon_ctx all
                 end if
             Endwhile
             let especie_ant = adt_depbuzon_cod
	     fprint common:csr_string "-----------------------------------------------------------------------------"
             call MISCwrite_file1(5,fld:common:csr_string)

             fprint common:csr_string  \
             "      TOTAL                                                    %13s",total_moneda
             call MISCwrite_file1(5,fld:common:csr_string)


             move " " to common:csr_string
             call MISCwrite_file1(5,fld:common:csr_string)

             let total_caja = total_caja + total_moneda
         EndWhile
         let buzon_ant = adt_depbuzon_caja
         fprint common:csr_string,"  TOTAL CAJA BUZON ........................................%13s",total_caja
         call MISCwrite_file1(5,fld:common:csr_string)

         move " " to common:csr_string
         call MISCwrite_file1(5,fld:common:csr_string)
         move " " to common:csr_string
         call MISCwrite_file1(5,fld:common:csr_string)
   EndWhile
   cds endselect dsc:DepBuzon_ctx
 
END SUB

/*******/
