/****o* Pendientes de agrupación/OFB:tes:MISCerror_rend
* NOMBRE
*   OFB:tes:MISCerror_rend
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCerror_rend
local ltesoro like op:op_tesoro
local lsubtesoro like op:op_subtesoro
local TotalMP like siaf:importe
local mp_aux like siaf:moneda
local LRetval like lib:err_retval
local Resto like siaf:importe
local idx_aux like siaf:idx
local hay_dif like tes:en_cierre
local idx_pant like siaf:i
local LocalRetval like lib:err_retval
    
    
    cds select from dsc:AuxCheq_tbl BECOMES dsc:AuxCheq2_ctx where \
	tes:adt_cheqaux_suc    == op:op_branch_id   && \
	tes:adt_cheqaux_op     == op:op_operator_id

    cds findfirst dsc:AuxCheq2_ctx lock

	let lib:err_retval = cdsretval	
	LocalRetval = cdsretval
    //Recorro la tabla temporal
    
    
    
    if (lib:err_retval != 0) then
    	call tes:CDSPase_Ficticio    
    end if
    
    call csr:cleararray(mp_texto_ent)
    idx_aux = 0

	do    
	    if (idx_aux > 13) then
	    	break
	    end if
    	protfield mp_texto_ent[idx_aux]
    	idx_aux = idx_aux + 1
    loop
    
    idx_pant = 0
    if (LocalRetval == 0) then
    	cds extract dsc:AuxCheq2_ctx all
	end if        
	idx_aux  = 0
	do    
		hay_dif = "N"
		if (idx_aux > 13)
			break
		end if	
		if (mp_texto[idx_aux].numchars > 0) then
			mp_aux = mp_codigo[idx_aux]
		
			TotalMP = siaf:tefectivo_vec[mp_aux] + siaf:tefec_inic_vec[mp_aux]
			if (importes_pase[idx_aux] > TotalMP) then
				hay_dif = "S"
    		else
			
    			if (TotalMP > importes_pase[idx_aux] ) then
    				tes:adt_limha_mp = mp_aux
    				clearfield tes:adt_limha_caja
    				call CDSlimihabi_load
    				Resto = TotalMP - importes_pase[idx_aux]    			
    				post:adt_mp_desc = mp_texto[idx_aux]
    				if (Resto > tes:adt_limha_caja) then
    					hay_dif = "S"
    				end if
    				/* VER!!!!! */
    			end if
    		end if
		end if
		idx_aux = idx_aux + 1
		if (hay_dif == "S") then
			post:adt_mp_cod = mp_aux
			call post:CDSadt_MedPago_load
			mp_texto_ent[idx_pant] = post:adt_mp_desc
			idx_pant = idx_pant + 1

		end if
	loop			
	cds endselect dsc:AuxCheq2_ctx
    
    if (idx_pant > 0) then
		do	
			if (LRetval == 1) 
				break
			end if
			
			display tes:SCRNError_rend
			collect
			if (lastkey != RT_ESC) then
				LRetval = 1
			end if
		loop
		INIT 33,0
		FYIMSG CLEAR
		undisplay tes:SCRNError_rend
		/* Retorno -2 porque hubo diferencias */
		return (-2)
	end if    	
END SUB

/*******/
