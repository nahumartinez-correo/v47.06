/****o* Pendientes de agrupación/OFB:tes:MISCcalc_vtas_cierre
* NOMBRE
*   OFB:tes:MISCcalc_vtas_cierre
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

Sub tes:MISCcalc_vtas_cierre
    LOCAL INDICE like post:cantidad

    let siaf:tvtas_sin_iva_cierre = 0
    let siaf:tvtas_con_iva_cierre = 0

    Cds join  from DSC:tlr:TABtots  dsc:tes:rend_caj_table  becomes dsc:tes:JoinTotales where \
    DSC:tlr:TABtots.tlr:tots_branch       == FLD:op:op_branch_id                           && \
    DSC:tlr:TABtots.tlr:tots_branch       == dsc:tes:rend_caj_table.tes:rend_suc_id        && \
    DSC:tlr:TABtots.tlr:tots_operator     == dsc:tes:rend_caj_table.tes:rend_op_id         && \
    dsc:tes:rend_caj_table.tes:rend_fecha ==  tlr:set_bus_date
    CDS FindNext dsc:tes:JoinTotales   nolock
    lib:err_retval = cdsretval

    While (lib:err_retval == 0)
          Cds extract dsc:tes:JoinTotales ALL

          let siaf:tvtas_sin_iva_cierre = siaf:tvtas_sin_iva_cierre + siaf:tvtas_cierre_vec
          let siaf:tvtas_con_iva_cierre = siaf:tvtas_con_iva_cierre + siaf:tvtas_iva_cierre_vec

          Cds FindNext dsc:tes:JoinTotales nolock
          lib:err_retval = cdsretval
    End While

    Cds Endselect dsc:tes:JoinTotales

END SUB

/*******/
