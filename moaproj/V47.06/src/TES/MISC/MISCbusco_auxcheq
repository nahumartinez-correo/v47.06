/****o* Pendientes de agrupación/OFB:tes:MISCbusco_auxcheq
* NOMBRE
*   OFB:tes:MISCbusco_auxcheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCbusco_auxcheq
	LOCAL existe LIKE tes:es_tesoro

	existe = "N"
	
	CDS SELECT FROM DSC:AuxCheq_tbl BECOMES DSC:AuxCheq2_ctx \
		WHERE tes:adt_cheqaux_suc == op:op_branch_id \
		&& tes:adt_cheqaux_op  == op:op_operator_id \
		&& tes:adt_cheqaux_moneda == FLD:siaf:moneda \
		&& login_dest != FLD:tes:login_dest 

	CDS FINDFIRST DSC:AuxCheq2_ctx NOLOCK
	LET lib:err_retval = CDSRETVAL	
	//Recorro la tabla temporal
	DO
		IF (lib:err_retval != 0 || existe == "S") THEN
			BREAK
		END IF
		
		CDS EXTRACT DSC:AuxCheq2_ctx \
			array acepta_val INTO array acepta_val_aux \
			array nro_cupcheq INTO array nro_cupcheq_aux \
			array cod_banco INTO array cod_banco_aux \
			array cheqcuenta INTO array cheqcuenta_aux \
			array codigo_interno INTO array codigo_interno_aux \
			array termi_win_arr INTO array termi_win_aux
			cont1 = 0
			
		DO
			IF (cont1 > 9) THEN
				BREAK
			END IF
			
			IF (acepta_val_aux[cont1] == "S") THEN
				//Controlo si el valor es el mismo, en caso de serlo no dejo que lo seleccione para marcar.
				IF (siaf:nro_cupcheq == nro_cupcheq_aux[cont1] && siaf:cod_banco == cod_banco_aux[cont1] && \
					siaf:cheqcuenta == cheqcuenta_aux[cont1] && post:codigo_interno == codigo_interno_aux[cont1] && \
					termi_win == termi_win_aux[cont1]) THEN
					acepta_val[siaf:i] = "D"
					existe = "S" //Para que no siga recorriendo...
					BREAK
				END IF
			END IF
			cont1 = cont1 + 1
		LOOP			
        
		CDS FINDNEXT DSC:AuxCheq2_ctx NOLOCK
		LET lib:err_retval = CDSRETVAL
	LOOP       
 
	CDS ENDSELECT DSC:AuxCheq2_ctx
	
END SUB

/*******/
