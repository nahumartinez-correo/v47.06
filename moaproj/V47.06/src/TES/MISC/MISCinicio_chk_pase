/****o* Pendientes de agrupación/OFB:tes:MISCinicio_chk_pase
* NOMBRE
*   OFB:tes:MISCinicio_chk_pase
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCinicio_chk_pase

	cont1 = 0
	DO 
		IF (cont1 > 9) THEN
			BREAK
		END IF
		
		SELECT (cont1)
			CASE 0
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_0
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK0
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_0
				END IF
				ALTERCONTROLSET TAG:op:CHK0
			BREAK
			CASE 1
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_1
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK1
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_1
				END IF
				ALTERCONTROLSET TAG:op:CHK1
			BREAK    	
			CASE 2
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_2
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK2
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_2
				END IF
				ALTERCONTROLSET TAG:op:CHK2
			BREAK    	
			CASE 3
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_3
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK3
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_3
				END IF
				ALTERCONTROLSET TAG:op:CHK3
			BREAK    	
			CASE 4
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_4
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK4
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_4
				END IF
				ALTERCONTROLSET TAG:op:CHK4
			BREAK    	
			CASE 5
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_5
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK5
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_5
				END IF
				ALTERCONTROLSET TAG:op:CHK5
			BREAK    	
			CASE 6
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_6
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK6
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_6
				END IF
				ALTERCONTROLSET TAG:op:CHK6
			BREAK    	
			CASE 7
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_7
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK7
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_7
				END IF
				ALTERCONTROLSET TAG:op:CHK7
			BREAK    	
			CASE 8
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_8
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK8
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_8
				END IF
				ALTERCONTROLSET TAG:op:CHK8
			BREAK    	
			CASE 9
				IF (val_importes[cont1].NUMCHARS != 0) THEN
					SETFLAG PasesDisp_check,item_9
					IF (acepta_val_aux[cont1] == "N") THEN
						ENABLECONTROL TAG:op:CHK9
					END IF
				ELSE
					RESETFLAG PasesDisp_check,item_9
				END IF
				ALTERCONTROLSET TAG:op:CHK9
			BREAK    		
		END SELECT
		LET cont1 = cont1 + 1
	LOOP
	
END SUB

/*******/
