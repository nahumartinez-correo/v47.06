/****o* Pendientes de agrupación/OFB:tes:MISCllena_scr_ent
* NOMBRE
*   OFB:tes:MISCllena_scr_ent
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCllena_scr_ent
    CDS SELECT FROM DSC:tes:teso_mov_table BECOMES DSC:tes:teso_mov_context \
    WHERE tmov_suc_id == op:op_branch_id && \
    tmov_fecha == common:system_date && \
    tmov_login_dest == op:op_login_id && \
    tmov_op_id_orig == tmov_op_id_orig && \
    tmov_login_orig == tmov_login_orig && \
    tmov_sequence_pase == tmov_sequence_pase && \
    (tmov_marca_ing == " " || tmov_marca_ing == "E" || tmov_marca_ing == "S")
    
    CDS FINDFIRST DSC:tes:teso_mov_context LOCK
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval < 0)
		RETURN (-2)
	END IF
	flag_buzon = "X"
	cont1 = 0
	DO
		CDS EXTRACT DSC:tes:teso_mov_context ALL
		
		/*Ontengo la descripcion del MP*/
		post:adt_mp_cod = tmov_moneda
      	call post:CDSadt_MedPago_load
       	
		mp_codigo[cont1] = tmov_moneda
		refresh mp_codigo[cont1]
		mp_texto_ent[cont1] = post:adt_mp_desc
       	refresh mp_texto_ent[cont1]
		importes_pase[cont1] = tmov_total
		refresh importes_pase[cont1]
		es_rechazo_mp[cont1] = tmov_es_rechazo
		if (tmov_marca_ing == "S") //Si es "S", pongo un valor distinto de "N" al vecto de es rechazo, para que no me habilite y no me deje rechazar.
			es_rechazo_mp[cont1] = "Y"
		end if
		/* Si el pase es una extraccion del fondo no permito rechazo */
	
		if (tmov_codigo_siaf == 8990) then
			es_rechazo_mp[cont1] = "Y"
		end if
			
		refresh es_rechazo_mp[cont1]
				
		CDS FINDNEXT  DSC:tes:teso_mov_context LOCK
		lib:err_retval = CDSRETVAL
		IF (lib:err_retval < 0 || cont1 > 13)
			BREAK
		END IF
		cont1 = cont1 + 1
	LOOP
	CDS UNLOCK DSC:tes:teso_mov_context
	CDS ENDSELECT DSC:tes:teso_mov_context
    cont1 = 0
    DO 
    	IF (cont1 > 13) THEN
    		BREAK
    	END IF
		select (cont1)
			case 0
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_0
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK0
					end if
				else
					resetflag acepta_ent,item_0
				end if
				altercontrolset tag:op:CHK0
				break
			case 1
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_1
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK1
					end if
				else
					resetflag acepta_ent,item_1
				end if
				altercontrolset tag:op:CHK1
				break    	
			case 2
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_2
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK2
					end if
				else
					resetflag acepta_ent,item_2
				end if
				altercontrolset tag:op:CHK2
				break    	
			case 3
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_3
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK3
					end if
				else
					resetflag acepta_ent,item_3
				end if
				altercontrolset tag:op:CHK3
				break    	
			case 4
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_4
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK4
					end if
				else
					resetflag acepta_ent,item_4
				end if
				altercontrolset tag:op:CHK4
				break    	
			case 5
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_5
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK5
					end if
				else
					resetflag acepta_ent,item_5
				end if
				altercontrolset tag:op:CHK5
				break    	
			case 6
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_6
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK6
					end if
				else
					resetflag acepta_ent,item_6
				end if
				altercontrolset tag:op:CHK6
				break    	
			case 7
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_7
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK7
					end if
				else
					resetflag acepta_ent,item_7
				end if
				altercontrolset tag:op:CHK7
				break    	
			case 8
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_8
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK8
					end if
				else
					resetflag acepta_ent,item_8
				end if
				altercontrolset tag:op:CHK8
				break    	
			case 9
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_9
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK9
					end if
				else
					resetflag acepta_ent,item_9
				end if
				altercontrolset tag:op:CHK9
				break    	
			case 10
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_10
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK10
					end if
				else
					resetflag acepta_ent,item_10
				end if
				altercontrolset tag:op:CHK10
				break    	
			case 11
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_11
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK11
					end if
				else
					resetflag acepta_ent,item_11
				end if
				altercontrolset tag:op:CHK11
				break    	
			case 12
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_12
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK12
					end if
				else
					resetflag acepta_ent,item_12
				end if
				altercontrolset tag:op:CHK12
				break    	
			case 13
				if (mp_texto_ent[cont1].numchars != 0)
					setflag acepta_ent,item_13
					if (es_rechazo_mp[cont1] == "N")
						enablecontrol tag:op:CHK13
					end if
				else
					resetflag acepta_ent,item_13
				end if
				altercontrolset tag:op:CHK13
				break    	
		end select
		let cont1 = cont1 + 1
	LOOP
    /*DO
    	IF (cont1 > 13) THEN
    		BREAK
    	END IF
		HIDEFIELD tes:mp_texto_ent[cont1]
		HIDEFIELD tes:importes_pase[cont1]
		
		let cont1 = cont1 + 1
	LOOP*/
END SUB

/*******/
