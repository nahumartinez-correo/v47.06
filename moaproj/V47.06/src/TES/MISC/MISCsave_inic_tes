/****o* Pendientes de agrupación/OFB:tes:MISCsave_inic_tes
* NOMBRE
*   OFB:tes:MISCsave_inic_tes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCsave_inic_tes
    LOCAL loc_jnl_rtn   LIKE drv:INDjnl_rtn
    LOCAL loc_tran_name LIKE tlr:jnl_tran_name
    LOCAL loc_mnemonic  LIKE tlr:tran_mnemonic
    LOCAL loc_nom_tran  LIKE siaf:nombre_transac
    LOCAL mone          LIKE siaf:cant
    LOCAL loc_scr       LIKE drv:INDscr

    CDS SELECT FROM DSC:tes:tesoro_table \
    BECOMES DSC:tes:tesoro_context WHERE tes:tes_suc_id == op:op_branch_id
    CDS FINDFIRST DSC:tes:tesoro_context LOCK
    if (cdsretval < 0) then
       return (-1)
    end if
    DO
		CDS EXTRACT DSC:tes:tesoro_context ALL
       	let siaf:moneda = tes:tes_moneda

       	let post:adt_mp_cod = tes:tes_moneda
       	call post:CDSadt_MedPago_load
       
       	let post:medio_pago_desc = post:adt_mp_desc
       
       	//journalizar saldo_inic
       	loc_jnl_rtn   = drv:INDjnl_rtn
       	loc_tran_name = tlr:jnl_tran_name
       	loc_mnemonic  = tlr:tran_mnemonic
       	loc_nom_tran  = siaf:nombre_transac
       	loc_scr       = drv:INDscr

       	tlr:jnl_tran_name   = "SDOTES"
       	tlr:tran_mnemonic   = "SDOTES"
       	siaf:nombre_transac = "SALDO INICIAL DE TESORO"
       	siaf:codigo_siaf = 6070
       	FLD:drv:INDjnl_rtn  = OFB:tes:JNLsaldo_tesoro
       	;let drv:INDscr      = SCR:tes:SCRNrend_inic_caj
       	let drv:INDscr      = SCR:siaf:SCRNencabe_alto
       	call CDSinicial_CajaBuzon // Guarda el inicial de Caja Buzon
       	call CDSinicial_subteso // Guarda el inicial de SubTesoro
       	let post:CodOperador = tes:tes_tes_id
       	let siaf:importe = tes:tes_total // Guarda el Total
       	ungetkey 0x190
       	call siaf:MISClleno_modalidad
       	call tlr:JNLtran

       	drv:INDjnl_rtn      = loc_jnl_rtn
       	tlr:jnl_tran_name   = loc_tran_name
       	tlr:tran_mnemonic   = loc_mnemonic
       	siaf:nombre_transac = loc_nom_tran
       	drv:INDscr          = loc_scr

       	CDS FINDNEXT DSC:tes:tesoro_context nolock
       	if (cdsretval < 0) then
			break
       	end if
    LOOP
    CDS ENDSELECT DSC:tesoro_context
    clearfield post:medio_pago_desc
END SUB

/*******/
