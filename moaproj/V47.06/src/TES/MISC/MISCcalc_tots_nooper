/****o* Pendientes de agrupación/OFB:tes:MISCcalc_tots_nooper
* NOMBRE
*   OFB:tes:MISCcalc_tots_nooper
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

Sub tes:MISCcalc_tots_nooper
    LOCAL INDICE like post:cantidad

    call csr:cleararray(siaf:aux3imp_vec)
  
    Cds join from DSC:tlr:TABtots dsc:tes:rend_caj_table becomes dsc:tes:JoinTotales where \
    DSC:tlr:TABtots.tlr:tots_branch       == FLD:op:op_branch_id                        && \
    DSC:tlr:TABtots.tlr:tots_branch       == dsc:tes:rend_caj_table.tes:rend_suc_id     && \
    DSC:tlr:TABtots.tlr:tots_operator     == dsc:tes:rend_caj_table.tes:rend_op_id      && \
    dsc:tes:rend_caj_table.tes:rend_fecha != tlr:set_bus_date
    CDS FindFirst dsc:tes:JoinTotales nolock
    lib:err_retval = cdsretval

    While (lib:err_retval == 0)
        call csr:cleararray(siaf:aux1imp_vec)
        call csr:cleararray(siaf:aux2imp_vec)
        Cds extract dsc:tes:JoinTotales                     \
        array siaf:tefectivo_vec  into array siaf:aux1imp_vec \
        array siaf:tefec_inic_vec into array siaf:aux2imp_vec
        INDICE = 0
        While (INDICE <= IDX_MONEDA)
            siaf:aux3imp_vec[INDICE] = siaf:aux3imp_vec[INDICE] + siaf:aux2imp_vec[INDICE] + siaf:aux1imp_vec[INDICE]
            INDICE = INDICE + 1
        End While
        Cds FindNext dsc:tes:JoinTotales nolock
        lib:err_retval = cdsretval
    End While
    Cds Endselect dsc:tes:JoinTotales
END SUB

/*******/
