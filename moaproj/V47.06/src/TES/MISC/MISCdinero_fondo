/****o* Pendientes de agrupación/OFB:tes:MISCdinero_fondo
* NOMBRE
*   OFB:tes:MISCdinero_fondo
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCdinero_fondo
	local moneda_MP like siaf:moneda

	post:tipo_rest = GLOBAL_MONETARIO
	
    call post:MISCrest_saldo(common:sucursal_activa,"pic:PICmedios","N","subtesoro")
 
    idx = 0 
    let idx = 0
	let i_idx = PL_GETITEM + 0
    do
        ;idx = idx + PL_GETITEM 
        call csr:myPickcontrol(dsc:post:pic_medios,common:csr_string,i_idx)
		if (retval < 0)
		    break
		end if
        moneda_MP = SUBSTR(common:csr_string,0,2)
        tes:subtes_moneda = moneda_MP
        clearfield tes:subtes_total
        call tes:CDScons_subtes
        if (retval == 0) then
			tes:adt_limha_mp = tes:subtes_moneda
			call tes:CDSlimihabi_load
			/* Si hay algo cargado controlo*/
			if (retval == 0) then
				if (tes:subtes_total < tes:adt_limha_min) then
					post:adt_mp_cod = tes:subtes_moneda
					call post:CDSadt_MedPago_load
					fprint common:csr_string "El Medio de Pago %-s No alcanza el Mínimo para el Fondo de Habilitacion", post:adt_mp_desc
					ERRMSG LST:common:errmsg_list, fld:common:csr_string
					cds endselect tes:subteso_context
					RETURN (-2)
				end if        
			end if		
		end if
        idx = idx + 1
        let i_idx = PL_GETITEM + idx

    loop
    call csr:f_sadroppl PIC:post:PICmedios
    return (0)
    
END SUB

/*******/
