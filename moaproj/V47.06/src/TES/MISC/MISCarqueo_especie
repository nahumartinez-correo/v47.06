/****o* Pendientes de agrupación/OFB:tes:MISCarqueo_especie
* NOMBRE
*   OFB:tes:MISCarqueo_especie
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

/* Este OFB calcula el total de una especie valorizada en pesos
y llama a un indirecto drv:INDtran_arqueo para relizar lo que
se desee por ejemplo carga inicial con arqueo o pase de marca con
arqueo, etc */

SUB tes:MISCarqueo_especie(op,tes)
    local total_imp like siaf:importe

    cds select unique adt_espv_cod from Especie becomes "Esp1"
    cds findfirst "Esp1" nolock
    let lib:err_retval = cdsretval

    do
        if (lib:err_retval < 0)
           break
        end if

	cds extract "Esp1" adt_espv_cod
	let tes:espv_cod = adt_espv_cod
        protfield espv_cod
        /*ACP-SC 50170: post:importe paso a tener 4 decimales y un path de 2 decimales*/
        //clearfield post:importe
        clearfield post:importe_old
        
        let siaf:importe = 0
	cds select from Especie becomes "Esp2" where \
	    adt_espv_cod == adt_espv_cod
	cds findfirst "Esp2" nolock
	if (cdsretval == 0)
	do
	  cds extract "Esp2" adt_espv_subcod adt_espv_valor
          if (cdsretval < 0)
                break
	  end if
	  let tes:adt_espv_es_tesoro = tes
	  let tes:adt_espv_id = op
	  cds select from TesEspV becomes TesEspV where \
          adt_espv_suc == op:op_branch_id && \
          adt_espv_es_tesoro == tes:adt_espv_es_tesoro && \
	  adt_espv_id == tes:adt_espv_id && \
	  adt_espv_cod == adt_espv_cod && \
	  adt_espv_subcod == adt_espv_subcod
	  adt_espv_importe = 0
	  cds findfirst TesEspV nolock
	  if (cdsretval == 0)
		cds extract TesEspV adt_espv_importe
	  end if
	  siaf:importe = siaf:importe + adt_espv_importe
	  cds endselect TesEspV
	  cds findnext "Esp2" nolock
	  if (cdsretval < 0)
	     break
          end if

        loop
        endif
        cds endselect "Esp2"
        /* Llama a el tipo de arqueo que hay que hacer  */
        post:importe_origen = siaf:importe
        if (fld:drv:INDtran_arqueo.numchars > 0)
                call fld:drv:INDtran_arqueo
        end if
        cds findnext "Esp1" nolock
        let lib:err_retval = cdsretval
        FYIMSG CLEAR
    loop
    cds endselect "Esp1"
END SUB

/*******/
