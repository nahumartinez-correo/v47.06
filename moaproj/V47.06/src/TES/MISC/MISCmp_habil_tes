/****o* Pendientes de agrupación/OFB:tes:MISCmp_habil_tes
* NOMBRE
*   OFB:tes:MISCmp_habil_tes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCmp_habil_tes
    // Recorro el picklist con los medios de pago habilitados
    let cant_mp = 0
    let cont1 = 0
    	
	PasesDisp_cant = 0
	PasesDisp_idx = 0

    CDS SELECT FROM DSC:tes:tesoro_table \
    BECOMES DSC:tes:tesoro_context WHERE tes:tes_suc_id == op:op_branch_id
    CDS CLEARBUFFER DSC:tes:tesoro_context
    CDS FINDFIRST DSC:tes:tesoro_context nolock
	IF (cdsretval == 0) THEN
		//Creo el picklist que contendra las modenas y los importes del arqueo
		call csr:f_sadroppl dsc:PICPasesDisp
		call CSR:f_sanewpl dsc:PICPasesDisp pic:PICPasesDisp 605,332
	END IF

    DO
      	if (cdsretval < 0) THEN
			break
      	end if
      
      	cds extract tes:tesoro_context tes:tes_moneda
      	post:adt_mp_cod = tes:tes_moneda
      	call post:CDSadt_MedPago_load

       	IF (cont1 < 13) THEN
	       	tes:arqueo_espv_cod[cont1] = substr(post:adt_mp_desc,0,20)
	       	tes:arqueo_espv_imp[cont1] = 0
	    	REFRESH tes:arqueo_espv_cod[cont1]
	    	PROTFIELD tes:arqueo_espv_cod[cont1]
	    	REFRESH tes:arqueo_espv_imp[cont1]
			UNPROTFIELD tes:arqueo_espv_imp[cont1]
		END IF
		siaf:importe2 = 0
		/*Grabo en el picklist el total que tiene en la caja y el campo que va a cargar en 0 */
		fprint common:csr_string "%-20s %16.16e %-2s",substr(post:adt_mp_desc,0,20),siaf:importe2,post:adt_mp_cod
		Call csr:f_saaddpl dsc:PICPasesDisp common:csr_string
		
		let cant_mp = cant_mp + 1	//Dejo la cantidad de medios de pagos que fueron cargados.
		let cont1 = cont1 + 1
		PasesDisp_cant = PasesDisp_cant + 1
		
		cds findnext dsc:tes:tesoro_context nolock
    loop
    if (tes:cont1 < 13) then
	    DO
	    	IF (cont1 >= 13) THEN
	    		BREAK
	    	END IF
			CLEARFIELD tes:arqueo_espv_cod[cont1]
			PROTFIELD tes:arqueo_espv_cod[cont1]
			CLEARFIELD tes:arqueo_espv_imp[cont1]
			PROTFIELD tes:arqueo_espv_imp[cont1]
			let cont1 = cont1 + 1
		LOOP
	end if

END SUB

/*******/
