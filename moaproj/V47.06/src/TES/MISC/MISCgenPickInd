/****o* Pendientes de agrupación/OFB:tes:MISCgenPickInd
* NOMBRE
*   OFB:tes:MISCgenPickInd
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

sub tes:MISCgenPickInd(ind)
	; Esta rutina genera el picklist individual de seleccion.
	LOCAL indice		LIKE post:Tarif_idx
	LOCAL lesp			LIKE adt_restesp_esp
	LOCAL lsubesp		LIKE adt_restesp_subesp
	LOCAL lesp_ori		LIKE adt_restesp_esp
	LOCAL lsubesp_ori	LIKE adt_restesp_subesp
	LOCAL valor			LIKE common:csr_string
	LOCAL i 			LIKE siaf:i
	LOCAL l_string 		LIKE common:csr_string

	call MISCrestMultgeneral("GENERAPIC", 0, "")

	; Ordeno el picklist
    call csr:PickOp PICKOP_SORT dsc:pic_elegidos "0,45"
	; Busco el primero
    FPRINT common:csr_string "%-20s%-20s",rest_esp[ind], rest_subesp[ind]
    call csr:PickOp PICKOP_SEARCH dsc:pic_elegidos common:csr_string //Buscar en el picklist
	if (retval >= 0)
	    ; Voy al primero (de los que encontre)
		indice = retval + PL_GETITEM
		; lectura adelantada
		call csr:myPickcontrol(dsc:pic_elegidos,common:csr_string,indice)
		lib:err_retval = RETVAL
		lesp = substr(common:csr_string,0,20)
		lsubesp = substr(common:csr_string,20,20)

		call MISCrestMultgeneral("TOMAFPRINT", 0, common:csr_string)
		valor = common:csr_string

		lesp_ori = lesp
		lsubesp_ori = lsubesp
		WHILE (lesp_ori == lesp && lsubesp_ori == lsubesp && lib:err_retval >= 0)
			; recorro hasta que me cambie la clave
			FPRINT common:csr_string "%s",valor
			CALL csr:f_saaddpl dsc:pic_tmp_elegidos common:csr_string
			indice = indice + 1
			call csr:myPickcontrol(dsc:pic_elegidos,common:csr_string,indice)
			lib:err_retval = RETVAL
			lesp = substr(common:csr_string,0,20)
			lsubesp = substr(common:csr_string,20,20)
			call MISCrestMultgeneral("TOMAFPRINT", 0, common:csr_string)
			valor = common:csr_string
		END WHILE

		call MISCprotTodoRestEspM

		call post:MISCflecha_restore
		clearfield common:csr_string
	    call csr:f_sadopl dsc:pic_tmp_elegidos common:csr_string
	    l_string = common:csr_string
		keydef f29,drv:PBcb13 //flecha arriba
		keydef f32,drv:PBcb14  //flecha abajo

		enablecontrol drv:PBcb0
		enablecontrol drv:PBcb1
		i = ind
		call tes:MISChabDeshabFlechas(i)
		; vuelvo a procesar la grilla
		call tes:MISCproc_restEspM
		common:csr_string = l_string
	    LET lib:err_retval = RETVAL
	else
		clearfield common:csr_string
	endif
	call csr:f_sadroppl(dsc:pic_tmp_elegidos)
end sub

/*******/
