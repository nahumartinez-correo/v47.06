/****o* Pendientes de agrupación/OFB:tes:MISCmp_habil
* NOMBRE
*   OFB:tes:MISCmp_habil
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

/* VER CON ALE*/
SUB tes:MISCmp_habil
    // Recorro el picklist con los medios de pago habilitados
    let cant_mp = 0
    let idx = 0
	let i_idx = PL_GETITEM + 0
    let cont1 = 0
    
	call csr:myPickcontrol dsc:post:pic_medios common:csr_string i_idx

    do
      	if (retval < 0 || cont1 > 13) THEN
			break
      	end if
      
      	post:adt_mp_cod = substr(common:csr_string,0,2)
      	call post:CDSadt_MedPago_load

       	mp_texto[cont1] = post:adt_mp_desc
       	mp_codigo[cont1] = post:adt_mp_cod
    	REFRESH mp_texto[cont1]
    	PROTFIELD mp_texto[cont1]
    	UNPROTFIELD tes:importes_pase[cont1]
       	
       	//importes_pase[cont1] = siaf:tefectivo_vec[cont1] + siaf:tefec_inic_vec[cont1]
    	//REFRESH tes:importes_pase[cont1]
    	//post:importe_origen = post:importe_origen + tes:importes_pase[cont1]
		
		let cant_mp = cant_mp + 1	//Dejo la cantidad de medios de pagos que fueron cargados.
		let cont1 = cont1 + 1
      	let idx = idx + 1
      	let i_idx = PL_GETITEM + idx
      	call csr:myPickcontrol dsc:post:pic_medios common:csr_string i_idx
    loop
    DO
    	IF (cont1 > 13) THEN
    		BREAK
    	END IF
		HIDEFIELD tes:mp_texto[cont1]
		HIDEFIELD tes:importes_pase[cont1]
		PROTFIELD tes:mp_texto[cont1]
		PROTFIELD tes:importes_pase[cont1]
		let cont1 = cont1 + 1
	LOOP
END SUB

/*******/
