/****o* Pendientes de agrupación/OFB:tes:MISCtot_hab_ant
* NOMBRE
*   OFB:tes:MISCtot_hab_ant
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesMISC.h"

SUB tes:MISCtot_hab_ant
    local moneda_ant    like siaf:moneda
    local importe_buzon like siaf:importe

    local loc_err        like lib:err_retval
    local indice         like siaf:i
    local loc_imp_pases  like siaf:aux_suma_monto
    local loc_imp_fisico like siaf:aux_suma_monto
    local total_final    like siaf:aux_suma_monto

    let common:csr_string = "INFORMACION DE FONDO HABILITACION"


    call MISCwrite_file1(5,fld:common:csr_string)
    move "  " to common:csr_string
    call MISCwrite_file1(5,fld:common:csr_string)
	

    move "  " to common:csr_string
    call MISCwrite_file1(5,fld:common:csr_string)

    
	 /* Imprimo el Total del Tesoro */
	let common:csr_string = "             SALDO INICIAL     ENTRADAS         SALIDAS       SALDO FINAL  "
	call MISCwrite_file1(5,fld:common:csr_string)
	move " ------------------------------------------------------------------------" to common:csr_string
	call MISCwrite_file1(5,fld:common:csr_string)

	;VERR!!!!
	CALL tes:MISCpases_pend_ante(tes:den_moneda,siaf:fecha_proceso,common:sucursal_activa,op:op_operator_id,"F",SUCURSAL,tes:total_imp_mov)
    
    loc_imp_pases  = siaf:importe
    siaf:importe   = siaf:importe + total_final
    loc_imp_fisico = siaf:importe
	
	
    ;let common:csr_string = " ------------------------------------------------------------------------"
    ;call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL DISP.%13.13e   %13.13e   %13.13e   %13.13e" subtes_tot_inic,subtes_tot_entrada,subtes_tot_salida,subtes_total
    call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL EN PASES                                             %13.13e" loc_imp_pases
    call MISCwrite_file1(5,fld:common:csr_string)
    fprint common:csr_string " TOTAL FISICO                                               %13.13e" loc_imp_fisico
    call MISCwrite_file1(5,fld:common:csr_string)

   /**************************************************************************/
   /* Se carga en la matriz la información del dinero de la sucursal.        */
   /* Esta matriz funciona de la siguiente manera: cada fila es la moneda y  */
   /* cada columna significa:                                                */
   /* - col 0 : Efectivo Tesoro                                              */
   /* - col 1 : Cheques  Tesoro                                              */
   /* - col 2 : Efectivo Cajas                                               */
   /* - col 3 : Cheques  Cajas                                               */
   /* - col 4 : Efectivo Buzon                - Andrea -                     */
   /* - col 5 : Cheques  Buzon												 */
   /* - col 6 : Fondo Habilitacion Efvo                                      */  
   /**************************************************************************/

   /* Efectivo */
   if (post:adt_mp_adm == "G") && (post:adt_mp_monet == "S")
      matriz_dinero[post:adt_mon_cod][6] = subtes_total + matriz_dinero[post:adt_mon_cod][6] 
   endif

   total_moneda = total_moneda + subtes_total   
   /* Fin de carga de la matriz */

End Sub

/*******/
