/****o* Pendientes de agrupación/OFB:tes:TRANrecons_testbl
* NOMBRE
*   OFB:tes:TRANrecons_testbl
* DESCRIPCION
* 	Este OFB tiene como finalidad rearmar la tabla de tesoro en base a la tabla
*	backup de tesoro y el journal del dia.
* 	NOTA: El OFB esta dise$ado para restaurar la tabla de tesoro en base a dos
*	monedas (pesos y dolares) existentes en este momento.
*	El valor de los campos tes:tes_fecha y tes:tes_hora_backup, son
*	tomados en CDSvuelco_tabla y utilizados en OFB's subsiguientes, por
*	lo tanto se debe tener cuidado con modificaciones intermedias
*	OJO!! (02/07/97): luego de un cambio en los requerimientos la reconstruccionse hace por moneda, dentro de un loop. Es importante que se siga la
*	consigna que: 		importes_aux1 refleja a tes_importes
*			importes_aux2 refleja a tes_salidas
*			importes_aux3 refleja a tes_entradas
*	para saber sobre que arreglo actuar en caso de una modificacion posterior
*
*	Otro Arreglo: 16/02/1999 Para que admita otro tipo de monedas que no sea 
*	EFECTIVO se agrego a la tabla tesoro los campos 
*	tes_total                imp_aux1
*	tes_tot_salida           imp_aux2
*	tes_tot_entrada          imp_aux3
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "tesTRAN.h"

SUB tes:TRANrecons_testbl
	local varl_moneda like siaf:moneda
	local varl_dia	  like common:system_date
	call csr:cleararray tes:importes_aux1
	call csr:cleararray tes:importes_aux2
	call csr:cleararray tes:importes_aux3
        clearfield tes:imp_aux1
        clearfield tes:imp_aux2
        clearfield tes:imp_aux3
        
	if (LASTKEY == RT_ESC) then
		return (-2)
	end if

	/* limpio la tabla de tesoro actual */
	CDS SELECT FROM DSC:tes:teso_bak_table BECOMES DSC:tes:teso_bak_ctx
	CDS FINDFIRST DSC:tes:teso_bak_ctx NOLOCK
	if (cdsretval != 0) then
		let common:csr_string = "Tabla resguardo de Tesoro no Existe"
		errmsg common:errmsg_list,fld:common:csr_string
		return (-3)
	end if
	call CDSclear_tesoro
	if (retval != 0) then
		return (-3)
	end if
	CDS BEGINWORK // comienzo una Unidad Logica de Trabajo
	/* paso el contenido de la tabla backup de tesoro a la tabla orig. */
	call CDSvuelco_tabla (dsc:tes:teso_bak_table,dsc:tes:teso_bak_ctx,\
				dsc:tes:tesoro_table,dsc:tes:tesoro_context)
	if (retval != 0)
		CDS ROLLBACKWORK // vuelvo atras los cambios
		return (-3)
	end if
	/* Corro un OFB que deja al tesoro como en el momento de la apertura
	   Guardo la fecha porque la SVAL la modifica, y eso no me sirve en
	   la reconstruccion (necesito la fecha de bakup para updt_con_jnl)
	 */
	let varl_dia = tes:tes_fecha // guardo fecha de backup
	call tes:MISCaper_teso
	if (retval != 0)
		CDS ROLLBACKWORK // vuelvo atras los cambios
		return (-3)
	end if


	CDS select from dsc:tesoro_table becomes dsc:teso2_ctx where \
	tes:tes_suc_id == common:sucursal_activa
	cds findfirst dsc:teso2_ctx nolock
	let lib:err_retval = cdsretval
        if (lib:err_retval < 0)
		CDS ROLLBACKWORK // vuelvo atras los cambios
		return (-3)
        end if
	do
	    if (lib:err_retval < 0) then
	        break // vuelvo atras los cambios
	    end if
	    cds extract dsc:teso2_ctx tes:tes_moneda into varl_moneda
	    call CDSpaso_imp_a_vect(varl_moneda)
	    if (retval != 0)
		CDS ROLLBACKWORK // vuelvo atras los cambios
		return (-3)
	    end if
	    
	    cds select tes:tes_hora_backup from dsc:teso_bak_table \
	    becomes dsc:teso_bak_ctx where \
	    tes:tes_suc_id ==  common:sucursal_activa && \
	    tes:tes_moneda == varl_moneda
	    cds findfirst dsc:teso_bak_ctx nolock
	    if (cdsretval == 0) then
	        cds extract dsc:teso_bak_ctx all
	    end if
            cds endselect dsc:teso_bak_ctx
	    /* actual. importes de los vect. aux. segun tran. del jnl de hoy */
	    call MISCupdt_imp_con_jnl(varl_moneda,varl_dia)
	    if (retval != 0)
    		CDS ROLLBACKWORK // vuelvo atras los cambios
	    	return (-3)
    	    end if
	    /* vuelco los importes corregidos a la tabla de tesoro */
	    call MISCactualizo_tesoro(varl_moneda)
	    if (retval != 0)
		CDS ROLLBACKWORK // vuelvo atras los cambios
		return (-3)
	    end if
	    cds findnext dsc:teso2_ctx nolock
	    let lib:err_retval = cdsretval
	loop
        cds endselect dsc:teso2_ctx
	CDS COMMITWORK	// termino la Unidad Logica de Trabajo
END SUB        

/*******/
