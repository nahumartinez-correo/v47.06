/****o* Pendientes de agrupación/OFB:common:CDSprotectedPick
* NOMBRE
*   OFB:common:CDSprotectedPick
* DESCRIPCION
*   Trae las lista asociadas a la transaccion para que no las elimine al invocar a
*   CSR:KillPic (elimina los picklist que estan en memoria menos los contenidos en el 
*   campo common:protected_pick)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   tes:PRESciefor_suc
*   tes:MISCclose_suc
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "commonofb.h"
#define DT_TRAN_DEBUG 99

SUB common:CDSprotectedPick
    LOCAL l_cdsretval LIKE lib:err_retval 
    LOCAL l_pick_name LIKE common:pick_name
    
    CLEARFIELD common:protected_pick
    CDS ENDSELECT DSC:common:protected_pick_ctx

    CDS SELECT FROM DSC:common:protected_pick_tbl BECOMES 	DSC:common:protected_pick_ctx \
                WHERE siaf:codigo_siaf == siaf:codigo_siaf SORT "primary"
                          		  
	CDS FINDFIRST DSC:common:protected_pick_ctx LOCK
	l_cdsretval = CDSRETVAL
	
	WHILE (l_cdsretval == 0) 
	    CLEARFIELD l_pick_name
		CDS EXTRACT DSC:common:protected_pick_ctx common:pick_name INTO l_pick_name
		
		FPRINT common:protected_pick "%s|%s" common:protected_pick,l_pick_name
		
		CDS FINDNEXT DSC:common:protected_pick_ctx LOCK
		l_cdsretval = CDSRETVAL
	END WHILE

    CDS ENDSELECT DSC:common:protected_pick_ctx
    
    CALL CSR:KillPic(DT_TRAN_DEBUG, DT_PIC, common:protected_pick)
  
END SUB

/*******/
