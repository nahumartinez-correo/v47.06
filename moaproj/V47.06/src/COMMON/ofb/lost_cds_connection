/****o* Pendientes de agrupación/OFB:common:lost_cds_connection
* NOMBRE
*   OFB:common:lost_cds_connection
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "commonofb.h"

    SUB common:lost_cds_connection
/*  This routine is run when the connection to the Central Data
	Server is lost.  When running a single "unnamed" server the
	connection is re-established automatically.  If running
	multiple servers a CDS CONNECT "servername" statement must be
	issued for each additional server.  NOTE:  When the server dies
	ALL contexts are lost (for all servers), additional cleanup
	to re-establish contexts or do cleanup needs to be added to
	this routine.
*/
	let fld:common:trap_reset = ofb:common:lost_cds_connection
	keydef clear
#if BASE_CFIG_BATCH == 1
	if (testflag(rt_flags,batch_mode))
		CALL  OFB:batch:batch_lost_cds
		END
	END IF
#endif
	pdm enableitem drv:menubar ALL MOA_DISABLED
	MOVE "Reestablishing lost CDS Connection" TO drv:error_msg
	CALL  OFB:drv:error_msg

/*      Call application specific cleanup routines in order to reset flags
	fields,indirect objects etc.
*/
#if BASE_CFIG_NA == 1
	if (testflag(lib:state_flags,na))
		CALL  OFB:na:MISCcleanup_sub
	END IF
#endif
#if BASE_CFIG_TLR == 1
	if (testflag(lib:state_flags,teller))
		CALL  OFB:tlr:APPLcleanup
	END IF
#endif
#if BASE_CFIG_CL == 1
	if (testflag(lib:state_flags,loans))
		MOVE DSC:cl:cl_upper_no TO cl:cl_opened
	END IF
#endif
	CALL  OFB:drv:reset_all
	CLEARFIELD drv:init_only
	if (lib:stat_operator_id != "") then
	/* server reconnect is done in "starting_point" */
		cleanstart starting_point
	else
	/* si el operador todavia no se termino de identificar vuelve a
	   empezar la aplicacion...*/
		clearfield op:op_login_id
		cleanstart drv:driver_main
	end if
	END SUB

/*******/
