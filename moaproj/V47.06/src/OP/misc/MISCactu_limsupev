/****o* Pendientes de agrupación/OFB:op:MISCactu_limsupev
* NOMBRE
*   OFB:op:MISCactu_limsupev
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "opmisc.h"

SUB op:MISCactu_limsupev
    local aux like TipoEntero
    local ind like TipoEntero

    LET post:adt_limsupev_suc = op:adt_branch_id
    LET post:adt_limsupev_op  = op:adt_operator_id

    CDS SELECT FROM DSC:post:adt_limsupev_table BECOMES DSC:post:adt_limsupev_context \
        WHERE post:adt_limsupev_suc == FLD:post:adt_limsupev_suc && \
              post:adt_limsupev_op  == FLD:post:adt_limsupev_op
    CDS FINDFIRST dsc:post:adt_limsupev_context LOCK
    while (cdsretval == 0)
        CDS DELETE DSC:post:adt_limsupev_context
        CDS FINDNEXT dsc:post:adt_limsupev_context LOCK
    end while

    CDS ENDSELECT DSC:post:adt_limsupev_context

	IF (!TESTFLAG(op:mode_flags,update))
        RETURN
    END IF

    LET ind = 0
    LET aux = PL_GETITEM + ind
    call csr:myPickcontrol DSC:dynapic_0 common:csr_string aux

    WHILE (RETVAL == 0)
        LET post:adt_limsupev_especie = SUBSTR(common:csr_string, 0,20)
        LET post:adt_limsupev_impmax  = SUBSTR(common:csr_string,20,12)

        call post:CDSlimsupev_save

        LET ind = ind + 1
        LET aux = PL_GETITEM + ind
        call csr:myPickcontrol DSC:dynapic_0 common:csr_string aux
    END WHILE
END SUB

/*******/
