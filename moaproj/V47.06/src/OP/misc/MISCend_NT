/****o* Pendientes de agrupación/OFB:op:MISCend_NT
* NOMBRE
*   OFB:op:MISCend_NT
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "opmisc.h"

SUB op:MISCend_NT

    	local LRetVal like lib:err_retval

/******************************************8
	;SMC 06/12/1998 Agrego condicion para que no salga si no termino
	;Generacion automatica de Journal

    LOCAL NTServer LIKE common:ExecString

    if (common:Journal_Flag == 1) then

#ifdef WIN98
        fprint NTServer "D:"
#else
        CALL csr:get_profile_string("cdsmain","CDS_PRIMARY_NP",siaf:dnix_cmd)
        fprint NTServer "\\\\%s" siaf:dnix_cmd
#endif

        ;Espero a que termine de realizar el dump.
        FYIMSG LST:common:fyimsg_list,"FINALIZANDO DUMP DE JOURNAL . . ."
        fprint common:FileName "%s\\temp\\finjnlt.flg" NTServer
        do
            CALL csr:file_open(1,common:FileName,"r")
            if (retval == 0) then
                CALL csr:file_close(1)
                break
            endif

        loop

        ;Espero a que termine de realizar la transmicion.
        FYIMSG LST:common:fyimsg_list,"FINALIZANDO TRANSMICION DE JOURNAL . . ."
        fprint common:FileName "%s\\temp\\finftp.flg" NTServer
        do
            CALL csr:file_open(1,common:FileName,"r")
            if (retval == 0) then
                CALL csr:file_close(1)
                break
            endif

        loop
        FYIMSG CLEAR

    endif
    let common:Journal_Flag = 0
*******************************************/
	
	
	/* cgw: Adecuacion para RTJAVA.
            Se pregunta por la variable de entorno CIERRA_SESION, si su valor es "SI", o esta no existe,
            cerrara la sesion NT al salir de la aplicacion. */
    clearfield common:csr_string
	//call csr:variable_environment "DESARROLLO" common:csr_string
	call csr:variable_environment "CIERRA_SESION" common:csr_string
	LRetVal = retval
	call csr:fld_to_upper(common:csr_string)
	if (LRetVal != 0) || (common:csr_string == "SI") then
		/* SMC 13-AGO-1998 Despues de terminar de salir, Hago un LogOff de Windows */
		let tes:ncol = EWX_FORCE
		let tes:nrow = 0
	    //declare ExitWindowsEx lib "user32.dll" (BYVAL,BYVAL)
		// La declaracion se hace al iniciar el RT
		// en la rutina post:MISCdeclaracion_DLL

		dll ExitWindowsEx(tes:ncol,tes:nrow)
	end if
    end
END SUB

/*******/
