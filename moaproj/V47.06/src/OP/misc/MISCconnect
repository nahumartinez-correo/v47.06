/****o* Pendientes de agrupación/OFB:op:MISCconnect
* NOMBRE
*   OFB:op:MISCconnect
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "opmisc.h"

SUB op:MISCconnect
    local LocalRetVal like lib:err_retval

    call csr:trimfield(Dest_Server)

    CALL csr:get_profile_string("cdsmain","CDS_PRIMARY_NP",Src_Server)

    CALL csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server)
    if (retval < 0) then
        return (-1)
    end if

    CALL csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server)
    if (retval < 0) then
    	CALL csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Src_Server)
    	CALL csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Src_Server)
        return (-1)
    end if

    ;SMC No hago nada por 1/10 de segundo, porque si la conexión es muy rapida,
    ; el CDSSERVER se pisa a si mismo y da error de clave duplicada.
    ; Igualmente funciona, pero se agrega esta linea para evitar el error
    ; y darle tiempo al CDSSERVER a realizar la conexión.
    NAP 100	
    
	call op:MISCconnect_Server(Dest_Server)
	let LocalRetVal  = retval
	if (LocalRetVal < 0) then
		CALL csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Src_Server)
		CALL csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Src_Server)
	end if
    return (LocalRetVal)
END SUB

/*******/
