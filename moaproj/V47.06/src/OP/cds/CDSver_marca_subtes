/****o* Pendientes de agrupación/OFB:op:CDSver_marca_subtes
* NOMBRE
*   OFB:op:CDSver_marca_subtes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adtutlcds.h"

/*Controla que otro operador no tenga la marca de tesoro en
  el profiles*/
SUB op:CDSver_marca_subtes
	/*Se agrega marca de borrado logico - Gabriel Falciola*/
    CDS SELECT from DSC:op:adt_op_table BECOMES DSC:op:adt_op_context \
    WHERE op:op_branch_id == FLD:op:adt_branch_id && op:op_subtesoro == "S" && \
    op:op_borrado_logico != "S"
    CDS FINDFIRST DSC:op:adt_op_context NOLOCK
    lib:err_retval = cdsretval
    IF (lib:err_retval == 0)
       CDS EXTRACT DSC:op:adt_op_context op:op_operator_id INTO op:aux_operator_id

       CDS ENDSELECT DSC:op:adt_op_context
       IF (op:aux_operator_id != op:adt_operator_id) /*para ver si es l mismo*/
          MOVE "(L) HAY OTRO OPERADOR QUE MANEJA LAS HABILITACIONES" TO drv:error_msg
          CALL OFB:drv:error_msg
          return (-2)
       ;ELSE  /*antes manejaba tesoro tambien*/
          ;CALL op:CDSverif_existe_tes
       END IF
    ;ELSE
       ;CALL op:CDSverif_existe_tes
    END IF
    CDS ENDSELECT DSC:op:adt_op_context
    if (retval < 0)
       return (-2)
    end if
END SUB

/*******/
