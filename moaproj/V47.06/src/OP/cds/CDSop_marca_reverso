/****o* Pendientes de agrupación/OFB:op:CDSop_marca_reverso
* NOMBRE
*   OFB:op:CDSop_marca_reverso
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adtutlcds.h"

SUB op:CDSop_marca_reverso(estado)
	
	/*Se graba/libera en profiles una marca (tlr:controla_marca,reverso_jnl)
	una vez aceptada la cancelacion (0200 !=I o 0400 == I) de giros/finalizada
	la reversa de la sesion. */

	local  varl_estado like common:csr_string
	fprint varl_estado,"%s",estado
	
	CDS SELECT FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context \
	WHERE op:op_operator_id == FLD:op:op_operator_id
	
	CDS FINDFIRST DSC:op:adt_op_context LOCK
	if ( CDSRETVAL == 0 )
		CDS EXTRACT  DSC:adt_op_context tlr:controla_marca
		if ( varl_estado == SET_MARCA_REV )
			setflag tlr:controla_marca,reverso_jnl
			let post:PresNroJnl = giros:PresNro_canc
		else
			resetflag tlr:controla_marca,reverso_jnl
			clearfield post:PresNroJnl
		end if
		CDS CLEARBUFFER DSC:adt_op_context
		CDS APPEND DSC:adt_op_context tlr:controla_marca \
		post:PresNroJnl

		CDS UPDATE DSC:adt_op_context LOCK
	end if

	CDS UNLOCK DSC:adt_op_context
	CDS ENDSELECT DSC:adt_op_context
END SUB

/*******/
