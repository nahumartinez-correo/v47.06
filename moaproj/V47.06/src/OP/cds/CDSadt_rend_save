/****o* Pendientes de agrupación/OFB:op:CDSadt_rend_save
* NOMBRE
*   OFB:op:CDSadt_rend_save
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adtutlcds.h"

/*Graba registro en el archivo de rendicion (pero solo si es cajero)*/
SUB op:CDSadt_rend_save
    
    CDS SELECT FROM DSC:tes:rend_caj_table BECOMES DSC:tes:rend_caj_context WHERE \
    tes:rend_suc_id == FLD:adt_branch_id && \
    tes:rend_op_id  == FLD:adt_operator_id
    
    CDS FINDFIRST DSC:tes:rend_caj_context LOCK
    lib:err_retval = CDSRETVAL
    IF (lib:err_retval == -801) THEN
       
       tes:rend_suc_id = adt_branch_id
       tes:rend_op_id  = adt_operator_id
       CLEARFIELD tes:rend_fecha
       call csr:cleararray(tes:rend_marca_vec)
       call csr:cleararray(tes:rend_importe_vec)
       CLEARFIELD tes:rend_marca_cierre
       CLEARFIELD tes:rend_tipo_cierre
       CDS CLEARBUFFER DSC:tes:rend_caj_context
       
       CDS APPEND DSC:tes:rend_caj_context \
       FLD:tes:rend_suc_id                 \
       FLD:tes:rend_op_id                  \
       FLD:tes:rend_fecha                  \
       array tes:rend_marca_vec            \
       array tes:rend_importe_vec          \
       FLD:tes:rend_marca_cierre           \
       FLD:tes:rend_tipo_cierre
       
       CDS INSERT DSC:tes:rend_caj_context LOCK
    END IF
    
    CDS UNLOCK DSC:tes:rend_caj_context
    CDS ENDSELECT DSC:tes:rend_caj_context

END SUB

/*******/
