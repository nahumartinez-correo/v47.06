/****o* Pendientes de agrupación/OFB:op:PBlogin_id_ger
* NOMBRE
*   OFB:op:PBlogin_id_ger
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   op:BUT_op_ger
* DOCUMENTACION
*   NI 50591-TRASLADO DE OPERADORES JEFE DE OFICINA
* SOURCE
*/
#include "adtutlpb.h"

SUB op:PBlogin_id_ger

	LET drv:button = drv:last_button
	CALL  OFB:drv:but_down_disable
	CLEARFIELD adt_login_id

	CALL  OFB:op:CDSadt_op_sel_ger
	IF (RETVAL == 0) /* usuario existente */
    	let flag_new_user = 0
		call  adt_to_bck

        IF (adt_branch_id == common:sucursal_activa) THEN
            let admin:adt_br_branch = op:adt_branch_id
            call admin:CDSadt_br_load
            if (retval < 0) then
                errmsg common:errmsg_list,"NO SE PUEDE ENCONTRAR NIS (OFICINA) DEL OPERADOR"
              	LET drv:button = drv:last_button
               	CALL  OFB:drv:but_up_enable
                CALL  CSR:proc_list F_CLEAR LST:adt
                CALL  CSR:proc_list F_CLEAR LST:adt_std
                CALL  CSR:proc_list F_CLEAR LST:adt_main
                return -2
            endif
            LET Dest_Server = admin:adt_br_server
            CALL OFB:CDSadt_op_load
        ELSE
            IF (op:adt_branch_id.NUMCHARS != 0) THEN
                let admin:adt_br_branch = op:adt_branch_id
                call admin:CDSadt_br_load
                if (retval < 0) then
                    errmsg common:errmsg_list,"NO SE PUEDE ENCONTRAR NIS (OFICINA) DEL OPERADOR"
                	LET drv:button = drv:last_button
                	CALL  OFB:drv:but_up_enable
                    CALL  CSR:proc_list F_CLEAR LST:adt
                    CALL  CSR:proc_list F_CLEAR LST:adt_std
                    CALL  CSR:proc_list F_CLEAR LST:adt_main
                    return -2
                endif
                LET Dest_Server = admin:adt_br_server
                CALL OFB:MISCread_remote
                if (retval < 0)
                    errmsg common:errmsg_list,"SE USARAN DATOS LOCALES"        
                else
		    		/*Verifico si no hubo cambios locales de perfiles en la Sucursal - Gabriel Falciola*/
    				call MISCverifCambioPerf
	    			if (retval < 0) then
	                	LET drv:button = drv:last_button
                		CALL  OFB:drv:but_up_enable
                    	CALL  CSR:proc_list F_CLEAR LST:adt
                    	CALL  CSR:proc_list F_CLEAR LST:adt_std
                    	CALL  CSR:proc_list F_CLEAR LST:adt_main
						CALL  CSR:proc_list F_REFRESH LST:adt
                    	CALL  CSR:proc_list F_REFRESH LST:adt_std
                    	CALL  CSR:proc_list F_REFRESH LST:adt_main
                    	refresh window
                    	return -2
    				end if               
                endif
            ELSE
                errmsg common:errmsg_list,"DEBE INGRESAR LA SUCURSAL"
               	LET drv:button = drv:last_button
               	CALL  OFB:drv:but_up_enable
                CALL  CSR:proc_list F_CLEAR LST:adt
                CALL  CSR:proc_list F_CLEAR LST:adt_std
                CALL  CSR:proc_list F_CLEAR LST:adt_main
                return -2
            END IF
        END IF

        LET post:adt_limsupev_suc = op:adt_branch_id
        LET post:adt_limsupev_op  = op:adt_operator_id
    
		CALL  CSR:proc_list F_COPY LST:adt_std LST:adt
		
;     	PROTFIELD adt_branch_id
    	PROTFIELD adt_operator_id
		SETVALDONE adt_inhibido //porque la FVAL de este campo cambia algunos
		//datos del operador que solo deben cambiarse si el valor de este campo cambia.
		//fin mercedes
		SETVALDONE adt_login_id
		SETVALDONE adt_fecha_com_op /* agregado por giros */
		SETVALDONE adt_fecha_fin_op /* agregado por giros */
    	CALL drv:enable_del_upd

	ELSE
/*
        CALL  CSR:proc_list F_CLEAR LST:adt
        CALL  CSR:proc_list F_CLEAR LST:adt_std
        CALL  CSR:proc_list F_CLEAR LST:adt_main
        CLEARFIELD op:op_chk_flags
        CLEARFIELD op:cl_chk_flags
        CALL  CSR:proc_list F_REFRESH LST:adt
        CALL  CSR:proc_list F_REFRESH LST:adt_std
        CALL  CSR:proc_list F_REFRESH LST:adt_main

        //Limpio chks
        CALL op:MISCdisable_chks
*/
    	LET drv:button = drv:last_button
    	CALL  OFB:drv:but_up_enable
    	return -1
		
    END IF
    RESETFLAG op:admin_flags,is_change

   ;Activa-Desactiva Boton de Limites de Especies
   call op:MISCboton_LimEsp

    LET drv:button = CB15
    CALL  OFB:drv:but_enable

	IF (op:adt_con_auth == "X") THEN
		/* Contador */
		SETFLAG op:op_chk_flags,con_auth
		ALTERCONTROLSET tag:op:CHK4
	END IF
	IF (op:adt_tes_auth == "X") THEN
		/* Tesorero */
		SETFLAG op:op_chk_flags,tes_auth
		ALTERCONTROLSET tag:op:CHK5
	END IF
	IF (op:adt_ret_auth == "X") THEN
		/* Administrativo */
		SETFLAG op:op_chk_flags,ret_auth
		ALTERCONTROLSET tag:op:CHK6
	END IF
    
    CALL OFB:MISCre_display

    SETFLAG op:admin_flags,is_select
    LET op:old_branch_id = admin:adt_br_branch
    LET op:old_br_server = admin:adt_br_server
    
    ;Actualizo el dupfield de la sucursal
;    swapdup op:adt_branch_id
;    dupfield op:adt_branch_id
	setvaldone adt_branch_id
	setvaldone adt_login_id
;	setvaldone adt_operator_id
	LET drv:button = drv:last_button
	CALL  OFB:drv:but_up_enable

	IF (op:adt_node_id.NUMCHARS > 0)
		MSGBOX dsc:op:FYIno_update OFB_OK "ERROR"
    	CALL drv:side_bar_disable
		RETURN (-1)
	END IF
	
    ;SMC marco el operador como que esta en uso para que no sea
    ;    usado por nadie mas
	call op:CDSoperador_enuso("Borrar")    
	call op:CDSoperador_enuso("Actualizar")
	
END SUB

/*******/
