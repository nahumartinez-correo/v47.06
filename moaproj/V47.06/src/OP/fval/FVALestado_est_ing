/****o* Pendientes de agrupación/OFB:op:FVALestado_est_ing
* NOMBRE
*   OFB:op:FVALestado_est_ing
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "opfval.h"

SUB op:FVALestado_est_ing
    local LDest_Server like Dest_Server
    local LLogin like op:op_login_id
    
    LLogin  = op:op_login_id    
    LDest_Server = common:br_server
        
    call FVALadm_branch_id
    if (retval < 0) then
     /* Recupero los datos que se graban en el ddproj.ini */
        if (FLD:LDest_Server != Dest_Server) then
    	    Dest_Server = LDest_Server     
    	    call csr:trimfield(Dest_Server)
            call csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server)            
            call csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server)
            call MISCconnect_Server(op:Dest_Server)
        end if
        return (-2)
    end if
    
    clearfield adt_login_id    
    call op:FVALoperador_est_ing
    if (retval < 0) then
     /* Recupero los datos que se graban en el ddproj.ini */
        if (FLD:LDest_Server != Dest_Server) then
            Dest_Server = LDest_Server
    	    call csr:trimfield(Dest_Server)
            call csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server)
            call csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server)
            call MISCconnect_Server(op:Dest_Server)
        end if
        return (-2)
    end if
    
    call hcomm:SRQ_op_status
    if (retval < 0)
        errmsg lst:common:errmsg_list,"El Operador Debe Salir de Su Estacion"     
     /* Restauro datos originales */
        if (FLD:LLogin != "" && FLD:LLogin != op:op_login_id) then
            call op:CDSadt_op_load
        end if
     /* Recupero los datos que se graban en el ddproj.ini */
        if (FLD:LDest_Server != Dest_Server) then
            Dest_Server = LDest_Server    
            call csr:trimfield(Dest_Server)
            call csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server) 
            call csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server)
            call MISCconnect_Server(op:Dest_Server)
        end if
        return (-2)    	            
    else
        if (hcomm:host_moa.numchars != 0) then
            clearfield op:adt_node_id
            call CDSadt_op_save_est /* Esta rutina actualiza solo el estado de ingresado */
            if (retval < 0) then
            	move "Problemas para encontrar al operador" TO drv:error_msg                                                                    
                call ofb:drv:error_msg
             /* Restauro datos originales */
                if (FLD:LLogin != "" && FLD:LLogin != op:op_login_id) then
                    call op:CDSadt_op_load
                end if
             /* Recupero los datos que se graban en el ddproj.ini */
                if (FLD:LDest_Server != Dest_Server) then
                    Dest_Server = LDest_Server    
                    call csr:trimfield(Dest_Server)
                    call csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server) 
                    call csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server) 
                    call MISCconnect_Server(op:Dest_Server)
                end if
                return (-2)  
            end if
        end if
    end if    
  
 /* Restauro datos originales */
    if (FLD:LLogin != "" && FLD:LLogin != op:op_login_id) then
        call op:CDSadt_op_load
    end if
 /* Recupero los datos que se graban en el ddproj.ini */
    if (FLD:LDest_Server != Dest_Server) then
        Dest_Server = LDest_Server    
        call csr:trimfield(Dest_Server)
        call csr:write_profile_string("cdsmain","CDS_PRIMARY_NP",Dest_Server) 
        call csr:write_profile_string("cdsgene","CDS_PRIMARY_NP",Dest_Server)
        call MISCconnect_Server(op:Dest_Server)
    end if
    setvaldone adt_branch_id
    ungetkey RT_ESC
   
END SUB

/*******/
