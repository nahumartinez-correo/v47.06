/****o* Pendientes de agrupación/OFB:op:FVALpasswd_prohib
* NOMBRE
*   OFB:op:FVALpasswd_prohib
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "opfval.h"

SUB op:FVALpasswd_prohib
    local Posicion like common:csr_string

	if (op:passwd_prohibida.NUMCHARS == 0) then
        drv:button = drv:last_button
        CALL drv:but_down_disable

		CDS SELECT FROM DSC:adt_passwds_table BECOMES DSC:adt_passwds_context
		CDS MULTIDISPLAY DSC:adt_passwds_context LISTclavesProhibidas

		let Posicion = CDSRETVAL
    	LET drv:button = drv:last_button
	    CALL  OFB:drv:but_up_enable
	    
		if (Posicion < 0) then
    		 errmsg drv:errmsg_list,"La Lista de Passwords Prohibidas se encuentra VACIA"
    		 return (-2)
		end if

		CDS EXTRACT DSC:adt_passwds_context adt_pass_password into op:passwd_prohibida
		refresh op:passwd_prohibida
		;MOVE op:passwd_prohibida op:verify_passwd
		;refresh op:verify_passwd
		CDS ENDSELECT DSC:adt_passwds_context

        if (Posicion != 0) then
    		;errmsg drv:errmsg_list,DSC:op:encontrado
    		drv:button = 27
            CALL drv:but_disable
    		drv:button = 26
            CALL drv:but_enable  // si esta se activa el boton eliminar
        end if            
		return 0        
	end if

	//call csr:f_sacrypt op:new_passwd op:op_password
	//MOVE op_password adt_pass_password
	MOVE  op:passwd_prohibida  adt_pass_password
	MOVE op_login_id  adt_pass_login_id
	call CDSfind_passwd   // busca la password en la tabla de passwords prohibidas
	if (RETVAL == -2) then
		;errmsg drv:errmsg_list,DSC:op:no_encontrado
		drv:button = 26
        CALL drv:but_disable
        drv:button = 27      // si no esta se activa el boton agregar
        CALL drv:but_enable
	else
		;errmsg drv:errmsg_list,DSC:op:encontrado
		drv:button = 27
        CALL drv:but_disable
		drv:button = 26
        CALL drv:but_enable  // si esta se activa el boton eliminar
	end if


END SUB

/*******/
