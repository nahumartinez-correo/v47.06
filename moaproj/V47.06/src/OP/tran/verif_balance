/****o* Pendientes de agrupación/OFB:op:verif_balance
* NOMBRE
*   OFB:op:verif_balance
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "optran.h"

SUB op:verif_balance
    IF  \
(TESTFLAG(op_state_flags,open_day) && (TESTFLAG(common:menu_flags,AMtlr_auth) \
|| TESTFLAG(common:menu_flags,AMret_auth))) THEN
    cds select from post:Monedas_tbl becomes post:Monedas_ctx where \
    post:adt_mon_tipo == "EFEC"
    cds findfirst dsc:post:Monedas_ctx nolock
    let lib:err_retval = CDSRETVAL
    do
        if (lib:err_retval == -801) then
            break
        endif
        cds extract dsc:post:Monedas_ctx post:adt_mon_cod
            IF ((siaf:tefectivo_vec[post:adt_mon_cod] + \
            siaf:tefec_inic_vec[post:adt_mon_cod]) != 0 ) then
                common:csr_string =  \
"  El efectivo es distinto de cero \n\n\t CONFIRMA LA SALIDA DEL SISTEMA ?"
                MSGBOX common:csr_string,0x00000004,"ATENCION"
                IF (RETVAL == 7) THEN
                cds endselect dsc:post:Monedas_ctx
                    RETURN (-1)
            endif
            break
        else
            cds findnext dsc:post:Monedas_ctx nolock
            let lib:err_retval = CDSRETVAL
        endif
        loop
    cds endselect dsc:post:Monedas_ctx
    END IF
    RETURN (0)
END SUB

/*******/
