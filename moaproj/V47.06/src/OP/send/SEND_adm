/****o* Pendientes de agrupación/OFB:op:SEND_adm
* NOMBRE
*   OFB:op:SEND_adm
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adtutlsend.h"

/* Inicio Journalizacion de campo MEMO por Reset send */
SUB op:SEND_adm
/*            
//mercedes
    local aux like TipoEntero
    local ind like TipoEntero

    ;SMC Si es auditor, no puede modificar datosd el operador	
    if (op:op_audit_auth == "X") then
            errmsg lst:common:errmsg_list, "No posee permisos para modificar Operadores"
            return (-2)
    endif		

    IF (op:adt_branch_id == common:sucursal_activa) THEN
        FPRINT common:csr_string "NO PUEDE ACTUALIZAR LA PROPIA SUCURSAL"
        MSGBOX common:csr_string OFB_OK "ERROR"
        return -2
    END IF

    CDS SELECT FROM DSC:op:adt_op_table  BECOMES  DSC:op:adt_op_context \
         WHERE op:op_branch_id == op:adt_branch_id ASCENDING

    CDS FINDFIRST DSC:op:adt_op_context NOLOCK
    if (cdsretval < 0) then
        errmsg drv:errmsg_list,"NO HAY OPERADORES DE LA SUCURSAL ELEGIDA"
        CDS ENDSELECT DSC:op:adt_op_context        
        return -1
    endif

    FPRINT common:csr_string "¿DESEA ACTUALIZAR LOS DATOS DE LA SUCURSAL \"%s\" \nCON LOS DATOS LOCALES?" \
            op:adt_branch_id
    MSGBOX common:csr_string OFB_YESNO "ATENCIÓN"
    IF (RETVAL == 7) THEN
        RETURN -1
    END IF

    CALL CSR:f_sadroppl DSC:dynapic_1
    CALL CSR:f_sanewpl  DSC:dynapic_1 PIC:lib:csr_dynamic_pic
    WHILE (CDSRETVAL == 0)
        CDS EXTRACT DSC:op:adt_op_context \
            op:op_login_id into op:adt_login_id
            
        FPRINT common:csr_string "%-14s" op:adt_login_id
        CALL CSR:f_saaddpl DSC:dynapic_1 common:csr_string
        CDS FINDNEXT DSC:op:adt_op_context NOLOCK
    END WHILE
    CDS ENDSELECT DSC:op:adt_op_context

    let  ind = 0
    let  aux = PL_GETITEM + ind
    call csr:myPickcontrol DSC:dynapic_1 common:csr_string aux
    
    WHILE (RETVAL == 0)
        LET op:adt_login_id = common:csr_string
        call csr:trimfield(op:adt_login_id)        

        let Dest_Server = admin:adt_br_server

        CALL  OFB:op:CDSadt_op_load
        CALL  OFB:op:MISCre_display

        LET post:adt_limsupev_suc = op:adt_branch_id
        LET post:adt_limsupev_op  = op:adt_operator_id

        CALL OFB:MISCsaca_limsupev

        FYIMSG drv:fyimsg_list,"INICIANDO CONEXION REMOTA"
        CALL OFB:MISCconnect
        IF (RETVAL == -1) THEN
            CALL OFB:MISCre_connect
            BREAK
        END IF

		  ;SMC Limpio para que no quede como que esta trabajando en
        ;la base centralizada.
        let op:adt_node_id = ""                    
        FYIMSG drv:fyimsg_list,"ACTUALIZANDO DATOS REMOTOS"
        CALL OFB:MISCsave_adm

        CALL OFB:MISCactu_limsupev

        LET lib:err_retval = RETVAL
    
        CALL OFB:MISCre_connect
            
        IF (lib:err_retval != 0) THEN
            FPRINT common:csr_string "NO PUEDO ACTUALIZAR OPERADOR \"%s\"" adt_login_id
            MSGBOX common:csr_string OFB_OK "ERROR"
        
        else
      		//journalizacion
       		let FLD:drv:INDjnl_rtn = OFB:op:JNLcambio_perfil
       		let FLD:tlr:INDjnl_append = OFB:op:JNLcambio_perfil
       	    MOVE "ENVIO OPERADOR A SUCURSAL" TO siaf:adt_mot_desc
            hcomm:tran_status = MEMO
       	    let siaf:codigo_siaf = 98010
       		call tlr:JNLout_of_tran
       		//fin journalizacion
        end if

        LET ind = ind + 1
        LET aux = PL_GETITEM + ind
        call csr:myPickcontrol DSC:dynapic_1 common:csr_string aux

    END WHILE

    FYIMSG CLEAR
 
    CALL  CSR:proc_list F_CLEAR   LST:adt_main
    CALL  CSR:proc_list F_REFRESH LST:adt_main
    CLEARFIELD op:op_chk_flags
    CLEARFIELD op:cl_chk_flags
    //Limpio chks
    call op:MISCdisable_chks

    CLEARFIELD adt_branch_id
    RESETVALDONE adt_branch_id
    LET drv:button =  SB0
    CALL  drv:but_disable
    init 33,0        

    LET drv:button = TAG:drv:PBcb0
    CALL  OFB:drv:but_up_enable
    RETURN (-1)
*/
END SUB

/*******/
