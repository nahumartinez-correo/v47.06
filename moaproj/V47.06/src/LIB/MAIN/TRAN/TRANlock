/****o* Pendientes de agrupación/OFB:lib:TRANlock
* NOMBRE
*   OFB:lib:TRANlock
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "mainTRAN.h"

SUB lib:TRANlock
    local MinutosTimer like op:TipoEntero
    local LMensaje like common:csr_string

    
    ; LogOut
    MinutosTimer = (op:adt_time_op_shutdown * 60)
    call lib:MISCsettimer_correo(1,MinutosTimer) 

    CLEARFIELD lock_passwd
    refresh lock_passwd
	CALL  OFB:lib:MISCsave_env
	KEYDEF CLEAR
/* Comentado por Martin Vicente
         KEYDEF F12,RT_SEND */
/* Modificadas las dos lineas de abajo por martin */
        KEYDEF F28,RT_SEND
        KEYDEF F30,RT_SEND
/*        KEYDEF F28,RT_ENTERFIELD
        KEYDEF F30,RT_ENTERFIELD    */
    ;SMC agrego mensaje para saber quien estaba trabajando cuando se lockeo la estacion
    

	MOVE "ESTACION BLOQUEADA" TO lib:stat_message
	LET lib:stat_message.HIGHLITE = 1
	REFRESH lib:stat_message
	let common:trap_reset = ofb:KEYSreset_lockout
    SETFLAG lib:state_flags,lock_mode
    PDM ENABLEITEM pdm:drv:menubar ALL MOA_DISABLED
   	DISPLAY lib:SCRNlock
	DO
            CLEARFIELD lock_passwd
            refresh lock_passwd
            fprint FLD:LMensaje "ESTACION BLOQUEADA POR OPERADOR %s" op:op_login_id
            FYIMSG LST:common:fyimsg_list FLD:LMensaje
            POPUP lib:pass_scr
        	IF (LASTKEY != RT_ESC) THEN
        	    ;SMC Si se realiza el LOGOUT Automatico,
        	    ;    y esta en sesion, aborto la sesion
        	    ;    y despues hago el LOGOUT
        	    if (lastkey == RT_BAILOUT) then
        	        ungetkey RT_ESC
        	    end if
                BREAK
	        END IF
    LOOP       
    UNDISPLAY lib:SCRNlock

	let drv:INDscr_aux = SCR:post:SCRNimpre_fiscal
	let drv:INDscr_aux2 = SCR:post:SCRNconfirma_presu
    if (drv:INDscr != drv:INDscr_aux  &&  drv:INDscr != drv:INDscr_aux2 && post:estado_presu != 4) then
    	/* Llamo a una ofb genérica que chequea todo */
    	call post:MISCactivar_buts
	end if

   	CLEARFIELD lib:stat_message
	LET lib:stat_message.HIGHLITE = 0
	REFRESH lib:stat_message

    ;SMC Limpio los mensajes
    FYIMSG CLEAR

	CALL  OFB:MISCrestore_env
    RESETFLAG lib:state_flags,lock_mode
    

    if (lastkey != RT_BAILOUT) then
        ; Lockeo Estacion
        MinutosTimer = (op:adt_time_op_lock * 60)
        call lib:MISCsettimer_correo(2,MinutosTimer) 
    end if
END SUB

/*******/
