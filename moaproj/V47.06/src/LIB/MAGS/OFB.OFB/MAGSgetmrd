#include "magsOFB.OFB.h"

/****o* Pendientes de agrupación/OFB:lib:MAGSgetmrd
* NOMBRE
*   OFB:lib:MAGSgetmrd
* DESCRIPCION
*   Read Mag Stripe Data.
* ENTRADAS
*   lib:mags_mrdtrk = track to read
* SALIDAS
*   RETVAL =  n  if n characters in lib:mags_mrdbuf (n > 0)
*          =  0  if operator reset or hit key				
*          = -1  if error									
*   mags_mrdbuf  = data read from mag stripe				
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/

	SUB lib:MAGSgetmrd
	let mags_dev_retry = 3
	fyimsg common:fyimsg_list,DSC:mags_mrdreq
	DO
		clearfield mags_mrdbuf
		if (mags_mrdtrk == 3) /* if track 3...*/
// not suptd			wnread LIB_MAGS_MRDTR3,magcrd,LIB_MAGS_MRDTMR,mags_mrdbuf
		else
			if (mags_mrdtrk == 2) /* if track 2...*/
// not suptd				wnread LIB_MAGS_MRDTR2,magcrd,LIB_MAGS_MRDTMR,mags_mrdbuf
			else /* else default track 1 */
// not suptd				wnread LIB_MAGS_MRDTR1,magcrd,LIB_MAGS_MRDTMR,mags_mrdbuf
			END IF
		END IF
/* check for good read */
		if (retval > 0) /* if successful,...*/
			fyimsg clear
			break /* return length to caller */
		END IF
/* check for keyboard reset */
		if (retval == 0) /* if reset,exit */
			fyimsg common:fyimsg_list,DSC:mags_mrdfyi_0
			break /* return 0 */
		END IF
/* check for keyboard input */
		if (retval == -1) /* if keyboard input,exit */
			fyimsg common:fyimsg_list,DSC:mags_mrdfyi_1
			let retval = 0 /* return 0 */
			break
		END IF
/* check for errors */
		SELECT (retval)
			case -2 /* if timeout,retry */
				fyimsg common:fyimsg_list,DSC:mags_mrdfyi_2
				break
			case -3 /* if device not configured,exit */
				fyimsg common:fyimsg_list,DSC:mags_mrdfyi_3
				let mags_dev_retry = 1 /* force final retry */
				break
			case -4 /* if device busy,retry */
				fyimsg common:fyimsg_list,DSC:mags_mrdfyi_4
				CONTINUE /* don't decrement counter */
				CASE ELSE /* if other read error retry */
				fyimsg common:fyimsg_list,DSC:mags_mrdfyi_5
				break
		END SELECT
/* decrement retry counter - check for retries used up */
		let mags_dev_retry = mags_dev_retry - 1
		if (mags_dev_retry > 0) /* if retries left,...*/
			CONTINUE /* try again */
		else /* else retries used up,...*/
			let retval = -1 /* so return error */
			break
		END IF
	LOOP
	return (retval)
	END SUB

/*******/
