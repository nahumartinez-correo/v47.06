/****o* Pendientes de agrupación/OFB:post:PRTtAndT
* NOMBRE
*   OFB:post:PRTtAndT
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postprt.h"

SUB post:PRTtAndT(nTrn)
	local cant like post:cantidad /* indice que cuentas las lineas del cuerpo */
	cant = 0
    /*Rescata el tt de la tabla "track_trace"*/
	/*Adecuaciones para Nota de Credito. La seleccion se hace por PresNro_tt y
	NroTrn_tt en vez de PresNro y PreDNroTrn. Tambien se filtra por la
	marca de anulacion (Anula_tt) - Gabriel Falciola*/
	CDS SELECT FROM TT_TAB BECOMES TT_CTX WHERE \
		fecha == common:system_date && \
		operador_tt == op:op_operator_id && \
		PresNro_tt == PresNro_tt && \
        NroTrn_tt == nTrn && \
        Anula_tt != "S"
	//CDS FINDFIRST TT_CTX LOCK
	CDS FINDFIRST TT_CTX NOLOCK
	LET lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval != -801)
		CDS EXTRACT TT_CTX post:cp, post:track_trace
		Fprint common:csr_string  "%-8.8s %13.13s\n",\
     	cp,track_trace
     	Call PRTtransparent(common:csr_string)
    	;Prt Transparent common:csr_string
    	cant = cant + 1
		//CDS FINDNEXT TT_CTX LOCK
		CDS FINDNEXT TT_CTX NOLOCK
		lib:err_retval = CDSRETVAL
	END WHILE
	CDS ENDSELECT TT_CTX
	return (cant)
END SUB

/*******/
