/****o* Pendientes de agrupación/OFB:post:PRT_CobroDiferido
* NOMBRE
*   OFB:post:PRT_CobroDiferido
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*		post:PRT_Factura
*   post:PRT_Ticket_Jou
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postprt.h"

SUB post:PRT_CobroDiferido(LIMP, Importe_Acumulado, Relleno, Largo, Tipo_Impresion)
	LOCAL limporte LIKE post:Imp_CobroDif
	
	IF (!OperacionAut) THEN
		limporte = Imp_CobroDif
	ELSE
		limporte = Imp_CobroDif - anticipo_CM
	END IF
	
	CALL PRTcortePagina(LIMP, Importe_Acumulado, PAGE_FACTURA, Tipo_Impresion)
	LIMP = RETVAL
		
	IF (DocFiscal == "TICKET") THEN
		FPRINT common:csr_string, "Saldo a Cob."
	ELSE
		FPRINT common:csr_string, "Saldos a Cobrar"
	END IF
	
	IF (Relleno == 0) THEN
		//gpb:Original
		//FPRINT common:csr_string "%-s %e$\n",common:csr_string, limporte
		
		//gpb:PS10705
		IF (modoPrt == LASER) THEN
			FPRINT common:csr_string "%-s %e$\n",common:csr_string, limporte
		ELSE
			//justifico a la izquierda
			FPRINT common:csr_string "\x1Ba\x30%-s %e$\n",common:csr_string, limporte
		END IF
	ELSE
		//gpb:Original
		;FPRINT common:csr_string "%*.*s %9.9e$\n",\
		;	Relleno,Largo,common:csr_string, limporte
		
		//gpb:PS10705	
		IF (modoPrt == LASER) THEN
			FPRINT common:csr_string "%*.*s %14.14e$\n",\
				Relleno,Largo,common:csr_string, limporte			
		ELSE
			//justico a la derecha
			FPRINT common:csr_string "\x1Ba\x32%s %14.14e$\n",common:csr_string, limporte
		END IF
	END IF
	
	CALL post:MISCprt2laser(common:csr_string)
	LIMP = LIMP + 1
	
	//Imprimo el Comprobante de Imposicion (solo si esta completo)
	IF (post:NroCompImpos.NUMCHARS != 0) THEN
		IF (DocFiscal == "TICKET") THEN
			FPRINT common:csr_string, "Comp. Impos."
		ELSE
			FPRINT common:csr_string, "Comprobante de Imposicion"
		END IF
		IF (Relleno == 0) THEN
			//gpb:Original
			;FPRINT common:csr_string "%-s %-15.15s\n",common:csr_string,post:NroCompImpos
			
			//gpb:PS10705	
			IF (modoPrt == LASER) THEN
				FPRINT common:csr_string "%-s %-15.15s\n",common:csr_string,post:NroCompImpos
			ELSE
				//justifico a la izquierda
				FPRINT common:csr_string "\x1Ba\x30%-s %-15.15s\n",common:csr_string,post:NroCompImpos			
			END IF
		ELSE
			//gpb:Original
			;FPRINT common:csr_string "%*.*s %-15.15s\n",\
			;	Relleno,Largo,common:csr_string,post:NroCompImpos
			
			//gpb:PS10705
			IF (modoPrt == LASER) THEN			
				FPRINT common:csr_string "%*.*s %-15.15s\n",\
					Relleno,Largo,common:csr_string,post:NroCompImpos			
			ELSE
				//justifico a la derecha
				FPRINT common:csr_string "\x1Ba\x30%s %-15.15s\n",common:csr_string,post:NroCompImpos
			END IF
		END IF
		CALL post:MISCprt2laser(common:csr_string)
		LIMP = LIMP + 1
	END IF
	
	//gpb:PS10705
	IF (modoPrt != LASER) THEN
		//justifico a la izquierda
		CALL post:MISCprt2laser("\x1Ba\x30")
	END IF

	RETURN (LIMP)
END SUB

/*******/
