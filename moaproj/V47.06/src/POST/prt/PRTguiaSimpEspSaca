/****o* Pendientes de agrupación/OFB:post:PRTguiaSimpEspSaca
* NOMBRE
*   OFB:post:PRTguiaSimpEspSaca
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postprt.h"

SUB post:PRTguiaSimpEspSaca
    LOCAL cant LIKE j_idx
    LOCAL pagina LIKE j_idx
    LOCAL CantPzasFin LIKE j_idx
    LOCAL CantPzasTot LIKE j_idx
    LOCAL sacat LIKE adt_sacatipo_cod
    LOCAL indice LIKE j_idx
    LOCAL gcorte LIKE adt_grucorte_cod
    LOCAL corteop LIKE jnl_corteop_cod
    LOCAL codsiaf LIKE siaf:jnl_codigo_siaf
    LOCAL Piezas LIKE j_idx
    LOCAL imp LIKE j_idx
    
    Piezas = 0 /* Indica si hay que imprimir el total de Piezas */
    
    Let CantPzasFin = 0 /* Acumula la cant. final de piezas */
    Let j_idx = 0 /* Acumula la cant. parcial de cont. o pzas */
    Let cant = 1 /* contador de lineas */
    Let pagina = 1 /* contador de pags. */
    Let idx = 0
    let indice = 0 /* cont. de T&T en una linea */
    Let imp = 0 /* Indica si se imprimio la linea (1) o no (0) */
    
    
    CDS SELECT FROM DSC:post:DetTmp BECOMES DSC:post:DetTmp_ctx WHERE \
      (op:op_operator_id == op:op_operator_id && \
      jnl_simp_esp == "S") SORT DSC:post:SortSaca
    
    CDS FINDFIRST DSC:DetTmp_ctx LOCK
    lET lib:err_retval = CDSRETVAL
    
    IF (lib:err_retval < 0) then
	    RETURN (-2)
    END IF
    CDS EXTRACT DSC:DetTmp_ctx ALL
    DO
	    IF (MarcaBorrado == "*")
		    CDS FINDNEXT DSC:DetTmp_ctx LOCK
		    LET lib:err_retval = CDSRETVAL
		    IF (lib:err_retval < 0) then
	    		RETURN (-2)
		    END IF
		    CDS EXTRACT DSC:DetTmp_ctx ALL
	    ELSE
		    BREAK
	    END IF
    LOOP
    
    LET sacat = adt_sacatipo_cod
    LET gcorte = jnl_grucorte_cod
    LET corteop = jnl_corteop_cod
    LET codsiaf = siaf:jnl_codigo_siaf
    
    call PRThdrSaca("Simp")
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    cant = cant + 1
    
    clearfield LineaImpresion
    CALL CDSdescripGruCte
    
    fprint LineaImpresion "   %s" adt_grucorte_desc
    PRT  PRINT EDIT post:LineaImpresion
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    cant = cant + 1
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    cant = cant + 1
    
    CLEARFIELD LineaImpresion
    
    DO
	    IF (Pieza_id != "NO CONTROL")
	        call csr:trimfield(Pieza_id)
		    IF ((LineaImpresion.NUMCHARS + Pieza_id.NUMCHARS) > 96)
			    /* Resguardo la linea a imprimir */
			    /* SWAPDUP LineaImpresion */
                
			    PRT  PRINT EDIT post:LineaImpresion
			    PRT  NEWLINE
			    PRT  CARRIAGERETURN
			    clearfield post:LineaImpresion
			    Let cant = cant + 1
			    indice = 0
                
			    IF ((cant + 10) > 44)
				    DO
					    if (cant == 44)
					        break
					    end if
				        PRT  NEWLINE
					    PRT  CARRIAGERETURN
					    LET cant = cant + 1
				    LOOP
				    fprint LineaImpresion \
				        "                                                                                 Página: %03.3d" \
					    pagina
                        
				    PRT  PRINT EDIT post:LineaImpresion
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
                    
				    Let pagina = pagina + 1
                    	
				    PRT FLUSH
				    PRT FORMFEED
                    
				    IF (SacaUnica == "N")
					    Let LineaImpresion = "Guía de Detalle de Saca"
				    ELSE
					    Let LineaImpresion = "Guía de Detalle de Saca Unica"
				    END IF
				    call PRThdrSaca("Simp")
				    Let cant = 1
                    
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
				    cant = cant + 1
				    clearfield LineaImpresion
				    fprint LineaImpresion "   %s" adt_grucorte_desc
				    PRT  PRINT EDIT post:LineaImpresion
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
				    cant = cant + 1
				    PRT  NEWLINE
				    PRT  CARRIAGERETURN
				    cant = cant + 1
                    	
			    END IF
		    END IF
            
		    IF (siaf:jnl_codigo_siaf == "99030") /* Cierre de Contenedor */
			    if (indice == 0)
				    fprint LineaImpresion "   CONT.NRO %08.8s" Pieza_id
			    else
				    fprint LineaImpresion "%s  CONT.NRO %08.8s" \
						LineaImpresion, Pieza_id
			    end if
		    ELSE
			    if (indice == 0)
				    fprint LineaImpresion "   % s" Pieza_id
			    else
				    fprint LineaImpresion "%s      % s" \
						LineaImpresion, Pieza_id
			    end if
			    Piezas = 1
		    END IF
		    let indice = indice + 1
		    j_idx = j_idx + 1 /* Acum. Parcial */
	    END IF /* FIN IF NO CONTROL */
    
	    CDS FINDNEXT DSC:DetTmp_ctx LOCK
	    LET lib:err_retval = CDSRETVAL
	    IF (lib:err_retval >= 0) then
		    CDS EXTRACT DSC:DetTmp_ctx ALL
		    DO
			    IF (MarcaBorrado == "*")
				    CDS FINDNEXT DSC:DetTmp_ctx LOCK
				    LET lib:err_retval = CDSRETVAL
				    IF (lib:err_retval < 0) then
					    break
				    END IF
				    CDS EXTRACT DSC:DetTmp_ctx ALL
			    ELSE
				    BREAK
			    END IF
		    LOOP
	    END IF
        
		IF (Piezas == 1)
			IF (siaf:jnl_codigo_siaf == "99030" || lib:err_retval < 0)
				PRT  PRINT EDIT post:LineaImpresion
				clearfield post:LineaImpresion
				PRT  NEWLINE
				Let cant = cant + 1
				Let imp = 1
                
				CantPzasTot = CantPzasTot + j_idx
				j_idx = 0
			END IF
		END IF
        
	    IF (lib:err_retval < 0 || gcorte != jnl_grucorte_cod)
		    IF (lib:err_retval >= 0)
			    IF (Piezas == 1 && siaf:jnl_codigo_siaf != "99030")	
				    PRT  PRINT EDIT post:LineaImpresion
				    CLEARFIELD LineaImpresion
				    PRT  NEWLINE
				    Let cant = cant + 1
				    Let imp = 1
                    
					CantPzasTot = CantPzasTot + j_idx
					j_idx = 0
			    END IF
		    END IF
		    IF (CantPzasTot > 0)	
			    CLEARFIELD LineaImpresion
			    fprint LineaImpresion "                                        %015.15s - %3d" \
				    "Total de Pzas: " \
				    CantPzasTot
			    PRT  PRINT EDIT post:LineaImpresion
			    PRT  NEWLINE
			    Let cant = cant + 1
                
			    Let CantPzasFin = CantPzasFin + CantPzasTot
			    Let CantPzasTot = 0
		    END IF
		    IF (lib:err_retval >= 0 && gcorte != jnl_grucorte_cod)
			    clearfield LineaImpresion
			    PRT  PRINT EDIT post:LineaImpresion
			    PRT  NEWLINE
			    PRT  CARRIAGERETURN
			    cant = cant + 1
                
			    CALL CDSdescripGruCte
                
			    fprint LineaImpresion "   %s" adt_grucorte_desc
                
			    PRT  PRINT EDIT post:LineaImpresion
			    PRT  NEWLINE
			    PRT  CARRIAGERETURN
			    cant = cant + 1
			    PRT  NEWLINE
			    PRT  CARRIAGERETURN
			    cant = cant + 1
			    LET gcorte = jnl_grucorte_cod
			    clearfield LineaImpresion
			    Let indice = 0
		    END IF
	    ELSE
		    IF (indice == 0 && siaf:jnl_codigo_siaf != "1")
			    PRT  PRINT EDIT post:LineaImpresion
			    clearfield post:LineaImpresion
			    PRT  NEWLINE
			    Let cant = cant + 1
                
			    Let imp = 1
                
		    END IF
	    END IF
	    IF (lib:err_retval < 0 )
		    Break
	    END IF
	    IF (siaf:jnl_codigo_siaf == "99030")
		    Piezas = 0
	    ELSE
			Piezas = 1
	    END IF
	    IF (imp == 1)
		    imp = 0
		    indice = 0
	    END IF
    LOOP
    
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    Let cant = cant + 1
    
    DO
	    if (cant >= 36)
		    break
	    end if
        PRT  NEWLINE
        PRT  CARRIAGERETURN
        LET cant = cant + 1
    LOOP
    
    clearfield LineaImpresion
    fprint LineaImpresion "                                   %031.31s %5.5d - %10.10s %-8.8s" \
	    "Total de Piezas que se remiten:" \
        CantPzasFin \
	    "Operador: " \
        op:op_login_id
    PRT  PRINT EDIT post:LineaImpresion
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    Let cant = cant + 1
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    Let cant = cant + 1
    
    /* Rutina que calcula el CheckSum de todos los T&T que contiene el contenedor */
   // call CDScheckSum("SimpEsp")
    clearfield LineaImpresion
    ;LineaImpresion = itemcheck
   // fprint LineaImpresion "%06.6x" itemcheck
    
    
    PRT  PRINT EDIT post:LineaImpresion
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    Let cant = cant + 1
    
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    Let cant = cant + 1
    
    fprint LineaImpresion "                         %052.52s" \
	    "Espacio reservado para intercalación Legajo archivo."
    PRT  PRINT EDIT post:LineaImpresion
    
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    
    PRT  NEWLINE
    PRT  CARRIAGERETURN
    
    fprint LineaImpresion \
	    "                                                                                 Página: %03.3d" \
      pagina
    
    PRT  PRINT EDIT post:LineaImpresion
    PRT  NEWLINE
    
    PRT  CARRIAGERETURN
    PRT  NEWLINE
END SUB

/*******/
