/****o* Pendientes de agrupación/OFB:post:FVALadt_concb_produc
* NOMBRE
*   OFB:post:FVALadt_concb_produc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALadt_concb_produc
    LOCAL L_codigo    LIKE common:csr_string
    LOCAL L_codpro    LIKE common:csr_string    
    LOCAL L_aux	      LIKE siaf:cant
    LOCAL Lsucceded   LIKE siaf:i
    LOCAL L_jerarquia LIKE post:adt_concb_jerarquia    
    LOCAL L_tipo      LIKE post:adt_concb_tipo

    IF (TESTFLAG(admin:mode_flags,delete) || TESTFLAG(admin:mode_flags,update)) THEN
    	//No validar si se presiono botones de actualizacion
        CALL CSR:proc_list(F_SETVALDONE,LST:LISTContCombo_flds2)
        RETURN (0)
    END IF
    
    CALL siaf:FVALcampo_requerido
    IF (RETVAL < 0) THEN    	
        CALL post:MISCclear_dat2_concb
        L_jerarquia = adt_concb_jerarquia
        CALL csr:proc_list(F_CLEAR,LST:post:LISTContCombo_flds2)
        adt_concb_jerarquia = L_jerarquia        
        adt_concb_principal = "N" //el producto nunca es principal
        adt_concb_colecta = "N" //por default
        CALL ABMContCombo_refresh
        CALL post:MISCInhab_Prod_concb
        CALL post:MISCreset_mode_flag //resetflag admin:mode_flags
        RETURN (-2)
    END IF

    L_codigo = adt_concb_producto
    CALL CSR:trimfield(L_codigo)
    
    IF (post:aux_concb_producto != L_codigo) THEN
        CLEARFIELD Lsucceded
        L_aux = 0
        DO
	      CALL CSR:PickOp(3,DSC:PickProd_concb,L_codigo,L_aux)
	      IF (RETVAL >= 0) THEN
		      //encontro uno,verifica si esta en la posicion correspondiente al codigo
		      L_aux = RETVAL
		      adt_concb_descprod = substr(L_codigo,0,40) //cgw:reservo descripcion producto
		      post:adt_concb_tipo = substr(L_codigo,42,2) //reservo el tipo
		      L_codpro = substr(L_codigo,46,20)
              CALL CSR:trimfield(L_codpro)
              ;repongo porque L_codigo queda con la linea completa del picklist
              L_codigo = adt_concb_producto
              CALL CSR:trimfield(L_codigo)
              IF (L_codpro == L_codigo) THEN
          	      //encontro codigo producto
          	      Lsucceded = 1
          	      BREAK
              END IF
              //No es la posicion del codigo,buscar a partir del siguiente item
              L_aux = L_aux + 1
          ELSE
      	      //no encontro codigo producto
      	      BREAK
          END IF
        LOOP
    
        IF (Lsucceded == 1) THEN
        	IF (!TESTFLAG(mode_concb_flags,actualizar)) THEN
    	        CALL csr:proc_list(F_CLEAR,LST:post:LISTContCombo_flds3)
    	        IF (adt_concb_tipo == "MO") THEN
    	        	adt_concb_colecta = "S" //monetarios siempre colecta
    	        ELSE
    	            adt_concb_colecta = "N" //por default
    	        END IF
    	        CALL post:ABMContCombo_refresh
                L_tipo = post:adt_concb_tipo
                CALL post:MISCclear_dat2_concb
                post:adt_concb_tipo = L_tipo
    	        CALL post:MISCHab_Prod_concb
    	        adt_concb_principal = "N" //el producto nunca es principal
    	        post:aux_concb_producto = post:adt_concb_producto
    	    END IF    
        ELSE
        	MSGBOX "CODIGO DE PRODUCTO INEXISTENTE",0x00,"ERROR"
        	L_jerarquia = adt_concb_jerarquia        	
        	CALL post:MISCclear_dat2_concb        	
        	CALL csr:proc_list(F_CLEAR,LST:post:LISTContCombo_flds2)
        	adt_concb_jerarquia = L_jerarquia
        	adt_concb_principal = "N" //el producto nunca es principal
            adt_concb_colecta = "N" //por default
        	CALL ABMContCombo_refresh
        	CALL post:MISCInhab_Prod_concb
        	CALL post:MISCreset_mode_flag //resetflag admin:mode_flags
            RETURN (-2)
        END IF
    END IF
    SETVALDONE post:adt_concb_producto
END SUB

/*******/
