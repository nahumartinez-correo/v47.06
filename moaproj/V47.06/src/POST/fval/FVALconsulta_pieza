/****o* Pendientes de agrupación/OFB:post:FVALconsulta_pieza
* NOMBRE
*   OFB:post:FVALconsulta_pieza
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

Sub post:FVALconsulta_pieza
	IF (TESTFLAG(screen_consulta,cancelar))
		RETURN (0)
	END IF
	CALL csr:trimfield pieza_stockp
	If (pieza_stockp.numchars == 0) Then
		CALL siaf:FVALcampo_requerido
		RETURN -2
	Else
		DISABLECONTROL drv:PBcb2
		IF (!TESTFLAG(tlr:tran_flags,correction))
		    clearfield label_1
			CALL CDSstockp_consulta
			If (RETVAL < 0) Then
				//Busco si está en la tabla StockpCDD
				CALL CDSstockpCDD_cons				
				If (RETVAL < 0) Then				
					IF (pieza_stockp.numchars == 11) THEN
						//Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
						CALL MISCcant_digitos_tt(pieza_stockp,"10")  			
						CALL CDSstockp_consulta
						IF (retval < 0) THEN
							//Busco si está en la tabla StockpCDD
							CALL CDSstockpCDD_cons
							IF (RETVAL < 0) THEN					
								CALL csr:trimfield(pieza_stockp)
								MSGBOX "PIEZA INEXISTENTE EN TABLA DE STOCK",0X00,"ERROR"
				        		CALL csr:proc_list(F_CLEAR,LST:LISTcon_pieza_flds)
				        		CALL csr:proc_list(F_REFRESH,LST:LISTcon_pieza_flds)
				        		CLEARFIELD Observ_nueva_stockp
				        		REFRESH Observ_nueva_stockp
				        		RETURN -2
				        	END IF
						END IF
					ELSE
						CALL csr:trimfield(pieza_stockp)
						MSGBOX "PIEZA INEXISTENTE EN TABLA DE STOCK",0X00,"ERROR"
			        	CALL csr:proc_list(F_CLEAR,LST:LISTcon_pieza_flds)
			        	CALL csr:proc_list(F_REFRESH,LST:LISTcon_pieza_flds)
			        	CLEARFIELD Observ_nueva_stockp
			        	REFRESH Observ_nueva_stockp
			        	RETURN -2
					END IF            	
	    		END IF
	    	End If
	    	select (adt_CDD_contingencia)
	    	    case "I"
	    	        desc_cont = "Ingresada y entregada en contingencia"
	    	        break
	    	    case "E"
	    	        desc_cont = "Entregada en contingencia"
	    	        break
	    	    case "Q"
	    	        desc_cont = "No Liquidable"
	    	        break
	    	    case "L"
	    	        desc_cont = "Liquidada normalmente"
	    	        break
	    	    case "C"
	    	        desc_cont = "Liquidada normalmente"
	    	        break
	    	    case "N"
	    	        desc_cont = "Estado normal"
	    	        break
	    	    case "V"
	    	        desc_cont = "Liquidada sin vinculo"
	    	end select
	    	refresh desc_cont    
	    	
		END IF
		PROTFIELD pieza_stockp
		
		IF (adt_stockp_crem_imp > 0) THEN
			ENABLECONTROL drv:PBcb2
		END IF
	End If

End Sub

/*******/
