/****o* Pendientes de agrupación/OFB:post:FVALreencam_DP5
* NOMBRE
*   OFB:post:FVALreencam_DP5
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALreencam_DP5
    /* B. Petrella - Nov. 1999    			*/

	IF (Reencaminamiento_aux.numchars == 0)
		LET Reencaminamiento_aux = Reencaminamiento
	END IF

	call csr:trimfield(Reencaminamiento)
	IF (Reencaminamiento.numchars == 0)
		errmsg common:errmsg_list,"DEBE INGRESAR T&T REENCAMINAMIENTO"
		CALL MISCprotUnprot_DP5
		CALL MISCref_DP5
		RETURN (-2)
	END IF


    //Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
    CALL MISCcant_digitos_tt(Reencaminamiento,"5")  			

	/*  Valida  T&T */
	IF (post:Reencaminamiento.NUMCHARS < 13 || SUBSTR(Reencaminamiento,11,2) != "AR") THEN
		MSGBOX "El Track&Trace leido es incorrecto",0x00,"ERROR"
            RETURN (-2)
	END IF

	CALL MISCvalida_digito(post:Reencaminamiento)
	IF (RETVAL < 0)
		RETURN (RETVAL)
	END IF
	
	/*MFM - El T&T de Reencaminamiento no puede ser igual a los T&T ingresados*/
	CALL MISCExiste_Reenc //(post:Reencaminamiento)
	IF (RETVAL < 0)
		MSGBOX "EL REENCAMINAMIENTO NO PUEDE SER IGUAL A UN T&T INGRESADO",0X00,"ERROR"
		RETURN -2
	END IF
	
	IF (AperDesc.numchars == 0 || Reencaminamiento != Reencaminamiento_aux)
		CALL CDSclearGpoAp
		CALL CDSserv_ttcod_DP5
		IF (RETVAL < 0)
			MSGBOX "EL REENCAMINAMIENTO LEIDO ES INCORRECTO",0x00,"ERROR"
			CLEARFIELD AperDesc
			CLEARFIELD adt_apertura_desc
			CLEARFIELD adt_apertura_cod
			PROTFIELD AperDesc
			let drv:button = 2
    			call drv:but_disable
			REFRESH AperDesc
      	      RETURN (-2)
		ELSE
			DO
				CDS EXTRACT SERV_CTX \
	    				post:adt_serv_corteop
				CALL CDSbuscaGpoCteOpJNL
			     	CDS FINDNEXT SERV_CTX NOLOCK
				IF (CDSRETVAL < 0)
				     	CDS ENDSELECT SERV_CTX
					BREAK
				END IF
			LOOP
		END IF
	END IF
	LET Reencaminamiento_aux = Reencaminamiento
	unprotfield AperDesc
	let drv:button = 2
	CALL drv:but_up_enable

END SUB

/*******/
