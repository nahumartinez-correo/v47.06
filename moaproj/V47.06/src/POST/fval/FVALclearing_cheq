/****o* Pendientes de agrupación/OFB:post:FVALclearing_cheq
* NOMBRE
*   OFB:post:FVALclearing_cheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postFVAL.h"

SUB post:FVALclearing_cheq
    if (!TESTFLAG(tlr:tran_flags,correction))
       if (tes:clearing.numchars == 0) then
          ;call HELPclearing_cheq
          ;if (retval < 0 ) then
             ;cds endselect DSC:adt_clearing_ctx
             ;return retval
          ;else              
             ;refresh clearing
             ;cds endselect DSC:adt_clearing_ctx
          ;end if
          return
       else    
          cds select from DSC:tes:adt_clearing_tbl BECOMES DSC:tes:adt_clearing_ctx \
          where tes:adt_clearing_cod == tes:clearing
          cds findfirst DSC:tes:adt_clearing_ctx nolock
          let lib:err_retval = cdsretval
          if (lib:err_retval == -801)
             msgbox "CLEARING INEXISTENTE",0x00,"ERROR"
             call tes:HELPclearing_cheq
             if (retval < 0 ) then
                cds endselect DSC:tes:adt_clearing_ctx
                return retval
             end if
          else
             cds extract DSC:tes:adt_clearing_ctx all
             tes:clearing = tes:adt_clearing_cod
          end if
          refresh tes:clearing
          cds endselect DSC:tes:adt_clearing_ctx
       end if    
       setvaldone tes:clearing
    end if
END SUB

/*******/
