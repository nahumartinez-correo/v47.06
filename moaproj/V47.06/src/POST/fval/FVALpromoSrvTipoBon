/****o* Pendientes de agrupación/OFB:post:FVALpromoSrvTipoBon
* NOMBRE
*   OFB:post:FVALpromoSrvTipoBon
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpromoSrvTipoBon
	local l_retval like lib:err_retval
	local l_string like common:csr_string
	if (currentfield.numchars == 0)
		return
	endif
	if (post:adt_promo_SrvTipoBon == "P") then
		l_retval = true
	else
		if (post:adt_promo_serv.numchars != 0)
			CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:adt_serv_context \
    		WHERE (post:adt_serv_tipo == "PO" || post:adt_serv_tipo == "EN") && \
    					  post:adt_serv_serv == post:adt_promo_serv
    		CDS FINDFIRST DSC:adt_serv_context NOLOCK
    		if ((CDSRETVAL != -801) && (post:adt_promo_SrvTipoBon == "V")) then
    		/*if ((CDSRETVAL != -801) && (post:adt_promo_SrvTipoBon == "V") && \
    			(adt_promo_destTarifa != SELECCION_TODOS_DEST) && \
			 	(adt_promo_rango != SELECCION_TODOS_RANGOS)) then*/
				l_retval = true
			else
				l_retval = false
			end if
			CDS ENDSELECT DSC:adt_serv_context
		else
			l_retval = false
		end if
	end if

	IF (l_retval == true)
		nextfield adt_promo_ServBon
	ELSE
		call post:PBpromoSrvTipoBonif
		if (retval == -2) then
			ERRMSG lst:common:errmsg_list,"(L) TIPO DE BONIFICACION NO EXISTE"
			clearfield adt_promo_SrvTipoBon
			clearfield adt_promo_ServBon
			refresh adt_promo_SrvTipoBon
			refresh adt_promo_ServBon
			call csr:f_sadroppl dsc:post:picPromoTipoBonifVal
			RETURN (-2)
		end if
	END IF
	call csr:f_sadroppl dsc:post:picPromoTipoBonifVal
END SUB

/*******/
