/****o* Pendientes de agrupación/OFB:post:FVALcliraz_sal_pv_CM
* NOMBRE
*   OFB:post:FVALcliraz_sal_pv_CM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALcliraz_sal_pv_CM

	LOCAL loc_CliRaz like CliRaz

	CALL CSR:trimfield(post:CliRaz)
offset_0000:

    MOVE CliRaz TO loc_CliRaz

	CDS SELECT FROM DSC:TABCliMed BECOMES DSC:CONCliMed 
	CDS MULTIDISPLAY DSC:CONCliMed post:LISTRecep_CM
	
	IF (CDSRETVAL == 0x01FD) THEN
       	GOTO offset_0000
    END IF

    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE loc_CliRaz TO CliRaz
        tablaCli = DSC:TABCliMed
        FLD:contextoCli = DSC:CONCliMed
        CALL post:CDSadt_cloraz_load
 		RETURN (-1)
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
       	RETURN (-1)
    END IF

    CDS EXTRACT DSC:CONCliMed  ALL //VER SI RECUPERA EL FLD:CloTipDoc
    CDS UNLOCK DSC:CONCliMed 

	let CliRaz = CloRazon
	REFRESH  CliRaz
	SETVALDONE CliRaz
	
	;CONSULTA SIMPLE DE CLIENTE MEDIOS AL HOST
	MOVE post:CliMed_tipo   TO post:climed_tipo
	MOVE post:CliMed_numero TO post:climed_numero
	CALL post:OFBclimedio_simple
	IF (RETVAL < 0) THEN
		RESETFLAG giros:tran_send_mode,consulta_simple
		RESETFLAG giros:tran_send_mode,consulta_multiple
		RETURN (-2)
	END IF
	RESETFLAG giros:tran_send_mode,consulta_simple
	RESETFLAG giros:tran_send_mode,consulta_multiple

	CALL CSR:proc_list(F_REFRESH,LST:LISTClient_flds)
    CALL CSR:proc_list(F_REFRESH,LST:LISTCliOca)     
END SUB

/*******/
