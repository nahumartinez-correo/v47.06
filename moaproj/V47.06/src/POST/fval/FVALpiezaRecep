/****o* Pendientes de agrupación/OFB:post:FVALpiezaRecep
* NOMBRE
*   OFB:post:FVALpiezaRecep
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpiezaRecep
    /* Valida el T&T de la pieza    */
    /* B. Petrella - May. 1998    */
    if (lastkey == 0x0191) then
        if (Pieza_aux.numchars == 0)
            /* Confirma la transac. con los cpos. vacíos */
            call CDSextOrden_max
		if (SiNoTT == "N")
			swapdup Pieza_aux
			clearfield Pieza_aux
		end if
            call MISCrefRecep
		if (SiNoTT == "N")
			swapdup Pieza_aux
		end if
        else
            let Pieza = Pieza_aux
            call FVALcodigo_TT
            if (retval < 0)
                /* Confirma la transac. con un cod. erroneo */
                /* de T&T de la Pieza. */
                return (retval)
            else
                call FVALsinoVD
		    if (retval < 0)
                    return (retval)
                end if
		    call FVALsino
                if (retval < 0)
                    return (retval)
                else
                  if (SiNo == "S") then
                     call FVALrecepContra
                     if (retval < 0)
                       return (retval)
                     end if
                  end if
		      if (SiNoVD == "S")
                     call FVALimporteVD
                     if (retval < 0)
                       return (retval)
                     end if
			end if
                  call FVALdestinoRec
                  if (retval < 0)
                    return (retval)
                  else
                   /* Conf. la transac. con cpos. correctos */
                   /* Verif. que estos datos existan */
                   /* en la Base Local */
                    call CDSselSacoPieza
                    if (retval == -1)
                       /* Ya existe la Pieza */
                       CDS EXTRACT DSC:recepTmp_ctx ALL
                       call CDSgrabaRecTmp
                    else
                       /* No existe - Se debe dar de Alta */
                       let orden = orden_max + 1
                      /* Graba en la tabla RecepTmp */
                      call CDSgrabaRecTmp
                      let orden_max = orden
                    end if
                  end if
                end if
            end if
        end if
    else
        let Pieza = Pieza_aux
        call FVALcodigo_TT
        return (retval)
    end if

END SUB

/*******/
