/****o* Pendientes de agrupación/OFB:post:FVALserv_serv
* NOMBRE
*   OFB:post:FVALserv_serv
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALserv_serv

    IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
        /*setvaldone adt_serv_alcance
        setvaldone adt_serv_tipo
        setvaldone adt_serv_via
        setvaldone adt_serv_tt*/
        CALL CSR:proc_list(F_SETVALDONE,LST:LISTserv_flds)
        return (0)
    END IF
    IF (adt_serv_serv.NUMCHARS == 0) THEN
        select (drv:screen_active)
        case 1
                drv:button = 1
                CALL drv:but_disable
                drv:button = 2
                CALL drv:but_disable
                drv:button = 3
                CALL drv:but_disable
                drv:button = 4
                CALL drv:but_disable
                break
        case 2
                drv:button = 0
                CALL drv:but_disable
                drv:button = 1
                CALL drv:but_disable
                drv:button = 2
                CALL drv:but_disable
                break
        case 3
                drv:button = 0
                CALL drv:but_disable
                drv:button = 1
                CALL drv:but_disable
                drv:button = 2
                CALL drv:but_disable
                drv:button = 3
                CALL drv:but_disable
        break
        end select
        return (-1)
    ELSE
        select (drv:screen_active)
        case 1
                drv:button = 1
                CALL drv:but_up_enable
                drv:button = 2
                CALL drv:but_up_enable
                drv:button = 3
                CALL drv:but_up_enable
                drv:button = 4
                CALL drv:but_up_enable
                
                /*No se puede dar de alta un servicio con codigo 0*/
                IF (adt_serv_serv == 0 )
    	            errmsg lst:common:errmsg_list, \
	                "EL CODIGO DE SERVICIO NO PUEDE SER 0"                
                    return (-2)
                ENDIF
                break
        case 2
                drv:button = 0
                CALL drv:but_up_enable
                drv:button = 1
                CALL drv:but_up_enable
                drv:button = 2
                CALL drv:but_up_enable
                break
        case 3
                drv:button = 0
                CALL drv:but_up_enable
                drv:button = 1
                CALL drv:but_up_enable
                drv:button = 2
                CALL drv:but_up_enable
                drv:button = 3
                CALL drv:but_up_enable
        break
        end select
    END IF
    /*Agrego aca estas rutinas de clear y refresh porque no estaba borrando el contenido de los campos ya cargados
    cuando se ingresaba un nuevo registro para localizarlo en la tabla. DP 21/02/2000*/
    CALL CSR:proc_list(170,LST:LISTserv_flds2)
    CALL CSR:proc_list(190,LST:LISTserv_flds2)
    CALL CSR:proc_list(170,LST:siaf:LISTtransac_flds)
    CALL CSR:proc_list(190,LST:siaf:LISTtransac_flds)
    
    CALL CDSadt_serv_load
    IF (RETVAL == -2) THEN
        serv_alta = "S"
        let tmp_serv_serv = adt_serv_serv
        CALL CSR:proc_list(170,LST:LISTserv_flds2)
        CALL CSR:proc_list(190,LST:LISTserv_flds2)
	    CALL CSR:proc_list(170,LST:siaf:LISTtransac_flds)
    	CALL CSR:proc_list(190,LST:siaf:LISTtransac_flds)
        let adt_serv_serv = tmp_serv_serv
        drv:button = 25
        CALL drv:but_disable
        drv:button = 26
        CALL drv:but_disable
        drv:button = 27
        CALL drv:but_up_enable
        drv:button = 28
        CALL drv:but_disable
        setvaldone adt_serv_serv
        return (0)
    ELSE
        IF (RETVAL == 0) THEN
          serv_alta = "N"
          drv:button = 4
          CALL drv:but_enable
          drv:button = 25
          CALL drv:but_enable
          drv:button = 26
          CALL drv:but_enable
          drv:button = 27
          CALL drv:but_disable
          drv:button = 28
          CALL drv:but_disable
          CALL ABMadt_serv_refresh
      
		  //IF (adt_serv_tipo == "PO" || adt_serv_tipo == "EN" || adt_serv_tipo == "CB")
	    	CALL CDSserv_tran_load
	    	IF (RETVAL == 0)
    			move post:adt_serv_serv to siaf:tran_codigo_aux
	    	END IF
	      //END IF      
        END IF
    
    END IF
    setvaldone adt_serv_serv
    
END SUB

/*******/
