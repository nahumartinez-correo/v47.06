/****o* Pendientes de agrupación/OFB:post:FVALcliraz_ordenCM
* NOMBRE
*   OFB:post:FVALcliraz_ordenCM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALcliraz_ordenCM

	LOCAL loc_CliRaz like CliRaz

	CALL CSR:trimfield(post:CliRaz)
offset_0000:

    	MOVE CliRaz TO loc_CliRaz

	CDS SELECT FROM DSC:TABCliMed BECOMES DSC:CONCliMed 
	CDS MULTIDISPLAY DSC:CONCliMed post:LISTRecep_CM
	
	IF (CDSRETVAL == 0x01FD) THEN
       		GOTO offset_0000
    	END IF

    	LET lib:err_retval = CDSRETVAL
    	IF (lib:err_retval == 0) THEN
        	MOVE loc_CliRaz TO CliRaz
        	tablaCli = DSC:TABCliMed
        	FLD:contextoCli = DSC:CONCliMed
        	call CDSadt_cloraz_load
 			RETURN (-2)
    	END IF
    	LET lib:err_retval = CDSRETVAL
    	CALL lib:MISCcds_find_err
    	IF (RETVAL != 0) THEN
       		RETURN (-1)
    	END IF
    
    	CDS EXTRACT DSC:CONCliMed  ALL //VER SI RECUPERA EL FLD:CloTipDoc
    	CDS UNLOCK DSC:CONCliMed 

		
	let CliRaz = CloRazon
	REFRESH  CliRaz
	SETVALDONE CliRaz
	
	/*Limpiar los campos de los datos de la orden de compra*/
	CALL CSR:proc_list(F_CLEAR,LST:LISTcampos_ordenCM)
	CALL CSR:proc_list(F_REFRESH,LST:LISTcampos_ordenCM)
	
	;CONSULTA SIMPLE DE CLIENTE MEDIOS AL HOST
	move post:CliMed_tipo   to post:climed_tipo
	move post:CliMed_numero to post:climed_numero
	call post:OFBclimedio_simple
	//PS10959

	post:CliRaz_bck = post:CliRaz
	post:climed_tipo_bck = post:climed_tipo 
	post:climed_numero_bck = post:climed_numero 
	post:ModalidadCC_bck = post:ModalidadCC
	post:ModalidadCD_bck = post:ModalidadCD 
	post:modalidad_CM_bck = post:modalidad_CM
	post:nisDep_CM_bck = post:nisDep_CM	
  post:subcuenta_CM_bck = post:subcuenta_CM  
  post:bloqueo_CM_bck = post:bloqueo_CM   
	post:limite_CM_bck = post:limite_CM 	
	post:saldo_CM_bck = post:saldo_CM	
	
	if ( retval < 0 )
		resetflag giros:tran_send_mode,consulta_simple
		resetflag giros:tran_send_mode,consulta_multiple
		ungetkey RT_ESC
		return -2
	end if
	resetflag giros:tran_send_mode,consulta_simple
	resetflag giros:tran_send_mode,consulta_multiple
	
	call CSR:proc_list(F_REFRESH,LST:LISTClient_flds)
    	call CSR:proc_list(F_REFRESH,LST:LISTCliOca)
	
	drv:button = 0 
    	CALL drv:but_up_enable
	
	/*Habilito el boton de las ordenes de compra */
	ENABLECONTROL drv:PBcb1
	REFRESH SCR:post:SCRNVenta_OrdenCM
	ungetkey RT_SEND		
END SUB

/*******/
