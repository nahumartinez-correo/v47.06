/****o* Pendientes de agrupación/OFB:post:FVALenvioGCltes
* NOMBRE
*   OFB:post:FVALenvioGCltes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALenvioGCltes
    /* Valida EnvioGdesCltes    */
    /* B. Petrella - Jun. 1998    */
    call csr:trimfield(EnvioGdesCltes)
    if (siaf:codigo_siaf == 99000 && lastkey == 0x0191) then
        if (EnvioGdesCltes.numchars == 0)
            /* Confirma la transac. con los cpos. vacíos */
            call CDSextOrden_max
            call MISCrefRecep
      end if
    else
        if (EnvioGdesCltes.numchars == 0) then
           let common:csr_string = "Error: Debe ingresar el ENVIO A GRANDES CLIENTES"
           errmsg common:errmsg_list,FLD:common:csr_string
           return (-2)
        endif
    endif
    /* Si es la Transaccion de Dep. Domicilio Postal */
    if (siaf:codigo_siaf == 99010 || siaf:codigo_siaf == 99070) then

      protfield SiNoTT
      protfield EnvioGdesCltes
      if (siaf:codigo_siaf == 99010)
            unprotfield Abonado_Suscrip
            unprotfield ApelNom_Entrega
            unprotfield ContraReembolso
            unprotfield CantDiasHabiles
            unprotfield TipoServ_cod

            refresh Abonado_Suscrip
            refresh ApelNom_Entrega
            refresh ContraReembolso
            refresh CantDiasHabiles
            refresh TipoServ_cod

            /* Habilito el botón del Tipo de Producto */
            let drv:button = 0
            call drv:but_up_enable
      else  /* 9970 */
        unprotfield adt_corteop_desc
        unprotfield AperDesc
        unprotfield adt_opc_desc
        unprotfield cod_postal
        unprotfield MotDevol_Observ
        call MISChabDevolPieza
      end if
    else
        if (siaf:codigo_siaf == 99020)
            protfield SiNoTT
            protfield EnvioGdesCltes
            unprotfield ApelNom_Entrega
            refresh ApelNom_Entrega
        else /* 99000 */
                if (lastkey == 0x0191 && EnvioGdesCltes.numchars != 0)
                    let Pieza_aux = substr(EnvioGdesCltes,0,13)
                let Pieza = Pieza_aux
                call FVALsino
                        if (retval < 0)
                            return (retval)
                        end if
                call FVALsinoVD
                        if (retval < 0)
                            return (retval)
                        end if
                    if (SiNo == "S") then
                            call FVALrecepContra
                            if (retval < 0)
                                return (retval)
                            end if
                    end if
                if (SiNoVD == "S") then
                            call FVALimporteVD
                            if (retval < 0)
                                return (retval)
                            end if
                end if
                    call FVALdestinoRec
                    if (retval < 0)
                            return (retval)
                    end if
                    /* Conf. la transac. con cpos. correctos */
                    /* Verif. que estos datos existan */
                    /* en la Base Local */
                        call CDSselSacoPieza
                        if (retval == -1)
                            /* Ya existe la Pieza */
                            CDS EXTRACT DSC:recepTmp_ctx ALL
                            call CDSgrabaRecTmp
                        else
                            /* No existe - Se debe dar de Alta */
                            let orden = orden_max + 1
                            /* Graba en la tabla RecepTmp */
                            call CDSgrabaRecTmp
                            let orden_max = orden
                        end if
            endif
        end if
    endif

END SUB

/*******/
