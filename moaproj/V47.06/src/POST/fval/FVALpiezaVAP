/****o* Registro VAP/OFB:post:FVALpiezaVAP
* NOMBRE
*   OFB:post:FVALpiezaVAP
* DESCRIPCION
*   Valida el campo Pieza a registrar. Verifica que la pieza no haya sido ya registrada, o entregada
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   SCR:post:SCRNregistroVAP
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpiezaVAP
	local modifica like siaf:i
	local l_NIS_Imposicion like post:NIS_Imposicion
	local l_operator_vap like post:operator_vap   
	local l_adt_stockp_Baja like post:adt_stockp_Baja
	local l_msje like common:csr_string
	local l_err like siaf:i
	
	let l_err = 0
	
	//CALL CSR:proc_list(F_PROTECT,LST:post:LISTentrega_pieza)
sel_entrPieza:    
	;leo RegVAP_tmp para saber si la pieza ya fue ingresada en la tx actual
	call CDSregVAP_tmp_lee
	if (retval == 0) then
		CALL drv:MISCdis_enablePB_ABM(0,1,1)
		if (estado_presu == 2) then
			modifica = 1
			setvaldone adt_serv_serv
		end if
	else
		CALL CSR:trimfield(Pieza)
		IF (Pieza.NUMCHARS == 0)
			//IF (TESTFLAG(admin:mode_flags,grb) || TESTFLAG(admin:mode_flags,act)) then
			IF (LASTKEY != RT_SEND)
				//Si no presiono ENTER obligo a ingresar un T&T    			
				MSGBOX "CAMPO REQUERIDO.",0x00,"Error"
				call post:PBNuevoRegVAP
				call admin:ABMresetflag
				RETURN (-2)
			ELSE
				//SI presionó ENTER no valido campos de pantalla
				CALL MISCsetvaldone_vap
			END IF
		
			//END IF
			RETURN 0
		END IF
			    	
		if (post:estado_presu == 2) then
			CALL CSR:proc_list(F_CLEAR,LST:post:LISTregVAP_All)
			CALL CSR:proc_list(F_REFRESH,LST:post:LISTregVAP_All)
		else
			//por que la limpia?
			
			//CALL CSR:proc_list(F_CLEAR,LST:post:LISTentrega_pieza)
			CALL CSR:proc_list(F_REFRESH,LST:post:LISTregVAP_All)
		end if
   	
		//hago el select a la stockp con la pieza ingresada
		CALL CDSregPieza_sel_new //CDSentrPieza_sel
		if (retval == -801)
			//si no la encuentra y es de 11 digitos le agrego "AR" y vuelvo a hacer el select
			if (Pieza.numchars == 11)
				CDS ENDSELECT DSC:STOCKP_CTX
				//Controlo la cantidad de dígitos, si es de 11 le agrego "AR"
				CALL MISCcant_digitos_tt(Pieza,"8")
				goto sel_entrPieza:
			end if	
			CDS ENDSELECT DSC:STOCKP_CTX
			CLEARFIELD Pieza
			REFRESH Pieza
			MSGBOX "LA PIEZA INGRESADA NO EXISTE EN STOCK PARA SER REGISTRADA",0x00,"Error"
			call admin:ABMresetflag
			RETURN (-2)  
		elseif (retval == 0) then
			CDS EXTRACT DSC:STOCKP_CTX \
				post:NIS_Imposicion INTO l_NIS_Imposicion \
				post:operator_vap INTO l_operator_vap \
				post:adt_stockp_Baja INTO l_adt_stockp_Baja
		
			if (l_adt_stockp_Baja != "S") then
				if (l_NIS_Imposicion.numchars > 0) then
					let l_err = 1
					let l_msje = "La pieza ya ha sido registrada. Puede consultar el REPORTE de VAP Manual."
				elseif (l_operator_vap.numchars > 0)
					if (l_operator_vap != op:op_operator_id) then
						let l_err = 1
						let l_msje = "La pieza esta siendo registrada por otro operador."
					else
						let l_err = 1
						let l_msje = "La pieza está siendo registrada en el presupuesto actual."
					end if
				end if  
			else
				let l_err = 1
				let l_msje = "La pieza ya ha sido entregada. Puede consultar el REPORTE de VAP Manual."
			end if
		
			if (l_err == 1) then
				CDS ENDSELECT DSC:STOCKP_CTX
				CLEARFIELD Pieza
				REFRESH Pieza
				MSGBOX l_msje,0x00,"Error"
				call admin:ABMresetflag
				RETURN (-2)
			end if
		end if
	
		CDS FINDAGAIN DSC:STOCKP_CTX NOLOCK
		CDS EXTRACT DSC:STOCKP_CTX ALL
		CALL drv:MISCdis_enablePB_ABM(1,0,0)
	end if 	
    
	//Habilito los campos necesarios para registrar la pieza
	CALL MISChabFldsVAP("SI_HAB",modifica)
	
	if (post:estado_presu == 2) then
		CALL CSR:proc_list(F_REFRESH,LST:post:LISTregVAP_All)
	else
		CALL CSR:proc_list(F_REFRESH,LST:post:LISTregVAP_All) //post:LISTregVAP_scrn)
	end if
	//CALL post:MISCimp_entrPieza
	SETVALDONE Pieza
	if (modifica)
		PROTFIELD adt_serv_serv
		DISABLECONTROL drv:PBcb1	
		SETFLAG admin:mode_flags,todos
		UNGETKEY RT_SEND
  END IF
END SUB

/*******/
