/****o* Pendientes de agrupación/OFB:post:FVALpieza_reenc
* NOMBRE
*   OFB:post:FVALpieza_reenc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpieza_reenc

	IF (!testflag(tlr:tran_flags,correction)) THEN
	 	
		IF (Pieza.numchars != 0)
			CALL CDSselect_PzaObsReen("PiezaReenc","PiezaReenc_ctx")
			IF (RETVAL < 0)
				if (Pieza.numchars == 11)
					//Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
					CALL MISCcant_digitos_tt(Pieza,"8")  			
					CALL CDSselect_PzaObsReen("PiezaReenc","PiezaReenc_ctx")
					if (retval < 0)
						call csr:trimfield(Pieza)
						MSGBOX "PIEZA INEXISTENTE",0X00,"ERROR"
						RETURN (-2)
					end if
				else
					call csr:trimfield(Pieza)
					MSGBOX "PIEZA INEXISTENTE",0X00,"ERROR"
					RETURN (-2)			
				end if
			END IF
				
			CDS SELECT FROM DSC:PiezaReenc_tbl BECOMES DSC:PiezaReenc_ctx \
			WHERE post:adt_stockp_pieza == Pieza && \
			post:adt_pieza_op == op:op_operator_id	
	
			CDS FINDFIRST DSC:PiezaReenc_ctx LOCK
			
			/*Marco la pieza a ser reencaminada*/
			CALL CDSMarcar_Pieza(Pieza,"PiezaReenc_ctx")
			
			CDS UNLOCK DSC:PiezaReenc_ctx
			CDS ENDSELECT DSC:PiezaReenc_ctx
			
			total_piezas_reenc = common:csr_string 
			REFRESH total_piezas_reenc
			
			CLEARFIELD Pieza
			REFRESH Pieza
			nextfield Pieza
			
		END IF
	END IF
	SETVALDONE Pieza
END SUB

/*******/
