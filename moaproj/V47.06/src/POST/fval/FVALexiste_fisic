/****o* Pendientes de agrupación/OFB:post:FVALexiste_fisic
* NOMBRE
*   OFB:post:FVALexiste_fisic
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALexiste_fisic
 
 IF (!testflag(tlr:tran_flags,correction)) THEN	
	
	IF (tipo_excepcion == "TRANSPORTE") THEN
		existe_fisicamente = "S"
		REFRESH existe_fisicamente
	END IF
	CALL csr:trimfield (existe_fisicamente)
	IF (existe_fisicamente.numchars == 0) THEN
		CALL siaf:FVALcampo_requerido
		RETURN -2
	ELSE
		IF (existe_fisicamente != "N" && existe_fisicamente != "S") THEN
			CALL lib:FVALy_or_n
			RETURN -2
		ELSE
			IF (existe_fisicamente == "N") THEN
				CALL csr:proc_list(F_UNPROTECT,LST:LISTDatos_Excepcion)
				CALL csr:proc_list(F_CLEAR,LST:LISTDatos_Excepcion)
				CALL csr:proc_list(F_REFRESH,LST:LISTDatos_Excepcion)
			ELSE
				CALL csr:proc_list(F_CLEAR,LST:LISTDatos_Excepcion)
				CALL csr:proc_list(F_REFRESH,LST:LISTDatos_Excepcion)
				CALL csr:proc_list(F_PROTECT,LST:LISTDatos_Excepcion)
			END IF
		END IF
	END IF
	SETVALDONE existe_fisicamente
  END IF
END SUB

/*******/
