/****l* Admision RPP/OFB:post:FVALpiezaAdmRPP
* NOMBRE
*   OFB:post:FVALpiezaAdmRPP
* DESCRIPCION
*   Valida el campo Pieza RPP a admitir. 
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   SCR:post:SCRNadmisionRPP
* DOCUMENTACION
* NI 50569-RPP
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpiezaAdmRPP

	local modifica like siaf:i
	local l_err like siaf:i
	
	
	let l_err = 0
	

sel_entrPieza:    
	;leo ADM_RPP saber si la pieza ya fue ingresada en la tx actual
	call CDSAdmRPP_tmp_lee
	if (retval == 0) then
		//habilito modificar y borrar
		CALL CSR:proc_list(F_REFRESH,LST:post:LISTadmRPP)
		CALL drv:MISCdis_enablePB_ABM(0,1,1)
		if (estado_presu == 2) then
			modifica = 1
			setvaldone serv_admRPP_cod
		end if
	else
		CALL CSR:trimfield(pieza_admRPP)
		IF (pieza_admRPP.NUMCHARS == 0)
			IF (LASTKEY != RT_SEND)
				//Si no presiono ENTER obligo a ingresar un T&T    			
				MSGBOX "CAMPO REQUERIDO.",0x00,"Error"
				RETURN (-2)
			ELSE
				//SI presionó ENTER no valido campos de pantalla
				SETVALDONE pieza_admRPP
			END IF
			RETURN 0
		ELSE
				IF (serv_admRPP_cod.numchars == 0)
					MSGBOX "DEBE INGRESAR UN SERVICIO RPP PARA ASOCIAR EL T&T",0x00,"ERROR"
					RETURN -2
				END IF
		END IF
			  
			    	
		if (post:estado_presu == 2) then
			
			CALL MISCesTT_RPP 
			IF (retval < 0)
				MSGBOX "EL TRACK & TRACE LEIDO ES INCORRECTO",0x00,"ERROR"
				Return -2 
			END IF

			//Verifico que la pieza no haya sido ingresada .
			CALL MISCverifAdmRPPIngr 
			IF (RETVAL < 0)
				RETURN -2
			END IF
				
		end if
   	
    	CALL drv:MISCdis_enablePB_ABM(1,0,0)
    
    end if
    
	SETVALDONE pieza_admRPP
	if (modifica)
		SETFLAG admin:mode_flags,todos
		UNGETKEY RT_SEND
  END IF
END SUB

/*******/
