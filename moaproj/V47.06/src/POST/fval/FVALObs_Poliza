/****o* Pendientes de agrupación/OFB:post:FVALObs_Poliza
* NOMBRE
*   OFB:post:FVALObs_Poliza
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

Sub post:FVALObs_Poliza

	If (mot_piezas_observ.numchars != 0) Then
	   call csr:fld_to_upper mot_piezas_observ
 	   if (mot_piezas_observ != "RECHAZADO" &&  mot_piezas_observ != "FALLECIDO") Then
            CALL PBObs_Poliza
            if (retval < 0) then
            	return -2
            end if
       else
		   //PS 9281 - Recuperar el codigo de motivo de observacion.
		   CDS SELECT FROM DSC:MotDevol_tbl BECOMES DSC:MotDevol_ctx \
		   WHERE post:adt_motdevol_desc == post:mot_piezas_observ
		   CDS FINDFIRST DSC:MotDevol_ctx NOLOCK
		   IF (CDSRETVAL < 0) THEN
				RETURN -2
			ELSE	
				CLEARFIELD adt_motdevol_cod
				CDS EXTRACT DSC:MotDevol_ctx adt_motdevol_cod
				EnPol_est_ent = adt_motdevol_cod
				CDS ENDSELECT DSC:MotDevol_ctx
		   END IF
		 
	  end if       
 	else
      CALL PBObs_Poliza
      if (retval < 0) then
      	return -2
      end if
	end If
	
	LET drv:button = CB6
  	CALL drv:but_status
 	IF (drv:disabled != 0) 
  	    /*Modificar deshabilitado*/
        NEXTFIELD desc_piezas_observ
	END IF
End Sub

/*******/
