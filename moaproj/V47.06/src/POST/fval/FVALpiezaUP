/****o* Pendientes de agrupación/OFB:post:FVALpiezaUP
* NOMBRE
*   OFB:post:FVALpiezaUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpiezaUP
	disablecontrol drv:PBcb3
	IF (tipo_piezaUP.numchars == 0)
		msgbox "DEBE INGRESAR UN TIPO DE PIEZA",0x00,"ERROR"
		DISABLECONTROL drv:PBcb3 
		return -2
	end if
	
	IF (piezaUP.numchars == 0)
		msgbox "INGRESE UN T&T o FINALICE LA TRANSACCION",0x00,"ERROR"
		DISABLECONTROL drv:PBcb3 
		return -2	
	END IF
	

    //Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
    CALL MISCcant_digitos_tt(piezaUP,"4")  				
	
		
	CALL CDSpieza_en_stockpUP
	IF (retval == 0)
		cds endselect dsc:stockpUP_ctx
		MSGBOX "PIEZA EXISTENTE EN LA TABLA DE STOCK DE UP",0x00,"Error"
		DISABLECONTROL drv:PBcb3 
		RETURN -2
	END IF
	cds endselect dsc:stockpUP_ctx

	//Verifico que la pieza ingresada sea válida 
	// que exista en la CodTrack, que tenga 13 díogitos,
	// dígito verificador válido y que termine con AR
	CALL MISCvalida_pieza(piezaUP)
	IF (retval < 0)
		//MSGBOX "LA PIEZA INGRESADA ES INCORRECTA",0x00,"ERROR"
		clearfield corte_op
		refresh corte_op
		DISABLECONTROL drv:PBcb3 
		return -2
	end if
	
	//verificar que la pieza ya no haya sido ingresada
	CALL CDSpiezaUP_ingresada
    IF (retval == 0)
    	MSGBOX "Pieza ingresada. Para Eliminarla o Modificarla, acceda por los botones correspondientes",0x00,"ERROR"
    	DISABLECONTROL drv:PBcb3 
    	RETURN (-2)
    END IF
// MFM (05.2020) - LABEL PREPAQ
IF (tipo_piezaUP == "PIEZAS PREPAQ" && prod_PrePaq_cod.numchars == 0)
		MSGBOX "DEBE INGRESAR EL LABEL PREPAQ.",0x00,"ERROR"
		DISABLECONTROL drv:PBcb3 
		clearfield piezaUP
		refresh piezaUP
		nextfield prod_PrePaq_cod
		return 0
	end if

    IF (clasifica_tt_UP == "S")
		
		//Obtengo Corte Operativo
		CALL MISCcorteOp_piezaUP(piezaUP)
		if (retval == -2)
			msgbox "Esta pieza tiene corte operativo que no se corresponde con la apertura ingresada",0x00,"ERROR" 
			clearfield piezaUP
			clearfield corte_op
			refresh piezaUP
			refresh corte_op
			clearfield prod_PrePaq_cod
			refresh prod_PrePaq_cod
			return -2
		end if
		
		
		if (TieneCorteOp == 1)
			//tiene 1 corte_op
			CALL CDSsave_piezaUP

			//llamar a la rutina que refresque los datos en el campo de piezas ingresadas
			CALL MISCshow_pieza_ing
			
			clearfield corte_op
			refresh corte_op
			clearfield piezaUP
			refresh piezaUP
			clearfield prod_PrePaq_cod
			refresh prod_PrePaq_cod
		else
			//tiene + de 1 corte_op en la Servicio o no tienen ninguno
			//en ambos casos desprotejo el campo
			if (TieneCorteOp == 2 || TieneCorteOp == 0)
				//unprotfield corte_op
				enablecontrol drv:PBcb3
				if (corte_op.NUMCHARS == 0) then
					MSGBOX "Ingrese el Corte Operativo correspondiente",0x00,"Aviso"
				endif
			end if
			
		end if
		
	ELSE
		//guardo la pieza en la tabla temporal stockpUP_tmp
		CALL CDSsave_piezaUP
		
		//llamar a la rutina que refresque los datos en el campo de piezas ingresadas
		CALL MISCshow_pieza_ing
	
		clearfield piezaUP
		refresh piezaUP
		clearfield prod_PrePaq_cod
		refresh prod_PrePaq_cod
	
	END IF
	
	IF (tipo_piezaUP == "PIEZAS PREPAQ")
		nextfield prod_PrePaq_cod
		return 0
	ENDIF
	SETVALDONE currentfield
	SETVALDONE prod_PrePaq_cod
	UNGETKEY RT_TAB
	
END SUB

/*******/
