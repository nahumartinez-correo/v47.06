/****o* Pago en Destino/OFB:post:FVALclocuit_ped
* NOMBRE
*   OFB:post:FVALclocuit_ped
* DESCRIPCION
*   Validacion del campo Nro de Documento de la pantalla de Remitentes CREM
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   SCR:post:SCRNped_post_Dtrio
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postfval.h"

SUB post:FVALclocuit_ped

    LOCAL loc_CloCuit LIKE CloCuit
    LOCAL loc_CliCod  LIKE CliCod
    LOCAL loc_cliraz  LIKE CliRaz
    LOCAL loc_tipodoc_tipo LIKE post:adt_TipoDoc_tipo
    LOCAL loc_tipodoc_desc LIKE post:adt_TipoDoc_desc

    LOCAL loc_popup   LIKE post:ingr_datos
    clearfield loc_popup  //inicializa señal de levantar popup para minoristas y corporativos
    
    loc_CloCuit = CloCuit
    loc_CliCod  = CliCod
    loc_cliraz  = CliRaz

    IF (CloCuit == "99999999999" || CloCuit == "99999999995")
    	MSGBOX "Cliente no permitido como Destinatario con Pago en Destino",0x00,"Error"
    	clearfield CloCuit
    	refresh CloCuit
    	RESETFLAG drv:nav_funct_flags,nav_send
    	return -2
    END IF


    
    CALL FVALTipoDoc_i_crem
    CALL siaf:FVALcampo_no_cero
    IF (RETVAL < 0) THEN
    	RESETFLAG drv:nav_funct_flags,nav_send
        RETURN (-2)
    END IF

    call post:CDSTipoDocu_load
    if (post:adt_TipoDoc_digver == "S")
        CALL post:FVALcuit_digi_veri
        IF (RETVAL < 0) THEN
           clearfield post:CloCuit
           refresh post:CloCuit
           RESETFLAG drv:nav_funct_flags,nav_send
           RETURN (-1)
        END IF
    end if


    /*los 2 primeros digitos se chequean cuando corresponde y solo a un cliente nuevo*/    
    if (post:adt_TipoDoc_ver2dig == "S")
        if (post:cli_tipo == 2) /*Cliente Minorista, se chequea que no exista en la CliOca para hacer el control de los 2 primeros digitos del nro de documento en caso que corresponda*/
            post:CloTipDoc = post:adt_TipoDoc_tipo    
            CALL post:CDSTipoDocu_existe    
            lib:err_retval = retval
        else 
            /*para los demas tipos de clientes se los consideran ya existentes*/
            lib:err_retval = 0
        end if
        if (lib:err_retval != 0)    
            CALL post:FVALcuit2dig(post:CloCuit)
            IF (RETVAL < 0) THEN
                clearfield post:CloCuit
                refresh post:CloCuit
                RESETFLAG drv:nav_funct_flags,nav_send
                RETURN (-1)
            END IF
        end if        
    end if

            CALL post:ABMCliOca_scr2_clear
        CALL post:CDSclocuit_load_crem
        IF (retval == 0) THEN
            //call MISCCliOca_existe
            //enablecontrol drv:PBcb0
            if (CloInscripto != "N")
                call CDSCheq_CoefPart_IB
                if (retval != 0)
                	RESETFLAG drv:nav_funct_flags,nav_send
                    return (-2)
                end if
           end if
           SETVALDONE CliCod
        END IF


    CALL CSR:proc_list(F_REFRESHALL,LST:post:LISTrtte_min_flds)
    setvaldone CloCuit

    clearfield post:pcia_desc //para que no arrastre descripcion
    
   clearfield loc_popup
    
END SUB

/*******/
