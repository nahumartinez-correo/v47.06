/****o* Pendientes de agrupación/OFB:post:FVALpieza_observ
* NOMBRE
*   OFB:post:FVALpieza_observ
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALpieza_observ
 
 IF (!testflag(tlr:tran_flags,correction)) THEN	
	IF (Pieza.numchars != 0)
       	CALL CDSselect_PzaObsReen("PiezasObs","PiezaObs_ctx")
		IF (RETVAL < 0)
			if (Pieza.numchars == 11)
				//Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
				CALL MISCcant_digitos_tt(Pieza,"8")  			
				CALL CDSselect_PzaObsReen("PiezasObs","PiezaObs_ctx")
				if (retval < 0)
					call csr:trimfield(Pieza)
					MSGBOX "PIEZA INEXISTENTE",0X00,"ERROR"
					RETURN (-2)
				end if
			else
				call csr:trimfield(Pieza)
				MSGBOX "PIEZA INEXISTENTE",0X00,"ERROR"
				RETURN (-2)			
			end if
		END IF
		
		CDS SELECT FROM DSC:PiezaObs_tbl BECOMES DSC:PiezaObs_ctx \
		WHERE post:adt_stockp_pieza == Pieza && \
		post:adt_pieza_op == op:op_operator_id	
	
		CDS FINDFIRST DSC:PiezaObs_ctx LOCK
		
		/*Marco la pieza a ser observada*/
		CALL CDSMarcar_Pieza(Pieza,"PiezasObs_ctx")
		
		CDS UNLOCK DSC:PiezaObs_ctx
		CDS ENDSELECT DSC:PiezaObs_ctx
			
		total_piezas_observ = common:csr_string 
		REFRESH total_piezas_observ
			
		CLEARFIELD Pieza
		REFRESH Pieza
			
	ELSE
		CALL CDSVerif_PzaObsReen("PiezasObs","PiezaObs_ctx")
		IF (RETVAL < 0) THEN
			MSGBOX "DEBE CONTENER AL MENOS UNA PIEZA",0X00,"ERROR"
			RETURN -2
		END IF
	END IF
	SETVALDONE Pieza
  END IF
END SUB

/*******/
