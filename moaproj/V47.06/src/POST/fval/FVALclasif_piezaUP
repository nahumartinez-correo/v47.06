/****o* Pendientes de agrupación/OFB:post:FVALclasif_piezaUP
* NOMBRE
*   OFB:post:FVALclasif_piezaUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALclasif_piezaUP
	disablecontrol drv:PBcb3
	
	IF (apertura.numchars == 0 && TieneApertura >= 1)
		MSGBOX "Debe seleccionar una Apertura",0x00,,"Error"
		drv:button = drv:last_button
		CALL drv:but_up_enable
		return -2		
	END IF	

    //Controlo la cantidad de dígitos, si es des 11 le agrego "AR"
    CALL MISCcant_digitos_tt(piezaUP,"4")  		
	
	protfield apertura
	CALL CDSpieza_pend
	IF (retval == -801)
		MSGBOX "PIEZA INEXISTENTE",0x00,"Error"
		cds endselect dsc:stockpUP_pend_ctx
		RETURN -2
	
	ELSE
		if (retval == 0)
			cds extract dsc:stockpUP_pend_ctx all
			if (MarcaBorrado == "*")
				cds endselect dsc:stockpUP_pend_ctx
				MSGBOX "Pieza ya ingresada.\n Para Eliminarla o Modificarla, acceda por los botones correspondientes",0x00,"ERROR"
				return -2
			end if
		end if
	END IF
	cds endselect dsc:stockpUP_pend_ctx
	

	//Verifico que la pieza ingresada sea válida 
	// que exista en la CodTrack, que tenga 13 díogitos,
	// dígito verificador válido y que termine con AR
	CALL MISCvalida_pieza(piezaUP)
	IF (retval < 0)
		//MSGBOX "LA PIEZA INGRESADA ES INCORRECTA",0x00,"ERROR"
		return -2
	end if
	
	//Obtengo Corte Operativo
	CALL MISCcorteOp_piezaUP(piezaUP)
	if (retval == -2)
		msgbox "Esta pieza tiene corte operativo que no se corresponde con la apertura ingresada",0x00,"ERROR" 
		clearfield piezaUP
		clearfield corte_op
		refresh piezaUP
		refresh corte_op
		return -2
	end if
		
	if (TieneCorteOp == 1)
		//tiene 1 corte_op
		//actualizo la stockpUP_pend como clasificada
		CALL post:CDSupd_stockpUP_pend("*",apertura,corte_op,"+")

		//llamar a la rutina que refresque los datos en el campo de piezas ingresadas
		CALL MISCshow_pieza_ing
		clearfield corte_op
		refresh corte_op
		clearfield piezaUP
		refresh piezaUP		

	else
		//tiene + de 1 corte_op en la Servicio o no tienen ninguno
		//en ambos casos desprotejo el campo
		if (TieneCorteOp == 2 || TieneCorteOp == 0)
			enablecontrol drv:PBcb3
			MSGBOX "Ingrese el Corte Operativo correspondiente",0x00,"Aviso"
		end if
	end if

	SETVALDONE piezaUP
	
	UNGETKEY RT_TAB

END SUB

/*******/
