/****o* Pendientes de agrupación/OFB:post:FVALdest_dest
* NOMBRE
*   OFB:post:FVALdest_dest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALdest_dest
local dest like post:adt_dest_dest
    IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
        CALL CSR:proc_list(F_SETVALDONE,LST:LISTdest_flds)
        return (0)
    END IF

    CALL CSR:proc_list(170,LST:LISTdest_flds2)
    CALL CSR:proc_list(190,LST:LISTdest_flds2)

    CALL CDSadt_dest_load
    IF (RETVAL == 0) THEN
        drv:button = 25
        CALL drv:but_enable
        drv:button = 26
        CALL drv:but_enable
        drv:button = 27
        CALL drv:but_disable
        drv:button = 28
        CALL drv:but_disable
        CALL ABMadt_dest_refresh
        //cgw:reserva los campos originales,para ser comparados en modificaciones pendientes.
        CALL csr:proc_list(F_COPY,LST:post:LISTdest_flds,LST:LISTbck_destinos)
    ELSE
        IF (RETVAL == -2) THEN
	        let dest = adt_dest_dest
	        CALL CSR:proc_list(170,LST:LISTdest_flds2)
	        CALL CSR:proc_list(190,LST:LISTdest_flds2)
	        let adt_dest_dest = dest
            drv:button = 25
            CALL drv:but_disable
            drv:button = 26
            CALL drv:but_disable
            drv:button = 27
            CALL drv:but_up_enable
            drv:button = 28
            CALL drv:but_disable
            setvaldone adt_dest_dest
            RETURN (0)
        END IF
    END IF
    setvaldone adt_dest_dest
END SUB

/*******/
