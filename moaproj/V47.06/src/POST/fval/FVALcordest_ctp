/****o* Pendientes de agrupación/OFB:post:FVALcordest_ctp
* NOMBRE
*   OFB:post:FVALcordest_ctp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postfval.h"

SUB post:FVALcordest_ctp
/* Si el campo ya tiene algo, me fijo si el codigo existe en la tabla ctp */
/* Si no existe, error. Si el campo esta vacio, con ENTER muestro el multi-
display de la tabla ctp. Si aprieta el combo, muestro toda la tabla entera */
    IF (adt_cordest_ctp.NUMCHARS == 0) THEN
        drv:button = drv:last_button
        CALL drv:but_down_disable
        CALL CDSctp_sel
        IF (RETVAL == 0) THEN
            LET adt_cordest_ctp = adt_ctp_cod
            CALL ABMcordest_refresh
        END IF

        drv:button = drv:last_button
        CALL drv:but_up_enable
    else
                adt_ctp_cod = adt_cordest_ctp
        CALL CDSctp_load
        IF (RETVAL == 0) THEN
            drv:button = 25
            CALL drv:but_enable
            drv:button = 26
            CALL drv:but_enable
            drv:button = 27
            CALL drv:but_disable
            drv:button = 28
            CALL drv:but_disable
            CALL ABMcordest_refresh
        ELSE
            IF (RETVAL < 0) THEN
            /*  let tmp_mon_cod = adt_mon_cod
                CALL CSR:proc_list(170,LST:LISTmoneda_flds2)
                CALL CSR:proc_list(190,LST:LISTmoneda_flds2)
                let adt_mon_cod = tmp_mon_cod */
                                errmsg common:errmsg_list, "Valor incorrecto "
                                clearfield currentfield
                                refresh currentfield
                drv:button = 25
                CALL drv:but_disable
                drv:button = 26
                CALL drv:but_disable
                drv:button = 27
                /* CALL drv:but_up_enable*/
                CALL drv:but_disable
                drv:button = 28
                CALL drv:but_disable
                setvaldone adt_mon_cod
                RETURN (-2)
            END IF
        endif
    END IF
/* Me fijo si existe. Si existe es una modificacion o una baja. Si no existe
es un alta */
    call CDScordest_load
    if (retval == 0) then
            drv:button = 25
            CALL drv:but_disable
            drv:button = 26
            CALL drv:but_enable
            drv:button = 27
            CALL drv:but_disable
            drv:button = 28
            CALL drv:but_disable
    else
            drv:button = 25
            CALL drv:but_disable
            drv:button = 26
            CALL drv:but_disable
            drv:button = 27
            CALL drv:but_enable
            drv:button = 28
            CALL drv:but_disable
    endif
    setvaldone adt_cordest_ctp
END SUB

/*******/
