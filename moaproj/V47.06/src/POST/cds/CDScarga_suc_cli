/****o* Pendientes de agrupación/OFB:post:CDScarga_suc_cli
* NOMBRE
*   OFB:post:CDScarga_suc_cli
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScarga_suc_cli(pContexto)
LOCAL l_cdsretval like lib:err_retval
LOCAL l_suc_cli like adt_benTmp_suc_cli
LOCAL l_suc_cli_ant like adt_benTmp_suc_cli
local l_estado like adt_benef_estado
LOCAL cont like siaf:i
	;El CDSRETVAL viene del cds findfirst hecho a la tabla BenefTmp o Beneficios cuando se valida
	;el operativo
	l_suc_cli_ant = adt_benTmp_sucCliSel
	l_cdsretval = CDSRETVAL
    call csr:f_sadroppl("pic_suc_cli")
	call csr:f_sanewpl("pic_suc_cli",pic:PICrestElemento)
	FPRINT common:csr_string "TODAS" 
	CALL CSR:f_saaddpl("pic_suc_cli",common:csr_string)
	cont = 0
    WHILE (l_cdsretval == 0)
    	clearfield l_estado
    	select (pContexto)
    		case "Beneficios_ctx"
    		    cds extract "Beneficios_ctx" adt_benef_estado into l_estado
    		    if (l_estado != "P") then
    			    cds extract "Beneficios_ctx" adt_benef_suc_cli into l_suc_cli, \
    			    adt_benef_estado into l_estado
    			end if
    		break
    		case "BenefTmp_ctx"
    			cds extract "BenefTmp_ctx" adt_benTmp_suc_cli into l_suc_cli
    	end select
    	if (l_estado != "P") then
    	    call csr:trimfield (l_suc_cli)
    	    call csr:PickOp PICKOP_SEARCH "pic_suc_cli" l_suc_cli
    	    if (retval < 0) then
    	    	CALL CSR:f_saaddpl("pic_suc_cli",l_suc_cli) 
    	    	cont = cont + 1
    	    end if
    	end if
    	select (pContexto)
    		case "Beneficios_ctx"
    			cds findnext "Beneficios_ctx" NOLOCK
    		break
    		case "BenefTmp_ctx"
    			cds findnext "BenefTmp_ctx" NOLOCK
    	end select
    	l_cdsretval = CDSRETVAL
    end while
    ;clearfield adt_benTmp_sucCliSel
    adt_benTmp_sucCliSel = l_suc_cli_ant
    call drv:but_number (ofb:post:PBpagoMasivo_SucCli)
    drv:button = retval
    select (cont)
    	case 1
    		adt_benTmp_sucCliSel = l_suc_cli
    	case 0
    		call drv:but_disable
    		protfield adt_benTmp_sucCliSel
		break
		case else
		    call drv:but_up_enable
    		unprotfield adt_benTmp_sucCliSel
    end select
    REFRESH adt_benTmp_sucCliSel
END SUB

/*******/

