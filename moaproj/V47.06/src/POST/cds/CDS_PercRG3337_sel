/****o* Pendientes de agrupación/OFB:post:CDS_PercRG3337_sel
* NOMBRE
*   OFB:post:CDS_PercRG3337_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDS_PercRG3337_sel

LOCAL adt_cativa_cod_tmp  LIKE adt_cativa_cod
LOCAL adt_cativa_desc_tmp LIKE adt_cativa_desc
LOCAL adt_cativa_acre_tmp LIKE adt_cativa_acre
LOCAL adt_cativa_tipf_tmp LIKE adt_cativa_tipf
LOCAL adt_cativa_exe_tmp LIKE adt_cativa_exeingbr

    MOVE adt_acreperc_cativa TO tmp_acreperc_cativa
   	CDS SELECT FROM DSC:adt_RG3337_tbl BECOMES DSC:adt_RG3337_ctx
    IF (CDSRETVAL == 0) THEN
       CDS MULTIDISPLAY DSC:adt_RG3337_ctx LIST_PercRG3337
    END IF
	LET lib:err_retval = CDSRETVAL
   	/* Salio con Esc */
   	IF (lib:err_retval == 0 || lib:err_retval == -801) THEN
		offset_0000:
    	MOVE adt_cativa_cod  TO adt_cativa_cod_tmp
	    MOVE adt_cativa_desc TO adt_cativa_desc_tmp
	    MOVE adt_cativa_acre TO adt_cativa_acre_tmp
	    MOVE adt_cativa_tipf TO adt_cativa_tipf_tmp
		MOVE adt_cativa_exeingbr TO adt_cativa_exe_tmp
		CDS SELECT FROM DSC:cativa_tbl BECOMES DSC:cativa_ctx
    	CDS MULTIDISPLAY DSC:cativa_ctx LISTadt_cativa
    	IF (CDSRETVAL == 0x01FD) THEN
       		GOTO offset_0000
    	END IF
    	LET lib:err_retval = CDSRETVAL
   		 /* Salio con Esc */
   		IF (lib:err_retval == 0) THEN
     		MOVE adt_cativa_cod_tmp  TO adt_cativa_cod
      		MOVE adt_cativa_desc_tmp TO adt_cativa_desc
      		MOVE adt_cativa_acre_tmp TO adt_cativa_acre
      		MOVE adt_cativa_tipf_tmp TO adt_cativa_tipf
	  		MOVE adt_cativa_exe_tmp TO adt_cativa_exeingbr
	  		CALL CDSadt_cativa_load
      		RETURN (-2)
    	END IF
	    LET lib:err_retval = CDSRETVAL
	    CALL lib:MISCcds_find_err
    	IF (RETVAL != 0) THEN
	      RETURN (-1)
    	END IF
	    CDS EXTRACT DSC:cativa_ctx ALL
	    CDS UNLOCK DSC:cativa_ctx
		MOVE adt_cativa_cod TO adt_acreperc_cativa
	ELSE
		CDS EXTRACT DSC:adt_RG3337_ctx ALL
		CDS UNLOCK DSC:adt_RG3337_ctx
	END IF
    REFRESH adt_acreperc_cativa
    CALL CDS_PercRG3337_load
    IF (RETVAL != 0) THEN
      /*Limpio los campos cuando no encuentra un registro. Diego Priore 04/04/2000*/
      CLEARFIELD post:adt_acreperc_mtomin
      CLEARFIELD post:adt_acreperc_calculo
      CLEARFIELD post:adt_acreperc_leyenda
      CLEARFIELD post:adt_acreperc_aliacre
      REFRESH post:adt_acreperc_mtomin
      REFRESH post:adt_acreperc_calculo
      REFRESH post:adt_acreperc_leyenda
      REFRESH post:adt_acreperc_aliacre
      RETURN (-1)
    END IF
    //journalizacion
    call adt_to_bck57
    call csr:proc_list(F_COPY,LST:post:LISTcativa_flds,LST:post:LISTbck_cativa)
    RETURN (0)

END SUB

/*******/
