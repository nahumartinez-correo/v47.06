/****o* Pendientes de agrupación/OFB:post:CDSchk_rubro_utility
* NOMBRE
*   OFB:post:CDSchk_rubro_utility
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSchk_rubro_utility(par_Codigo, par_CodBarra)
    local loc_retval         like lib:err_retval
    local loc_mensaje        like common:ExecString
    local loc_Codigo         like post:utility_cod_prod
    local loc_CodBarra       like post:sf1_codbarras1
            
    loc_CodBarra = par_CodBarra
    loc_Codigo = par_Codigo
   
   CDS SELECT FROM UTILITY_TAB BECOMES UTILITY_CTX where \
	      post:utility_cod_prod == loc_Codigo && \
	      post:utility_codbarras == loc_CodBarra
   
   CDS FindFirst UTILITY_CTX nolock
   
   SELECT (CDSRETVAL)
      CASE 0
        ;Si encuentro el registro...
        CDS Extract UTILITY_CTX post:utility_desc_prod
        loc_retval = 0
	    break
      CASE -801
        ;fprint loc_mensaje "ERROR AL BUSCAR LA UTILITY\nNO SE ENCONTRO CODIGO (%s) EN TABLA UTILITIES" loc_CodBarra
      	;MsgBox loc_mensaje,OFB_OK,"ERROR"
      	loc_retval = -1
	    break
      CASE -803
	    MSGBOX "TABLA UTILITIES LOCKEADA",OFB_OK,"ERROR"
	  	loc_retval = -2
	    break
   END SELECT
   CDS ENDSELECT UTILITY_CTX

   return loc_retval
END SUB

/*******/
