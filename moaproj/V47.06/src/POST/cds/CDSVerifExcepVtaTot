/****o* Pendientes de agrupación/OFB:post:CDSVerifExcepVtaTot
* NOMBRE
*   OFB:post:CDSVerifExcepVtaTot
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSVerifExcepVtaTot

LOCAL l_cant LIKE post:cantidad
LOCAL l_cant_tot LIKE post:cantidad

//PS 9296: Verificar que la cantidad total vendida del 
//producto en cuestion no supere la cantidad pactada en la excepcion.

	CDS SELECT FROM DSC:TABPresuDeta BECOMES DSC:CONPresuDeta \
	WHERE post:fecha == common:system_date && \
	post:op_operator_id == op:op_operator_id && \
	post:PresNro == post:PresNro && \
	post:PreDNroTrn != post:PreDNroTrn && \
	siaf:codigo_siaf == siaf:codigo_siaf
	
	CDS FINDFIRST DSC:CONPresuDeta NOLOCK
	
	DO
		IF (CDSRETVAL == 0) THEN
			CDS EXTRACT DSC:CONPresuDeta post:cantidad INTO l_cant
			l_cant_tot = l_cant_tot + l_cant
		ELSE
			CDS ENDSELECT DSC:CONPresuDeta
			BREAK
		END IF
		CDS FINDNEXT DSC:CONPresuDeta NOLOCK
		
	LOOP
	
	
	l_cant_tot = l_cant_tot + post:cantidad
	
	CDS SELECT FROM DSC:TABexcep_productos BECOMES DSC:CONexcep_productos \
	WHERE post:op_operator_id == op:op_operator_id && \
	excep_prd_codprod == siaf:codigo_siaf && \
	excep_prd_distorsion <= l_cant_tot && \
	excep_prd_cant_hasta >= l_cant_tot
		
	CDS FINDFIRST DSC:CONexcep_productos NOLOCK
	
	IF (CDSRETVAL != 0) THEN
		CDS ENDSELECT DSC:CONexcep_productos
		RETURN -2
	ENDIF
	
	CDS ENDSELECT DSC:CONexcep_productos
	
END SUB

/*******/
