/****o* Pendientes de agrupación/OFB:post:CDScalcBonifGral
* NOMBRE
*   OFB:post:CDScalcBonifGral
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScalcBonifGral( pTipoDetalle, pRango)
	IF (post:cli_tipo == "1" || post:enCombo == "S") THEN
		RETURN -1
	END IF
	IF (siaf:codigo_siaf == "8500" || siaf:codigo_siaf == "40002" ) THEN
		CLEARFIELD fld_promo_imp
		CLEARFIELD promo_tot_EspVdas
		CLEARFIELD post:promo_desc_esvs
		CLEARFIELD post:promo_cod_esvs
		CLEARFIELD post:promo_bon_esvs
		CLEARFIELD post:promo_inhibeUpEsvs
		CLEARFIELD promo_tot_ProdVs
	END IF
	CDS JOIN post:adt_promo_sucursal, post:adt_promo_desde, \
			 post:adt_promo_hasta, post:adt_promo_desc, \
			 post:adt_promo_permiteUP, post:adt_promo_cod \
	FROM DSC:post:adt_promoCabe_tbl as "h" \
	     DSC:post:adt_promoSucu_tbl as "s" \
	BECOMES DSC:post:promoCabeSucu_ctx \
	WHERE "h".post:adt_promo_desde <= common:system_date && \
		  "h".post:adt_promo_hasta >= common:system_date && \
		  "h".post:adt_promo_desc  == "s".post:adt_promo_desc && \
		  "h".post:adt_promo_desde == "s".post:adt_promo_desde && \
		  "h".post:adt_promo_hasta == "s".post:adt_promo_hasta

	CDS FINDFIRST DSC:post:promoCabeSucu_ctx NOLOCK
	LET lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval == 0)
		CDS EXTRACT DSC:post:promoCabeSucu_ctx \
			post:adt_promo_sucursal, post:adt_promo_desde \
			post:adt_promo_hasta, post:adt_promo_desc, \
			post:adt_promo_permiteUP, post:adt_promo_cod
		IF (post:adt_promo_sucursal == SELECCION_TODAS_SUC || \
		    post:adt_promo_sucursal == common:sucursal_activa ) THEN
		    	CDS JOIN post:adt_promo_cliente, post:adt_promo_elemento, \
				 		 post:adt_promo_tipoBon, post:adt_promo_bon, \
				 		 post:adt_promo_desc, post:adt_promo_RestHab, \
				 		 post:adt_promo_Rest_I_E, post:adt_promo_tipo \
				FROM DSC:post:adt_promoCli_tbl as "c" \
		     		 DSC:post:adt_promoDetalle_tbl as "d" \
				BECOMES DSC:post:promoDetalleCli_ctx \
				WHERE "c".post:adt_promo_desde == post:adt_promo_desde && \
					  "c".post:adt_promo_hasta == post:adt_promo_hasta && \
					  "c".post:adt_promo_desde == "d".post:adt_promo_desde && \
					  "c".post:adt_promo_hasta == "d".post:adt_promo_hasta && \
					  "c".post:adt_promo_desc  == "d".post:adt_promo_desc && \
					  "d".post:adt_promo_tipo  == pTipoDetalle && \
					  "c".post:adt_promo_desc  == post:adt_promo_desc

				CDS FINDFIRST DSC:post:promoDetalleCli_ctx NOLOCK
				LET lib:err_retval = CDSRETVAL
				WHILE (lib:err_retval == 0)
					SELECT (pTipoDetalle)
						CASE TIPO_DETALLE_BONIF_PRODVS
							CALL post:MISCcalcBonifPVs()
							BREAK
						CASE TIPO_DETALLE_BONIF_ESPECIE
							CALL post:MISCcalcBonifEsp()
							BREAK
						CASE TIPO_DETALLE_BONIF_SERVICIO
							CALL post:MISCcalcBonifSrv(pRango)
							IF (RETVAL == 1) THEN
								RETURN 1
							END IF
							BREAK
						CASE TIPO_DETALLE_BONIF_OPCIONAL
							CALL post:MISCcalcBonifOpc()
							BREAK
						CASE TIPO_DETALLE_BONIF_BLOQUE
							CALL post:MISCcalcBonifBlq()
							BREAK
					END SELECT
					CDS FINDNEXT DSC:post:promoDetalleCli_ctx NOLOCK
					LET lib:err_retval = CDSRETVAL
				END WHILE
				CDS ENDSELECT DSC:post:promoDetalleCli_ctx
		END IF
		CDS FINDNEXT DSC:post:promoCabeSucu_ctx NOLOCK
		LET lib:err_retval = CDSRETVAL
	END WHILE
	CDS ENDSELECT DSC:post:promoCabeSucu_ctx
	PROTFIELD post:fld_promo_imp
END SUB

/*******/
