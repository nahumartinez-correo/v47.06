/****o* Pendientes de agrupación/OFB:post:CDSProdVs_Stock_sel
* NOMBRE
*   OFB:post:CDSProdVs_Stock_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSProdVs_Stock_sel
LOCAL cant_stk like post:cantidad2
LOCAL encontro LIKE siaf:i
LOCAL lretval LIKE lib:err_retval

	Let encontro = 0

	;Creo el PickList, para los datos de la tabla
	call csr:f_sanewpl dsc:post:pic_prod_stk,PIC:post:PICprod_stk

	CDS SELECT FROM dsc:post:adt_prodvs_table BECOMES dsc:post:adt_prodvs_context
	CDS FINDFIRST dsc:post:adt_prodvs_context NOLOCK
	LET lib:err_retval = CDSRETVAL
	DO
		IF (lib:err_retval != 0)
			BREAK
		END IF
		CDS EXTRACT dsc:post:adt_prodvs_context all

		lretval = 0
		//Controlo, si el cliente es Venta UP, que la especie, si es que tiene alguna asociada, admita Venta UP.
		IF (post:cli_tipo == CLIUP && adt_prodvs_espv_scod != "" && adt_prodvs_espv_cod != "")
			CDS SELECT FROM dsc:tes:Especie_tbl BECOMES dsc:tes:Especie_ctx \
	        where tes:adt_espv_subcod == adt_prodvs_espv_scod && \
	              tes:adt_espv_cod == adt_prodvs_espv_cod && \
	              tes:adt_espv_up != "N"
			CDS FINDFIRST dsc:tes:Especie_ctx NOLOCK
			IF (CDSRETVAL != 0)
				lretval = -1
			END IF
		END IF

		IF (lretval == 0)
			//Controlo, si el cliente es CLIMED, que la especie, si es que tiene alguna asociada, admita bonif.
			IF ((post:cli_tipo == CLIMED) && (post:ExcepSesion)) // || post:ConsumoAnticipo || post:ModalidadCC || post:ModalidadCD)) THEN
				IF (adt_prodvs_bonifCM != "S")
					lretval = -1
				ELSE
					IF (adt_prodvs_espv_scod != "" && adt_prodvs_espv_cod != "")
						CDS SELECT FROM dsc:tes:Especie_tbl BECOMES dsc:tes:Especie_ctx \
				        where tes:adt_espv_subcod == adt_prodvs_espv_scod && \
				              tes:adt_espv_cod == adt_prodvs_espv_cod && \
				              tes:adt_espv_bonifCM != "N"
						CDS FINDFIRST dsc:tes:Especie_ctx NOLOCK
						IF (CDSRETVAL != 0)
							lretval = -1
						END IF
					END IF
				END IF
			END IF
		END IF

		IF (lretval == 0)

			CDS SELECT FROM dsc:post:adt_stock_table BECOMES dsc:adt_stock_context \
	        where adt_stock_codprod == post:adt_prodvs_cod && \
	              adt_stock_stock != 0 && \
	              adt_stock_coddep == 0
			CDS FINDFIRST dsc:post:adt_stock_context NOLOCK

			IF (CDSRETVAL == 0)

				CDS EXTRACT dsc:post:adt_stock_context all

				/*
				let cant_stk = 0
				if (estado_presu == 3)
	        		CDS SELECT FROM DSC:TABPresuDeta BECOMES DSC:CONPresuDeta WHERE \
	        		post:fecha == common:system_date && \
	        		post:op_operator_id == op:op_operator_id && \
	        		siaf:codigo_siaf == "40002" && \
	        		post:PresNro == post:PresNro && \
	        		post:PreDNroTrn != post:PreDNroTrn && \
	        		post:PreDEst == 1 && \
	        		post:adt_prodvs_cod == post:adt_prodvs_cod
				else
	        		CDS SELECT FROM DSC:TABPresuDeta BECOMES DSC:CONPresuDeta WHERE \
	        		post:fecha == common:system_date && \
	        		post:op_operator_id == op:op_operator_id && \
	        		siaf:codigo_siaf == "40002" && \
	        		post:PresNro == post:PresNro && \
	        		post:PreDEst == 1 && \
	        		post:adt_prodvs_cod == post:adt_prodvs_cod

				end if
			    CDS AGGREGATE DSC:CONPresuDeta sum post:cantidad2
				IF (CDSRETVAL == 0)
					CDS EXTRACT DSC:CONPresuDeta post:cantidad2 into cant_stk
				END IF
				CDS ENDSELECT DSC:TABPresuDeta


				let cant_stk = post:adt_stock_stock - cant_stk
				*/

				/* MLD ahora se hace una reserva de stock en
				La tabla de stock*/

				cant_stk = post:adt_stock_stock - post:adt_stock_reserva

				if (cant_stk > 0)
					Fprint common:csr_string "%-10.10s %-13.13s %-5.5s %-12.12s %-40.40s", \
					post:adt_prodvs_cod				\
					post:adt_prodvs_codbarra		\
					cant_stk						\
					post:adt_prodvs_tarifa			\
					post:adt_prodvs_desc
					call csr:f_saaddpl dsc:post:pic_prod_stk common:csr_string

					Let encontro = 1
				end if

			END IF	//Correspondiente al control del stock

		END IF //Correspondiente al control del cliente y la especie

		CDS ENDSELECT dsc:post:adt_stock_context
		CDS FINDNEXT dsc:post:adt_prodvs_context nolock
		LET lib:err_retval = CDSRETVAL
	LOOP
	CDS ENDSELECT dsc:post:adt_prodvs_context

	IF (encontro == 0) THEN
		MSGBOX "NO SE ENCONTRARON PRODUCTOS",OFB_OK,"ERROR"
		RETURN (-2)
	END IF

    call csr:f_sadopl dsc:post:pic_prod_stk common:csr_string
    LET lib:err_retval = RETVAL
    call csr:f_sadroppl dsc:post:pic_prod_stk

	IF (lib:err_retval >= 0) THEN
		Let post:adt_prodvs_cod = substr(common:csr_string,0,10)
		call CDSprodvs_load
		Let post:adt_stock_codprod = substr(common:csr_string,0,10)
		Let post:adt_stock_coddep = 0
		call CDSstock_load
		Let post:adt_stock_stock = substr(common:csr_string,25,5)

	    if (post:estado_presu == 1 || post:estado_presu == 2)
	    	/* Para CC, no se le vende la especie asociada al producto */
		    if (post:adt_prodvs_espv_cod.numchars != 0) && (post:cli_tipo != 1) then
        		tes:adt_espv_cod = post:adt_prodvs_espv_cod
        		tes:adt_espv_subcod = post:adt_prodvs_espv_scod
		    	CALL tes:CDSadt_esp_load
				if (retval == 0) then
        			codesp_prod = adt_prodvs_espv_cod
					subcod_prod = adt_prodvs_espv_scod
				else
					clearfield codesp_prod
					clearfield subcod_prod
				end if
			else
				clearfield codesp_prod
				clearfield subcod_prod
			end if
		end if

	ELSE
		clearfield adt_prodvs_desc
		clearfield adt_prodvs_cod
    	clearfield adt_prodvs_codbarra
    	clearfield adt_prodvs_tarifa
    	clearfield siaf:importe
    	clearfield siaf:importe_tot_serv
	END IF
END SUB

/*******/
