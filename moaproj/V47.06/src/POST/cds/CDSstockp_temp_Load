/****o* Pendientes de agrupación/OFB:post:CDSstockp_temp_Load
* NOMBRE
*   OFB:post:CDSstockp_temp_Load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

Sub post:CDSstockp_temp_Load

  LET drv:button = CB6
  CALL drv:but_status
  IF (drv:disabled != 0) /*El boton de Modificar esta deshabilitado*/
    CDS SELECT FROM DSC:stockp_temp_tbl BECOMES DSC:stockp_temp_ctx \
    WHERE (stockp_pieza == stockp_pieza)
    CDS FINDFIRST DSC:stockp_temp_ctx NOLOCK
    If (CDSRETVAL == -801) Then
       if (AsignaDestino == "S" || AsignaDestino == "M") then
       	   ENABLECONTROL drv:PBcb3 //Habilito Boton Agregar
       else
       	   DISABLECONTROL drv:PBcb3 //Habilito Boton Agregar
       endif
       DISABLECONTROL drv:PBcb4 //Deshabilito Boton Eliminar
       DISABLECONTROL drv:PBcb6 //Deshabilito Boton Modificar
       CDS ENDSELECT DSC:stockp_temp_ctx
       RETURN 0
    Else
	  CDS EXTRACT DSC:stockp_temp_ctx stockp_operador
      If (stockp_operador == op:op_operator_id) Then
			ENABLECONTROL drv:PBcb4 //Habilita Boton Eliminar
            ENABLECONTROL drv:PBcb6 //Habilita Boton Modificar
            DISABLECONTROL drv:PBcb3 //Deshabilita Boton Agregar
			CDS EXTRACT DSC:stockp_temp_ctx ALL
		    CALL CSR:proc_list(F_REFRESH,LST:LISTstockp_CM_flds)
		    
		    REFRESH stockp_destino
		    REFRESH stockp_pieza
		    
	  Else /*Si la pieza es de otro operador*/
	    MSGBOX "PIEZA INGRESADA POR OTRO OPERADOR",0X00,"ATENCION"
	    DISABLECONTROL drv:PBcb3
        DISABLECONTROL drv:PBcb4
        DISABLECONTROL drv:PBcb6
    
        CALL CSR:proc_list(F_CLEAR,LST:LISTstockp_CM_flds)
	    CALL CSR:proc_list(F_REFRESH,LST:LISTstockp_CM_flds)
	
	    CDS ENDSELECT DSC:stockp_temp_ctx
        RETURN -2
	  End If
	  CDS ENDSELECT DSC:stockp_temp_ctx

    End If
   Endif
End Sub

/*******/
