/****o* Pendientes de agrupación/OFB:post:CDSsap_open_sess
* NOMBRE
*   OFB:post:CDSsap_open_sess
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSsap_open_sess(prm_action)

    local varl_action 	like common:csr_string

    let varl_action = prm_action
    call csr:fld_to_upper varl_action

    // controlo argumento
    if (varl_action != "CHECK" && varl_action != "ADD" && varl_action != "REST")
        return (-1)
    end if

    let retval = (-2) // default value

    CDS SELECT post:sap_cant_ses FROM DSC:siaf:adt_sucur_table \
        BECOMES DSC:siaf:adt_sucur_context
    if (cdsretval == 0) then
        if (varl_action == "CHECK") then
            CDS FINDFIRST DSC:siaf:adt_sucur_context NOLOCK
            if (cdsretval == 0) then
                CDS EXTRACT DSC:siaf:adt_sucur_context post:sap_cant_ses
                if (cdsretval == 0) then
                    let retval = sap_cant_ses
                end if
            end if
         else
            CDS FINDFIRST DSC:siaf:adt_sucur_context LOCK
            if (cdsretval == 0) then
                CDS EXTRACT DSC:siaf:adt_sucur_context post:sap_cant_ses
                if (cdsretval == 0) then
                    if (varl_action == "ADD") then
                        let sap_cant_ses = sap_cant_ses + 1
                    else
                        if (sap_cant_ses > 0) then
                            let sap_cant_ses = sap_cant_ses - 1
                        else
                            let sap_cant_ses = 0
                        end if
                    end if
                    CDS CLEARBUFFER DSC:siaf:adt_sucur_context
                    CDS APPEND DSC:siaf:adt_sucur_context sap_cant_ses
                    CDS UPDATE DSC:siaf:adt_sucur_context LOCK
                    if (cdsretval == 0) then
                        let retval = 0
                    end if
                end if
            end if
        end if
    end if
    CDS ENDSELECT DSC:siaf:adt_sucur_context
    return (retval)
END SUB

/*******/
