/****o* Pendientes de agrupación/OFB:post:CDScheck_presu_anul
* NOMBRE
*   OFB:post:CDScheck_presu_anul
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScheck_presu_anul()
local resultado like siaf:i
   /*Chequea que ya este grabada la transaccion en la PresuDet y el sistema se haya caido sin
   modificar el estado - Gabriel Falciola*/

	CDS SELECT FROM "PresuDet" BECOMES "PresChekCtx" \
    Where (post:op_operator_id == post:op_operator_id ) && \
    (post:PresNro == post:presNroNew) && (post:fecha  == common:system_date) &&\
    (PreDNroTrn == adt_PreDNroTrn)

	CDS FINDFIRST "PresChekCtx" NOLOCK
  	IF (CDSRETVAL != 0) THEN
  		/*No se hizo la reversa*/
  		resultado = 0
  	else
  		/*Ya se hizo la reversa*/
  		resultado = 1
		; si se trata de una transaccion que no incrementa el numero (va con el mismo en el journal)
		; entonces tiene que entrar a la PresuParcial para actualizar los importes, cantidad, etc'.
		if (testflag( journal_flags,no_incr_nro_trn))
  			resultado = 0
		endif
  	end if
    CDS ENDSELECT "PresChekCtx"
    return (resultado)
END SUB

/*******/
