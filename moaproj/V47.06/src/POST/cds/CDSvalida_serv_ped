/****o* Pago en Destino/OFB:post:CDSvalida_serv_ped
* NOMBRE
*   OFB:post:CDSvalida_serv_ped
* DESCRIPCION
*   Validacion de Servicio PED
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
* 	post:SVAL30030
* DOCUMENTACION  
*   NI50479
* SOURCE
*/
#include "postcds.h"

SUB post:CDSvalida_serv_ped
	LOCAL l_err_retval LIKE lib:err_retval

	//traigo el codigo del servicio
	CDS SELECT FROM DSC:post:DetNCpedEnOrigen_tbl BECOMES DSC:post:DetNCpedEnOrigen_ctx \
		WHERE post:id_pieza_ped == post:id_pieza_ped && \
		post:item_codigo_trx != 8500 && \
		post:item_codigo_trx != 40002
		
	CDS FINDFIRST DSC:post:DetNCpedEnOrigen_ctx NOLOCK
	LET l_err_retval = CDSRETVAL
	IF (l_err_retval == 0) THEN
		CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
			post:item_codigo_trx INTO post:adt_serv_serv 
	END IF
	CDS ENDSELECT DSC:post:DetNCpedEnOrigen_ctx
	
	//no encontro el servicio
	IF (l_err_retval < 0 || post:adt_serv_serv  == 0) THEN
		RETURN (-3)	
	END IF
	
;	//consulto si es servicio es PED
;	CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:adt_serv_context \
;		WHERE post:adt_serv_serv == l_servicio && \
;		post:adt_serv_es_PED == "S"
;	
;	CDS FINDFIRST DSC:adt_serv_context NOLOCK
;	LET l_err_retval = CDSRETVAL
;	CDS ENDSELECT DSC:adt_serv_context

	//consulto si es servicio es PED
	CALL post:CDSservicio_ped
	RETURN (RETVAL)
	
END SUB

/*******/
