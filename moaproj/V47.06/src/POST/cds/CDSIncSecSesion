/****o* Pendientes de agrupación/OFB:post:CDSIncSecSesion
* NOMBRE
*   OFB:post:CDSIncSecSesion
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSIncSecSesion(presupuesto,tipo_sec,cantidad,REVERSA)
/*******************************************************************************************
  Esta rutina extrae el ultimo secuenciador del presupuesto (dependiendo del tipo, se sacará
  PreAUltTrn o PreAUltPag), lo incrementará en uno y lo actualizará en la tabla correspondiente.
  Si estoy en Nota de Credito lo hará en la cabecera de la NcTable, si no, en la PresuAct.

  Parámetros:
  			presupuesto   -->   nro. de presupuesto a buscar
  			tipo_sec      -->   Tipo se secuenciador a incrementar.
  								PreAUltTrn --> "TRN"
  								PreAUltPag --> "PAG"
  			cantidad	  -->	cantidad de números a incrementar. Esto es porque hay casos
  								especiales en los que hay que sumar de a dos o incluso restar

  Salidas:
  			El número extraído quedará en el RETVAL
  			Si el registro no se encuentra se devuelve un -2 en el RETVAL

  Gabriel Falciola
  *****************************************************************************************/

	local contexto like common:csr_string
	local aux like post:PresNro
	aux = presupuesto // no se usa mas.

	if (REVERSA == "S")
		CDS SELECT FROM DSC:NC_TAB BECOMES "TempNCctx"  WHERE \
    	(tlr:jnl_operator == FLD:op:op_operator_id && \
    	tlr:jnl_bus_date ==  FLD:common:system_date && \
    	tlr:jnl_branch == fld:common:sucursal_activa && \
    	tlr:jnl_date ==  FLD:common:system_date && \
    	siaf:codigo_siaf == 7100)
    	contexto = "TempNCctx"
	else
		CDS SELECT FROM DSC:TABPresuActi BECOMES DSC:CONPresuActi WHERE  \
		post:op_operator_id == fld:post:op_operator_id
		contexto = DSC:CONPresuActi
    end if

	CDS FINDFIRST fld:contexto LOCK
	if (cdsretval != 0)
		cds unlock fld:contexto
		cds endselect fld:contexto
		return (-2)
	end if

	select (tipo_sec)
		case "TRN"
			clearfield PreAUltTrn
			cds extract fld:contexto PreAUltTrn
			PreAUltTrn =  PreAUltTrn + cantidad
			fprint PreAUltTrn "%d" PreAUltTrn
			cds append fld:contexto PreAUltTrn
			if (REVERSA != "S")
				cds append fld:contexto PreAUltTrn as PreDNroTrn
			end if
			break
		case "PAG"
			clearfield PreAUltPag
			cds extract fld:contexto PreAUltPag
			PreAUltPag =  PreAUltPag + cantidad
			PrePNroPag =  PreAUltPag
			cds append fld:contexto PreAUltPag
			break
	end select

	cds update fld:contexto lock
	cds unlock fld:contexto
	cds endselect fld:contexto

	if (tipo_sec == "TRN")
		return (PreAUltTrn)
	else
		return (PreAUltPag)
	end if
END SUB

/*******/
