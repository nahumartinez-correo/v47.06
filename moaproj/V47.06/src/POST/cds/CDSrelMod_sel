/****o* Pendientes de agrupación/OFB:post:CDSrelMod_sel
* NOMBRE
*   OFB:post:CDSrelMod_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrelMod_sel
    /* Prepara los campos con asteriscos para el select */
    call MISCrelMod_fldSel

    CDS SELECT FROM DSC:post:adt_relMod_table \
	BECOMES DSC:post:adt_relMod_ctx WHERE \
	post:adt_relMod_modelos SMATCH post:relMod_modelos && \
	post:adt_relMod_grucorte SMATCH post:relMod_grucorte && \
	post:adt_relMod_corteop SMATCH post:relMod_corteop && \
	post:adt_relMod_apertura SMATCH post:relMod_apertura && \
	post:adt_relMod_sacatipo SMATCH post:relMod_sacatipo && \
	post:adt_relMod_sacagrupo SMATCH post:relMod_sacagrupo && \
	post:adt_relMod_desptipos SMATCH post:relMod_desptipos && \
	post:adt_relMod_despacho SMATCH post:relMod_despacho

    let siaf:last_key = LASTKEY
    CDS MULTIDISPLAY post:adt_relMod_ctx LISTrelMod_desc
    LET lib:err_retval = CDSRETVAL

    IF (CDSRETVAL == 0) THEN /* Esc */
		CDS ENDSELECT DSC:post:adt_relMod_ctx
		RETURN (-2)
    ENDIF
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0)
		CDS ENDSELECT DSC:post:adt_relMod_ctx
		RETURN (-1)
    ENDIF
    CDS EXTRACT DSC:post:adt_relMod_ctx ALL
    CDS UNLOCK DSC:post:adt_relMod_ctx
    CDS ENDSELECT DSC:post:adt_relMod_ctx

    //journalizacion ABM RelMod
    CALL csr:proc_list(F_COPY,lst:post:LISTrelMod_flds,lst:post:LISTbck_relMod)

END SUB

/*******/
