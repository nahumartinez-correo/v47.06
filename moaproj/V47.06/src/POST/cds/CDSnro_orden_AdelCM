/****o* Pendientes de agrupación/OFB:post:CDSnro_orden_AdelCM
* NOMBRE
*   OFB:post:CDSnro_orden_AdelCM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

/*SOLICITUD 50105*/
SUB post:CDSnro_orden_AdelCM()
; *** MDG
; ESTA RUTINA RETORNA EL SIGUIENTE ORDEN
; A INSERTAR EN LA TABLA AdelCM
LOCAL l_orden LIKE post:adt_adelcm_orden
LOCAL l_err_retval LIKE lib:err_retval

	CDS ENDSELECT DSC:AdelCM_ctx
	CDS SELECT FROM DSC:AdelCM_tbl BECOMES DSC:AdelCM_ctx WHERE \
		post:adt_adelcm_op == op:op_operator_id && \
		post:adt_adelcm_cliente == post:climed_numero
	
	CDS FINDFIRST DSC:AdelCM_ctx LOCK
    LET l_err_retval = CDSRETVAL
    
    IF (l_err_retval == -801) THEN
    	; Si no existen registros significa que no hay nada acumulado
    	; por si las moscas pongo en cero el acumulador
    	post:saldoAnticipo_CM = 0.00
    	l_orden = 1
    ELSE
    	CDS AGGREGATE DSC:AdelCM_ctx  MAX post:adt_adelcm_orden 
    	CDS EXTRACT DSC:AdelCM_ctx  post:adt_adelcm_orden INTO l_orden
    	l_orden = l_orden + 1
    END IF
    CDS UNLOCK DSC:AdelCM_ctx
   	CDS ENDSELECT DSC:AdelCM_ctx
   	RETURN l_orden
   
END SUB

/*******/
