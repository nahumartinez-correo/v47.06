/****o* Pendientes de agrupación/OFB:post:CDSProvCatTas_sel
* NOMBRE
*   OFB:post:CDSProvCatTas_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSProvCatTas_sel

/*Se agrega el filtrado de tablas. Diego Priore 05/04/2000*/

offset_0000:
    MOVE adt_prvta_pcia_cod TO tmp_prvun_pcia_cod
    MOVE adt_prvta_tasa_cod TO tmp_prvta_tasa_cod
    
    IF (post:adt_prvta_pcia_cod.numchars == 0) THEN
    	CDS SELECT FROM DSC:adt_ProvCatTas_table BECOMES DSC:adt_ProvCatTas_ctx
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_ProvCatTas_ctx LISTadt_ProvCatTas
    ELSE
    	CDS SELECT FROM DSC:adt_ProvCatTas_table BECOMES DSC:adt_ProvCatTas_ctx \
    	WHERE (post:adt_prvta_pcia_cod == post:adt_prvta_pcia_cod)
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_ProvCatTas_ctx LISTadt_ProvCatTas
    END IF
    
    	
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE tmp_prvun_pcia_cod TO adt_prvta_pcia_cod
        MOVE tmp_prvta_tasa_cod TO adt_prvta_tasa_cod
        CALL CDSProvCatTas_load
        RETURN (-2)
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    
    IF (RETVAL != 0) THEN
      CALL csr:proc_list(F_CLEAR,LST:LISTProvCatTas_flds)
      CALL csr:proc_list(F_REFRESH,LST:LISTProvCatTas_flds)
      RETURN (-1)
    END IF
    
    CDS EXTRACT DSC:adt_ProvCatTas_ctx ALL
    CDS UNLOCK DSC:adt_ProvCatTas_ctx

	//mercedes - journalizacion ABM tasa ing.brutos
	CALL csr:proc_list(F_COPY,LST:LISTProvCatTas_flds,LST:LISTbck_ProvCatTas)
	//fin mercedes

END SUB

/*******/
