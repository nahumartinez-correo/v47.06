/****o* Pendientes de agrupación/OFB:post:CDSupd_stockpUP
* NOMBRE
*   OFB:post:CDSupd_stockpUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSupd_stockpUP


	local retval_tmp like lib:err_retval
	CDS SELECT FROM dsc:stockpUP_pend_tbl becomes dsc:stockpUP_pend_ctx where \
		tmpUP_op == op:op_operator_id && \
		MarcaBorrado == "*"
	CDS FINDFIRST dsc:stockpUP_pend_ctx NOLOCK
	let lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval != -801)
		CDS EXTRACT	dsc:stockpUP_pend_ctx ALL
		//adt_stockpUP_pieza = tmpUP_piezaUP
		adt_stockpUP_fecha = common:system_date
		//adt_stockpUP_oper = tmpUP_op
		adt_stockpUP_apert = tmpUP_apertura
		adt_stockpUP_corte = tmpUP_corte_op
		adt_stockpUP_clasif = "S"
		adt_stockpUP_codClas = "C"
		
		cds select from dsc:stockpUP_tbl becomes dsc:stockpUP_ctx where \
			post:adt_stockpUP_pieza == tmpUP_piezaUP
		cds findfirst dsc:stockpUP_ctx lock
		retval_tmp = cdsretval
		cds clearbuffer dsc:stockpUP_ctx
		cds append dsc:stockpUP_ctx \
			adt_stockpUP_fecha \
			adt_stockpUP_apert \
			adt_stockpUP_corte \
			adt_stockpUP_clasif \
			adt_stockpUP_codClas
			
		if (retval_tmp == 0)
			cds update dsc:stockpUP_ctx lock
		end if
		cds unlock dsc:stockpUP_ctx
		cds endselect dsc:stockpUP_ctx
		
		
		CDS FINDNEXT dsc:stockpUP_pend_ctx NOLOCK
		let lib:err_retval = CDSRETVAL
	END WHILE
	cds endselect dsc:stockpUP_pend_ctx


END SUB

/*******/
