/****o* Pendientes de agrupación/OFB:post:CDSapertUP_default
* NOMBRE
*   OFB:post:CDSapertUP_default
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSapertUP_default
	//Verifico si el modelo tiene o no apertura (E o D) y en caso de tener si es única
	//Valores posibles 
	//retval = -2 este modelo no permite recepciones UP
	//retval =  0 modelo sin apertura
	//retval =  1 apertura única
	//retval =  2 varias aperturas
	local apertura_tmp like apertura
	
	//Verifico que el modelo solo tenga apertura "D" o "E"
	CDS SELECT FROM DSC:adt_relMod_table BECOMES DSC:adt_relMod_ctx WHERE \
		adt_relMod_modelos == common:br_modelo && \
		(adt_relMod_apertura == "D" || adt_relMod_apertura == "E")
	CDS FINDFIRST DSC:adt_relMod_ctx NOLOCK
	lib:err_retval = CDSRETVAL
	CDS ENDSELECT DSC:adt_relMod_ctx
	IF (lib:err_retval == -801)
		//no se puede recepcionar piezas en esta sucursal
		MSGBOX "El Modelo de la Sucursal no admite Recepciones UP",0x00,"ERROR"
		return (-2)
	END IF
	
	
	//Si tiene apertura ""
	CDS SELECT FROM DSC:adt_relMod_table BECOMES DSC:adt_relMod_ctx WHERE \
		adt_relMod_modelos == common:br_modelo && \
		adt_relMod_apertura != ""
	CDS FINDFIRST DSC:adt_relMod_ctx NOLOCK
	lib:err_retval = CDSRETVAL
	CDS ENDSELECT DSC:adt_relMod_ctx
	IF (lib:err_retval == -801)
		//el modelo no tiene apertura
		return (0)
	END IF
	
	//Cuantos tipos de apertura tiene
	CDS SELECT FROM DSC:adt_relMod_table BECOMES DSC:adt_relMod_ctx WHERE \
		adt_relMod_modelos == common:br_modelo && \
		(adt_relMod_apertura == "D" || adt_relMod_apertura == "E")
	CDS FINDFIRST DSC:adt_relMod_ctx NOLOCK
	lib:err_retval = CDSRETVAL	
	CDS EXTRACT DSC:adt_relMod_ctx adt_relMod_apertura into apertura_tmp
	WHILE (lib:err_retval == 0)
		CDS EXTRACT DSC:adt_relMod_ctx adt_relMod_apertura
		IF (adt_relMod_apertura != apertura_tmp)
			CDS ENDSELECT DSC:adt_relMod_ctx
			//varias aperturas
			RETURN (2)
		END IF
		CDS FINDNEXT DSC:adt_relMod_ctx NOLOCK
		lib:err_retval = CDSRETVAL
	END WHILE
	CDS ENDSELECT DSC:adt_relMod_ctx
	apertura = apertura_tmp
	return (1)
END SUB

/*******/
