/****o* Pendientes de agrupación/OFB:post:CDSRMotivos_select
* NOMBRE
*   OFB:post:CDSRMotivos_select
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSRMotivos_select
    CDS SELECT FROM siaf:adt_motiv_table BECOMES siaf:adt_motiv_context \
        WHERE siaf:adt_mot_codigo == siaf:adt_mot_codigo 
 
     CDS FINDFIRST DSC:siaf:adt_motiv_context LOCK         
 
    
   IF (LASTKEY == RT_ESC) THEN
    	CALL CSR:proc_list(F_CLEAR,LST:LISTRMotivos_flds)
	CALL CSR:proc_list(F_REFRESH,LST:LISTRMotivos_flds)
    	CDS ENDSELECT DSC:siaf:adt_motiv_context
    	RETURN (-2)
   END IF
   ;No encontré el motivo ingresado en la tabla de Motivos entonces lo selecciono del Combo
   if (cdsretval < 0) then
        
        call post:CDSRMotivos_load
        if (retval == 0) then
    	   call ABMRMotivos_refresh
           call post:MISCset_sidebar(1,1,0,0) 
        
        else
           call ABMRMotivos_refresh
           call post:MISCset_sidebar(0,0,1,0) 
        end if 
        return (-2) 
   end if     
   IF (CDSRETVAL == 0) THEN
   		CDS EXTRACT siaf:adt_motiv_context ALL
                move siaf:adt_mot_codigo    to  adt_restmot_mot
                move siaf:adt_mot_modulo    to  adt_restmot_mod
                move siaf:adt_mot_submodulo to  adt_restmot_sub  		
    	        CALL CSR:proc_list(F_REFRESH,LST:LISTRMotivos_flds)   
   END IF  
  
  ;Ahora busco el registro en la tabla Restricciones por Motivos;
  ;Acá llego sí o sí con un motivo válido  
  CDS SELECT FROM DSC:RMOTI_TAB   BECOMES DSC:RMOTI_CTX  \
        WHERE adt_restmot_mpago == FLD:adt_restmot_mpago && \
              adt_restmot_mot   == FLD:adt_restmot_mot && \
              adt_restmot_mod   == FLD:adt_restmot_mod && \
              adt_restmot_sub   == FLD:adt_restmot_sub 
          
  CDS FINDFIRST DSC:RMOTI_CTX LOCK
  LET lib:err_retval = CDSRETVAL
  IF (lib:err_retval == -801) THEN  /* de la RestMot*/
      return (-2)
           
  END IF
  CDS EXTRACT DSC:RMOTI_CTX ALL
  CDS UNLOCK DSC:RMOTI_CTX
  
END SUB

/*******/
