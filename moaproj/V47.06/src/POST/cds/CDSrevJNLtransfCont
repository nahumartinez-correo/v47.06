/****o* Expedición/OFB:post:CDSrevJNLtransfCont
* NOMBRE
*   OFB:post:CDSrevJNLtransfCont
* DESCRIPCION
*   
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   
* DOCUMENTACION
*	http://jira.sibs.net/jira/browse/AUT-351
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrevJNLtransfCont 
	/* Cuando se reversa una pieza que estaba transferida */
	/* pero no había sido tomada por otro operador */
	/* Jul. 1998 - B. Petrella -                        */
/*MFM*/
LOCAL nrotranf LIKE post:NroTranf

    /* Resguardo */
    swapdup tlr:jnl_branch
    swapdup tlr:jnl_operator
    swapdup tlr:jnl_date
    swapdup tlr:jnl_time
    swapdup tlr:jnl_bus_date
    swapdup tlr:jnl_sequence

	IF (post:NroTranf == 1)
    	/* Select según clave completa del Journal */
	    CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
		(tlr:jnl_branch == post:jnl_branch_ori && \
	     tlr:jnl_operator == post:jnl_operator_ori && \
		 tlr:jnl_date == post:jnl_date_ori && \
		 tlr:jnl_time == post:jnl_time_ori && \
		 tlr:jnl_bus_date == post:jnl_bus_date_ori && \
	     tlr:jnl_sequence == post:jnl_sequence_ori)

    	CDS FINDFIRST DSC:tlr:jnl_context LOCK

    	/* MFM - Octubre 2000 */
	    CLEARFIELD tlr:jnl_branch
	    CLEARFIELD tlr:jnl_operator
    	CLEARFIELD tlr:jnl_date
	    CLEARFIELD tlr:jnl_time
    	CLEARFIELD tlr:jnl_bus_date
	    CLEARFIELD tlr:jnl_sequence
    
    	CDS EXTRACT tlr:jnl_context \
       	tlr:jnl_branch tlr:jnl_operator tlr:jnl_date \
       	tlr:jnl_time tlr:jnl_bus_date tlr:jnl_sequence
    
    	/* resguardo los cpos. */
	    swapdup jnl_guia_cont
	
    	clearfield jnl_guia_cont

    	Cds APPEND DSC:tlr:jnl_context      \
       	tlr:jnl_branch tlr:jnl_operator tlr:jnl_date \
       	tlr:jnl_time tlr:jnl_bus_date tlr:jnl_sequence \
       	post:jnl_guia_cont \
       	post:jnl_fecha_llencont\
       	post:jnl_hora_llencont

	    Cds UPDATE DSC:tlr:jnl_context LOCK

   		CDS UNLOCK DSC:tlr:jnl_context
	    CDS ENDSELECT DSC:tlr:jnl_context
	END IF
    /* recupero */
	swapdup jnl_guia_cont
    swapdup tlr:jnl_branch
    swapdup tlr:jnl_operator
    swapdup tlr:jnl_date
    swapdup tlr:jnl_time
    swapdup tlr:jnl_bus_date
    swapdup tlr:jnl_sequence
    

    IF (siaf:codigo_siaf == 99086) THEN
    	/*Borra el registro del operador al que se le habia transferido la pieza*/
    	CDS SELECT FROM DSC:post:TranPend_tbl BECOMES DSC:post:TranPend_ctx WHERE \
		(post:jnl_branch_ori == post:jnl_branch_ori && \
		post:jnl_operator_ori == post:jnl_operator_ori && \
		post:jnl_date_ori == post:jnl_date_ori && \
		post:jnl_time_ori == post:jnl_time_ori && \
		post:jnl_bus_date_ori == post:jnl_bus_date_ori && \
		post:jnl_sequence_ori == post:jnl_sequence_ori && \
		post:NroTranf == post:NroTranf)
		CDS FINDFIRST DSC:TranPend_ctx LOCK
		CDS DELETE DSC:TranPend_ctx
		CDS UNLOCK DSC:post:TranPend_ctx
		CDS ENDSELECT DSC:post:TranPend_ctx

	ELSE
	    
	    let NroTranf = NroTranf - 1
	    
	    CDS SELECT FROM DSC:post:TranPend_tbl BECOMES DSC:post:TranPend_ctx WHERE \
		(post:jnl_branch_ori == post:jnl_branch_ori && \
		 post:jnl_operator_ori == post:jnl_operator_ori && \
		 post:jnl_date_ori == post:jnl_date_ori && \
		 post:jnl_time_ori == post:jnl_time_ori && \
		 post:jnl_bus_date_ori == post:jnl_bus_date_ori && \
		 post:jnl_sequence_ori == post:jnl_sequence_ori && \
		 post:NroTranf == NroTranf)
	    CDS FINDFIRST DSC:TranPend_ctx LOCK
    	IF (CDSRETVAL != 0) THEN
			CDS UNLOCK DSC:post:TranPend_ctx
		 	CDS ENDSELECT DSC:post:TranPend_ctx
			let NroTranf = NroTranf + 1
		 	return (-2)
   		END IF
   		CDS EXTRACT post:TranPend_ctx post:MarcaBorrado
	    Let MarcaBorrado = " "
	    Cds APPEND DSC:post:TranPend_ctx      \
	    post:jnl_branch_ori post:jnl_operator_ori post:jnl_date_ori \
	    post:jnl_time_ori post:jnl_bus_date_ori post:jnl_sequence_ori \
        post:MarcaBorrado
	    Cds UPDATE DSC:post:TranPend_ctx LOCK

        CDS UNLOCK DSC:post:TranPend_ctx
		CDS ENDSELECT DSC:post:TranPend_ctx
        let NroTranf = NroTranf + 1
    END IF
   
END SUB

/*******/
