/****o* Pendientes de agrupación/OFB:post:CDSrpdcb_desde_sel
* NOMBRE
*   OFB:post:CDSrpdcb_desde_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrpdcb_desde_sel

offset_0000:
    
    CALL CSR:trimfield(adt_concb_producto)
    CALL CSR:trimfield(adt_rpdcb_destino)
    
    IF (post:adt_concb_producto.numchars == 0) THEN
    	CLEARFIELD post:adt_concb_tipo
    	CALL post:ABMrpdcb_clear
    	CALL post:ABMrpdcb_refresh
    	CALL post:ABMopscb_clear
    	CALL post:ABMopscb_refresh    	
    	MSGBOX "PRODUCTO SIN DEFINIR",0x00,"AVISO"
    	RETURN (-1)
    END IF
    
    tmp_tarif_serv = post:adt_concb_producto
    tmp_tarif_dest = post:adt_rpdcb_destino
    tmp_tarif_desde = post:adt_rpdcb_desde

    /*Antes de hacer la busqueda en la tabla, limpio los campos por si hay valores ingresados
    en el tipo de caja puesto que sino no se hace el refresh correcto de los mismos.
    Diego Priore 13/04/2000*/

    CLEARFIELD adt_tarif_tipo_caja
    REFRESH adt_tarif_tipo_caja
        
    IF (post:adt_rpdcb_destino.numchars == 0 || \
        post:adt_rpdcb_destino == "TODOS LOS DESTINOS") THEN	
    	CDS SELECT FROM DSC:adt_tarif_table BECOMES DSC:adt_tarif_context \
    	WHERE (post:adt_tarif_serv == post:adt_concb_producto)
    END IF
    
    IF (post:adt_rpdcb_destino.numchars != 0 && \
        post:adt_rpdcb_destino != "TODOS LOS DESTINOS") THEN	
    	CDS SELECT FROM DSC:adt_tarif_table BECOMES DSC:adt_tarif_context \
    	WHERE ((post:adt_tarif_dest == post:adt_rpdcb_destino) && (post:adt_tarif_serv == post:adt_concb_producto))
    END IF
    siaf:last_key = LASTKEY    	
    CDS MULTIDISPLAY DSC:adt_tarif_context LISTadt_tarif

    lib:err_retval = CDSRETVAL
	posPickList = cdsretval
	CDS RECORDCOUNT DSC:adt_tarif_context
	posPickList = (cdsretval - posPickList) * (-1)
	eligioPickList = true

    IF (lib:err_retval == 0x01FD) THEN
        GOTO offset_0000
    END IF
    IF (lib:err_retval == 0) THEN
        post:adt_concb_producto = tmp_tarif_serv
        post:adt_rpdcb_producto = tmp_tarif_serv
        post:adt_rpdcb_destino = tmp_tarif_dest
        post:adt_rpdcb_desde = tmp_tarif_desde
        CALL post:CDSrpdcb_desde_load
        IF (RETVAL < 0) THEN
        	CALL post:ABMrpdcb_clear
        	CALL post:ABMrpdcb_refresh
        	CDS UNLOCK DSC:adt_tarif_context
            CDS ENDSELECT DSC:adt_tarif_context
            RETURN (-2)
        ELSE
        	CDS UNLOCK DSC:adt_tarif_context
            CDS ENDSELECT DSC:adt_tarif_context
        	RETURN (0)
        END IF
    END IF
	LET CDSRETVAL = lib:err_retval
    CALL lib:MISCcds_find_err

    IF (RETVAL != 0) THEN
    	CALL post:ABMrpdcb_clear
	    CALL post:ABMrpdcb_refresh
	    CDS UNLOCK DSC:adt_tarif_context
        CDS ENDSELECT DSC:adt_tarif_context
        RETURN (-1)
    END IF

    CDS EXTRACT DSC:adt_tarif_context ALL
    adt_rpdcb_producto = adt_tarif_serv
    adt_rpdcb_destino = adt_tarif_dest
    adt_rpdcb_desde = adt_tarif_desde
    adt_rpdcb_hasta = adt_tarif_hasta
    aux_rpdcb_hasta = adt_tarif_hasta //hasta seleccionado en el tarifario    
    adt_rpdcb_uni_med = adt_tarif_um
    IF (adt_concb_tipo == "MO") THEN
        adt_concb_colecta = "S" //monetarios siempre colecta
    ELSE
        adt_concb_colecta = "N"
    END IF    
    CALL post:ABMrpdcb_refresh
    CDS UNLOCK DSC:adt_tarif_context
    CDS ENDSELECT DSC:adt_tarif_context
END SUB

/*******/
