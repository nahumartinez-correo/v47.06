/****o* Pendientes de agrupación/OFB:post:CDSServCaja_sel
* NOMBRE
*   OFB:post:CDSServCaja_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSServCaja_sel
	LOCAL tmp_servcaja_serv LIKE adt_servcaja_serv 
offset_0000:
    MOVE adt_servcaja_serv TO tmp_servcaja_serv
    IF (adt_servcaja_serv.NUMCHARS == 0) THEN
        CDS SELECT FROM DSC:ServCaja_tbl BECOMES DSC:ServCaja_ctx
    ELSE
        CDS SELECT FROM DSC:ServCaja_tbl BECOMES DSC:ServCaja_ctx \
            WHERE adt_servcaja_serv == FLD:adt_servcaja_serv
    ENDIF
    let siaf:last_key = LASTKEY

    CDS MULTIDISPLAY DSC:ServCaja_ctx LISTServCaja
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF

    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE tmp_servcaja_serv TO adt_servcaja_serv
        CALL CDSServCaja_load
        RETURN (-2)
    END IF

    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF

    CDS EXTRACT DSC:ServCaja_ctx ALL
    CDS UNLOCK DSC:ServCaja_ctx

	//journalizacion ABM
	call MISCadt_bck_ServCaja
	
END SUB

/*******/
