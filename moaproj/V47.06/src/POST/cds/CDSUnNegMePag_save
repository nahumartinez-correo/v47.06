/****o* Pendientes de agrupación/OFB:post:CDSUnNegMePag_save
* NOMBRE
*   OFB:post:CDSUnNegMePag_save
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSUnNegMePag_save
    CDS SELECT FROM DSC:adt_UnNegMePag_table BECOMES DSC:adt_UnNegMePag_ctx \
    WHERE adt_unmp_une_cod == FLD:adt_unmp_une_cod && \
          adt_unmp_mpa_cod == FLD:adt_unmp_mpa_cod
    CDS FINDFIRST DSC:adt_UnNegMePag_ctx LOCK
    LET lib:err_retval = CDSRETVAL
    CDS CLEARBUFFER DSC:adt_UnNegMePag_ctx
    CDS APPEND DSC:adt_UnNegMePag_ctx \
    FLD:adt_unmp_une_cod \
    FLD:adt_unmp_mpa_cod \
    FLD:adt_unmp_mezcla  \
    FLD:adt_unmp_itemi   \
    FLD:adt_unmp_por_max \
    FLD:adt_unmp_req_sup \
    FLD:adt_unmp_res_prv \
    FLD:adt_unmp_res_prd
    IF (lib:err_retval == -801) THEN
       CDS INSERT DSC:adt_UnNegMePag_ctx LOCK
    ELSE
       CDS REPLACE DSC:adt_UnNegMePag_ctx LOCK
    END IF
    CDS UNLOCK DSC:adt_UnNegMePag_ctx
END SUB

/*******/
