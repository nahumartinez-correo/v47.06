/****o* Pendientes de agrupación/OFB:post:CDStieneControl
* NOMBRE
*   OFB:post:CDStieneControl
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDStieneControl

   /********************************************************************************************************/
   /*                                                                                                      */
   /* [PAW - 03/11/99]      Devuelve la cantidad de piezas de control de un servicio.                      */
   /*                                                                                                      */
   /********************************************************************************************************/


	local cant1 like post:NroTrn_tt
	local cant2 like post:NroTrn_tt

	cant1 = post:NroTrn_tt

	if (siaf:adt_tran_fliatran == "CST") then		// FGB: para telegrafia...
		CDS SELECT FROM DSC:cod_ctrl_tbl BECOMES TT_CTX \
			WHERE 	fecha 		== common:system_date 	&& \
					operador_tt == op:op_operator_id 	&& \
					PresNro_tt 	== PresNro_tt 			&& \
					NroTrn_tt 	== NroTrn_tt 			&& \
					Anula_tt 	!= "S"
	elseif (siaf:adt_tran_fliatran == "CMB") then	// FGB: (13.02.04) para combos...
		CDS SELECT FROM DSC:post:TABcombo_prt_aux BECOMES TT_CTX \
			WHERE 	PresNro 	== PresNro 		&& \
					combo_nro 	== combo_nro 
	else
		CDS SELECT FROM TT_TAB BECOMES TT_CTX \
			WHERE 	fecha 		== common:system_date	&& \
					operador_tt == op:op_operator_id	&& \
					PresNro_tt	== PresNro_tt 			&& \
					NroTrn_tt	== NroTrn_tt 			&& \
					Anula_tt	!= "S"
	endif

	CDS FINDFIRST TT_CTX LOCK
	post:NroTrn_tt = 0
	if (cdsretval == 0)
		CDS AGGREGATE TT_CTX count post:NroTrn_tt
		CDS EXTRACT TT_CTX post:NroTrn_tt
	endif
	CDS ENDSELECT TT_CTX
	cant2 = post:NroTrn_tt
	post:NroTrn_tt = cant1
	return (cant2)
END SUB

/*******/
