/****o* Pendientes de agrupación/OFB:post:CDSdescto_ctaContSel
* NOMBRE
*   OFB:post:CDSdescto_ctaContSel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSdescto_ctaContSel
local l_cta like adt_ctascont_cta
local l_cta_desc like adt_ctascont_desc
local l_descripcion like common:csr_string
LOCAL INDICE LIKE post:cantidad
    
    CDS SELECT FROM DSC:adt_ctascont_table BECOMES DSC:adt_ctascont_ctx
    
    cds findfirst adt_ctascont_ctx nolock
    if (cdsretval < 0)
        cds endselect dsc:adt_ctascont_ctx
        return -2
    end if
    call csr:f_sadroppl "cuentas"
    call csr:f_sanewpl "cuentas", PIC:post:PICrestElemento
	
    do
	    cds extract adt_ctascont_ctx adt_ctascont_cta into l_cta adt_ctascont_desc into l_cta_desc
        fprint l_descripcion "%s %s" l_cta, l_cta_desc
        call csr:f_saaddpl "cuentas" l_descripcion
	    cds findnext adt_ctascont_ctx nolock
	    if (cdsretval < 0)
	        break
	    end if
    loop
	cds endselect dsc:adt_ctascont_ctx
    call  csr:f_sacombopl "cuentas" l_descripcion tag:drv:PBcb3

    lib:err_retval = RETVAL
	IF (RETVAL < 0) THEN
	    call csr:f_sadroppl "cuentas"
	    RETURN (-1)
    END IF
    
    CALL csr:str_search (l_descripcion," ",INDICE)
    l_descripcion = substr(l_descripcion, 0, INDICE)
    CALL csr:trimfield l_descripcion
    adt_descto_cta_cble = l_descripcion
    call csr:f_sadroppl "cuentas"

END SUB

/*******/
