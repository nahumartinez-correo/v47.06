/****o* Contra Reembolso/OFB:post:CDSclocuit_load_crem
* NOMBRE
*   OFB:post:CDSclocuit_load_crem
* DESCRIPCION
*   Carga los datos de la CliOca por tipo y nro de documento
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:FVALclocuit_crem
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSclocuit_load_crem
	if (CloTipDoc.NUMCHARS == 0)
		CDS SELECT FROM DSC:post:clioca_tbl BECOMES DSC:clioca_ctx WHERE  \
			post:CloCuit == FLD:post:CloCuit
	else
		CDS SELECT FROM DSC:post:clioca_tbl BECOMES DSC:clioca_ctx WHERE  \
			post:CloCuit == FLD:post:CloCuit && \
			post:CloTipDoc == post:CloTipDoc 
	end if
	CDS FINDFIRST DSC:clioca_ctx NOLOCK
	LET lib:err_retval = CDSRETVAL
	IF (lib:err_retval == -801) THEN
		RETURN (-2)
	END IF
	CDS EXTRACT DSC:clioca_ctx ALL
	
	call CSR:trimfield(post:IvaCod)
	CDS UNLOCK DSC:clioca_ctx
	CliApellido = CloApellido     
	CliNombre  = CloNombre
	if (CloPersonaJuridica == "N")
		fprint CliRaz "%s %s", CloNombre, CloApellido
		resetflag pers_juridica,es_juridica
	else
		CloPersonaJuridica = "S"
		setflag pers_juridica,es_juridica
		let CliRazon = CloRazon
	end if
	es_juridica = CloPersonaJuridica
	call post:PBes_juridica
END SUB

/*******/
