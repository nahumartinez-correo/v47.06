/****o* Pendientes de agrupación/OFB:post:CDSCombos_sel
* NOMBRE
*   OFB:post:CDSCombos_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSCombos_sel

offset_0000:
    MOVE post:adt_cb_cod TO post:tmp_cb_cod
    CLEARFIELD siaf:adt_tran_desc //limpia descripcion del serv. en transac
    
    //Selecciona en tabla transac los servicios de familia combo (CMB).
    CDS SELECT FROM DSC:siaf:adt_tran_table BECOMES DSC:siaf:adt_tran_context \
        WHERE siaf:adt_tran_fliatran == "CMB" && siaf:adt_tran_codigo != 30000

    let siaf:last_key = LASTKEY
    CALL post:ABMCombos1_clear
    
    CDS MULTIDISPLAY DSC:siaf:adt_tran_context post:LISTadt_transac_CMB
        
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE post:tmp_cb_cod TO post:adt_cb_cod
        CALL post:CDSadt_tran_CMB_load //verifico que exista en transac
        IF (RETVAL != 0) THEN
        	RETURN (-1)
        ELSE
            CALL post:CDSCombos_load //verifica si existe en tabla Combo
            IF (RETVAL == 0) THEN
                CALL post:ABMCombos1_refresh
                post:adt_rscb_cod = post:adt_cb_cod
                post:adt_rpcb_cod = post:adt_cb_cod
                RETURN (0)
            ELSE
            	CLEARFIELD siaf:adt_tran_desc //limpia descripcion del serv. en transac
                RETURN (-1)
            END IF        
        END IF	    
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err

    IF (RETVAL != 0) THEN
        CALL CSR:proc_list(F_CLEAR,LST:LISTCombos1_flds)
        CALL post:ABMCombos1_refresh
        CALL CSR:proc_list(F_CLEAR,LST:LISTCombos2_flds)
        CALL post:ABMCombos2_refresh
        CALL CSR:proc_list(F_CLEAR,LST:LISTCombos3_flds)
        CALL post:ABMCombos3_refresh
        CLEARFIELD post:adt_rscb_cod
        CLEARFIELD post:adt_rpcb_cod
        CLEARFIELD siaf:adt_tran_desc //limpia descripcion del serv. en transac
        RETURN (-1)
    END IF

    CDS EXTRACT DSC:siaf:adt_tran_context \
        siaf:adt_tran_codigo \
        siaf:adt_tran_desc
    CDS UNLOCK DSC:siaf:adt_tran_context

    post:adt_cb_cod = siaf:adt_tran_codigo
    CALL post:CDSCombos_load
    IF (RETVAL != 0) THEN
    	CALL CSR:proc_list(F_CLEAR,LST:LISTCombos1_fld2s)
        post:adt_cb_desc = siaf:adt_tran_desc //descripcion desde transac
        CALL post:ABMCombos1_refresh
        CALL CSR:proc_list(F_CLEAR,LST:LISTCombos2_flds)
        CALL post:ABMCombos2_refresh
        CALL CSR:proc_list(F_CLEAR,LST:LISTCombos3_flds)
        CALL post:ABMCombos3_refresh
        CALL csr:proc_list(F_COPY,LST:LISTCombos1_flds,LST:LISTbck_Combos1)
        post:aux_cb_cod = post:adt_cb_cod
        post:adt_rscb_cod = post:adt_cb_cod
        post:adt_rpcb_cod = post:adt_cb_cod
        RETURN (-2)
    END IF
	//journalizacion ABM combos
	CALL csr:proc_list(F_COPY,LST:LISTCombos1_flds,LST:LISTbck_Combos1)
    post:aux_cb_cod = post:adt_cb_cod
    post:adt_rscb_cod = post:adt_cb_cod
    post:adt_rpcb_cod = post:adt_cb_cod
END SUB

/*******/
