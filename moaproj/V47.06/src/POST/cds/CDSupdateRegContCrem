/****o* Pendientes de agrupación/OFB:post:CDSupdateRegContCrem
* NOMBRE
*   OFB:post:CDSupdateRegContCrem
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSupdateRegContCrem
local x like siaf:i
local y like siaf:i
    
    y = 0
    while (y < 10)
        if (post:track[y].numchars != 0) then
            cds endselect "stockp_ctx"
            cds select from "stockp" becomes "stockp_ctx" \
            where post:adt_stockp_pieza == post:track[y]
                    
            cds findfirst "stockp_ctx" lock
            if (cdsretval == 0) then
                
                CDS CLEARBUFFER "stockp_ctx"
                adt_stockp_devol_fec = common:system_date
                adt_stockp_devol_hor = common:time_of_day
                adt_stockp_devol_op = op:op_operator_id
                adt_stockp_NIS_dest = giros:CodSucBenef_fld
                adt_stockp_Baja = "S"
                adt_stockp_entrega_f = stockp_fecha_entrega[y]
                adt_stockp_conting = "L"
                
                CDS APPEND "stockp_ctx" \
                adt_stockp_NIS_dest \
                adt_stockp_Baja \
                adt_stockp_devol_fec \
                adt_stockp_devol_hor \
                adt_stockp_devol_op \
                adt_stockp_entrega_f \
                adt_stockp_conting
                x = 0
                while (x < 10)
                    if (adt_stockp_nro[x].numchars > 0) then
                        adt_stockp_fec[x] = common:system_date        
                    end if
                    CDS APPEND "stockp_ctx" \
                    adt_stockp_serie[x] \
                    adt_stockp_nro[x] \
                    adt_stockp_dig[x] \
                    adt_stockp_fec[x] \
                    adt_stockp_impGiro[x] \
                    adt_stockp_TT_giros[x]
                    x = x + 1
                end while        
                        
                CDS UPDATE "stockp_ctx" LOCK
                CDS UNLOCK "stockp_ctx"
                cds endselect "stockp_ctx"
            else
                CDS UNLOCK "stockp_ctx"
                cds endselect "stockp_ctx"
                cds endselect "StockpCDD_ctx"
                cds select from "StockpCDD"  becomes "StockpCDD_ctx" \
                where adt_CDD_pieza  == post:track[y]
                    
                cds findfirst "StockpCDD_ctx" lock
                if (cdsretval == 0) then
                    CDS CLEARBUFFER "StockpCDD_ctx"
                            
                    adt_CDD_NIS_dest = giros:CodSucBenef_fld
                    adt_CDD_Baja = "S"
                    adt_CDD_contingencia = "L"
                    
                    CDS APPEND "StockpCDD_ctx" \
                    adt_CDD_NIS_dest \
                    adt_CDD_Baja \
                    adt_CDD_contingencia
                    
                    x = 0
                    while (x < 10)      
                        if (adt_stockp_nro[x].numchars > 0) then
                            adt_stockp_fec[x] = common:system_date        
                        end if  
                        adt_CDD_serie[x] = adt_stockp_serie[x]
                        adt_CDD_nro[x] = adt_stockp_nro[x]
                        adt_CDD_dig[x] = adt_stockp_dig[x]
                        adt_CDD_fec[x] = adt_stockp_fec[x]
                        adt_CDD_impGiro[x] = adt_stockp_impGiro[x]
                        adt_CDD_TT_giros[x] = adt_stockp_TT_giros[x]
                            
                        CDS APPEND "StockpCDD_ctx" \
                        adt_CDD_serie[x] \
                        adt_CDD_nro[x] \
                        adt_CDD_dig[x] \
                        adt_CDD_fec[x] \
                        adt_CDD_impGiro[x] \
                        adt_CDD_TT_giros[x]
                        x = x + 1
                    end while        
                           
                    CDS UPDATE "StockpCDD_ctx" LOCK
                    CDS UNLOCK "StockpCDD_ctx"
                    cds endselect "StockpCDD_ctx"
                end if
            end if
        end if            
        ; Barra de progreso.
        call post:MISCactProgressBar("GRABANDO CABECERA    - ", 1, BARRAPORCENT, 1)
        y = y + 1 
    end while
END SUB
/*******/
