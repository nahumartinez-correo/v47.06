/****o* Pendientes de agrupación/OFB:post:CDSgruflia_sel
* NOMBRE
*   OFB:post:CDSgruflia_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSgruflia_sel

offset_0000:

    MOVE adt_gruflia_rep  TO tmp_gruflia_rep
    MOVE adt_gruflia_flia TO tmp_gruflia_flia
    IF (adt_gruflia_rep.NUMCHARS == 0) THEN
        CDS SELECT FROM DSC:GruFlia_tbl BECOMES DSC:GruFlia_ctx
    ELSE
    	CDS SELECT FROM DSC:GruFlia_tbl BECOMES DSC:GruFlia_ctx \
    	WHERE adt_gruflia_rep == FLD:adt_gruflia_rep
    END IF	    
    let siaf:last_key = LASTKEY
    CALL CSR:proc_list(170,LST:LISTgruflia_flds)
    CDS MULTIDISPLAY DSC:GruFlia_ctx LISTadt_gruflia
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE tmp_gruflia_rep  TO adt_gruflia_rep
        MOVE tmp_gruflia_flia TO adt_gruflia_flia
        CALL post:CDSgruflia_load
        CALL CSR:proc_list(190,LST:LISTgruflia_flds)
        RETURN (-2)
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
    	CALL CSR:proc_list(170,LST:LISTgruflia_flds)
        CALL CSR:proc_list(190,LST:LISTgruflia_flds)
        RETURN (-1)
    END IF
    CDS EXTRACT DSC:GruFlia_ctx ALL
    CDS UNLOCK DSC:GruFlia_ctx
	//journalizacion ABM GruFlia
	CALL csr:proc_list(F_COPY,LST:LISTgruflia_flds,LST:LISTbck_gruflia)
END SUB

/*******/
