/****o* Pendientes de agrupación/OFB:post:CDSgenFalloRPMO
* NOMBRE
*   OFB:post:CDSgenFalloRPMO
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"
    
SUB post:CDSgenFalloRPMO
local l_importe like pagoMsvImpDevuelto
    l_importe = 0
    
    l_importe = pagoMsvImpDevuelto - pagoMsvImpRendNoPag
    
    if (l_importe != 0) then
        Call post:CDSobtiene_secuen("FRPMO")
        cds endselect "FallosRPMO_ctx"  
        cds select from "FallosBenef" becomes "FallosRPMO_ctx" where \
            FalloBenef_seq == post:adt_codseq_nro
        
        cds findfirst "FallosRPMO_ctx" lock
        if (cdsretval == -801) then
            CDS CLEARBUFFER "FallosRPMO_ctx"
            FalloBenef_seq = post:adt_codseq_nro
            FalloBenef_fecha = common:system_date
            FalloBenef_op = op:op_operator_id
            FalloBenef_estado = "N"
            FalloBenef_imp = l_importe
            FalloBenef_PagTipoD = adt_benTmp_pag_tipoD
            FalloBenef_PagNroD = adt_benTmp_pag_NroD
            clearfield FalloBenef_opdes
            
            CDS APPEND "FallosRPMO_ctx" \
            FalloBenef_seq \
            FalloBenef_fecha \
            FalloBenef_op \
            FalloBenef_estado \
            FalloBenef_imp \
            FalloBenef_PagTipoD \
            FalloBenef_PagNroD \
            FalloBenef_opdes
            
            cds insert "FallosRPMO_ctx" lock
        end if
        CDS UNLOCK "FallosRPMO_ctx"
        cds endselect "FallosRPMO_ctx"    
    end if    

end sub  
/*******/
