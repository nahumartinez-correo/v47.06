/****o* Pendientes de agrupación/OFB:post:CDSgenTabImpre
* NOMBRE
*   OFB:post:CDSgenTabImpre
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSgenTabImpre(nroPres)

   /********************************************************************************************************/
   /*                                                                                                      */
   /* [PAW - 14/01/99]      Esta rutina se encarga generar, dado un presupuesto, las tablas necesarias     */
   /*                       para la impresión de una factura o nota de crédito.                            */
   /*                                                                                                      */
   /* Parámetros:                                                                                          */
   /* - nro         :       Hace referencia al número de presupuesto que se solicita procesar.             */
   /*                                                                                                      */
   /* Salidas:                                                                                             */
   /* - [impresión] :       Imprime nota de crédito.                                                       */
   /* - Retval      :       [Salida anormal] Devuelve (-2) en caso de no haber encontrado el presupuesto.  */
   /*                                                                                                      */
   /* Aclaración:           Debe estar el campo DocInic en memoria. Además podría pisar el PresNro.        */
   /*                                                                                                */
   /********************************************************************************************************/

		local auxNroPres like post:PresNro

		// [PAW]  ---> Saco datos de Presu.

 		 post:cli_tipo = 2 // Por las dudas si falla...
		CDS SELECT from DSC:post:TABPresu BECOMES DSC:post:CONPresu \
        Where (post:op_operator_id == post:op_operator_id ) && (post:PresNro == nroPres) && (post:fecha == common:system_date)
        CDS FINDFIRST post:CONPresu LOCK
		if (cdsretval == 0) then
			if (revTicket == "S")
				auxNroPres = post:PresNro
   				CDS EXTRACT post:CONPresu ALL
				post:PresNro = auxNroPres
			else
				CDS EXTRACT post:CONPresu ALL
			endif
   			If (IvaCod == "CF" && CloTipDoc == 96 && post:CloCuit == 99999999999)
      			ClearField CloCuit
		   	Endif
		endif
   	    CDS ENDSELECT post:CONPresu

		 select (Tipo_Formulario)
		 case FACTURA_A
		     DocFiscal = "FACTURA A"
		     break
		 case FACTURA_B
		     DocFiscal = "FACTURA B"
		     break
		 case TICKET
		     DocFiscal = "TICKET"
		     break
		 end select
   		 If (IvaCod == "CF" && CloTipDoc == 96 && post:CloCuit == 99999999999)
      		ClearField CloCuit
   		 Endif
		 call post:MISCident_tipo_formu()
		 call post:CDSreGenerarIva(nroPres)
		 if (retval != -2)
		 	dupfield estado_presu			//  [PAW] ---> Necesito estado > 1 para que desglozar el IVA.
			estado_presu = 4
;			auxNroPres = post:PresNro
/*			if (enSesion != "S")
				post:PresNro = presNroNew
			endif*/
		 	Call post:MISCarmo_ImpreTmp()
;			post:PresNro = auxNroPres
			swapdup estado_presu	       //  [PAW] ---> Necesito estado > 1 para que desglozar el IVA.
		 else
		 	return (retval)
		 endif
END SUB

/*******/
