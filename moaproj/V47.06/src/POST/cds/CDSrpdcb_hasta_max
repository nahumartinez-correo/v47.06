/****o* Pendientes de agrupación/OFB:post:CDSrpdcb_hasta_max
* NOMBRE
*   OFB:post:CDSrpdcb_hasta_max
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrpdcb_hasta_max
    CALL CSR:trimfield(adt_rpdcb_destino)
    IF (adt_rpdcb_destino.numchars == 0 || \
        adt_rpdcb_destino == "TODOS LOS DESTINOS") THEN
    	//selecciona para todos los destinos cualquiera sea la unid.med.
    	CDS SELECT FROM DSC:adt_tarif_table BECOMES DSC:adt_tarif_context \
            WHERE adt_tarif_serv == FLD:adt_concb_producto
    END IF
    IF (adt_rpdcb_destino.numchars != 0 && adt_rpdcb_destino != "TODOS LOS DESTINOS" && \
        adt_rpdcb_desde == 0) THEN
    	//selecciona para el destino seleccionado cualquiera sea la unid.med.
    	CDS SELECT FROM DSC:adt_tarif_table BECOMES DSC:adt_tarif_context \
            WHERE adt_tarif_serv == FLD:adt_concb_producto && \
                  adt_tarif_dest == FLD:adt_rpdcb_destino
    END IF    
    IF (adt_rpdcb_destino.numchars != 0 && adt_rpdcb_destino != "TODOS LOS DESTINOS" && \
        adt_rpdcb_desde != 0) THEN
    	//selecciona para el destino y unid.med. seleccionado en el tarifario
        CDS SELECT FROM DSC:adt_tarif_table BECOMES DSC:adt_tarif_context \
            WHERE adt_tarif_serv == FLD:adt_concb_producto && \
                  adt_tarif_dest == FLD:adt_rpdcb_destino && \
                  adt_tarif_um == FLD:adt_rpdcb_uni_med
    END IF
    CDS FINDFIRST DSC:adt_tarif_context NOLOCK
    LET lib:err_retval = CDSRETVAL
    IF (CDSRETVAL == 0) THEN
        CDS AGGREGATE DSC:adt_tarif_context max adt_tarif_hasta
        CDS EXTRACT DSC:adt_tarif_context adt_tarif_hasta
    END IF
    CDS ENDSELECT DSC:adt_tarif_context
    IF (lib:err_retval < 0) THEN
    	RETURN (-2)
    END IF
END SUB

/*******/
