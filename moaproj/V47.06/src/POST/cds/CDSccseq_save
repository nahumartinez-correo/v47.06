/****o* Pendientes de agrupación/OFB:post:CDSccseq_save
* NOMBRE
*   OFB:post:CDSccseq_save
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSccseq_save
local convertir like common:csr_string

CDS SELECT FROM DSC:post:TABccseq BECOMES DSC:post:CONccseq \
    WHERE adt_ccseq_suc    == FLD:adt_ccseq_suc && \
          adt_ccseq_codigo == FLD:adt_ccseq_codigo

    CDS FINDFIRST DSC:CONccseq LOCK
    let lib:err_retval = CDSRETVAL
    let adt_ccseq_fecha = common:system_date

    CDS CLEARBUFFER DSC:CONccseq

    //Convierto adt_ccseq_mumero a ASCII para encriptar
    ;fprint convertir "%s", adt_ccseq_numero
    ;clearfield common:csr_string
    ;CALL BlowFishEnc(convertir,common:csr_string)
    ;adt_ccseq_numero = common:csr_string
    CDS APPEND DSC:CONccseq     \
               adt_ccseq_suc    \
               adt_ccseq_codigo \
               adt_ccseq_desc   \
               adt_ccseq_numero \
               adt_ccseq_fecha  

    if (lib:err_retval == -801) then
       CDS INSERT DSC:CONccseq LOCK
    else
       CDS REPLACE DSC:CONccseq LOCK
    end if
    CDS UNLOCK DSC:CONccseq
END SUB

/*******/
