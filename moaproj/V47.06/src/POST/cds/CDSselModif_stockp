/****o* Modificación de Piezas/OFB:post:CDSselModif_stockp
* NOMBRE
*   OFB:post:CDSselModif_stockp
* DESCRIPCION
*   Esta rutina recupera datos de la pieza de la tabla stockp y realiza diferentes validaciones
*   para saber si la pieza puede ser modificada (TX 99003) o si puede modificarse su plazo de 
*   guarda (TX 99075)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:CDSselPiezaActiva
* DOCUMENTACION
*NI 50569-RPP
* SOURCE
*/
#include "postcds.h"


SUB post:CDSselModif_stockp

    LOCAL fecvto    LIKE post:adt_stockp_vtofecha
    LOCAL baja      LIKE post:adt_stockp_Baja
	LOCAL entrega_f LIKE post:adt_stockp_entrega_f
	LOCAL crem_imp  LIKE post:adt_stockp_crem_imp
	LOCAL destino	LIKE post:adt_stockp_destino
	local loc_mensaje LIKE common:csr_string
	local ctaOM 	LIKE post:adt_stockp_ctaOM

	CDS SELECT FROM DSC:stockp_tbl BECOMES DSC:stockp_ctx \
	WHERE post:adt_stockp_pieza == post:Pieza 

	CDS FINDFIRST DSC:stockp_ctx NOLOCK
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval == -801) THEN
		CDS ENDSELECT DSC:stockp_ctx
		//msgbox "Pieza Inexistente.",0x00,"Error"
		RETURN -1
	END IF
	CLEARFIELD adt_stockp_Baja
	CLEARFIELD adt_stockp_vtofecha
	CLEARFIELD AsignaDestino
	CLEARFIELD post:adt_stockp_laboral

	CLEARFIELD post:adt_stockp_crem_imp
	CLEARFIELD post:adt_stockp_entrega_f
	 

	CDS EXTRACT DSC:stockp_ctx post:adt_stockp_Baja INTO baja \
	post:adt_stockp_vtofecha INTO fecvto AsignaDestino \
	post:adt_stockp_laboral \
	post:adt_stockp_crem_imp INTO crem_imp \
	post:adt_stockp_entrega_f INTO entrega_f \
	post:adt_stockp_destino INTO destino \
	post:adt_stockp_ctaOM INTO ctaOM
	
	if (baja == "S" && crem_imp == 0) then
		//Si la pieza esta dada de baja y NO es crem no puede modificarse
		msgbox "La pieza ha sido devuelta, entregada o robada. No podrá modificarse.",0x00,"Error"
		RETVAL = -2
	end if
	
	if (siaf:codigo_siaf != 99003 && RETVAL != -2) then
		if (fecvto <= common:system_date) then
			msgbox "La pieza está vencida, no puede modificarse su fecha de vencimiento",0x00,"Error"
			RETVAL = -2
		end if
	endif
	
	if (siaf:codigo_siaf == 99003 && post:AsignaDestino == "E") then
		msgbox "La pieza fue recibida como Operativo Especial. No podrá modificarse",0x00,"Aviso"
		RETVAL = -2
	endif	
	
	if (siaf:codigo_siaf == 99003 && destino == DSC:minoristaRPP_desc) then
		fprint loc_mensaje,"%s%s%s", "La pieza fue recibida como ", DSC:minoristaRPP_desc, ". No podrá modificarse."
		msgbox loc_mensaje,0x00,"Aviso"
		//msgbox "La pieza fue recibida como ENVIO POR COBRAR (EPC). No podrá modificarse",0x00,"Aviso"
		RETVAL = -2
	endif
	if (siaf:codigo_siaf == 99003 && destino == DSC:PED_desc) then
		fprint loc_mensaje,"%s%s%s", "La pieza fue recibida como ", DSC:PED_desc, ". No podrá modificarse."
		msgbox loc_mensaje,0x00,"Aviso"
		//msgbox "La pieza fue recibida como ENVIO POR COBRAR (EPC). No podrá modificarse",0x00,"Aviso"
		RETVAL = -2
	endif

	//La pieza que tenga contrareembolso, entregada y con Cliente Mayorista no puede modificarse.
	if (siaf:codigo_siaf == 99003 && crem_imp > 0 && entrega_f > 0 && ctaOM.numchars > 0) then
		msgbox "Pieza CREM entregada a un Cliente Mayorista. No podrá modificarse.",0x00,"Atención"
		RETVAL = -2
	endif

	if (RETVAL == -2) then
		CDS ENDSELECT DSC:stockp_ctx
		RETURN -2
	endif


	LET drv:button = CB9 //CB4
	
	CALL drv:but_status
     //Si el boton de AGREGAR esta deshabilitado....hago el EXTRACT

	if (siaf:codigo_siaf == 99003 && (drv:disabled != 0)) then
		CALL CSR:proc_list(F_CLEAR,LST:LISTnew_ModifPieza) 
		CDS EXTRACT DSC:stockp_ctx post:adt_stockp_pieza INTO Pieza \
		post:adt_stockp_vd_imp INTO stockp_vd_imp \
		post:adt_stockp_crem_imp INTO stockp_crem_imp \
		post:adt_stockp_en_devol INTO stockp_en_devol \
		post:adt_stockp_franq_inc INTO stockp_franq_inc \
		post:adt_stockp_destino INTO stockp_destino \
		post:adt_stockp_rend_cent INTO stockp_rend_cent \
		post:adt_stockp_rct INTO stockp_rct \
		post:adt_stockp_laboral INTO stockp_laboral \
		post:adt_stockp_ctaOM INTO stockp_ctaOM \
		post:adt_stockp_tipo_doc INTO stockp_tipo_doc \
		post:adt_stockp_doc INTO stockp_doc \
		post:adt_stockp_entrega_f INTO entrega_f \
		post:adt_stockp_crem_imp INTO crem_importe \
		post:es_CDD \
		adt_stockp_lugarGuar INTO lugar_guarda_pieza
	 
		CDS EXTRACT DSC:stockp_ctx	post:adt_stockp_rpp_corp INTO stockp_rpp_corp
		
		IF (entrega_f > 0)
			f_entrega = "S"
		ELSE
			f_entrega = "N"
		END IF
		
		//SC50361
        CLEARFIELD post:adt_climay_razon
        CLEARFIELD post:id_cupon_CCT
        CLEARFIELD post:adt_cct_nis_liq
        CLEARFIELD post:adt_cct_comitente
        CLEARFIELD post:adt_cct_cod_serv
        CLEARFIELD post:adt_cct_def_cupon
        CLEARFIELD post:adt_cct_cta_sap
        CLEARFIELD post:adt_cct_rend_fis
        CLEARFIELD post:cod_barra_CREM
		
		CDS EXTRACT DSC:stockp_ctx \
		post:adt_climay_razon \
		post:id_cupon_CCT \
		post:adt_cct_nis_liq \
		post:adt_cct_comitente \
		post:adt_cct_cod_serv \
		post:adt_cct_def_cupon \
		post:adt_cct_cta_sap \
		post:adt_cct_rend_fis \
	    post:cod_barra_CREM
	   
		CALL CSR:trimfield(stockp_ctaOM,stockp_ctaOM)
	
		IF (stockp_ctaOM.numchars == 0)
			es_mayorista = "N"
		ELSE
			es_mayorista = "S"
		END IF
	
		CALL CSR:proc_list(F_REFRESH,LST:LISTnew_ModifPieza) 
	endif

	CDS ENDSELECT DSC:stockp_ctx
	


END SUB

/*******/
