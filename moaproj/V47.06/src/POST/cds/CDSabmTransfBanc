/****o* Transferencias Bancarias/OFB:post:CDSabmTransfBanc
* NOMBRE
*   OFB:post:CDSabmTransfBanc
* DESCRIPCION
*  Esta rutina efectua las operaciones de ALTA/BAJA/MODIFICACION sobre la tabla TransfBanc (Transferencias Bancarias
*  según la ingresado por parámetro
* ENTRADAS
* pAccion =
* A --> AGREGA UN REGISTRO Y ACUMULA EL SALDO DE LA TRANSFERENCIA
* B --> DA DE BAJA TODOS LOS REGISTROS POR OPERADOR
* M --> MARCA LAS TRANSFERENCIAS BANCARIAS QUE SE UTILIZARON (ORDENADAS POR FECHA) TENIENDO EN CUENTA EL CONSUMO. 
* pImporte = saldo de transferencia bancaria
* pNroTransf = nro de transferencia bancaria
* pTipo (indica de que transaccion está llamandose la rutina) :
* CM_CSIM = inicio de sesion consulta simple de cliente
* CAN_FAC = cancelacion de facturas vencidas de CM
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:OFBclimedio_simple,OFB:post:PBcancela_sesion,OFB:post:MISCtransf_bancarias,OFB:post:SVAL99461,OFB:post:SVAL99453
* DOCUMENTACION
*    http://jira.sibs.net/jira/browse/AUT-350
* SOURCE
*/
#include "postcds.h"

SUB post:CDSabmTransfBanc(pAccion, pImporte, pNroTransf, pTipo)
    LOCAL l_err_retval LIKE lib:err_retval
    LOCAL l_saldo LIKE post:adt_tranb_saldo
    LOCAL l_nro_transf LIKE post:adt_tranb_nro
    LOCAL l_fecha LIKE post:adt_tranb_fecha
    LOCAL ind LIKE siaf:i
	
	l_saldo = pImporte
	l_nro_transf = pNroTransf

	SELECT (pAccion)
	CASE "A"
		//AUT-565
		//post:saldo_TB = 0	
		CDS SELECT FROM DSC:Transf_Banc_tbl BECOMES DSC:Transf_Banc_ctx WHERE \
		post:adt_tranb_op == op:op_operator_id && \
		post:adt_tranb_cli_tipo == post:climed_tipo && \
		post:adt_tranb_cli_nro == post:climed_numero && \
		post:adt_tranb_nro == post:adt_tranb_nro
		
					 	
    	CDS FINDFIRST DSC:Transf_Banc_ctx LOCK
        LET l_err_retval = CDSRETVAL
    	CDS CLEARBUFFER DSC:Transf_Banc_ctx
    	CDS APPEND DSC:Transf_Banc_ctx \
    		FLD:op:op_operator_id as post:adt_tranb_op \
    		FLD:post:climed_tipo as post:adt_tranb_cli_tipo \
    		FLD:post:climed_numero as post:adt_tranb_cli_nro \
    		FLD:post:adt_tranb_fecha \
    		l_nro_transf as post:adt_tranb_nro \
    		l_saldo as post:adt_tranb_saldo \
    		post:adt_tranb_consumo \
    		post:adt_tranb_marca
    		   		
    	IF (l_err_retval == -801) THEN
    		CDS INSERT DSC:Transf_Banc_ctx LOCK
    		; Acumulo el importe de las transferencias
    		post:saldo_TB = post:saldo_TB + l_saldo
     	END IF
    	CDS ENDSELECT DSC:Transf_Banc_ctx
    		BREAK
    CASE "B"
		CDS SELECT FROM DSC:Transf_Banc_tbl BECOMES DSC:Transf_Banc_ctx WHERE \
		post:adt_tranb_op == op:op_operator_id
		CDS FINDFIRST DSC:Transf_Banc_ctx LOCK
    	LET l_err_retval = CDSRETVAL
    	WHILE (l_err_retval == 0)
               CDS DELETE DSC:Transf_Banc_ctx
               CDS FINDNEXT DSC:Transf_Banc_ctx LOCK
               LET l_err_retval = CDSRETVAL
    	END WHILE
    	CDS ENDSELECT DSC:Transf_Banc_ctx
    	BREAK

    CASE "M"
    	// Se atomiza la actualizacion.
		CDS BEGINWORK
    		ind = 0
    		CDS SELECT FROM DSC:Transf_Banc_tbl BECOMES DSC:Transf_Banc_ctx WHERE \
    		post:adt_tranb_op == op:op_operator_id && \
		    post:adt_tranb_cli_tipo == post:climed_tipo && \
		    post:adt_tranb_cli_nro == post:climed_numero  SORT "Fecha"

    		CDS FINDFIRST DSC:Transf_Banc_ctx LOCK
    		LET l_err_retval = CDSRETVAL
    		
    		WHILE (l_err_retval == 0)
    			CDS EXTRACT DSC:Transf_Banc_ctx post:adt_tranb_saldo \
    			post:adt_tranb_fecha into l_fecha \
    			post:adt_tranb_nro into l_nro_transf

    			if (pTipo == CAN_FAC) then
	    			IF (post:adt_tranb_saldo > l_saldo) THEN
    					post:adt_tranb_consumo = l_saldo
    					l_saldo = 0
    				ELSE
    					post:adt_tranb_consumo = post:adt_tranb_saldo
	    				l_saldo = l_saldo - post:adt_tranb_saldo
    				END IF
     			endif

                //cgw:NI50244 - Adelanto por Transferencias Bancarias.
                if (pTipo == "ADELANTO") then
                	post:adt_tranb_consumo = post:adt_tranb_saldo //consume todo el saldo
    			end if

    			//guardar los datos de las transferencias en un vector
    			//para poder reutilizarlas en la reimpresion del recibo
    			//dejar dicho vector journalizado
			    post:vec_fectb[ind] = l_fecha
			    post:vec_nrotb[ind] = l_nro_transf
			    post:vec_imptb[ind] = post:adt_tranb_consumo
			    ind = ind + 1

    			CDS CLEARBUFFER DSC:Transf_Banc_ctx
    			post:adt_tranb_marca = "*"

                //cgw: Se marca así como las facturas pend canceladas CM, 
                //las transferencias a los que se le aplico adelanto.
    			if (pTipo == CAN_FAC || pTipo == "ADELANTO") then
    				CDS APPEND DSC:Transf_Banc_ctx \
    				FLD:post:adt_tranb_consumo \
    				FLD:post:adt_tranb_marca 
    				CDS UPDATE DSC:Transf_Banc_ctx LOCK
    			end if
    			
    			IF (CDSRETVAL < 0) THEN
    				CDS ROLLBACKWORK
    				ERRMSG lst:common:errmsg_list, "¡No se puedo actualizar el consumo en la tabla Transf_Banc!"
    				CDS ENDSELECT DSC:Transf_Banc_ctx
    				RETURN (-2)
    			END IF
    			
    			IF (l_saldo == 0) THEN
    				BREAK
    			END IF
    			
    			CDS FINDNEXT DSC:Transf_Banc_ctx LOCK
    			LET l_err_retval = CDSRETVAL
    		END WHILE
    		CDS UNLOCK DSC:Transf_Banc_ctx
    		CDS ENDSELECT DSC:Transf_Banc_ctx
    		CDS COMMITWORK
    		BREAK
    END SELECT
  
END SUB

/*******/
