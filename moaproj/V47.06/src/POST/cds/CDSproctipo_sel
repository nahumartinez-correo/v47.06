/****o* Pendientes de agrupación/OFB:post:CDSproctipo_sel
* NOMBRE
*   OFB:post:CDSproctipo_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSproctipo_sel

	LOCAL adt_proc_cod_tmp      LIKE post:adt_proc_cod
	LOCAL adt_proc_tipo_tmp     LIKE post:adt_proc_tipo
	offset_0000:
    MOVE post:adt_proc_cod      TO adt_proc_cod_tmp
    MOVE post:adt_proc_tipo     TO adt_proc_tipo_tmp
    IF (adt_proc_cod.NUMCHARS != 0)
        CDS SELECT FROM DSC:adt_proc_table BECOMES DSC:adt_proc_context WHERE adt_proc_cod  == FLD:adt_proc_cod
    ELSE
        CDS SELECT FROM DSC:adt_proc_table BECOMES DSC:adt_proc_context
    END IF
    CDS MULTIDISPLAY DSC:adt_proc_context LISTproc
    drv:button = 28
    CALL drv:but_disable
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE adt_proc_cod_tmp   TO post:adt_proc_cod
        MOVE adt_proc_tipo_tmp  TO post:adt_proc_tipo
        CALL CDSproctipo_load
        RETURN (-2)
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
        RETURN (-1)
    END IF
    CDS EXTRACT DSC:adt_proc_context adt_proc_tipo adt_proc_cod
    CDS UNLOCK DSC:adt_proc_context
    CDS ENDSELECT DSC:adt_proc_context
    REFRESH adt_proc_cod
    REFRESH adt_proc_tipo
    RETURN (0)
END SUB

/*******/
