/****o* Pendientes de agrupación/OFB:post:CDScordest_sel
* NOMBRE
*   OFB:post:CDScordest_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScordest_sel

/*Se agrega el filtrado de tablas. Diego Priore 05/04/2000*/

offset_0000:
    MOVE adt_cordest_cp TO tmp_cordest_cp
/* TBC: Quiero que siempre me muestre la tabla entera */
    /*IF (adt_cordest_cp.NUMCHARS == 0) THEN
        CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx
    ELSE
        CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx WHERE adt_cordest_corte == FLD:adt_cordest_corte
    END IF */
    
    IF ((post:adt_cordest_corte.numchars == 0) && (post:adt_cordest_cp.numchars == 0)) THEN
    	CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_cordest_ctx LISTadt_cordest
    END IF
    
    IF ((post:adt_cordest_corte.numchars != 0) && (post:adt_cordest_cp.numchars == 0)) THEN
    	CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx \
    	WHERE (post:adt_cordest_corte == post:adt_cordest_corte)
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_cordest_ctx LISTadt_cordest
    END IF
    
    IF ((post:adt_cordest_corte.numchars == 0) && (post:adt_cordest_cp.numchars != 0)) THEN
    	CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx \
    	WHERE (post:adt_cordest_cp == post:adt_cordest_cp)
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_cordest_ctx LISTadt_cordest
    END IF
    
    IF ((post:adt_cordest_corte.numchars != 0) && (post:adt_cordest_cp.numchars != 0)) THEN
    	CDS SELECT FROM DSC:adt_cordest_table BECOMES DSC:adt_cordest_ctx \
    	WHERE ((post:adt_cordest_corte == post:adt_cordest_corte) && (post:adt_cordest_cp == post:adt_cordest_cp))
    	let siaf:last_key = LASTKEY
    	CDS MULTIDISPLAY DSC:adt_cordest_ctx LISTadt_cordest
    END IF
    	
    
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF

    LET lib:err_retval = CDSRETVAL
/*    IF (lib:err_retval == 0) THEN
        MOVE tmp_cordest_cp TO adt_cordest_cp
        CALL CDScordest_ldcorte
        RETURN (-2)
    END IF */

    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    
    IF (RETVAL != 0) THEN
      clearfield adt_cordest_corte 
      clearfield adt_cordest_cp 
      clearfield adt_cordest_ctp 
       	
      refresh adt_cordest_corte 
      refresh adt_cordest_cp 
      refresh adt_cordest_ctp 
      RETURN (-1)
    END IF

    CDS EXTRACT DSC:adt_cordest_ctx ALL
    CDS UNLOCK DSC:adt_cordest_ctx

	//mercedes - journalizacion ABM corte op. detinos
	call adt_to_bck38
	//fin mercedes
END SUB

/*******/
