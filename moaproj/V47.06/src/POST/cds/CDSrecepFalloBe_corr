/****o* SiMon/OFB:post:CDSrecepFalloBe_corr
* NOMBRE
*   OFB:post:CDSrecepFalloBe_corr
* DESCRIPCION
*   Reversa la Recepcion de Fallo de Pago por Cuenta de Terceros
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   RETVAL (-2): No se pudo actualizar la tabla FallosBenef.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:SVALRecepFalloPCT
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrecepFalloBe_corr
    //Reversa la Recepcion de Fallo de Pago por Cuenta de Terceros.

	CDS SELECT FROM DSC:FallosBenef_tbl BECOMES DSC:FallosBenef_ctx WHERE \
    	post:FalloBenef_seq == FLD:post:FalloBenef_seq
    CDS FINDFIRST DSC:FallosBenef_ctx LOCK
	IF (CDSRETVAL < 0) THEN
		MSGBOX "No se pudo actualizar la tabla de Fallos Rendicion de Pagos de Operativos",0x00,"Error"
		CDS UNLOCK DSC:FallosBenef_ctx
		CDS ENDSELECT DSC:FallosBenef_ctx
		RETURN (-2)
	END IF

    CDS EXTRACT DSC:FallosBenef_ctx ALL

    post:FalloBenef_estado = "S" // Asigna Fallo, vuelve atras la Aceptacion del Fallo.
    CLEARFIELD post:FalloBenef_fec_recep // Limpia la fecha de recepcion del Fallo.
	CDS CLEARBUFFER DSC:FallosBenef_ctx
	CDS APPEND DSC:FallosBenef_ctx \
		post:FalloBenef_estado \
		post:FalloBenef_fec_recep
	CDS UPDATE DSC:FallosBenef_ctx LOCK
	CDS UNLOCK DSC:FallosBenef_ctx
	CDS ENDSELECT DSC:FallosBenef_ctx

    // Se vuelve a marcar en rend_caj que existe un Fallo PCT asignado para el operador.
    post:asign_falloBe_opdes = op:op_operator_id
    CALL post:CDSupd_falloPCT_rend
END SUB

/*******/
