/****o* Pendientes de agrupación/OFB:post:CDSgiros_emitidosCDD
* NOMBRE
*   OFB:post:CDSgiros_emitidosCDD
* DESCRIPCION
*   Carga en un picklist dinámico el número de documento y la razón social de los Clientes Mayoristas Crem
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:PBclimay_razon
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSgiros_emitidosCDD
local l_GiroSerie like common:csr_string 
local l_GiroNro like common:csr_string  
local l_GiroDig like common:csr_string  
local l_GiroFechaLiq like fechaux 
local l_GiroImporte like siaf:importe
local l_TTGiros like common:csr_string  
local cont like siaf:i
local l_cadena like common:csr_string

    CDS SELECT FROM "StockpCDD" BECOMES "StockpCDD_ctx" WHERE \
    	adt_CDD_pieza == post:adt_CDD_pieza 
    
    CDS FINDFIRST "StockpCDD_ctx" nolock
    IF (cdsretval < 0)
        CDS ENDSELECT "StockpCDD_ctx"
		//Busco los giros en la stockpHist por si la pieza se encuentra allí 
    	CDS SELECT FROM "StockpCDDHist" BECOMES "StockpCDD_ctx" WHERE \
    		adt_CDD_pieza == post:adt_CDD_pieza
    
    	CDS FINDFIRST "StockpCDD_ctx" nolock
        IF (cdsretval < 0)
        	CDS ENDSELECT "StockpCDD_ctx"
        	return -2
        END IF
    END IF
    
    CALL csr:f_sadroppl "Giros Emitidos (CREM)"
    CALL csr:f_sanewpl "Giros Emitidos (CREM)" pic:PICgiros_emitidos
    
	cont = 0
    WHILE (cont < 10)
    	
    	IF (adt_CDD_serie[cont] != "") THEN
	    	CDS EXTRACT "StockpCDD_ctx" adt_CDD_serie[cont] into l_GiroSerie, adt_CDD_nro[cont] into l_GiroNro, adt_CDD_dig[cont] into l_GiroDig, adt_CDD_fec[cont] into l_GiroFechaLiq, adt_CDD_impGiro[cont] into l_GiroImporte, adt_CDD_TT_giros[cont] into l_TTGiros
	    
	    	FPRINT l_cadena "%1.1s       %6.6s    %1.1s    %10.10e     %12.12s  %13.13s   ", l_GiroSerie, l_GiroNro, l_GiroDig, l_GiroFechaLiq, l_GiroImporte, l_TTGiros
	    
        	CALL csr:f_saaddpl "Giros Emitidos (CREM)" l_cadena
		END IF
	    cont = cont + 1
    END WHILE
    
    CDS ENDSELECT "StockpCDD_ctx"
    INIT 71 1
    
    CALL  csr:f_sadopl ("Giros Emitidos (CREM)", common:csr_string)
    
    INIT 71 0
    CALL csr:f_sadroppl "Giros Emitidos (CREM)"
    CDS ENDSELECT "StockpCDD_ctx"
    
    //Verifico si se encontró algún giro
    IF (l_cadena == "") THEN
        RETURN (-1)
    ELSE
    	RETURN (0)
	END IF

END SUB

/*******/
