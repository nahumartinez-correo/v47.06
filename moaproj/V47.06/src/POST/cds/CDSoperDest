/****o* Pendientes de agrupación/OFB:post:CDSoperDest
* NOMBRE
*   OFB:post:CDSoperDest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSoperDest
    /* Transf. a otro Contenedor */
    /* Req. 127 - Ene. 1999 - B. Petrella -    */

	/*Se agrega marca de borrado logico - Gabriel Falciola*/
    CDS SELECT FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context WHERE \
	(op:op_branch_id == op:op_branch_id && \
	op:op_login_id != post:adt_op_login_id && \
	op:op_tlr_auth == "X" && op:op_borrado_logico != "S")
    let siaf:last_key = LASTKEY
    CDS MULTIDISPLAY DSC:op:adt_op_context LISToperadorDest
    LET lib:err_retval = CDSRETVAL
    IF (CDSRETVAL == 0) THEN /* Esc */
	/* Recupero op:op_login_id */
	Let op:op_login_id = post:adt_op_login_id0
	Let op:op_operator_id = post:adt_op_operator_id0
	RETURN (-2)
    ENDIF
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0)
	/* Recupero op:op_login_id */
	Let op:op_login_id = post:adt_op_login_id0
	Let op:op_operator_id = post:adt_op_operator_id0
	RETURN (-1)
    ENDIF

    CDS EXTRACT DSC:op:adt_op_context op:op_login_id op:op_operator_id

    Let Operador_id = op:op_login_id
    Let CodOperador = op:op_operator_id
    Let Sucursal_id = op:op_branch_id

    CDS UNLOCK DSC:op:adt_op_context
    CDS ENDSELECT DSC:op:adt_op_context

    refresh Operador_id

    /* Recupero op:op_login_id */
	Let op:op_login_id = post:adt_op_login_id0
	Let op:op_operator_id = post:adt_op_operator_id0

END SUB

/*******/
