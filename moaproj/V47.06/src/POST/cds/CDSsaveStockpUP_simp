/****o* Pendientes de agrupación/OFB:post:CDSsaveStockpUP_simp
* NOMBRE
*   OFB:post:CDSsaveStockpUP_simp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSsaveStockpUP_simp(cod_recep,tipo_pieza,cant_piezas)
	local cant_aux like cantidad
	
	NisUP = cod_recep
	
	cds select from dsc:stockpUP_simp_tbl becomes dsc:stockpUP_simp_ctx where \
		fecha == common:system_date && \
		NisUP == NisUP && \
		tipo_piezaUP == tipo_pieza
	cds findfirst dsc:stockpUP_simp_ctx lock
	lib:err_retval = cdsretval
	IF (lib:err_retval == -803)
		//lockeado por otro usuario
		CDS WAIT dsc:stockpUP_simp_ctx
	ELSE
		IF (lib:err_retval == 0)
			cds extract dsc:stockpUP_simp_ctx tmpUP_cant_simples into cant_aux
			IF (!testflag(tlr:tran_flags,correction)) THEN
				cant_aux = cant_aux + cant_piezas
			ELSE
				cant_aux = cant_aux - cant_piezas
			END IF
		ELSE
			cant_aux = cant_piezas
		END IF
	END IF
	tipo_piezaUP = tipo_pieza
	cds clearbuffer dsc:stockpUP_simp_ctx
	cds append dsc:stockpUP_simp_ctx \
		fecha \
		NisUP \
		tipo_piezaUP \
		cant_aux as tmpUP_cant_simples
	if (lib:err_retval == -801)
		cds insert dsc:stockpUP_simp_ctx lock
	else
		cds update dsc:stockpUP_simp_ctx lock
	end if
	cds unlock dsc:stockpUP_simp_ctx
	cds endselect dsc:stockpUP_simp_ctx

END SUB

/*******/
