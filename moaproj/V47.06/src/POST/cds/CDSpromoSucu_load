/****o* Pendientes de agrupación/OFB:post:CDSpromoSucu_load
* NOMBRE
*   OFB:post:CDSpromoSucu_load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSpromoSucu_load
    CDS SELECT FROM DSC:adt_promoSucu_tbl BECOMES DSC:adt_promoSucu_ctx \
        WHERE adt_promo_desc == FLD:adt_promo_desc && \
          adt_promo_desde == FLD:adt_promo_desde && \
          adt_promo_hasta == FLD:adt_promo_hasta
    CDS FINDFIRST DSC:adt_promoSucu_ctx NOLOCK

	CDS AGGREGATE DSC:adt_promoSucu_ctx count adt_promo_desc
	if (cdsretval == 0)
		CDS EXTRACT DSC:adt_promoSucu_ctx adt_promo_desc
		; Barra de progreso.
		call post:MISCinicProgressBar("CARGANDO SUCURSALES (2/4)   - ", adt_promo_desc)
	endif
    CDS FINDFIRST DSC:adt_promoSucu_ctx NOLOCK

    LET lib:err_retval = CDSRETVAL
    WHILE (lib:err_retval == 0)
		; Barra de progreso.
		call post:MISCactProgressBar("CARGANDO SUCURSALES (2/4)   - ", 1, BARRAPORCENT, 1)
    	CDS EXTRACT DSC:adt_promoSucu_ctx ALL
		common:csr_string = adt_promo_sucursal
		if (common:csr_string != GRABAR_TODAS_SUCURSALES)
	    	CALL csr:f_saaddpl dsc:post:pic_promo_sucursal common:csr_string
		    adt_promo_cantSucSel = adt_promo_cantSucSel + 1
		endif
	    CDS FINDNEXT DSC:adt_promoSucu_ctx NOLOCK
	    LET lib:err_retval = CDSRETVAL
	END WHILE
	call csr:PickOp PICKOP_SORT DSC:post:pic_promo_sucursal "0,5"
    CDS ENDSELECT DSC:adt_promoSucu_ctx
	call post:MISCfinProgressBar
END SUB

/*******/
