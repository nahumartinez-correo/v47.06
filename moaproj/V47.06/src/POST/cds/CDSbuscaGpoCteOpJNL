/****o* Pendientes de agrupación/OFB:post:CDSbuscaGpoCteOpJNL
* NOMBRE
*   OFB:post:CDSbuscaGpoCteOpJNL
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSbuscaGpoCteOpJNL
    /* Busca Grupo y Apertura de los que se puede cerrar     	*/
    /* contenedor segun journal.						*/
    /* Jul. 1999 - B. Petrella -     					*/

    IF (siaf:codigo_siaf != "99069" && siaf:codigo_siaf != "99071")
	    CALL CDSclearGpoAp /* Limpia la tabla por operador */
    END IF

    clearfield tlr:jnl_sequence_corr
    clearfield post:adt_codseq_nro

    /* Selecciona los jnl. del propio operador, 	*/
    /* cuya guia este vacia, que la transaccion no este reversada*/
    /* y que el grupo requiera contenedor */

    IF (siaf:codigo_siaf != "99069" && siaf:codigo_siaf != "99071")
	    CDS SELECT FROM DSC:post:adt_relMod_table BECOMES DSC:post:adt_relMod_ctx WHERE \
		(post:adt_relMod_modelos == common:br_modelo)
    ELSE
	    CDS SELECT FROM DSC:post:adt_relMod_table BECOMES DSC:post:adt_relMod_ctx WHERE \
		(post:adt_relMod_modelos == common:br_modelo && \
		 post:adt_relMod_corteop == post:adt_serv_corteop)

    END IF
    CDS FINDFIRST DSC:post:adt_relMod_ctx LOCK

    	/* Para controlar que por lo menos haya encontrado una pieza */
    	LET idx = 0
    	DO
		IF (CDSRETVAL != 0) THEN
	    		BREAK
		END IF
		/* Extraigo Grupo de Corte, Apertura y Corte*/
		CDS EXTRACT DSC:post:adt_relMod_ctx post:adt_relMod_grucorte \
						  post:adt_relMod_apertura \
						  post:adt_relMod_corteop

		/* Verifica si ya existe el grupo y apertura en GpoApTmp */
		CALL CDSverifGpoAp

		if (retval < 0)
			/* Graba cod. y descripcion de Grupo y Apertura */
			CALL CDSgrabaGpoAp
			IF (RETVAL < 0)
				idx = 0
				break
			END IF
			let idx = idx + 1
		end if
		CDS FINDNEXT DSC:post:adt_relMod_ctx LOCK
    	LOOP

    	CDS UNLOCK DSC:post:adt_relMod_ctx
    	CDS ENDSELECT DSC:post:adt_relMod_ctx

    	IF (idx > 0) THEN
		CDS UNLOCK DSC:post:GpoApTmp_ctx
    		CDS ENDSELECT DSC:post:GpoApTmp_ctx

		CDS UNLOCK DSC:post:CorteGrupo_ctx
    		CDS ENDSELECT DSC:post:CorteGrupo_ctx

    	ELSE
		RETURN (-2)
    	END IF
END SUB

/*******/
