/****o* Novedades de T&T/OFB:post:CDSBorro_Scaneos
* NOMBRE
*   OFB:post:CDSBorro_Scaneos
* DESCRIPCION
*  Rutina que borra/actualiza los escaneos correspondientes (segun argumento de entrada) de la tabla NovTT
* ENTRADAS
*   tipo = "C" - Se está reversando una pieza de un contenedor, por lo tanto
*   se deben borrar los scaneos A y K0 generados para dicha pieza en el
*   cierre de contenedor y tambien se debe actualizar el Scaneo O o el P según corresponda. 
*   tipo = "A" - Se esta reversando cierre de saca, se deben depurar/actualizar escaneos A
*	tipo =  "S" - Se está reversando una saca, por lo tanto se deben actualizar los
*	scaneos A generados en el cierre de contenedor o se debe borrar el scaneo A
*	generado en el cierre de saca para aquellas piezas que no se contenerizan.
*	Se actualiza el Scaneo O, P o 99 según corresponda.
*	Los scaneos B y X se borraran cuando se reverse el encabezado
*   tipo = "L"- Se borra/actualiza según corresponda el Scaneo K0 y scaneos X del corte de linea
*   tipo = "X" - Actualiza en el corte de linea, el nro de guia de despacho de los scaneos X (24)
*   tipo = "O  - Se actualiza la linea y transporte en los scaneos 0,P
*   tipo = "I" - Borro los Scaneos O de la imposiciones y los 99 de Bolsines con TT inválido y los de Recepciones UP
*	tipo = "D" - Actualizo scaneos de Devolucion de Piezas
*   tipo = "R" - Se eliminano los Scaneos correspondientes generados en Recepción de Piezas
*   tipo = "E" - Se eliminan los Scaneos P generados en Entrega de Piezas, previamente Observadas
*			   - Se eliminan los Scaneos P de Piezas Observadas robadas
*	tipo = "T" - Reversa de Transferencia a Otro Contenedor: se actualizan los scaneos O, P o 99 según corresponda
*	tipo =  "U"- Scaneos Recepcion UP: se eliminan los scaneos de la Recepcion de piezas UP				
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:CDSrevJNLcte,OFB:post:CDSSelect_Piezas,OFB:post:CDSverifContSaca,OFB:post:CDSverifCteLin
*	OFB:post:JNL_DP1_det,OFB:post:JNL_DP2_det,OFB:post:JNL_DP3_det,OFB:post:JNL_DP4_det,OFB:post:JNL_DP5_det
*	OFB:post:JNLentrega_pieza,OFB:post:JNLMarca_Excepcion,OFB:post:MISCreverso_sesion,OFB:post:MISCrevTrans 
*	OFB:post:MISCsumoStockUP,OFB:post:MISCtrat_scaneoO,OFB:post:SENDasigna_destino,OFB:post:SENDRecep_Piezas
*	OFB:post:SVAL_DP3_DCLote,OFB:post:SVAL_DP4_RCen,OFB:post:SVALLlegada_Transp,OFB:post:SVALllenSaca,OFB:tes:MISCjnltran
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSBorro_Scaneos (tipo)

/*MFM - Esta rutina borra los Scaneos correspondientes según el parámetro recibido*/
Local aux like adt_prodvs_cod
Local fecha like adt_stockp_recepfech
Local dia like adt_estand_std1
Local mes like adt_estand_std1
Local anio like jnl_sequence_ori
Local contenedor like DetalleContenidoGC
    
     
   IF (DetalleContenidoGC.numchars == 0) THEN
        swapdup DetalleContenidoGC
   ENDIF
   dia = substr (DetalleContenidoGC,0,2)
   mes = substr (DetalleContenidoGC,3,2)
   anio = substr (DetalleContenidoGC,6,4)
   fprint adt_novtt_fecha , "%s%s%s%s", anio,mes,dia,"*"
   SELECT (tipo)

       CASE "C" /*MFM - Se está reversando una pieza de un contenedor, por lo tanto
       se deben borrar los scaneos A y K0 generados para dicha pieza en el
       cierre de contenedor.Se actualiza el Scaneo O o el P según corresponda*/
		
		//BUG - El escaneo 15/16 pudo haberse realizado en dias anteriores, la fecha del campo
		//post:DetallecontendioGC es la fecha de imposicion, o sea que es correcta.
		//Pero los scaneos A y K se realizaron si o si el dia de la fecha en que se reversa la operacion,
		//sino no permite la reversa,por lo tanto hay que realizar dos selecciones ya que  de esta manera no actualiza el scaneo A/K

            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_op == post:jnl_operator_ori && \
            post:adt_novtt_sequence == post:jnl_sequence_ori && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha
            CDS FINDFIRST DSC:NovTT_ctx LOCK

            DO
                IF (CDSRETVAL == -801) THEN
                    CDS UNLOCK DSC:NovTT_ctx
                    CDS ENDSELECT DSC:NovTT_ctx
                    BREAK
                END IF
                CLEARFIELD post:adt_novtt_tipo
                CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo
                IF (adt_novtt_tipo == 01 || adt_novtt_tipo == 11) THEN
                    CDS DELETE DSC:NovTT_ctx
                END IF
                
                IF (adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || \
                	adt_novtt_tipo == 99) THEN
                 	 CDS CLEARBUFFER DSC:NovTT_ctx
                     adt_novtt_guia_cont = ""
                     CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_guia_cont
                     CDS UPDATE DSC:NovTT_ctx LOCK
                END IF
                CDS FINDNEXT DSC:NovTT_ctx LOCK

            LOOP
            
            if (post:adt_novtt_fecha < common:system_date) then
            	
            	dia = substr (common:system_date,6,2)
   				mes = substr (common:system_date,4,2)
   				anio = substr (common:system_date,0,4)
   				fprint adt_novtt_fecha , "%s%s%s%s", anio,mes,dia,"*"
   
            	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            	WHERE post:adt_novtt_op == post:jnl_operator_ori && \
            	post:adt_novtt_sequence == post:jnl_sequence_ori && \
            	post:adt_novtt_fecha SMATCH adt_novtt_fecha
            	CDS FINDFIRST DSC:NovTT_ctx LOCK

            	DO
                	IF (CDSRETVAL == -801) THEN
                    	CDS UNLOCK DSC:NovTT_ctx
                    	CDS ENDSELECT DSC:NovTT_ctx
                    	BREAK
                	END IF
                	CLEARFIELD post:adt_novtt_tipo
                	CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo
                	IF (adt_novtt_tipo == 01 || adt_novtt_tipo == 11) THEN
                    	CDS DELETE DSC:NovTT_ctx
                	END IF
	                CDS FINDNEXT DSC:NovTT_ctx LOCK
	            LOOP
            endif
            BREAK
        CASE "A"
            /*porque estos scaneos no pueden quedar pendientes de dias anteriores*/
            fecha = common:system_date
            fprint adt_novtt_fecha , "%s%s", fecha, "*"
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
        	WHERE post:adt_novtt_op == post:jnl_operator_ori && \
            post:adt_novtt_sequence == post:jnl_sequence_ori && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha && \
            post:adt_novtt_tipo == 01
            CDS FINDFIRST DSC:NovTT_ctx LOCK
            IF (CDSRETVAL == -801) THEN
            	aux = substr (DetalleContenidoGC,12,8)
            	/*MFM - Puede ser un contenedor*/
        		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            	WHERE post:adt_novtt_guia_cont == aux && \
		    	post:adt_novtt_guia_saca == post:adt_codseq_nro
		    	CDS FINDFIRST DSC:NovTT_ctx LOCK
		    ENDIF
            DO
                IF (CDSRETVAL == -801) THEN
	                CDS UNLOCK DSC:NovTT_ctx
    	            CDS ENDSELECT DSC:NovTT_ctx
        	        BREAK
            	END IF
                CLEARFIELD adt_novtt_tipo
	            CLEARFIELD adt_novtt_guia_cont
    	        CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo adt_novtt_guia_cont
        	    IF (adt_novtt_tipo == 01) THEN
            	   	IF (substr(Pieza_id,11,2) != "AR" && adt_novtt_guia_cont != 0) THEN
                     //Actualizo Scaneo A de cierre de contenedor
                       	CDS CLEARBUFFER DSC:NovTT_ctx
		               	adt_novtt_caratula = ""
                       	adt_novtt_guia_saca = 0
                       	adt_novtt_en_cond = "N"
                       	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_caratula \
                        		                   FLD:adt_novtt_guia_saca \
                                                  FLD:adt_novtt_en_cond
                      	CDS UPDATE DSC:NovTT_ctx LOCK
                    ELSE
                         	//Borro Scaneo A generado en cierre de saca
                       	CDS DELETE DSC:NovTT_ctx
                    END IF
                END IF
                CDS FINDNEXT DSC:NovTT_ctx LOCK				
             LOOP
    	    BREAK
    	    
        CASE "S" /*MFM - Se está reversando una saca, por lo tanto se deben actualizar los
         scaneos A generados en el cierre de contenedor o se debe borrar el scaneo A
	     generado en el cierre de saca para aquellas piezas que no se contenerizan.
    	 Se actualiza el Scaneo O, P o 99 según corresponda.
         Los scaneos B y X se borraran cuando se reverse el encabezado*/
            
            IF (siaf:codigo_siaf == 99040) THEN
             	/*MFM - Octubre 2000 - Tengo que borrar los Scaneos B y X */
             	fecha = common:system_date
                fprint adt_novtt_fecha , "%s%s", fecha, "*"
             	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
             	WHERE (post:adt_novtt_op == tlr:jnl_operator && \
             	post:adt_novtt_sequence == tlr:jnl_sequence && \
             	post:adt_novtt_fecha SMATCH adt_novtt_fecha && \
             	(post:adt_novtt_tipo == 02 || post:adt_novtt_tipo == 24))
             	CDS FINDFIRST DSC:NovTT_ctx LOCK
             	DO 
             		IF (CDSRETVAL == 0) THEN
             			CDS DELETE DSC:NovTT_ctx
             		ELSE
             			CDS UNLOCK DSC:NovTT_ctx 
             			CDS ENDSELECT DSC:NovTT_ctx 
             			BREAK
             		END IF
             		CDS FINDNEXT DSC:NovTT_ctx LOCK
             	LOOP
            ELSE
                
                /*MFM - Puede ser un track && trace o una pieza de grandes clientes*/
    	        CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
        	    WHERE post:adt_novtt_op == post:jnl_operator_ori && \
                post:adt_novtt_sequence == post:jnl_sequence_ori && \
            	post:adt_novtt_fecha SMATCH adt_novtt_fecha
            	CDS FINDFIRST DSC:NovTT_ctx LOCK
            	IF (CDSRETVAL == -801) THEN
            	  	aux = substr (DetalleContenidoGC,12,8)
            		/*MFM - Puede ser un contenedor*/
        			CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            	   	WHERE post:adt_novtt_guia_cont == aux && \
		    	    post:adt_novtt_guia_saca == post:adt_codseq_nro //&& \
    		    	//post:adt_novtt_fecha SMATCH adt_novtt_fecha
    			   	CDS FINDFIRST DSC:NovTT_ctx LOCK        

    		    END IF
        	    DO
            	    IF (CDSRETVAL == -801) THEN
	                    CDS UNLOCK DSC:NovTT_ctx
    	                CDS ENDSELECT DSC:NovTT_ctx
        	            BREAK
            	    END IF
                	CLEARFIELD adt_novtt_tipo
	                CLEARFIELD adt_novtt_guia_cont
    	            CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo adt_novtt_guia_cont
        	        /*IF (adt_novtt_tipo == 01) THEN
            	     	IF (substr(Pieza_id,11,2) != "AR" && adt_novtt_guia_cont != 0) THEN
                         //Actualizo Scaneo A de cierre de contenedor
                	    	CDS CLEARBUFFER DSC:NovTT_ctx
		                   	adt_novtt_caratula = ""
                         	adt_novtt_guia_saca = 0
                         	adt_novtt_en_cond = "N"
                         	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_caratula \
                        		                   FLD:adt_novtt_guia_saca \
                                                  FLD:adt_novtt_en_cond
                         	CDS UPDATE DSC:NovTT_ctx LOCK
                     	ELSE
                         	//*Borro Scaneo A generado en cierre de saca
                         	CDS DELETE DSC:NovTT_ctx
                     	END IF
                	END IF*/
                	IF (adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || \
	                	adt_novtt_tipo == 99) THEN
    	            	CDS CLEARBUFFER DSC:NovTT_ctx
        	            adt_novtt_guia_saca = ""
            	       	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_guia_saca
                	    CDS UPDATE DSC:NovTT_ctx LOCK
	                END IF
               
                    CDS FINDNEXT DSC:NovTT_ctx LOCK				

            	LOOP
            END IF
            swapdup DetalleContenidoGC 
            BREAK
       CASE "L"
            /*MFM - Borro o Actualizo según corresponda el Scaneo K0 y scaneos X*/
            /*porque estos scaneos no pueden quedar pendientes de dias anteriores*/
            fecha = common:system_date
            fprint adt_novtt_fecha , "%s%s", fecha, "*"
            aux = Pieza_id
            CALL csr:trimfield aux
            /*Busco Scaneo de piezas provenientes de un contenedor*/
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_guia_cont == aux && \
            post:adt_novtt_guia_cont != 0 && \
            post:adt_novtt_tipo == 11 && \
            post:adt_novtt_subtipo == "0"
            CDS FINDFIRST DSC:NovTT_ctx LOCK
            IF (CDSRETVAL == -801) THEN
                /*Busco Scaneos de la pieza que fue directamente a la linea*/
                CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
                WHERE post:adt_novtt_op == op:op_operator_id && \
                post:adt_novtt_sequence == jnl_sequence_ori && \
                post:adt_novtt_fecha SMATCH adt_novtt_fecha && \
                post:adt_novtt_tipo == 11 && \
                post:adt_novtt_subtipo == "0"
                CDS FINDFIRST DSC:NovTT_ctx LOCK
            END IF
            DO    
               IF (CDSRETVAL == -801) THEN
                   CDS UNLOCK DSC:NovTT_ctx 
                   CDS ENDSELECT DSC:NovTT_ctx 
                   BREAK
                END IF
                CLEARFIELD adt_novtt_guia_cont
                CLEARFIELD adt_novtt_tipo                
                CLEARFIELD adt_novtt_subtipo                
                CDS EXTRACT DSC:NovTT_ctx adt_novtt_guia_cont adt_novtt_tipo \
                adt_novtt_subtipo adt_novtt_cod
                //IF (adt_novtt_guia_cont == 0 && post:adt_novtt_tipo == 11 ) THEN
                IF (adt_novtt_guia_cont == 0 ) THEN
                    CDS DELETE DSC:NovTT_ctx
                ELSE
                    /*Actualizo Scaneo K0 de cierre de contenedor*/
                    CDS CLEARBUFFER DSC:NovTT_ctx
                    //IF (post:adt_novtt_tipo == 11) THEN
                    	adt_novtt_transf = ""
	                    adt_novtt_en_cond = "N"
    	                CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_transf \
        	                                     FLD:adt_novtt_en_cond
        	            CDS UPDATE DSC:NovTT_ctx LOCK
        	        //END IF
            	    /* MFM - Agosto 2000 - Se actualiza la linea de los scaneos P(16),X (24) y 99
            	    post:adt_novtt_linea = ""
            	    IF (post:adt_novtt_tipo == 16 || adt_novtt_tipo == 99) THEN
            	    	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_linea
            	    	CDS UPDATE DSC:NovTT_ctx LOCK
            	    END IF
            	    IF (adt_novtt_cod == "T" && adt_novtt_tipo  == 24) THEN
            	    	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_linea
            	    	CDS UPDATE DSC:NovTT_ctx LOCK
            	    END IF*/
            	   
            	                	    
                END IF
                CDS FINDNEXT DSC:NovTT_ctx LOCK
            LOOP
            BREAK
      CASE "X"
            dia = substr (DetalleContenidoGC,33,2)
            mes = substr (DetalleContenidoGC,36,2)
            anio = substr (DetalleContenidoGC,39,4)
            fprint adt_novtt_fecha , "%s%s%s%s", anio,mes,dia,"*"
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_op == jnl_operator_ori && \
            post:adt_novtt_sequence == jnl_sequence_ori && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha && \
            adt_novtt_tipo  == 24
            CDS FINDFIRST DSC:NovTT_ctx LOCK
            DO    
               IF (CDSRETVAL == -801) THEN
                   CDS UNLOCK DSC:NovTT_ctx 
                   CDS ENDSELECT DSC:NovTT_ctx 
                   BREAK
               END IF
               CLEARFIELD adt_novtt_cod                
               CDS EXTRACT DSC:NovTT_ctx adt_novtt_cod
               CDS CLEARBUFFER DSC:NovTT_ctx
               post:adt_novtt_linea = ""
               IF (adt_novtt_cod == "T") THEN
               	   	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_linea
            	    CDS UPDATE DSC:NovTT_ctx LOCK
               END IF
               CDS FINDNEXT DSC:NovTT_ctx LOCK
            LOOP
            BREAK
            
       CASE "O"
            contenedor = substr(DetalleContenidoGC,0,13)
            dia = substr (DetalleContenidoGC,33,2)
            mes = substr (DetalleContenidoGC,36,2)
            anio = substr (DetalleContenidoGC,39,4)
            fprint adt_novtt_fecha , "%s%s%s%s", anio,mes,dia,"*"
            /*Se busca el scaneo de la pieza que fue a este corte de linea*/
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_pieza == contenedor && \
            post:adt_novtt_tipo == 15 && \
            post:adt_novtt_linea == post:adt_codseq_nro && \
            post:adt_novtt_sequence == post:jnl_sequence_ori && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha
            CDS FINDFIRST DSC:NovTT_ctx LOCK
            /* MFM - Agosto 2000 - También debe actualizarse la línea de contendores y/o 
            sacas que van a la linea*/            
            IF (CDSRETVAL == -801) THEN
                CDS ENDSELECT DSC:NovTT_ctx 
                aux = substr(DetalleContenidoGC,0,13)
                CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            	WHERE post:adt_novtt_guia_saca == aux && \
            	post:adt_novtt_linea == post:adt_codseq_nro //&& \
            	//post:adt_novtt_fecha SMATCH adt_novtt_fecha
                CDS FINDFIRST DSC:NovTT_ctx LOCK
            	IF (CDSRETVAL == -801) THEN
	            	CDS ENDSELECT DSC:NovTT_ctx 
	            	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
    	        	WHERE post:adt_novtt_guia_cont == aux && \
            		post:adt_novtt_linea == post:adt_codseq_nro //&& \
            		//post:adt_novtt_fecha SMATCH adt_novtt_fecha
                	CDS FINDFIRST DSC:NovTT_ctx LOCK	
                END IF
            END IF
            
            DO 
            	IF (CDSRETVAL == -801) THEN
                	CDS UNLOCK DSC:NovTT_ctx 
                	CDS ENDSELECT DSC:NovTT_ctx 
                	BREAK
                END IF
            	CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo
            	/* MFM - Actualizo solo Scaneo O(15), P(16) y 99*/
            	IF (adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || \
            		adt_novtt_tipo == 99) THEN
            	   	adt_novtt_linea = ""
            	   	CDS CLEARBUFFER DSC:NovTT_ctx
	            	IF (adt_novtt_tipo == 99) THEN
	    	        	adt_novtt_trans = "F"
	    	        	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_linea \
	    	        						     FLD:adt_novtt_trans
	    	        ELSE
	    	        	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_linea
	    	        END IF
    	    	    CDS UPDATE DSC:NovTT_ctx LOCK
        		END IF
        	    CDS FINDNEXT DSC:NovTT_ctx LOCK
            LOOP
            BREAK
       
         CASE "I"
            /*MFM - Borro los Scaneos O de la imposiciones 
            y los 99 de Bolsines con TT inválido y los de Recepciones UP*/
            If (siaf:codigo_siaf == 99235)
            //Este if se hace porque estoy reversando una clasificacion de UP que puede 
            //haber sido recepcionada en dias anteriores. Por lo que la fecha del scaneo O
            //sera la misma que la del L de recepcion
            	CALL CDSdate_scaneoL(piezaUP)
            	fprint adt_novtt_fecha , "%s%s", adt_novtt_fecha, "*"
            else
            	fecha = common:system_date
            	fprint adt_novtt_fecha , "%s%s", fecha, "*"
            end if
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_op == tlr:jnl_operator && \
            post:adt_novtt_sequence == sequence_aux && \
            (post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 99) && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha
            CDS FINDFIRST DSC:NovTT_ctx LOCK
            IF (CDSRETVAL == -801) THEN
                CDS UNLOCK DSC:NovTT_ctx 
                CDS ENDSELECT DSC:NovTT_ctx 
                BREAK
            END IF
            CDS DELETE DSC:NovTT_ctx
            CDS UNLOCK DSC:NovTT_ctx 
            CDS ENDSELECT DSC:NovTT_ctx 
            

            
            BREAK
       CASE "D"
       
       	  fecha = common:system_date
          fprint adt_novtt_fecha , "%s%s", fecha, "*"
       	  SELECT (siaf:codigo_siaf)
       	  	
       	  	CASE 99065;Cabecera de Devolución de Piezas Descentralizadas con Lote
       	  	CASE 99067;Cabecera de Devolución de Piezas Centralizadas
       	  	CASE 99062;Detalle de Devolución de Piezas Minoristas
       	  	CASE 99064;Detalle de Devolución de Piezas Descentralizadas sin Lote
       	  	CASE 99066;Detalle de Devolución de Piezas Descentralizadas con Lote
       	  	CASE 99068;Detalle de Devolución de Piezas Centralizadas
   	  	 	  	/*Borrar los scaneos generados en la devolucion que se está reversando*/
   	  	 	  	IF (siaf:codigo_siaf == 99065 || siaf:codigo_siaf == 99067) THEN
   	  	 	  		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	            	WHERE post:adt_novtt_op == tlr:jnl_operator && \
	    	        post:adt_novtt_sequence == tlr:jnl_sequence && \
    		        post:adt_novtt_fecha SMATCH post:adt_novtt_fecha
   	  	 	  	ELSE
	   	  	 	  	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
		            WHERE post:adt_novtt_op == tlr:jnl_operator && \
    		        post:adt_novtt_sequence == tlr:jnl_sequence_corr && \
    	    	    post:adt_novtt_fecha SMATCH post:adt_novtt_fecha
    	        END IF
    	        CDS FINDFIRST DSC:NovTT_ctx LOCK
    	        DO
	    	        IF (CDSRETVAL == -801) THEN
    	    	        CDS UNLOCK DSC:NovTT_ctx 
        	    	    CDS ENDSELECT DSC:NovTT_ctx 
            	    	BREAK
	            	END IF
	            	CDS DELETE DSC:NovTT_ctx
	            	CDS FINDNEXT DSC:NovTT_ctx LOCK
	            LOOP
			    BREAK	
       	  	CASE ELSE;Devolución de Piezas Interdictas y a Rebut
		       	/*MFM - Borro los Scaneos O de las devoluciones*/
        		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	            WHERE post:adt_novtt_op == tlr:jnl_operator && \
	            post:adt_novtt_pieza == post:Reencaminamiento && \
        	    post:adt_novtt_tipo == 15 && \
            	post:adt_novtt_codseq == post:codseq_dev
	            CDS FINDFIRST DSC:NovTT_ctx LOCK
    	        IF (CDSRETVAL == 0) THEN
        	        CDS DELETE DSC:NovTT_ctx
	            ENDIF
	            CDS UNLOCK DSC:NovTT_ctx 
        	    CDS ENDSELECT DSC:NovTT_ctx 
        	    /*MFM - Borro los Scaneos P9 de las devoluciones*/
        	    CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
        	     WHERE post:adt_novtt_op == tlr:jnl_operator && \
        	     post:adt_novtt_sequence == tlr:jnl_sequence_corr && \
        	     post:adt_novtt_pieza == post:Pieza && \
        	     post:adt_novtt_tipo == 16
        	          	    
        	    CDS FINDFIRST DSC:NovTT_ctx LOCK
    	    	IF (CDSRETVAL == 0) THEN
		        	CDS DELETE DSC:NovTT_ctx
		        END IF
		        CDS UNLOCK DSC:NovTT_ctx 
            	CDS	ENDSELECT DSC:NovTT_ctx 
	            BREAK
          END SELECT 
          BREAK
       CASE "R"
            fecha = common:system_date
            fprint adt_novtt_fecha , "%s%s", fecha, "*"        	        	
         	
         	SELECT (siaf:codigo_siaf)
         		
         		CASE 99005
         		CASE 99010
         		/*Elimino los Scaneos correspondientes generados en Recepción de Piezas*/
         		    
            		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
		            WHERE (post:adt_novtt_op == tlr:jnl_operator && \
    		        post:adt_novtt_sequence == tlr:jnl_sequence_corr && \
        		    post:adt_novtt_fecha SMATCH adt_novtt_fecha) 
	            	CDS FINDFIRST DSC:NovTT_ctx LOCK
    		        IF (CDSRETVAL == -801) THEN
    		        	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
		            	WHERE (post:adt_novtt_op == tlr:jnl_operator && \
    		        	post:adt_novtt_sequence == tlr:jnl_sequence && \
        		    	post:adt_novtt_fecha SMATCH adt_novtt_fecha) 
        		    	CDS FINDFIRST DSC:NovTT_ctx LOCK
        		    END IF
            		DO 
		                IF (CDSRETVAL == -801) THEN
        		            CDS UNLOCK DSC:NovTT_ctx 
                		    CDS ENDSELECT DSC:NovTT_ctx
		                    BREAK
        		        END IF
                		CDS DELETE DSC:NovTT_ctx
			            CDS FINDNEXT DSC:NovTT_ctx LOCK
		            LOOP
        		    BREAK
        		
        		CASE 99000
        		CASE 99140
        	        	                    
        		  /*Elimino los scaneos correspondientes generados en Recepción de Sacas en Tránsito o Recepción de Piezas*/
        			CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
		            WHERE (post:adt_novtt_op == tlr:jnl_operator && \
    		        post:adt_novtt_sequence == tlr:jnl_sequence && \
        		    post:adt_novtt_fecha SMATCH adt_novtt_fecha) 
	               
	                CDS FINDFIRST DSC:NovTT_ctx LOCK
            		DO
	            		IF (CDSRETVAL == 0) THEN
    	    		    	CDS DELETE DSC:NovTT_ctx
			            ELSE
			        		CDS UNLOCK DSC:NovTT_ctx 
		           			CDS ENDSELECT DSC:NovTT_ctx    
		           			BREAK
			            END IF
            			CDS FINDNEXT DSC:NovTT_ctx LOCK
            		LOOP
		    		BREAK
		    	

        	END SELECT
        	BREAK
                    
         CASE "E"
			/*Elimino los Scaneos P generados en Entrega de Piezas, previamente Observadas*/
			/*MFM - Elimino los Scaneos P de Piezas Observadas robadas*/
			IF (adt_novtt_fecha_obs.numchars != 0) THEN
	            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	            WHERE post:adt_novtt_op == tlr:jnl_operator && \
	            post:adt_novtt_sequence == sequence_aux && \
	            post:adt_novtt_tipo == 16 && \
	            post:adt_novtt_fecha == adt_novtt_fecha_obs
	            CDS FINDFIRST DSC:NovTT_ctx LOCK
	            IF (CDSRETVAL == 0) THEN
	            	CDS DELETE DSC:NovTT_ctx
	            END IF
	            CDS UNLOCK DSC:NovTT_ctx 
	            CDS ENDSELECT DSC:NovTT_ctx
			    /*Limpio el campo de la fecha de observacion*/
			    clearfield post:adt_novtt_fecha_obs	             
			END IF
            /*CSZ - Elimino los Scaneos P generados en Entrega de Piezas*/
            fecha = common:system_date
            fprint adt_novtt_fecha , "%s%s", fecha, "*"
            CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
            WHERE post:adt_novtt_op == tlr:jnl_operator && \
            post:adt_novtt_sequence == sequence_aux && \
            post:adt_novtt_tipo == 16 && \
            post:adt_novtt_fecha SMATCH adt_novtt_fecha
			CDS FINDFIRST DSC:NovTT_ctx LOCK
            IF (CDSRETVAL == -801) THEN
                CDS UNLOCK DSC:NovTT_ctx 
                CDS ENDSELECT DSC:NovTT_ctx 
                BREAK
            END IF
            CDS DELETE DSC:NovTT_ctx
            CDS UNLOCK DSC:NovTT_ctx 
            CDS ENDSELECT DSC:NovTT_ctx 
            	
            BREAK
            
         CASE "T"; Reversa de Transferencia a Otro Contenedor
         /* Actualizo los scaneos O, P o 99 según corresponda */
         	contenedor = substr(DetalleContenidoGC,11,32)
         	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
         	WHERE ((post:adt_novtt_op == post:jnl_operator_ori) && \
	     	(post:adt_novtt_sequence == post:jnl_sequence_ori) && \
	     	(post:adt_novtt_pieza == track_trace || post:adt_novtt_pieza == contenedor) && \
	     	(post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || post:adt_novtt_tipo == 99))
	     	
           	CDS FINDFIRST DSC:NovTT_ctx LOCK
           	IF (CDSRETVAL == -801) THEN
           		CDS UNLOCK DSC:NovTT_ctx
           		CDS ENDSELECT DSC:NovTT_ctx
           		RETURN -2
           	END IF
           	//adt_novtt_op2 = ""
           	post:adt_novtt_op2 = op:op_operator_id
           	post:adt_novtt_guia_cont = ""
           	CDS CLEARBUFFER DSC:NovTT_ctx
           	CDS APPEND DSC:NovTT_ctx post:adt_novtt_op2 post:adt_novtt_guia_cont
           	CDS UPDATE DSC:NovTT_ctx LOCK
           	CDS UNLOCK DSC:NovTT_ctx 
           	CDS ENDSELECT DSC:NovTT_ctx 
           	BREAK

		CASE "U" //Scaneos Recepcion UP
    		//Elimina los scaneos de la Recepcion de piezas UP
            fecha = common:system_date
            fprint adt_novtt_fecha , "%s%s", fecha, "*"     		
       		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	            WHERE (post:adt_novtt_op == tlr:jnl_operator && \
 		        post:adt_novtt_sequence == sequence_aux && \
       		    post:adt_novtt_fecha SMATCH adt_novtt_fecha) 
           	CDS FINDFIRST DSC:NovTT_ctx LOCK
       		DO 
	        	IF (CDSRETVAL == -801) THEN
            		CDS UNLOCK DSC:NovTT_ctx 
    		    	CDS ENDSELECT DSC:NovTT_ctx
		            BREAK
        		END IF
                CDS DELETE DSC:NovTT_ctx
			    CDS FINDNEXT DSC:NovTT_ctx LOCK
		    LOOP
            If (siaf:codigo_siaf == 99235)
        		CALL CDSact_scaneoL_UP("N")
        	END IF
		    BREAK
   END SELECT
   
END SUB

/*******/
