/****o* Pendientes de agrupación/OFB:post:CDSRMot_load
* NOMBRE
*   OFB:post:CDSRMot_load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSRMot_load

    CDS SELECT FROM DSC:RMOTI_TAB BECOMES  \
DSC:RMOTI_CTX
    siaf:last_key = LASTKEY
    CDS MULTIDISPLAY DSC:RMOTI_CTX post:LISTRmot
    IF (LASTKEY == 0x0190) THEN
      CALL CSR:proc_list(170,LST:LISTRMotivos_flds)
      CALL CSR:proc_list(190,LST:LISTRMotivos_flds)
      CDS ENDSELECT DSC:RMOTI_CTX
      RETURN (-2)
    ELSE 
      IF (CDSRETVAL > 0) THEN
        CDS EXTRACT DSC:RMOTI_CTX ALL
        CALL CSR:proc_list(190,LST:LISTRMotivos_flds)
        CALL MISCset_sidebar(0,1,0,0)
      ELSE 
        CALL MISCset_sidebar(0,0,1,0)
      END IF 
    END IF 
    CLEARFIELD adt_restmot_bloq 
    CLEARFIELD adt_restmot_sup 
    CDS SELECT FROM DSC:RMOTI_TAB BECOMES DSC:RMOTI_CTX WHERE  \
adt_restmot_mpago == FLD:adt_restmot_mpago && adt_restmot_mot ==  \
FLD:adt_restmot_mot && adt_restmot_mod == FLD:adt_restmot_mod &&  \
adt_restmot_sub == FLD:adt_restmot_sub 
    CDS FINDFIRST DSC:RMOTI_CTX LOCK 
    lib:err_retval = CDSRETVAL
    IF (lib:err_retval == -801) THEN
      RETURN (-2)
    END IF 
    CDS EXTRACT DSC:RMOTI_CTX ALL 
    CDS UNLOCK DSC:RMOTI_CTX 
    CDS ENDSELECT DSC:siaf:adt_motiv_context 
    CALL CSR:proc_list(120,LST:LISTRMotivos_flds,LST:LISTbck_RMotivos)
END SUB

/*******/
