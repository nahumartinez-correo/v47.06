/****o* Pendientes de agrupación/OFB:post:CDScorteOp_serv
* NOMBRE
*   OFB:post:CDScorteOp_serv
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScorteOp_serv(codigo)
	//verifica el corte operativo de acuerdo al codigo de tt pasado
	//por parametro
	//valores posibles:
	// retval = 0 ==> no encontro corte operativo asociado en la tabla de Servicio
	// retval = 2 ==> hay mas de un corte op por tt
	// retval = 1  ==> hay un solo corte op por tt
	local corteop_aux like adt_serv_corteop
	CDS SELECT FROM DSC:Servicio_tbl BECOMES DSC:Servicio_ctx WHERE \
		post:adt_serv_tt == "T" && \
		(post:adt_serv_ttcod == codigo || \
		adt_serv_ttcod1 == codigo || \
		adt_serv_ttcod2 == codigo || \
		adt_serv_ttcod3 == codigo || \
		adt_serv_ttcod4 == codigo || \
		adt_serv_ttcod5 == codigo || \
		adt_serv_ttcod6 == codigo || \
		adt_serv_ttcod7 == codigo) && \
		adt_serv_corteop != ""
	CDS FINDFIRST DSC:Servicio_ctx NOLOCK
	lib:err_retval = cdsretval
	IF (lib:err_retval == -801)
		return 0
		cds endselect DSC:Servicio_ctx
	end if
	clearfield post:adt_serv_corteop
	cds extract DSC:Servicio_ctx adt_serv_corteop
	corteop_aux = adt_serv_corteop 
	while  (cdsretval != -801)
		cds extract DSC:Servicio_ctx adt_serv_corteop
		if (adt_serv_corteop != corteop_aux)
			//cambio el corte operatico ==> hay mas de 1 para el mismo codigo de tt 
			cds endselect DSC:Servicio_ctx
			return (2)
		end if
		cds findnext DSC:Servicio_ctx NOLOCK
		lib:err_retval = cdsretval
	end while
	cds endselect DSC:Servicio_ctx
	return 1
END SUB

/*******/
