/****o* Pendientes de agrupación/OFB:post:CDSRMotivos_load
* NOMBRE
*   OFB:post:CDSRMotivos_load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSRMotivos_load
    CDS SELECT FROM siaf:adt_motiv_table BECOMES siaf:adt_motiv_context lock
    let siaf:last_key = LASTKEY
    CDS MULTIDISPLAY DSC:siaf:adt_motiv_context siaf:LISTadt_motiv
   IF (LASTKEY == RT_ESC) THEN
    	CALL CSR:proc_list(F_CLEAR,LST:LISTRMotivos_flds)
	CALL CSR:proc_list(F_REFRESH,LST:LISTRMotivos_flds)
    	CDS ENDSELECT DSC:siaf:adt_motiv_context
    	RETURN (-2)
   ELSE
    	  IF (CDSRETVAL > 0) THEN
      		CDS EXTRACT siaf:adt_motiv_context ALL
                move siaf:adt_mot_codigo    to  adt_restmot_mot
                move siaf:adt_mot_modulo    to  adt_restmot_mod
                move siaf:adt_mot_submodulo to  adt_restmot_sub  		
    	        CALL CSR:proc_list(F_REFRESH,LST:LISTRMotivos_flds)   
      		call post:MISCset_sidebar(0,1,0,0)   
    	 ELSE
      		call post:MISCset_sidebar(0,0,1,0)       
         END IF  
    END IF     

    
    CLEARFIELD adt_restmot_bloq 
    CLEARFIELD adt_restmot_sup      
    CDS SELECT FROM DSC:RMOTI_TAB   BECOMES DSC:RMOTI_CTX  \
        WHERE adt_restmot_mpago == FLD:adt_restmot_mpago && \
              adt_restmot_mot   == FLD:adt_restmot_mot && \
              adt_restmot_mod   == FLD:adt_restmot_mod && \
              adt_restmot_sub   == FLD:adt_restmot_sub 
          
    CDS FINDFIRST DSC:RMOTI_CTX LOCK
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == -801) THEN
      return (-2)
           
    END IF
    CDS EXTRACT DSC:RMOTI_CTX ALL
    CDS UNLOCK DSC:RMOTI_CTX
    CDS ENDSELECT DSC:siaf:adt_motiv_context
 
        // para las modificaciones pendientes
    CALL csr:proc_list(F_COPY,lst:post:LISTRMotivos_flds,lst:post:LISTbck_RMotivos)
END SUB

/*******/
