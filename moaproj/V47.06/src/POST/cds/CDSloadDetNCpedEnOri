/****o* Pago en Destino/OFB:post:CDSloadDetNCpedEnOri
* NOMBRE
*   OFB:post:CDSloadDetNCpedEnOri
* DESCRIPCION
*   Carga la pantalla con los datos del Servicio de la tabla DetNCpedEnOrigen
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
* 	post:PRES30050
* DOCUMENTACION  
*   NI50479
* SOURCE
*/
#include "postcds.h"

SUB post:CDSloadDetNCpedEnOri
	LOCAL l_err_retval LIKE lib:err_retval
	LOCAL indice LIKE siaf:i
	LOCAL l_dcto_prod_vs LIKE post:item_dcto
	LOCAL l_dcto_esp_val LIKE post:item_dcto
	LOCAL l_tarif_prd_vs LIKE post:item_importe
	LOCAL l_tarif_esp_val LIKE post:item_importe
	LOCAL l_alicuota_esp_val LIKE post:item_alicuota_ev
	LOCAL l_alicuota_prod_vs LIKE post:item_alicuota_pv

	siaf:importe_tot_serv = 0
	post:costo_opc = 0
	post:cant_opc = 0

	CDS SELECT FROM DSC:post:DetNCpedEnOrigen_tbl BECOMES DSC:post:DetNCpedEnOrigen_ctx \
		WHERE post:id_pieza_ped == post:id_pieza_ped
	
	CDS FINDFIRST DSC:post:DetNCpedEnOrigen_ctx LOCK
	LET l_err_retval = CDSRETVAL
	WHILE (l_err_retval == 0) 
		CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx post:item_codigo_trx
	
		SELECT (post:item_codigo_trx)
			CASE 8500 //es una especie valorizada
				CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
				  post:item_importe INTO l_tarif_esp_val \
					post:item_dcto INTO l_dcto_esp_val \
					post:item_alicuota INTO l_alicuota_esp_val
					
				CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
					post:item_especie INTO post:codesp_serv \
					post:item_subespecie INTO post:subcod_serv
			
				post:item_importe_ev = l_tarif_esp_val		
				post:item_alicuota_ev = l_alicuota_esp_val
				post:item_dcto_ev = l_dcto_esp_val			
			BREAK
			CASE 40002 //es un producto vario
				CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
					post:item_importe INTO l_tarif_prd_vs \
					post:item_dcto INTO l_dcto_prod_vs \
					post:item_alicuota INTO l_alicuota_prod_vs	
				
				CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
					post:item_prodvarios INTO post:prod_serv
					
				post:item_importe_pv = l_tarif_prd_vs		
				post:item_alicuota_pv = l_alicuota_prod_vs
				post:item_dcto_pv = l_dcto_prod_vs	
			BREAK
			CASE ELSE //es un Servicio
				CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
					post:pieza_ped INTO post:track_trace \
					post:item_codigo_trx INTO post:adt_serv_serv \
					post:item_tipo_caja INTO post:tipo_caja \
					post:item_destino \
					post:item_peso_kgs INTO post:peso_en_kgs \
					post:item_peso_grs INTO post:peso_en_grs \
					post:item_aforo1 INTO post:aforo1 \
					post:item_aforo2 INTO post:aforo2 \
					post:item_aforo3 INTO post:aforo3 \
					post:item_importe INTO post:tarifa \
					post:item_dcto INTO	post:Dcto_CliMed \
					post:item_rel_vol INTO post:rel_vol \
					post:item_alicuota INTO post:adt_serv_aliciva \
					post:item_cant_caja_prev INTO post:cant_caja_prev
			
			//cargo el codigo del opcional
			CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
				post:item_opc_opci[0] INTO post:cod_opc[0] \
				post:item_opc_opci[1] INTO post:cod_opc[1] \
				post:item_opc_opci[2] INTO post:cod_opc[2] \
				post:item_opc_opci[3] INTO post:cod_opc[3] \
				post:item_opc_opci[4] INTO post:cod_opc[4]
			
			//cargo el iva del opcional	
			CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
				post:item_ali_opc[0] INTO post:ali_opc[0] \
				post:item_ali_opc[1] INTO post:ali_opc[1] \
				post:item_ali_opc[2] INTO post:ali_opc[2] \
				post:item_ali_opc[3] INTO post:ali_opc[3] \
				post:item_ali_opc[4] INTO post:ali_opc[4]	
			
			//extraigo importe del opcional
			CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
				post:item_opc_importe[0] \
				post:item_opc_importe[1] \
				post:item_opc_importe[2] \
				post:item_opc_importe[3] \
				post:item_opc_importe[4]
			
			//extraigo importes crem y declarado
			CDS EXTRACT DSC:post:DetNCpedEnOrigen_ctx \
				post:item_valor_dec \
				post:item_valor_cre
			
			post:destino = item_destino	
			post:tiene_cre = "N"
			post:tiene_vd  = "N"	
				
			indice = 0
			//calculo costo de opcional y cargo importes si existen los opocianles VADC y CREM 
			WHILE (indice < 5)
			 post:costo_opc = post:costo_opc + post:item_opc_importe[indice]
			 IF (post:cod_opc[indice] == "VADC" || post:cod_opc[indice] == "CREM") THEN
					IF (post:cod_opc[indice] == "VADC") THEN
						post:vec_opc2[indice] = post:item_valor_dec
						post:tiene_vd = "S"
						post:valor_dec = post:item_valor_dec
					ELSE
						post:vec_opc2[indice] = post:item_valor_cre					
						post:tiene_cre = "S"		
						post:valor_cre = post:item_valor_cre           
					END IF
			 END IF
			 
				IF (post:cod_opc[indice] == "AVRB") THEN
					post:valor_ar = post:item_opc_importe[indice]	
				END IF
				IF (post:cod_opc[indice] == "CSAR") THEN
					post:valor_csar = post:item_opc_importe[indice]
				END IF 							
	
				//acumulo la cantidad de opcionales
				IF (post:cod_opc[indice].NUMCHARS > 0) THEN
				 	post:cant_opc = post:cant_opc + 1
				END IF
			 
			 indice = indice + 1
			END WHILE		

			//calculo el aforo
			IF (post:aforo1.NUMCHARS > 0 && post:aforo2.NUMCHARS > 0 && post:aforo3.NUMCHARS > 0) THEN
				IF (post:tipo_caja != "CAJA PROPIA") THEN
					post:aforo = post:aforo1 + post:aforo2 + post:aforo3
				ELSE
					post:rel_vol_l1 = post:aforo1
					post:rel_vol_l2 = post:aforo2
					post:rel_vol_l3 = post:aforo3				
				END IF
			END IF	
		END SELECT
	
		CDS FINDNEXT DSC:post:DetNCpedEnOrigen_ctx LOCK
		LET l_err_retval = CDSRETVAL
	END WHILE
	
	siaf:importe_tot_serv = post:tarifa + post:costo_opc + l_tarif_esp_val + l_tarif_prd_vs
	
	//evaluo si el producto vario tiene descuento
	IF (l_dcto_prod_vs > 0) THEN
		post:DctoCM_bc = l_dcto_prod_vs
	END IF
	
	CDS UNLOCK DSC:post:DetNCpedEnOrigen_ctx
	CDS ENDSELECT DSC:post:DetNCpedEnOrigen_ctx
	RETURN (0)	
	
END SUB

/*******/
