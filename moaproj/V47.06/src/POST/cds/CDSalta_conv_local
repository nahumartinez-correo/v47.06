/****o* Pendientes de agrupación/OFB:post:CDSalta_conv_local
* NOMBRE
*   OFB:post:CDSalta_conv_local
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSalta_conv_local
	
	CDS SELECT FROM DSC:TABconv_ventas BECOMES DSC:CONconv_ventas \
	WHERE post:op_operator_id == op:op_operator_id && \
	post:conv_vta_convenio == post:convenio
	
	CDS FINDFIRST DSC:CONconv_ventas  NOLOCK
    let lib:err_retval = cdsretval
    
    IF (lib:err_retval != 0) THEN
		CDS ENDSELECT DSC:CONconv_ventas
		RETURN -2
	ENDIF	
    
    DO
    	IF (lib:err_retval == 0) THEN
    		
    		CDS EXTRACT DSC:CONconv_ventas ALL
    		
    		CDS SELECT FROM DSC:TABconv_vtasLoc BECOMES DSC:CONconv_vtasLoc \
    		WHERE post:CliMed_tipo == post:climed_tipo && \
			post:CliMed_numero == post:climed_numero && \
			post:conv_vta_convenio == post:conv_vta_convenio && \
			post:conv_vta_desde == post:conv_vta_desde 
		
			CDS FINDFIRST DSC:CONconv_vtasLoc LOCK
			let post:err_retval = cdsretval
    		
    		CDS CLEARBUFFER DSC:CONconv_vtasLoc
    		//SC 50389 - SE AGREGA LA HORA
    		CDS APPEND DSC:CONconv_vtasLoc \
			post:climed_tipo AS post:CliMed_tipo \
			post:climed_numero AS post:CliMed_numero \
			post:conv_vta_convenio \
			post:conv_vta_desde \
			post:conv_vta_hasta  \
			post:conv_vta_descuento \
			post:conv_fecha_ult_modif AS post:conv_vta_fecha \
			post:conv_hora_ult_modif AS post:conv_vta_hora
		
		   	if (post:err_retval == -CDS_RECORD_NOT_FOUND )
       			CDS INSERT  DSC:CONconv_vtasLoc LOCK
    		else
       			CDS REPLACE DSC:CONconv_vtasLoc LOCK
    		end if
    		
    		CDS UNLOCK DSC:CONconv_vtasLoc
    		CDS ENDSELECT DSC:CONconv_vtasLoc
    		
    		CDS FINDNEXT DSC:CONconv_ventas NOLOCK
    		let lib:err_retval = cdsretval
    		
    	ELSE
    		CDS ENDSELECT DSC:CONconv_ventas
    		BREAK
    	ENDIF
    LOOP	
    
END SUB

/*******/
