/****o* Contra Reembolso/OFB:post:CDSrecepFalloCR_corr
* NOMBRE
*   OFB:post:CDSrecepFalloCR_corr
* DESCRIPCION
*   Reversa la Recepcion de Fallo CREM
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:SVALRecepFalloCREM
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSrecepFalloCR_corr
    //Reversa la Recepcion de Fallo CREM

	CDS SELECT FROM DSC:FallosCrem_tbl BECOMES DSC:FallosCrem_ctx WHERE \
    	post:FalloCrem_seq == FLD:post:FalloCrem_seq
    CDS FINDFIRST DSC:FallosCrem_ctx LOCK
	IF (CDSRETVAL < 0) THEN
		MSGBOX "No se pudo actualizar la tabla de Fallos CREM",0x00,"Error"
		CDS UNLOCK DSC:FallosCrem_ctx
		CDS ENDSELECT DSC:FallosCrem_ctx
		RETURN (-2)
	END IF

    CDS EXTRACT DSC:FallosCrem_ctx ALL

    post:FalloCrem_estado = "S" // Asigna Fallo, vuelve atras la Aceptacion del Fallo.
    CLEARFIELD post:FalloCrem_fech_recep // Limpia la fecha de recepcion del Fallo.
	CDS CLEARBUFFER DSC:FallosCrem_ctx
	CDS APPEND DSC:FallosCrem_ctx \
		post:FalloCrem_estado \
		post:FalloCrem_fech_recep
	CDS UPDATE DSC:FallosCrem_ctx LOCK
	CDS UNLOCK DSC:FallosCrem_ctx
	CDS ENDSELECT DSC:FallosCrem_ctx

    // Se vuelve a marcar en rend_caj que existe un Fallo CREM asignado para el operador.
    post:asign_falloCR_opdes = op:op_operator_id
    CALL post:CDSupd_falloCR_rend 
END SUB

/*******/
