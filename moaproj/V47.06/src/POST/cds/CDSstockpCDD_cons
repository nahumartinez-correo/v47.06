/****o* Pendientes de agrupación/OFB:post:CDSstockpCDD_cons
* NOMBRE
*   OFB:post:CDSstockpCDD_cons
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

Sub post:CDSstockpCDD_cons
    
    LOCAL stock_ctx_aux LIKE adt_tabla_context2
    
    CDS SELECT FROM "StockpCDD" BECOMES "StockpCDD_ctx" \
    WHERE (adt_CDD_pieza == pieza_stockp)  
    CDS FINDFIRST "StockpCDD_ctx" NOLOCK
    If (CDSRETVAL < 0) Then
        CDS ENDSELECT "StockpCDD_ctx"
        CALL CDSstockpCDDH_cons("N")
        IF (RETVAL < 0)
            RETURN -2
        ELSE
            LET stock_ctx_aux = "StockpCDDHist_ctx"
        END IF
    ELSE
        LET stock_ctx_aux = "StockpCDD_ctx" 
    End If
    
    
    CALL CSR:proc_list(F_CLEAR,LST:LISTpieza_flds)
    CALL CSR:proc_list(F_CLEAR,LST:LISTcon_pieza_flds)
    CALL CSR:proc_list(F_REFRESH,LST:LISTcon_pieza_flds)
    
    CDS EXTRACT FLD:stock_ctx_aux ALL
	adt_stockp_pieza = adt_CDD_pieza
	adt_stockp_es_grancl = adt_CDD_es_grancl
	adt_stockp_recepfech = adt_CDD_recep_f
	adt_stockp_recephora = adt_CDD_recep_h
	adt_stockp_recepop = adt_CDD_recep_op
	adt_stockp_entrega_f = adt_CDD_entrega_f
	adt_stockp_entrega_h = adt_CDD_entrega_h
	adt_stockp_entrega_o = adt_CDD_entrega_op
	adt_stockp_crem_imp = adt_CDD_crem_imp
	adt_stockp_crem_impc = adt_CDD_crem_impc
	adt_stockp_ctaOM = adt_CDD_CtaOM
	adt_stockp_tipo_doc = adt_CDD_TipoDoc
	adt_stockp_doc = adt_CDD_NumDoc
	adt_stockp_Orden = adt_CDD_Orden
	adt_stockp_Baja = adt_CDD_Baja
	adt_stockp_rend_cent = adt_CDD_rend_cent
	adt_stockp_rct = adt_CDD_rct
	adt_stockp_Observ = adt_CDD_Observ
	//es_CDD = es_CDD

    IF (adt_CDD_CtaOM != "") THEN
    	adt_climay_ctaclie = adt_CDD_CtaOM
    	adt_climay_tipodoc = adt_CDD_TipoDoc
    	adt_climay_nrodoc = adt_CDD_NumDoc
    	CALL CDSCliMay_crem_sel
    	IF (RETVAL == 0) THEN
    		//Cargo los datos del cliente mayorista crem
    		adt_stockp_rem_nom = adt_climay_razon
    		FPRINT adt_stockp_rem_domic "%s %s %s",adt_climay_calle, adt_climay_nropuerta, adt_climay_piso
    		adt_stockp_rem_loc = adt_climay_loca
    		adt_stockp_rem_CP = adt_climay_codpost
    		adt_stockp_rem_pcia = adt_pcia_cod
    	END IF
    ELSE
    	IF (adt_CDD_TipoDoc != "") && (adt_CDD_NumDoc != "") THEN
    		CloTipDoc = adt_CDD_TipoDoc
    		CloCuit = adt_CDD_NumDoc
    		CALL CDSCliOca_sel
    		IF (RETVAL == 0) THEN
    			//Cargo los datos del cliente ocacional
    			IF (CloRazon != "") THEN
    				adt_stockp_rem_nom = CloRazon
    			ELSE	
    				FPRINT adt_stockp_rem_nom "%s %s", CloNombre, CloApellido
    			END IF
    			
    			FPRINT adt_stockp_rem_domic "%s %s %s",CloCalle, CloNroDir, CloPiso
    			adt_stockp_rem_loc = CloLoc
    			adt_stockp_rem_CP = CloCodPost
    			adt_stockp_rem_pcia = CloProvin   
    		END IF
    	END IF
    END IF
    
    CALL CSR:proc_list(F_COPY,LST:LISTpieza_flds,LST:LISTcon_pieza_flds)
    /*CALULAR LA PROVINCIA SEGUN LA INICIAL adt_stockp_rem_pcia */
    CALL MISCcalculo_prov
    CALL csr:proc_list(F_REFRESH,LST:LISTcon_pieza_flds)
    UNPROTFIELD Observ_nueva_stockp
    CDS ENDSELECT FLD:stock_ctx_aux
    
End Sub

/*******/
