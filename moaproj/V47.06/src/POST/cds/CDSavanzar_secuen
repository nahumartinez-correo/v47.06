/****o* Secuenciadores/OFB:post:CDSavanzar_secuen
* NOMBRE
*   OFB:post:CDSavanzar_secuen
* DESCRIPCION
*   Esta Rutina es Una Copia de la CDSobtiene_secuen pero Agregando un Parametro mas
*   que permite avanzar el secuenciador + de un numero 
* ENTRADAS
*   local_tipo  = codigo de secuenciador
*   Nro_avanzar = cantidad de nros que se desea avanzar.
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   OFB:post:CDSobtiene_secuen,post:CDSccseq_get_num
* REFERENCIADO POR
*   OFB:giros:PRT70630,OFB:giros:SVAL70320,OFB:tes:MISCavanza_cheqtp,tes:MISCavanzar_lineas
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

// Esta Rutina es Una Copia de la CDSobtiene_secuen pero Agregando un Parametro mas
// que permite avanzar el secuenciador + de un numero (
SUB post:CDSavanzar_secuen(local_tipo,Nro_avanzar)
   LOCAL loc_tipo   LIKE adt_codseq_cod
   LOCAL loc_ultimo LIKE adt_codseq_nro
   LOCAL loc_nro    LIKE adt_codseq_nro

   adt_codseq_sucnro = common:sucursal_activa

   loc_tipo   = local_tipo
   loc_ultimo = 99999999
   SELECT (loc_tipo)
      CASE "RECIB"
         loc_ultimo = 99999
         BREAK
      CASE "CABEC"
      CASE "TRXGM"
      CASE "SESGM"
      CASE "SESLG"
         loc_ultimo = 99999
         BREAK
      CASE "STAN"    
      CASE "TSIM" 
      CASE "TCLCO" 
      CASE "TCON" 
      CASE "TSERV" 
      CASE "TLPUR"
      	 loc_ultimo = 999999
         BREAK
      CASE "CRORD"
      CASE "VDORD"
      CASE "ESC54"
         loc_ultimo = 9999
         BREAK
      CASE "IDWUI" //ID Western Union Internacional
      //CASE "GUARD"
      	 loc_ultimo = 9999999
         BREAK
/*      Case "REMCH"
      	 loc_ultimo = 99999
         BREAK*/
   END SELECT
   DO
      CDS SELECT from DSC:post:TABSecuen BECOMES DSC:post:CONSecuen \
      WHERE post:adt_codseq_sucnro == FLD:post:adt_codseq_sucnro && \
      post:adt_codseq_cod    == loc_tipo
      CDS FINDFIRST DSC:post:CONSecuen LOCK

      LET lib:err_retval = CDSRETVAL
      SELECT (lib:err_retval)
         CASE 0
            /* busqueda exitosa */
            CDS EXTRACT DSC:post:CONSecuen ALL
            BREAK
         CASE -801
            /* no existe registro */
            FLD:post:adt_codseq_nro = 1
            BREAK
         CASE -803
            /* registro lockeado por otro usuario */
            /* reintenta busqueda */
            BREAK
      END SELECT

       IF (lib:err_retval == 0 || lib:err_retval == -801)
          /*IF (post:adt_codseq_nro >= loc_ultimo)
             FLD:post:adt_codseq_nro = 1
          END IF

         loc_nro = FLD:post:adt_codseq_nro*/
          loc_nro = FLD:post:adt_codseq_nro
          
          IF (post:adt_codseq_nro == loc_ultimo) THEN
             FLD:post:adt_codseq_nro = 0
          ELSEIF (post:adt_codseq_nro == 0) THEN
             FLD:post:adt_codseq_nro = 1
          END IF

         FLD:post:adt_codseq_nro = FLD:post:adt_codseq_nro +  Nro_avanzar
         CDS CLEARBUFFER DSC:post:CONSecuen
         FLD:post:adt_codseq_cod = loc_tipo

         if (lib:err_retval == -801)
             FLD:adt_codseq_param_ini = "N"
             clearfield FLD:adt_codseq_fec_ini
         end if

         CDS APPEND DSC:post:CONSecuen \
                    FLD:post:adt_codseq_sucnro \
                    FLD:post:adt_codseq_cod  \
                    FLD:post:adt_codseq_desc \
                    FLD:post:adt_codseq_nro \
                    FLD:adt_codseq_param_ini   \
                    FLD:adt_codseq_fec_ini


     IF (lib:err_retval == 0)
            CDS UPDATE DSC:post:CONSecuen LOCK
     ELSE
        CDS INSERT  DSC:post:CONSecuen LOCK
         END IF

         CDS UNLOCK DSC:post:CONSecuen
         CDS ENDSELECT DSC:post:CONSecuen
         FLD:post:adt_codseq_nro = loc_nro

         BREAK
      END IF
   LOOP
END SUB

/*******/
