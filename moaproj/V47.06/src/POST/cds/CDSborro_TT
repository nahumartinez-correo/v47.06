/****o* Pendientes de agrupación/OFB:post:CDSborro_TT
* NOMBRE
*   OFB:post:CDSborro_TT
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSborro_TT

	/* Borro luego de grabar el track_trace en el journal*/
   CDS SELECT FROM DSC:adt_cargoTT_table BECOMES DSC:adt_cargoTT_context \
   WHERE post:adt_jnl_codseq == post:adt_jnl_codseq && \
         post:adt_jnl_operator == post:adt_jnl_operator &&\
   		 post:adt_jnl_cantidad == post:adt_jnl_cantidad &&\
   		 post:adt_jnl_date == post:adt_jnl_date &&\
   		 post:adt_jnl_time == post:adt_jnl_time &&\
   		 post:adt_jnl_desc == post:adt_jnl_desc

   CDS FINDFIRST DSC:adt_cargoTT_context LOCK
   LET lib:err_retval = CDSRETVAL
   IF (lib:err_retval == -801) THEN
      RETURN (-2)
   END IF
   WHILE  ( lib:err_retval == 0 )

	   	CDS DELETE DSC:adt_cargoTT_context
    	CDS FINDNEXT DSC:adt_cargoTT_context LOCK
    	LET lib:err_retval = CDSRETVAL
   		IF (lib:err_retval == -801) THEN
      			RETURN (-2)
  		END IF

	END WHILE
    CDS UNLOCK DSC:adt_cargoTT_context
	Cds EndSelect DSC:adt_cargoTT_context

END SUB

/*******/
