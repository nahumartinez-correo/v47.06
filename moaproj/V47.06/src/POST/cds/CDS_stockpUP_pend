/****o* Pendientes de agrupación/OFB:post:CDS_stockpUP_pend
* NOMBRE
*   OFB:post:CDS_stockpUP_pend
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDS_stockpUP_pend
	local retval_tmp like lib:err_retval
	clearfield MarcaBorrado
	
	//selecciono de la stockpUP los registros que no estan clasificados
	cds select from dsc:stockpUP_tbl becomes dsc:stockpUP_ctx where \
		post:adt_stockpUP_baja != "S" && \
		post:adt_stockpUP_clasif == "N" sort "Clasif"
	cds findfirst dsc:stockpUP_ctx nolock
	lib:err_retval = cdsretval	
	while (lib:err_retval != -801)
		
		cds extract dsc:stockpUP_ctx all
		tmpUP_piezaUP = adt_stockpUP_pieza
		
		
		//grabo en una tabla de pendientes stockpUP_pend los reg no clasificados
		cds select from dsc:stockpUP_pend_tbl becomes dsc:stockpUP_pend_ctx where \
			tmpUP_op == op:op_operator_id && \
			tmpUP_piezaUP == tmpUP_piezaUP 
		cds findfirst dsc:stockpUP_pend_ctx lock
		retval_tmp = cdsretval
		cds clearbuffer dsc:stockpUP_pend_ctx
		cds append dsc:stockpUP_pend_ctx \
			op:op_operator_id as tmpUP_op \
			tmpUP_piezaUP \
			MarcaBorrado \
			adt_stockpUP_fecha \
			adt_stockpUP_AR \
			adt_stockpUP_NisUP \
			adt_stockpUP_UniNeg \
			adt_stockpUP_PrePaq
			
		if (retval_tmp == -801)
			cds insert dsc:stockpUP_pend_ctx lock
		else
			cds replace dsc:stockpUP_pend_ctx lock
		end if
		cds unlock dsc:stockpUP_pend_ctx
		cds endselect dsc:stockpUP_pend_ctx
		
		
		cds findnext dsc:stockpUP_ctx nolock
		lib:err_retval = cdsretval	
	end while
END SUB

/*******/
