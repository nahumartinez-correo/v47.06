/****o* Pendientes de agrupación/OFB:post:CDSservRest_load
* NOMBRE
*   OFB:post:CDSservRest_load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSservRest_load(selec)
	if (selec == 1 ) then
    	CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:adt_serv_context \
    		where post:adt_serv_tipo != "CB"
    else
    	CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:adt_serv_context \
    	where  post:adt_serv_serv == fld:post:adt_rest_clave1 && \
    		   post:adt_serv_tipo != "CB"
    end if
    CDS FINDFIRST DSC:adt_serv_context NOLOCK
    LET lib:err_retval = CDSRETVAL
    if (lib:err_retval == -801) then
       return (-2)
    end if
    if (selec == 1 ) then
    	CDS MULTIDISPLAY DSC:adt_serv_context LISTrestServ
    	let lib:err_retval = CDSRETVAL
    	/* Salio con Esc */
   		if (lib:err_retval == 0) then
    		call post:ABMrestClavesClear
    		call post:ABMrestClavesRefresh
    		CDS ENDSELECT DSC:adt_serv_context
    		return (-1)
    	end if
    end if
    if (lib:err_retval >= 0) then
    	CDS EXTRACT  dsc:adt_serv_context post:adt_serv_serv adt_serv_desc
    	move adt_serv_serv to adt_rest_clave1
    	move adt_serv_desc to adt_rest_desc1
    	CALL post:ABMrestClavesRefresh
    end if
    CDS ENDSELECT DSC:adt_serv_context
END SUB

/*******/
