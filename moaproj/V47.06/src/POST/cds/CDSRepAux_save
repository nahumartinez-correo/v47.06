/****o* Pendientes de agrupación/OFB:post:CDSRepAux_save
* NOMBRE
*   OFB:post:CDSRepAux_save
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSRepAux_save(item,imp,punit,desc)
	adt_raux_item = item

	cds select from dsc:RepAux_tbl becomes dsc:RepAux_ctx where \
	post:adt_raux_op == post:adt_raux_op && \
	post:adt_raux_flia == post:adt_raux_flia && \
	post:adt_raux_tx == post:adt_raux_tx && \
	post:adt_raux_item == post:adt_raux_item && \
	post:adt_raux_cod == post:adt_raux_cod && \
	post:adt_raux_subcod == post:adt_raux_subcod && \
	post:adt_raux_hasta == post:adt_raux_hasta

	cds findfirst dsc:RepAux_ctx lock
	select (cdsretval)
		case 0
		 	cds extract dsc:RepAux_ctx all
		 	post:adt_raux_ccons = post:adt_raux_ccons + post:adt_dump_cant
		 	post:adt_raux_icons = post:adt_raux_icons + imp
		 	post:adt_raux_cant[post:jnl_cli_tipo] = post:adt_raux_cant[post:jnl_cli_tipo] \
		 	+ post:adt_dump_cant
		 	post:adt_raux_imp[post:jnl_cli_tipo] = post:adt_raux_imp[post:jnl_cli_tipo] \
		 	+ imp
		 	//post:adt_dump_ImpNeto
		 	cds clearbuffer dsc:RepAux_ctx
		 	cds append dsc:RepAux_ctx post:adt_raux_ccons \
		 	post:adt_raux_icons \
		 	array post:adt_raux_cant \
		 	array post:adt_raux_imp

		 	/* Si no es un cliente corporativo, me interesa el precio unitario */
		 	if (post:jnl_cli_tipo != 1) then
		 		post:adt_raux_punit = punit
		 		cds append dsc:RepAux_ctx post:adt_raux_punit
		 	end if
		 	cds update dsc:RepAux_ctx lock
		 	break
		 case -801
		 	post:adt_raux_ccons = post:adt_dump_cant
		 	post:adt_raux_icons = imp
		 	post:adt_raux_cant[post:jnl_cli_tipo] = post:adt_dump_cant
		 	post:adt_raux_imp[post:jnl_cli_tipo] =  imp
			post:adt_raux_punit = punit
			post:adt_raux_desc = desc
			post:adt_raux_tarifa = 1
		 	cds clearbuffer dsc:RepAux_ctx
		 	call csr:proc_list(F_APPEND,DSC:post:RepAux_ctx,LST:post:LISTRepAux_fld,2)
		 	cds append dsc:RepAux_ctx \
		 	post:adt_raux_tarifa \
		 	array post:adt_raux_cant \
		 	array post:adt_raux_imp \
		 	fld:adt_raux_impre
		 	cds insert dsc:RepAux_ctx lock
		 	break
	end select
	cds unlock dsc:RepAux_ctx
	cds endselect dsc:RepAux_ctx
END SUB

/*******/
