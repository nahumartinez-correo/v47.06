/****o* Pendientes de agrupación/OFB:post:CDSjnl_crem_insert
* NOMBRE
*   OFB:post:CDSjnl_crem_insert
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSjnl_crem_insert(nro_pres)
local l_branch like tlr:jnl_branch
local l_operator like tlr:jnl_operator
local l_date like tlr:jnl_date
local l_time like tlr:jnl_time
local l_bus_date like tlr:jnl_bus_date
local l_sequence like tlr:jnl_sequence
local l_Serie like giros:Serie_fld
local l_digito like giros:digito_fld
local l_NroGiro like giros:NroGiro_fld
local l_jnl_status like tlr:jnl_status
local x like siaf:i
local l_track[10] like track_trace
	CDS SELECT FROM DSC:tlr:TABjnl BECOMES "jnl_ctx" WHERE \
		tlr:jnl_branch == common:sucursal_activa && \
		tlr:jnl_operator == op:op_operator_id && \
		tlr:jnl_date == common:system_date && \
		post:jnl_flia_tran == "CSM" && \
		post:PresNro == nro_pres && \
		(siaf:codigo_siaf == 70041 || \
		siaf:codigo_siaf == 95000)
		
	CDS FINDFIRST "jnl_ctx" NOLOCK
	IF (CDSRETVAL == 0) then
	    cds extract "jnl_ctx" \
        tlr:jnl_branch into l_branch \
		tlr:jnl_operator into l_operator \
		tlr:jnl_date into l_date \
		tlr:jnl_time into l_time \
		tlr:jnl_bus_date into l_bus_date \
		tlr:jnl_sequence into l_sequence \
        giros:Serie_fld into l_Serie \
        giros:digito_fld into l_digito \
        giros:NroGiro_fld into l_NroGiro
        l_jnl_status = 99
        
        x = 0 
        while (x < 10)
            cds extract "jnl_ctx" \
            fld:post:track[x] into l_track[x]
            x = x + 1
        end while
        cds endselect "jnl_ctx"
        
        CDS SELECT FROM "jnl_crem" BECOMES "jnl_crem_ctx" WHERE \
		tlr:jnl_branch == l_branch && \
		tlr:jnl_operator == l_operator && \
		tlr:jnl_date == l_date && \
		tlr:jnl_time == l_time && \
		tlr:jnl_bus_date == l_bus_date && \
		tlr:jnl_sequence == l_sequence
		CDS FINDFIRST "jnl_crem_ctx" LOCK
		
		IF (CDSRETVAL == -801) then
		    cds clearbuffer "jnl_crem_ctx"
		    cds append "jnl_crem_ctx" \
		    l_branch as tlr:jnl_branch \
		    l_operator as tlr:jnl_operator \
		    l_date as tlr:jnl_date \
		    l_time as tlr:jnl_time \
		    l_bus_date as tlr:jnl_bus_date \
		    l_sequence as tlr:jnl_sequence \
		    l_jnl_status as tlr:jnl_status \
            l_Serie as giros:Serie_fld \
            l_digito as giros:digito_fld \
            l_NroGiro as giros:NroGiro_fld \
            journal_flags
            
            x = 0 
            while (x < 10)
                cds append "jnl_crem_ctx" \
                l_track[x] as fld:post:track[x]
                x = x + 1
            end while
            
            cds insert "jnl_crem_ctx" LOCK
        END IF
        cds endselect "jnl_crem_ctx"
	END IF
	cds endselect "jnl_ctx"
END SUB

/*******/
