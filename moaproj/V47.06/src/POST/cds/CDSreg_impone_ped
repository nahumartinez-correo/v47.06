/****o* Pago en Destino/OFB:post:CDSreg_impone_ped
* NOMBRE
*   OFB:post:CDSreg_impone_ped
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
* 	post:PBbusca_pza_Ped
* DOCUMENTACION  
*   NI50479
* SOURCE
*/
#include "postcds.h"

SUB post:CDSreg_impone_ped
	LOCAL l_cantidad LIKE giros:Cantgm_cec
	LOCAL l_nombre LIKE common:csr_string
	LOCAL l_apellido LIKE common:csr_string
	LOCAL l_tdoc_emi LIKE post:TipoDocEmisPED
	LOCAL l_ndoc_emi LIKE post:CuitEmisPED
	LOCAL l_tdoc_dest LIKE post:CloTipDoc
	LOCAL l_ndoc_dest LIKE post:CloCuit
	LOCAL l_op_emi_ped  LIKE post:op_emi_ped
	LOCAL l_op_login_id LIKE op:op_login_id
	LOCAL l_msje LIKE common:csr_string
	
	//resguardo los valores originales
	LET l_tdoc_emi = post:TipoDocEmisPED
	LET l_ndoc_emi = post:CuitEmisPED
	LET l_tdoc_dest = post:CloTipDoc
	LET l_ndoc_dest = post:CloCuit
	
offset_0000:
	CDS ENDSELECT DSC:post:CONsesion_ped

	IF (busqueda_ped == "2") //(TESTFLAG(post:sesion_ped_flags,busca_por_tt_ped)) THEN	
		//BUSCA POR TRACK TRACE
		CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
			WHERE post:estado_ped == "I" && \
			post:track_trace == post:track_trace \
			SORT "SesApNom"		
	ELSE 
		IF (busqueda_ped == "3") 
			IF (post:TipoDocEmisPED.NUMCHARS > 0 && post:CuitEmisPED.NUMCHARS > 0 && post:CloTipDoc.NUMCHARS > 0 && post:CloCuit.NUMCHARS > 0) THEN
				//BUSCA POR TIPO Y NRO DOCUMENTO DE EMISOR Y DESTINATARIO
				IF (post:TipoDocEmisPED == 80 || post:TipoDocEmisPED == 86 || post:TipoDocEmisPED == 87) THEN
					CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
						WHERE post:estado_ped == "I" && \
						post:TipoDocEmisPED == post:TipoDocEmisPED && \
						post:CuitEmisPED == post:CuitEmisPED && \
						post:CloTipDoc == post:CloTipDoc && \
						post:CloCuit == post:CloCuit \
						SORT "SesApNom"			
				ELSE
					CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
						WHERE post:estado_ped == "I" && \
						post:TipoDocEmisPED == post:TipoDocEmisPED && \
						post:NroDocEmisPED == post:CuitEmisPED && \
						post:CloTipDoc == post:CloTipDoc && \
						post:CloCuit == post:CloCuit \
						SORT "SesApNom"		
				END IF			
			ELSE	
				IF (post:TipoDocEmisPED.NUMCHARS > 0 && post:CuitEmisPED.NUMCHARS > 0) THEN
					//BUSCA POR TIPO Y NRO DOCUMENTO DE EMISOR
					IF (post:TipoDocEmisPED == 80 || post:TipoDocEmisPED == 86 || post:TipoDocEmisPED == 87) THEN
						CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
							WHERE post:estado_ped == "I" && \
							post:TipoDocEmisPED == post:TipoDocEmisPED && \
							post:CuitEmisPED == post:CuitEmisPED \
							SORT "SesApNom"							
					ELSE
						CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
							WHERE post:estado_ped == "I" && \
							post:TipoDocEmisPED == post:TipoDocEmisPED && \
							post:NroDocEmisPED == post:CuitEmisPED \
							SORT "SesApNom"						
					END IF	
				ELSE
					//BUSCA POR TIPO Y NRO DOCUMENTO DE DESTINATARIO
					IF (post:CloTipDoc.NUMCHARS > 0 && post:CloCuit.NUMCHARS > 0)
						CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped \
							WHERE post:estado_ped == "I" && \
							post:CloTipDoc == post:CloTipDoc && \
							post:CloCuit == post:CloCuit \
							SORT "SesApNom"	
					END IF
				END IF
			END IF
		ELSE 
			//BUSCA TODOS LOS TRACK TRACE
			CDS SELECT FROM DSC:post:TABsesion_ped BECOMES DSC:post:CONsesion_ped WHERE \
			post:estado_ped == "I" SORT "SesApNom"		
		END IF
	END IF
	CDS MULTIDISPLAY DSC:post:CONsesion_ped post:LISTimpone_sel_ped
	
	IF (CDSRETVAL == 0x01FD) THEN
		GOTO offset_0000
	END IF

	LET lib:err_retval = CDSRETVAL
	IF (lib:err_retval == 0) THEN
		//recupero los valores originales
		LET post:TipoDocEmisPED = l_tdoc_emi
		LET post:CuitEmisPED = l_ndoc_emi
		LET post:CloTipDoc = l_tdoc_dest
		LET post:CloCuit = l_ndoc_dest
		
		REFRESH post:TipoDocEmisPED 
		REFRESH post:CuitEmisPED
		REFRESH post:CloTipDoc 
		REFRESH post:CloCuit 		
		
		CLEARFIELD post:track_trace
		REFRESH post:track_trace
		
		RETURN (-2)
	END IF

	CALL lib:MISCcds_find_err
	IF (RETVAL != 0) THEN
		//recupero los valores originales
		LET post:TipoDocEmisPED = l_tdoc_emi
		LET post:CuitEmisPED = l_ndoc_emi
		LET post:CloTipDoc = l_tdoc_dest
		LET post:CloCuit = l_ndoc_dest
		
		REFRESH post:TipoDocEmisPED 
		REFRESH post:CuitEmisPED
		REFRESH post:CloTipDoc 
		REFRESH post:CloCuit
		 		
		CLEARFIELD post:track_trace
		REFRESH post:track_trace
				
		RETURN (-1)
	END IF
	
	//Datos para identificar si el registro lo esta utilizando otro operador
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:post:op_emi_ped INTO l_op_emi_ped
		
	IF (l_op_emi_ped.NUMCHARS > 0 && (l_op_emi_ped != op:op_operator_id)) THEN
		//cgw:busco el tipo y nro.doc. del operador
		CDS SELECT FROM DSC:op:adt_op_table BECOMES "tabla_profiles" \
			WHERE (op:op_branch_id == op:op_branch_id && \
			op:op_operator_id == op:op_operator_id)
		CDS FINDFIRST "tabla_profiles" LOCK
		IF (CDSRETVAL == 0) THEN
			CDS EXTRACT "tabla_profiles" op:op_login_id INTO l_op_login_id
		END IF
		CDS UNLOCK "tabla_profiles"
		CDS ENDSELECT "tabla_profiles"		
		
		//recupero los valores originales
		LET post:TipoDocEmisPED = l_tdoc_emi
		LET post:CuitEmisPED = l_ndoc_emi
		LET post:CloTipDoc = l_tdoc_dest
		LET post:CloCuit = l_ndoc_dest
		
		REFRESH post:TipoDocEmisPED 
		REFRESH post:CuitEmisPED
		REFRESH post:CloTipDoc 
		REFRESH post:CloCuit 		
		
		FPRINT l_msje ,"Registro tomado por el operador %s\nNo podra realizar la imposicion del mismo.",l_op_login_id
		MSGBOX l_msje,0x00,"AVISO"
		
		RETURN (-2)	
	END IF	
		
	//Datos para identificar el registro en la tabla sesion_ped
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:post:nro_sesion_ped \
		FLD:post:nro_trx_ped \
		FLD:post:track_trace
	
	//Datos del servicio
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:post:adt_serv_serv \
		FLD:post:serv_desc_vap
		
	//Datos de los opcionales
	CDS EXTRACT DSC:post:CONsesion_ped \
		post:cant_opc \
		array cod_opc \
		array vec_opc2
		
	//Datos del Emisor
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:post:cli_tipoPED \
		FLD:post:cliente_numero_ped \
		FLD:post:CliRazonPED \
		FLD:post:TipoDocEmisPED \
		FLD:post:NroDocEmisPED \
		FLD:post:CuitEmisPED
	
	LET post:climed_numero_ped = post:cliente_numero_ped 
		
	//Datos del destinatario
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:post:CloRazon \
		FLD:post:CloApellido	\
		FLD:post:CloNombre	\
		FLD:post:CloTipDoc	\
		FLD:post:CloCuit
	
		//Datos del destinatario
	CDS EXTRACT DSC:post:CONsesion_ped \
		FLD:giros:SucSel2_fld \
		FLD:giros:CodSucBenef_fld
		
	CALL CSR:trimfield (post:CloRazon)
	CALL CSR:trimfield (post:CloApellido)
	CALL CSR:trimfield (post:CloNombre)
	
	//uso estos campos en post:PRESidentifica_cli
	LET post:TipoDocDestPED = post:CloTipDoc
	LET post:CloCuitDestPED = post:CloCuit
	
	IF (post:CloRazon.NUMCHARS == 0) THEN
		FPRINT post:CloRazon "%s %s", post:CloApellido, post:CloNombre
	END IF

	REFRESH post:adt_serv_serv
	REFRESH post:serv_desc_vap
	REFRESH post:CliRazonPED
	REFRESH post:CloRazon
	REFRESH post:track_trace

	CDS UNLOCK DSC:post:CONsesion_ped
	CDS ENDSELECT DSC:post:CONsesion_ped 
	
;	//recupero los valores originales
;	LET post:TipoDocEmisPED = l_tdoc_emi
;	LET post:CuitEmisPED = l_ndoc_emi
;	LET post:CloTipDoc = l_tdoc_dest
;	LET post:CloCuit = l_ndoc_dest

	REFRESH post:TipoDocEmisPED 
	REFRESH post:CuitEmisPED
	REFRESH post:CloTipDoc 
	REFRESH post:CloCuit 
	
	//genero la marca para reservar el registro
	CALL post:CDSupdMarca_ped("upd")
	
	ENABLECONTROL drv:PBcb4
	
END SUB

/*******/
