/****o* Pendientes de agrupación/OFB:post:CDScorsucctp_sel
* NOMBRE
*   OFB:post:CDScorsucctp_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScorsucctp_sel

offset_0000:
    MOVE adt_corsucctp_corte TO tmp_corsucctp_corte
    IF (adt_corsucctp_suc.NUMCHARS == 0 ) THEN
        CDS SELECT FROM DSC:adt_corsucctp_table BECOMES DSC:adt_corsucctp_ctx
    ELSE
        CDS SELECT FROM DSC:adt_corsucctp_table BECOMES DSC:adt_corsucctp_ctx \
            WHERE adt_corsucctp_suc == FLD:adt_corsucctp_suc
    ENDIF
    let siaf:last_key = LASTKEY

    CDS MULTIDISPLAY DSC:adt_corsucctp_ctx LISTadt_corsucctp
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF

    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        MOVE tmp_corsucctp_corte TO adt_corsucctp_corte
        CALL CDScorsucctp_ldcorte
        RETURN (-2)
    END IF

    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF

    CDS EXTRACT DSC:adt_corsucctp_ctx ALL
    CDS UNLOCK DSC:adt_corsucctp_ctx
	//mercedes - journalizacion ABM corte op. suc. / ctp
	call adt_to_bck39
	//fin mercedes
END SUB

/*******/
