/****o* Pendientes de agrupación/OFB:post:CDSselTipoSaca
* NOMBRE
*   OFB:post:CDSselTipoSaca
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSselTipoSaca
	/* Verifica que se haya elegido por lo menos un tipo de sacas */
	/* Jul. 1999 - B. Petrella */
	
	/* MFM - Agosto 2000 - Modificaciones: Se actualizan los nombres de los campos de 
	SacasTmp*/

LOCAL CantMarc like idx
LOCAL CodSacaTipo like post:adt_sacatipo_cod
	
	CantMarc = 0

    CDS SELECT FROM DSC:post:SacasTmp_table BECOMES DSC:post:SacasTmp_ctx WHERE \
	(op:op_operator_id == op:op_operator_id && \
	post:MarcaIncluye == ">>")
    CDS FINDFIRST DSC:post:SacasTmp_ctx LOCK
	lib:err_retval = CDSRETVAL
	if (lib:err_retval >= 0)
		CDS EXTRACT DSC:post:SacasTmp_ctx post:adt_novtt_saca_tipo
		CodSacaTipo = post:adt_novtt_saca_tipo
		CantMarc = 1
	end if
	DO
	    CDS FINDNEXT DSC:post:SacasTmp_ctx LOCK
		lib:err_retval = CDSRETVAL
		if (lib:err_retval < 0)
			BREAK
		end if
		CDS EXTRACT DSC:post:SacasTmp_ctx post:adt_novtt_saca_tipo

		IF (post:adt_novtt_saca_tipo != CodSacaTipo)
			Let CantMarc = CantMarc + 1
		END IF
	LOOP

	CDS UNLOCK DSC:post:SacasTmp_ctx
	CDS ENDSELECT DSC:post:SacasTmp_ctx

	RETURN (CantMarc)

END SUB

/*******/
