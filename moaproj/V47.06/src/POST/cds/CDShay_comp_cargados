/****o* Pendientes de agrupación/OFB:post:CDShay_comp_cargados
* NOMBRE
*   OFB:post:CDShay_comp_cargados
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDShay_comp_cargados(nivel_jer)

// Si retorna -1 significa que no se cargaron compromisos para ese codigo, item, subitem
// por lo cual hay que sacar los datos de las tablas del cdserver
	select (nivel_jer)
		case "1"	// CONCEPTO
			CDS SELECT FROM DSC:AuxComp_tbl BECOMES DSC:AuxComp_ctx where \
			FLD:aux_concepto_cod == fld:concepto_cod
			break
		case "2"	// ITEM
			CDS SELECT FROM DSC:AuxComp_tbl BECOMES DSC:AuxComp_ctx where \
			FLD:aux_concepto_cod == fld:concepto_cod && \
			FLD:aux_item_cod == fld:item_cod
			break
		case "3"	// SUBITEM
			CDS SELECT FROM DSC:AuxComp_tbl BECOMES DSC:AuxComp_ctx where \
			FLD:aux_concepto_cod == fld:concepto_cod && \
			FLD:aux_item_cod == fld:item_cod
			break
	end select
	cds findfirst DSC:AuxComp_ctx nolock
	// Si encontro registros extraigo de esta tabla para cargar la grilla.
	// Si no tengo, que extraer de las originales
	if (cdsretval < 0) then
		cds endselect DSC:AuxComp_ctx
		return -1
	end if
	
	// Encontro 1 registro. Armo la grilla

	comp_cant_tot = 0
	Tarif_idx = 0
	aux_signo = post:concepto_signo

	call csr:f_sadroppl dsc:aux_pic_medios
	call csr:f_sanewpl dsc:aux_pic_medios ,PIC:PICaux_comp

	WHILE (cdsretval == 0)
		CDS EXTRACT DSC:AuxComp_ctx ALL

		FPRINT common:csr_string "%-5s %-5s %-5s %-30s %13.13e %-2s",\
		aux_concepto_cod,aux_item_cod,aux_subitem_cod,aux_comp_desc,aux_comp_imp, \
		aux_signo

		CALL csr:f_saaddpl dsc:aux_pic_medios common:csr_string
		comp_cant_tot = comp_cant_tot + 1
        
		CDS FINDNEXT DSC:AuxComp_ctx NOLOCK
    END while    
    CDS ENDSELECT DSC:AuxComp_ctx    

end sub

/*******/
