/****o* Pendientes de agrupación/OFB:post:CDSChecksumSaca
* NOMBRE
*   OFB:post:CDSChecksumSaca
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postprt.h"

SUB post:CDSChecksumSaca
/*	LOCAL cant LIKE j_idx
	LOCAL pagina LIKE j_idx
	LOCAL CantContFin LIKE j_idx
	LOCAL CantPzasFin LIKE j_idx
	LOCAL CantPzasTot LIKE j_idx
	LOCAL CantContTot LIKE j_idx
	LOCAL sacat LIKE adt_sacatipo_cod
	LOCAL indice LIKE j_idx
	LOCAL gcorte LIKE adt_grucorte_cod
	LOCAL corteop LIKE jnl_corteop_cod
	LOCAL codsiaf LIKE siaf:jnl_codigo_siaf
	LOCAL Piezas LIKE j_idx
	LOCAL Conts LIKE j_idx
	LOCAL imp LIKE j_idx*/

//	Piezas = 0 /* Indica si hay que imprimir el total de Piezas */
//	Conts = 0 /* Indoca si hay que imprimir el total de Contendores */

//	LET CantContFin = 0 /* Acumula la cant. final de contadores */
//	LET CantPzasFin = 0 /* Acumula la cant. final de piezas */
//	LET j_idx = 0 /* Acumula la cant. parcial de cont. o pzas */
//	LET idx = 0
	
	
	/*MFM (6.12.2001) No es necesaria la condicion de reencaminamiento; pues esto se tiene
	en cuenta durante la grabación de la DetTmp. */
	/*CDS SELECT FROM DSC:post:DetTmp BECOMES DSC:post:DetTmp_ctx WHERE \
		(op:op_operator_id == op:op_operator_id && \
		jnl_simp_esp != "S") SORT DSC:post:SortSaca

	CDS FINDFIRST DSC:DetTmp_ctx LOCK
	lET lib:err_retval = CDSRETVAL
	IF (lib:err_retval < 0) THEN
		RETURN (-2)
	END IF

	CDS EXTRACT DSC:DetTmp_ctx ALL
	DO
		IF (MarcaBorrado == "*")
			CDS FINDNEXT DSC:DetTmp_ctx LOCK
			LET lib:err_retval = CDSRETVAL
			IF (lib:err_retval < 0) then
				RETURN (-2)
			END IF
			CDS EXTRACT DSC:DetTmp_ctx ALL
		ELSE
			BREAK
		END IF
	LOOP

	LET sacat = adt_sacatipo_cod
	LET gcorte = jnl_grucorte_cod
	LET corteop = jnl_corteop_cod
	LET codsiaf = siaf:jnl_codigo_siaf

	
	CALL CDSdescripGruCte
	


	DO
		IF (Pieza_id != "NO CONTROL") THEN
			CALL csr:trimfield(Pieza_id)
			//solicitud Cartas Rapidas
			IF (SUBSTR(post:Pieza_id,0,2) != "SR" && SUBSTR(post:Pieza_id,0,2) != "SU" && \
				SUBSTR(post:Pieza_id,0,2) != "GR" && SUBSTR(post:Pieza_id,0,2) != "GS") THEN
				if (siaf:jnl_codigo_siaf == "99030") THEN // Cierre de Contenedor 
							Conts = 1
				ELSE
					Piezas = 1
				END IF
				j_idx = j_idx + 1 // Acum. Parcial de contenedores o piezas 
			END IF		//FIN IF SOLICITUD DE CARTAS RAPIDAS
		END IF //FIN IF NO CONTROL 

		CDS FINDNEXT DSC:DetTmp_ctx LOCK
		LET lib:err_retval = CDSRETVAL
		IF (lib:err_retval >= 0) then
			CDS EXTRACT DSC:DetTmp_ctx ALL
			DO
				IF (MarcaBorrado == "*") THEN
					CDS FINDNEXT DSC:DetTmp_ctx LOCK
					LET lib:err_retval = CDSRETVAL
					IF (lib:err_retval < 0) THEN
						BREAK
					END IF
					CDS EXTRACT DSC:DetTmp_ctx ALL
				ELSE
					BREAK
				END IF
			LOOP
		END IF

		IF (Conts == 1) THEN
			IF (siaf:jnl_codigo_siaf != "99030" || lib:err_retval < 0) THEN
				CantContTot = CantContTot + j_idx //cantidad total de contenedores
				j_idx = 0
			END IF
		ELSE
			IF (Piezas == 1) THEN
				IF (siaf:jnl_codigo_siaf == "99030" || lib:err_retval < 0) THEN
					CantPzasTot = CantPzasTot + j_idx //Cantidad total de piezas
					j_idx = 0
				END IF
			END IF
		END IF

		IF (lib:err_retval < 0 || gcorte != jnl_grucorte_cod) THEN
			IF (lib:err_retval >= 0) THEN
				IF ((Conts == 1 && siaf:jnl_codigo_siaf == "99030") || \
					(Piezas == 1 && siaf:jnl_codigo_siaf != "99030")) THEN
					if (Conts == 1) THEN
						CantContTot = CantContTot + j_idx
						j_idx = 0
					ELSE
						CantPzasTot = CantPzasTot + j_idx
						j_idx = 0
					END IF
				END IF
			END IF
		
			IF (CantPzasTot > 0 || CantContTot > 0) THEN
				LET CantContFin = CantContFin + CantContTot
				LET CantContTot = 0
				LET CantPzasFin = CantPzasFin + CantPzasTot
				LET CantPzasTot = 0
			END IF
		
			IF (lib:err_retval >= 0 && gcorte != jnl_grucorte_cod) THEN
				
				CALL CDSdescripGruCte
	
				LET gcorte = jnl_grucorte_cod
				
			END IF
			
		END IF
		
		IF (lib:err_retval < 0) THEN
			BREAK
		END IF
		
		IF (siaf:jnl_codigo_siaf == "99030") THEN
			Conts = 1
			Piezas = 0
		ELSE
			//IF (siaf:jnl_codigo_siaf != "1")
				Conts = 0
				Piezas = 1
		END IF
		
	LOOP*/


	/*CSZ - sumo la cantidad de piezas enviadas No simp`le especial y simple especial*/
	//CantPzasFin = CantPzasFin + cant_simp_esp


	/* Rutina que calcula el CheckSum de todos los T&T que contiene el contenedor */
	/*MFM (6.12.2001)*/
	IF (hay_piezas_reenc != "S") THEN
		CALL CDScheckSum ("NoReenc") //("NoSimpEsp")
	ELSE
		CALL CDScheckSum ("Todas")
	END IF

	/* GPB (19.11.2009)Si es reimpresion genero checksum_piezas */
	IF (siaf:codigo_siaf == 99040 || siaf:codigo_siaf == 99046) THEN
		IF (post:reimpresion == "S") THEN
			/* Rutina que calcula el CheckSum Global de la guia de Saca */
			/*GPB (20.12.2009)*/
			IF (hay_piezas_reenc != "S") THEN
				CALL post:MISCCalcChkReimp ("NoReenc") 
			ELSE
				CALL post:MISCCalcChkReimp ("Todas")
			END IF
		END IF
	END IF

	

END SUB

/*******/
