/****o* Contra Reembolso/OFB:post:CDSmotFallosCR_load
* NOMBRE
*   OFB:post:CDSmotFallosCR_load
* DESCRIPCION
*   Valida existencia del motivo Fallos CREM y extrae sus datos.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   RETVAL (-2): No emcontro motivo.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:FVALmotivoFalloCR
*   post:FVALmotRFalloCR_auto
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSmotFallosCR_load
    LOCAL l_cli_tipo LIKE post:cli_tipo

    CDS SELECT FROM DSC:siaf:adt_motiv_table BECOMES DSC:siaf:adt_motiv_context \
        WHERE siaf:adt_mot_codigo == siaf:adt_mot_codigo && siaf:adt_mot_habilitado == "S"
    CDS FINDFIRST DSC:siaf:adt_motiv_context LOCK
    lib:err_retval = CDSRETVAL
    IF (lib:err_retval == -801) THEN
    	CDS ENDSELECT DSC:siaf:adt_motiv_context
        RETURN (-2)
    END IF
    CDS EXTRACT DSC:siaf:adt_motiv_context ALL
    CDS UNLOCK DSC:siaf:adt_motiv_context
    CDS ENDSELECT DSC:siaf:adt_motiv_context

    ;Veo si tiene restricciones
    CLEARFIELD l_cli_tipo    
	CALL post:MISCvalidaVentasRest("MOT", siaf:adt_mot_codigo, siaf:adt_mot_modulo, \
		siaf:adt_mot_submodulo, common:sucursal_activa, l_cli_tipo, "")
    IF (RETVAL < 0) THEN
        RETURN (-2)
    END IF

END SUB

/*******/
