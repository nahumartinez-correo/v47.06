/****o* Pago en Destino/OFB:post:CDSdevoluc_cont_ped
* NOMBRE
*   OFB:post:CDSdevoluc_cont_ped
* DESCRIPCION
*   Esta rutina recupera datos de la pieza de la tabla stockp y realiza diferentes validaciones
*   para saber si la pieza puede ser devuelta
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:FVALentrega_cont_ped
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postcds.h"

SUB post:CDSdevoluc_cont_ped

	CDS SELECT FROM DSC:STOCKP_TBL BECOMES DSC:STOCKP_CTX WHERE \
		post:adt_stockp_pieza == FLD:post:Pieza && \
		post:adt_stockp_Baja != "S" && \
		post:adt_stockp_devol_op == "" && \
		post:adt_stockp_devol_fec == 0 && \
		post:adt_stockp_destino == DSC:post:PED_desc && \
		post:stockp_NISorig_ped != common:sucursal_activa
				
	CDS FINDFIRST DSC:stockp_ctx NOLOCK
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval == -801) THEN
		CDS ENDSELECT DSC:stockp_ctx
		RETURN -2
	END IF

	LET drv:button = CB1
	CALL drv:but_status
	
  //Si el boton de AGREGAR esta deshabilitado....hago el EXTRACT
	IF (drv:disabled != 0) THEN
		CLEARFIELD post:id_pieza_ped
		CLEARFIELD post:NisDestino_ped

		CDS EXTRACT DSC:stockp_ctx \
			post:adt_stockp_pieza INTO Pieza \
			post:stockp_idPieza_ped INTO post:id_pieza_ped\
			post:stockp_NISdest_ped INTO post:NisDestino_ped
			
		REFRESH post:Pieza
		REFRESH post:id_pieza_ped
		REFRESH post:NisDestino_ped
	END IF
	CDS ENDSELECT DSC:stockp_ctx

END SUB

/*******/
