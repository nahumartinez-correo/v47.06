/****o* Expedición/OFB:post:CDScargaDetTmp_Reimp
* NOMBRE
*   OFB:post:CDScargaDetTmp_Reimp
* DESCRIPCION
*   Rutina que carga los datos de la DetTmp en la Reimpresion de Guia de Contenedor
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:tlr:tlr_fb4
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-351
* SOURCE
*/
#include "postcds.h"

SUB post:CDScargaDetTmp_Reimp
	/* Carga DetTmp con las piezas que no estan     */
	/* en ningun contenedor.-                       */
	/* Jul. 1999 - B. Petrella -                    */
LOCAL l_status LIKE tlr:jnl_status
LOCAL l_pza_recibida LIKE post:jnl_pieza_recibida
	col = 0

	/* Reimpresión Oct. 1999*/
	IF (post:reimpresion != "S")
		clearfield post:adt_codseq_nro
	ENDIF

	CALL CDSborroDetTmp

	clearfield tlr:jnl_sequence_corr
	LET orden = 1


	IF (siaf:codigo_siaf != "99110" && siaf:codigo_siaf != "99080")
		/* Cerrado de Contenedor */
		/* Selecciona los jnl. del propio operador, que pertenezcan a la        */
		/* al grupo de corte y apertura seleccionadas y que la guia este        */
		/* vacia y que la transaccion no este reversada.-                       */
		IF (reimpresion != "S")
			/*MFM (20.11.2001) Si la marca está activada mostrar solo las piezas
			 reencaminadas por error de correo, sino mostrar las otras*/
			IF (mostrar_reenc == "S") THEN
				CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
				(tlr:jnl_branch == op:op_branch_id && \
				tlr:jnl_operator == op:op_operator_id && \
				tlr:jnl_sequence_corr == tlr:jnl_sequence_corr && \
				post:jnl_corteop_guiacont == "S" && \
				post:jnl_guia_cont == post:adt_codseq_nro && \
				post:jnl_grucorte_cod == post:adt_grucorte_cod && \
				post:jnl_apertura_cod == post:adt_apertura_cod && \
				post:jnl_stockp_reenc_cul == "S" && \
				(post:jnl_marca_excep != "S" || \
				(post:jnl_marca_excep == "S" && post:jnl_excep_existe == "S")))
			ELSE
				CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
				(tlr:jnl_branch == op:op_branch_id && \
				tlr:jnl_operator == op:op_operator_id && \
				tlr:jnl_sequence_corr == tlr:jnl_sequence_corr && \
				post:jnl_corteop_guiacont == "S" && \
				post:jnl_guia_cont == post:adt_codseq_nro && \
				post:jnl_grucorte_cod == post:adt_grucorte_cod && \
				post:jnl_apertura_cod == post:adt_apertura_cod && \
				post:jnl_stockp_reenc_cul != "S" && \
				(post:jnl_marca_excep != "S" || \
				(post:jnl_marca_excep == "S" && post:jnl_excep_existe == "S")))
			END IF
		ELSE
			/* Se diferencia del anterior, porque no selecc. solo los del */
			/* operador loggoneado. Porque en la guia que se quiere reimprimir */
			/* puede contener piezas transferidas desde otro operador */
			/*MFM (20.11.2001) Si la marca está activada mostrar solo las piezas
			 reencaminadas por error de correo, sino mostrar las otras*/
			IF (mostrar_reenc == "S") THEN
				CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
				(tlr:jnl_branch == op:op_branch_id && \
				tlr:jnl_sequence_corr == tlr:jnl_sequence_corr && \
				post:jnl_corteop_guiacont == "S" && \
				post:jnl_guia_cont == post:adt_codseq_nro && \
				post:jnl_grucorte_cod == post:adt_grucorte_cod && \
				post:jnl_apertura_cod == post:adt_apertura_cod && \
				post:jnl_stockp_reenc_cul == "S" && \
				(post:jnl_marca_excep != "S" || \
				(post:jnl_marca_excep == "S" && post:jnl_excep_existe == "S")))
			ELSE
				CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
				(tlr:jnl_branch == op:op_branch_id && \
				tlr:jnl_sequence_corr == tlr:jnl_sequence_corr && \
				post:jnl_corteop_guiacont == "S" && \
				post:jnl_guia_cont == post:adt_codseq_nro && \
				post:jnl_grucorte_cod == post:adt_grucorte_cod && \
				post:jnl_apertura_cod == post:adt_apertura_cod && \
				post:jnl_stockp_reenc_cul != "S" && \
				(post:jnl_marca_excep != "S" || \
				(post:jnl_marca_excep == "S" && post:jnl_excep_existe == "S")))
			END IF
		END IF
	ELSE
		/* TRANSFERENCIA DE PIEZAS A OTRO CONTENEDOR*/
		CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
		(tlr:jnl_branch == op:op_branch_id && \
		tlr:jnl_operator == op:op_operator_id && \
		tlr:jnl_sequence_corr == tlr:jnl_sequence_corr && \
		post:jnl_corteop_guiacont == "S" && \
		post:jnl_guia_cont == post:adt_codseq_nro && \
		post:jnl_grucorte_cod == post:adt_grucorte_cod && \
		(post:jnl_marca_excep != "S" || \
		(post:jnl_marca_excep == "S" && post:jnl_excep_existe == "S")))

	END IF
	CDS FINDFIRST DSC:tlr:jnl_context LOCK

	LET MarcaBorrado = " "

	DO
		IF (CDSRETVAL != 0) THEN
	    		BREAK
		END IF

		//Extraigo el jnl_status ya que si es >= 100 no me sirve...
		//Lo tuve que poner en un if porque no entra en el select por ser demasiadas las condiciones...!!!!
		CDS EXTRACT DSC:tlr:jnl_context tlr:jnl_status into l_status
		IF (l_status < 100)
			//Extraigo el post:jnl_pieza_recibida para evitar que si una pieza ya fue recibida
	        //se pueda volver a enviar.
	        CDS EXTRACT DSC:tlr:jnl_context post:jnl_pieza_recibida into l_pza_recibida
	        IF (l_pza_recibida != "S") THEN
				col = col + 1
	
			/* Limpio campos de identificaciòn de Piezas */
			CLEARFIELD track_trace
			CLEARFIELD Pieza
			CLEARFIELD cod_ctrol
			CLEARFIELD Pieza_id
			CLEARFIELD jnl_simp_esp
			CLEARFIELD jnl_stockp_reenc
			CLEARFIELD jnl_stockp_reenc_cul
			CLEARFIELD jnl_marca_excep
			CLEARFIELD jnl_excep_existe
	
	
			/* Extraigo la clave del Journal - Jun.´98 */
			CDS EXTRACT DSC:tlr:jnl_context tlr:jnl_sequence \
		    		tlr:jnl_date tlr:jnl_branch tlr:jnl_operator \
				tlr:jnl_time tlr:jnl_bus_date
	
			CDS EXTRACT DSC:tlr:jnl_context \
			    siaf:jnl_codigo_siaf \
		    	post:jnl_corteop_saca post:jnl_corteop_despacho \
			    post:jnl_corteop_cod tlr:jnl_date
	
			/* Extraigo Identificaciòn */
			CDS EXTRACT DSC:tlr:jnl_context \
			    post:track_trace post:cod_ctrol post:Pieza
	
    	    /*CSZ - Extraigo el campo simple especial del journal para saber si emite
        	guia especial o no*/
			CDS EXTRACT DSC:tlr:jnl_context \
			    post:jnl_simp_esp
	
			/*MFM - Extraigo los campos de reencaminamiento y de error de reencaminamiento para
        	saber si se emite guia de reencaminamiento o no.
	        También extraigo los campos de excepción*/
			CDS EXTRACT DSC:tlr:jnl_context \
			    post:jnl_stockp_reenc post:jnl_stockp_reenc_cul \
		    	post:jnl_marca_excep post:jnl_excep_existe
					
			//50242 - se deben mostrar en el DetalleContenidoGC del cierre de contenedor
    				//IF (siaf:codigo_siaf == "99110" || siaf:codigo_siaf == "99080")
    				/* Son Necesarios para la transferencia */
    					CDS EXTRACT DSC:tlr:jnl_context \
    					post:jnl_grucorte_cod post:jnl_apertura_cod
    				//END IF
	
			IF (track_trace.numchars != 0 || Pieza.numchars != 0 || \
				cod_ctrol.numchars != 0) THEN
	
				IF (track_trace.numchars != 0) THEN
					Pieza_id = track_trace
				end if
				IF (Pieza.numchars != 0) THEN
					Pieza_id = Pieza
				end if
				IF (cod_ctrol.numchars != 0) THEN
					Pieza_id = cod_ctrol
				end if
				LET NroTranf = 0
				call CDSgrabaDetTmp
	
				LET orden = orden + 1
			END IF
		
		END IF
		ENDIF
		
		CDS FINDNEXT DSC:tlr:jnl_context LOCK
	    LOOP

    CDS UNLOCK DSC:tlr:jnl_context
    CDS ENDSELECT DSC:tlr:jnl_context

/* Toma piezas transferidas */

    /* Busca si algun operador le transfirio piezas */
    /* Si tiene transferencias las graba en DetTmp  */
    /* Y graba en TranCont con MarcaBorrado = 1,    */
    /* esto marca que esta siendo usado por el oper.*/
    /* destino. */
    /* Modif. Jul. ´98 - B. Petrella -              */
    call CDStransfDetTmp
    IF (col <= 0)
	return (-2)
    END IF
    LET orden = 1
END SUB

/*******/
