/****o* Pendientes de agrupación/OFB:post:CDSapertura_sel
* NOMBRE
*   OFB:post:CDSapertura_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSapertura_sel
	LOCAL adt_apertura_cod_tmp      LIKE post:adt_apertura_cod
	LOCAL adt_apertura_tmp          LIKE post:adt_apertura_desc
	offset_0000:
    	MOVE post:adt_apertura_cod      TO adt_apertura_cod_tmp
    	MOVE post:adt_apertura_desc     TO adt_apertura_tmp
    	CDS SELECT FROM DSC:adt_aper_tbl BECOMES DSC:adt_aper_ctx
    	CDS MULTIDISPLAY DSC:adt_aper_ctx LISTaper
    	drv:button = 28
    	CALL drv:but_disable
    	IF (CDSRETVAL == 0x01FD) THEN
        	GOTO offset_0000
	END IF
    	LET lib:err_retval = CDSRETVAL
    	IF (lib:err_retval == 0) THEN
        	MOVE adt_apertura_cod_tmp   TO post:adt_apertura_cod
        	MOVE adt_apertura_tmp       TO post:adt_apertura_desc
        	CALL CDSapertura_load
        	RETURN (-2)
    	END IF
    	LET lib:err_retval = CDSRETVAL
    	CALL lib:MISCcds_find_err
    	IF (RETVAL != 0) THEN
        	RETURN (-1)
    	END IF
    	CDS EXTRACT DSC:adt_aper_ctx ALL
    	CDS UNLOCK DSC:adt_aper_ctx
    	CALL csr:proc_list(F_COPY,lst:post:LISTapertura_flds,lst:post:LISTbck_apertura)
    	RETURN (0)
END SUB

/*******/
