/****o* Pendientes de agrupación/OFB:post:CDSbeneficios
* NOMBRE
*   OFB:post:CDSbeneficios
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSbeneficios(p_eleccion,p_estado)
LOCAL l_retval like lib:err_retval
LOCAL l_cdsretval like lib:err_retval
LOCAL l_cadena like common:csr_string
LOCAL l_rango  like common:csr_string 
LOCAL l_operativo like adt_benTmp_operativo
LOCAL l_beneficio like adt_benTmp_benef
LOCAL l_importe like adt_benTmp_importe
LOCAL l_nombre like adt_benef_nombre
    CDS ENDSELECT "Beneficios_ctx"
    l_retval = 0
    select (p_eleccion)
        case "E" //Existe ?
            CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
            adt_benef_pag_tipoD == adt_benTmp_pag_tipoD && \
    	    adt_benef_pag_NroD == adt_benTmp_pag_NroD && \
    	    adt_benef_operativo == adt_benTmp_operativo && \
    	    adt_benef_benef == adt_benTmp_benef
            
            CDS FINDFIRST "Beneficios_ctx" NOLOCK
            l_retval = CDSRETVAL
        case "A" //alta
        case "M" //Modificación   
            CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
    	    adt_benef_operativo == adt_benTmp_operativo && \
    	    adt_benef_benef == adt_benTmp_benef
            
            CDS FINDFIRST "Beneficios_ctx" LOCK
            l_cdsretval = CDSRETVAL
            
            adt_benef_operativo = adt_benTmp_operativo
    	    adt_benef_benef = adt_benTmp_benef
            adt_benef_estado  = p_estado
            adt_benef_fecha = common:system_date
            adt_benef_operator  = op:op_operator_id
            adt_benef_pag_tipoD = adt_benTmp_pag_tipoD
            adt_benef_pag_NroD = adt_benTmp_pag_NroD
            adt_benef_fecha_pag = adt_benTmp_fecha_pag
            adt_benef_importe = adt_benTmp_importe
            adt_benef_cli = adt_benTmp_cli
            adt_benef_cli_desc = adt_benTmp_cli_desc
            adt_benef_suc_cli = adt_benTmp_suc_cli
            adt_benef_cod_siaf = adt_benTmp_cod_siaf
            adt_benef_nombre = adt_benTmp_nombre
            adt_benef_desde = adt_benTmp_desde
            adt_benef_hasta = adt_benTmp_hasta
            call csr:trimfield (adt_benef_suc_cli)
            CDS CLEARBUFFER "Beneficios_ctx"

            CDS APPEND "Beneficios_ctx" \
            adt_benef_operativo \
            adt_benef_benef \
            adt_benef_estado \
            adt_benef_fecha \
            adt_benef_operator \
            adt_benef_pag_tipoD \
            adt_benef_pag_NroD \
            adt_benef_importe \
            adt_benTmp_cod_reimp as adt_benef_cod_reimp \
            adt_benef_fecha_pag \
            adt_benef_cli \
            adt_benef_cli_desc \
            adt_benef_suc_cli \
            adt_benef_cod_siaf \
            adt_benef_nombre \
            adt_benef_desde \
            adt_benef_hasta
            
            IF (l_cdsretval == -801) THEN
               CDS INSERT "Beneficios_ctx" LOCK
            ELSE
               CDS REPLACE "Beneficios_ctx" LOCK
            END IF
            IF (l_cdsretval != 0) THEN
                l_retval = -2
            END IF
            CDS UNLOCK "Beneficios_ctx"
            break
        case "B" //Beneficios
            if (adt_benTmp_operativo.numchars == 0) then
	            msgbox "No se encontraron beneficios para el operativo ingresado", OFB_OK ,"Aviso"
	            l_retval = -2
	            break
	        end if
            if (adt_benTmp_sucCliSel.numchars  && adt_benTmp_sucCliSel.NUMCHARS && \
            adt_benTmp_sucCliSel != "TODAS") then
            	CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
            	adt_benef_pag_tipoD == adt_benTmp_pag_tipoD && \
    	    	adt_benef_pag_NroD == adt_benTmp_pag_NroD && \
            	adt_benef_operativo == adt_benTmp_operativo && \
            	adt_benef_suc_cli == adt_benTmp_sucCliSel && \
    	    	adt_benef_estado == p_estado
    	    else
    	    	CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
            	adt_benef_pag_tipoD == adt_benTmp_pag_tipoD && \
    	    	adt_benef_pag_NroD == adt_benTmp_pag_NroD && \
            	adt_benef_operativo == adt_benTmp_operativo && \
    	    	adt_benef_estado == p_estado
    	    end if
    	    
    	    CDS FINDFIRST "Beneficios_ctx" NOLOCK
    	    l_retval = CDSRETVAL
            IF (l_retval == -801) THEN
                msgbox "No se encontraron beneficios para el operativo ingresado", OFB_OK ,"Aviso"
                CDS ENDSELECT "Beneficios_ctx"
                l_retval = -2
                break
            END IF
            fprint l_rango "0,20"
            call csr:f_sadroppl "BenefSel"
            call csr:f_sanewpl "BenefSel" pic:PICbeneficios
            WHILE (l_retval == 0)
                CDS EXTRACT "Beneficios_ctx" \
                adt_benef_benef into l_beneficio \
                adt_benef_nombre into l_nombre
                fprint l_cadena "%-20.20s %-40.40s",l_beneficio,l_nombre
                
                CDS ENDSELECT "BenefTmp_ctx"
                CDS SELECT FROM "BenefTmp" BECOMES "BenefTmp_ctx" WHERE  \
    	        adt_benTmp_PresNro == post:PresNro && \
    	        adt_benTmp_operativo == adt_benTmp_operativo && \
    	        adt_benTmp_benef == l_beneficio
    	        
    	        CDS FINDFIRST "BenefTmp_ctx" NOLOCK
                
                if (cdsretval == -801) then
                    call csr:f_saaddpl "BenefSel" l_cadena
                    call csr:PickOp 4  "BenefSel" l_rango 
                end if
                CDS ENDSELECT "BenefTmp_ctx"
                CDS FINDNEXT "Beneficios_ctx" NOLOCK
                l_retval = CDSRETVAL
            END WHILE
            
            cds endselect "Beneficios_ctx"
            init 71 1
            CALL drv:MISCf_sacombopl ("BenefSel", common:csr_string,drv:button)
            if (retval >= 0)
                l_beneficio = substr (common:csr_string,0,20)
                call  CSR:trimfield (l_beneficio,adt_benTmp_benef)
                CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
                adt_benef_operativo == adt_benTmp_operativo && \
                adt_benef_benef == adt_benTmp_benef
                CDS FINDFIRST "Beneficios_ctx" NOLOCK
                if (cdsretval == 0) then
                    cds extract "Beneficios_ctx" adt_benef_importe into adt_benTmp_importe \
                    adt_benef_cod_reimp into adt_benTmp_cod_reimp \
                    adt_benef_desde INTO adt_benTmp_desde \
                    adt_benef_hasta INTO adt_benTmp_hasta
                end if
                cds endselect "Beneficios_ctx"
                ;clearfield adt_benTmp_fecha_pag
                l_retval = 0
            else
                l_retval = -2
            end if
            init 71 0
            call csr:f_sadroppl "BenefSel"
            BREAK
        case "O" //Operativos
            CDS SELECT unique post:adt_benef_operativo FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
    	    adt_benef_pag_tipoD == adt_benTmp_pag_tipoD && \
    	    adt_benef_pag_NroD == adt_benTmp_pag_NroD && \
    	    adt_benef_estado == p_estado
            CDS FINDFIRST "Beneficios_ctx" NOLOCK
            l_retval = CDSRETVAL
            IF (l_retval == -801) THEN
                msgbox "No se encontraron operativos", OFB_OK ,"Aviso"
                CDS ENDSELECT "Beneficios_ctx"
                l_retval = -2
                break
            END IF
            fprint l_rango "0,20"
            call csr:f_sadroppl "BenefSel"
            call csr:f_sanewpl "BenefSel" pic:PICbeneficios
            WHILE (l_retval == 0)
                CDS EXTRACT "Beneficios_ctx" \
                adt_benef_operativo into l_operativo
                fprint l_cadena "%-20.20s",l_operativo
                call csr:f_saaddpl "BenefSel" l_cadena
                call csr:PickOp 4  "BenefSel" l_rango 
                CDS FINDNEXT "Beneficios_ctx" NOLOCK
                l_retval = CDSRETVAL
            END WHILE
            
            cds endselect dsc:clioca_ctx
            init 71 1
            CALL drv:MISCf_sacombopl ("BenefSel", common:csr_string,drv:button)
            if (retval >= 0)
                l_cadena = substr (common:csr_string,0,20)
                call CSR:trimfield(l_cadena,adt_benTmp_operativo)
                clearfield adt_benTmp_benef
                ;clearfield adt_benTmp_fecha_pag
                clearfield adt_benTmp_importe
                clearfield adt_benTmp_cod_reimp
                clearfield adt_benTmp_cli
                clearfield adt_benTmp_cli_desc
                clearfield adt_benTmp_suc_cli
                clearfield adt_benTmp_nombre
                l_retval = 0
            else
                l_retval = -2
            end if
            init 71 0
            call csr:f_sadroppl "BenefSel"
            BREAK
        case "S" //Baja
            CDS SELECT FROM "Beneficios" BECOMES "Beneficios_ctx" WHERE  \
    	    adt_benef_operativo == adt_benTmp_operativo && \
    	    adt_benef_benef == adt_benTmp_benef
            
            CDS FINDFIRST "Beneficios_ctx" LOCK
            l_cdsretval = CDSRETVAL
    	    IF (l_cdsretval == 0) THEN
               CDS DELETE "Beneficios_ctx"
            else
                l_retval = -2
            END IF
            clearfield adt_benTmp_benef
            ;clearfield adt_benTmp_fecha_pag
            clearfield adt_benTmp_importe
            clearfield adt_benTmp_cod_reimp
            clearfield adt_benTmp_cli
            clearfield adt_benTmp_cli_desc
            clearfield adt_benTmp_suc_cli
            clearfield adt_benTmp_nombre
    end select
    CDS ENDSELECT "Beneficios_ctx"
    return l_retval
END SUB

/*******/
