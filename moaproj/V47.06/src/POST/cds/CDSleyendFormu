/****o* Pendientes de agrupación/OFB:post:CDSleyendFormu
* NOMBRE
*   OFB:post:CDSleyendFormu
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSleyendFormu(codigo)

	/******************************************************************************/
	/*                                                                            */
	/* [PAW - 24/01/00]: Esta rutina se encarga de buscar la leyenda que debe     */
	/*                   imprimirse en el documento fiscal correspondiente.       */
	/*                                                                            */
	/* Entrada (codigo): Se refiere al código de documento fiscal.                */
	/*                                                                            */
	/* Salidas (retval): [ 0] - Búsqueda exitosa.                                 */
	/*                   [-1] - Búsqueda no exitosa.                              */
	/*                                                                            */
	/******************************************************************************/
	local espacios like post:cantidad

    CDS SELECT FROM DSC:adt_formu_table BECOMES DSC:adt_formu_context \
        WHERE adt_formu_cod == codigo
    CDS FINDFIRST DSC:adt_formu_context NOLOCK

    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
	  CDS ENDSELECT DSC:adt_formu_context
      RETURN (-1)
    END IF

    CDS EXTRACT DSC:adt_formu_context adt_formu_ley
	CDS ENDSELECT DSC:adt_formu_context
	call csr:trimfield(adt_formu_ley)
	if (adt_formu_ley.numchars == 0)
		return (-1)
	endif
	espacios = (40 - adt_formu_ley.numchars) / 2

	fprint common:csr_string "%*.*s%s\n", espacios, espacios, " ", adt_formu_ley
	return 0
END SUB

/*******/
