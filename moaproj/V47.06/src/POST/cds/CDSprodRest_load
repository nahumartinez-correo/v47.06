/****o* Pendientes de agrupación/OFB:post:CDSprodRest_load
* NOMBRE
*   OFB:post:CDSprodRest_load
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSprodRest_load(selec)
	if (selec == 1 ) then
    	CDS SELECT FROM DSC:adt_prodvs_table BECOMES DSC:adt_prodvs_context
    else
    	CDS SELECT FROM DSC:adt_prodvs_table BECOMES DSC:adt_prodvs_context \
    	where  adt_prodvs_cod == FLD:adt_rest_clave1
    end if
    CDS FINDFIRST DSC:adt_prodvs_context NOLOCK
    LET lib:err_retval = CDSRETVAL
    if (lib:err_retval == -801) then
       return (-2)
    end if
    if (selec == 1 ) then
    	CDS MULTIDISPLAY DSC:adt_prodvs_context LISTrestProd
    	let lib:err_retval = CDSRETVAL
    	/* Salio con Esc */
    	if (lib:err_retval == 0) then
    		call post:ABMrestClavesClear
    		call post:ABMrestClavesRefresh
    		CDS ENDSELECT dsc:adt_prodvs_context
    		return (-1)
    	end if
    end if
    if (lib:err_retval >= 0) then
    	CDS EXTRACT  dsc:adt_prodvs_context adt_prodvs_cod adt_prodvs_desc
    	move adt_prodvs_cod to adt_rest_clave1
    	move adt_prodvs_desc to adt_rest_desc1
    	call post:ABMrestClavesRefresh
    end if
    CDS ENDSELECT dsc:adt_prodvs_context
END SUB

/*******/
