/****o* Pendientes de agrupación/OFB:post:CDSbuscaOperDest
* NOMBRE
*   OFB:post:CDSbuscaOperDest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSbuscaOperDest
    /* Transferencia a otro Cont.: Operador */
    /* Req. 127 - Ene. 1999 - B. Petrella -    */

    /* Resguardo el op:op_login_id */
    swapdup op:op_login_id
    dupfield op:op_login_id
    swapdup op:op_operator_id
    dupfield op:op_operator_id
    IF (post:Operador_id == post:adt_op_login_id)
		RETURN (-2)
    END IF
	/*Se agrega marca de borrado logico - Gabriel Falciola*/
    CDS SELECT FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context WHERE \
    (op:op_branch_id == op:op_branch_id && \
	op:op_login_id == Operador_id && \
	op:op_tlr_auth == "X" && \
	op:op_borrado_logico != "S")

    CDS FINDFIRST DSC:op:adt_op_context LOCK
    IF (CDSRETVAL != 0) THEN
		CDS UNLOCK DSC:op:adt_op_context
		CDS ENDSELECT DSC:op:adt_op_context
		/* Recupero op:op_login_id */
    	dupfield op:op_login_id
		dupfield op:op_operator_id
		RETURN (-2)
    END IF
    
    /* MFM - Para poder actualizar el campo adt_novtt_op2*/
    CDS EXTRACT DSC:op:adt_op_context op:op_operator_id INTO post:CodOperador
    
    /*MFM - Setiembre 2000 - Para que se grabe la sucursal en la tabla TranCont*/
    Let Sucursal_id = op:op_branch_id

    CDS UNLOCK DSC:op:adt_op_context
    CDS ENDSELECT DSC:op:adt_op_context

    /* Recupero op:op_login_id */
    dupfield op:op_login_id
    dupfield op:op_operator_id

END SUB

/*******/
