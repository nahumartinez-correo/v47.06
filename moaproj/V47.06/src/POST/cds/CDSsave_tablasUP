/****o* Pendientes de agrupación/OFB:post:CDSsave_tablasUP
* NOMBRE
*   OFB:post:CDSsave_tablasUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSsave_tablasUP
	local retval_tmp like lib:err_retval

	CDS SELECT FROM dsc:stockpUP_tmp_tbl becomes dsc:stockpUP_tmp_ctx where \
		tmpUP_op == op:op_operator_id		
	CDS FINDFIRST dsc:stockpUP_tmp_ctx NOLOCK
	let lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval != -801)
		CDS EXTRACT	dsc:stockpUP_tmp_ctx ALL
	
		IF (tmpUP_tipo_piezaUP == "CONTROL CON AR" || tmpUP_tipo_piezaUP == "CONTROL SIN AR"  || tmpUP_tipo_piezaUP == "PIEZAS PREPAQ")
			adt_stockpUP_fecha = common:system_date
			adt_stockpUP_NisUP = NisUP
			adt_stockpUP_pieza = tmpUP_piezaUP
			adt_stockpUP_oper = tmpUP_op
			adt_stockpUP_apert = tmpUP_apertura
			adt_stockpUP_corte = tmpUP_corte_op
			adt_stockpUP_clasif = clasifica_tt_UP
			adt_stockpUP_baja = "N"
			adt_stockpUP_exp = "N"
			adt_stockpUP_excep = "N"
			adt_stockpUP_codClas = "R"
			adt_stockpUP_UniNeg = CliUP_UniNeg
			adt_stockpUP_PrePaq = tmpUP_PrePaq_cod
			
			if (tmpUP_tipo_piezaUP == "CONTROL CON AR")
				adt_stockpUP_AR = "S"
			else
				if (tmpUP_tipo_piezaUP == "CONTROL SIN AR" || tmpUP_tipo_piezaUP == "PIEZAS PREPAQ")
					adt_stockpUP_AR = "N"
				else
					adt_stockpUP_AR = " "
				end if
			end if
			
			CALL CDSsave_stockpUP
			IF (retval < 0)
				return -2
			END IF
		
		ELSE
			//Esta tabla se usa para generar el FAMOSO REPORTE
			fecha = common:system_date
			CALL CDSsaveStockpUP_simp(NisUP,tmpUP_tipo_piezaUP,post:tmpUP_cant_simples)
			IF (retval < 0)
				return -2
			END IF
		
		END IF
		
		
		CDS FINDNEXT dsc:stockpUP_tmp_ctx NOLOCK
		let lib:err_retval = CDSRETVAL
	END WHILE
	cds endselect dsc:stockpUP_tmp_ctx
END SUB

/*******/
