/****o* Pendientes de agrupación/OFB:post:CDSstockp_CDD_up_liq
* NOMBRE
*   OFB:post:CDSstockp_CDD_up_liq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSstockp_CDD_up_liq(p_pieza,p_imp,p_imp_ori,p_esBaja)
local l_imp_giro like giros:ImporteNeto
local l_com_giro like giros:Comision_fld
local l_lim_giro like giros:ImporteNeto
local x like siaf:i
local cant_giros like siaf:i
local giro_mas_sello like giros:ImporteNeto
    l_lim_giro = giros:imp_max_crem
    cds endselect "stockp_ctx"
    cds select from "stockp" becomes "stockp_ctx" \
    where post:adt_stockp_pieza == p_pieza
            
    cds findfirst "stockp_ctx" lock
    if (cdsretval == 0) then
        cds extract "stockp_ctx" all
        
        call post:MISCformula1_CREM(post:importe_crem,l_lim_giro,l_imp_giro,l_com_giro,giro_mas_sello)
        cant_giros = retval - 1
        x = 0
        while (x < 10)
            if (adt_stockp_nro[x].numchars == 0) then
        
                CDS CLEARBUFFER "stockp_ctx"
                
                adt_stockp_NIS_dest = giros:CodSucBenef_fld
                adt_stockp_original = p_imp_ori
                adt_stockp_crem_imp = p_imp
                
                adt_stockp_serie[x] = giros:Serie_fld
                adt_stockp_nro[x] = giros:NroGiro_fld
                adt_stockp_dig[x] = giros:digito_fld
                adt_stockp_fec[x] = common:system_date
                adt_stockp_PresNro[x] = post:PresNro
                adt_stockp_impGiro[x] = giros:ImporteNeto
                adt_stockp_TT_giros[x] = giros:TrackTrace_giros
                select (siaf:codigo_siaf)
                	case 70041
                		adt_stockp_conting = "C"
                		break
                	case 95000
                	    adt_stockp_conting = "V"
                	    break
                	case 95010
                		adt_stockp_conting = "L"
                	    break
                end select
                if (x == 0) then
                    CDS APPEND "stockp_ctx" \
                    adt_stockp_original
                end if
                
                CDS APPEND "stockp_ctx" \
                adt_stockp_NIS_dest \
                adt_stockp_crem_imp \
                adt_stockp_conting
                
                CDS APPEND "stockp_ctx" \
                adt_stockp_serie[x] \
                adt_stockp_nro[x] \
                adt_stockp_dig[x] \
                adt_stockp_fec[x] \
                adt_stockp_PresNro[x] \
                adt_stockp_impGiro[x] \
                adt_stockp_TT_giros[x]
                
                if (cant_giros == x) then
                    adt_stockp_Baja = "S"
                    p_esBaja = "S"
                    adt_stockp_devol_fec = common:system_date
                    adt_stockp_devol_hor = common:time_of_day
                    adt_stockp_devol_op = op:op_operator_id
                    CDS APPEND "stockp_ctx" \
                    adt_stockp_Baja \
                    adt_stockp_devol_fec \
                    adt_stockp_devol_hor \
                    adt_stockp_devol_op 
                end if
                
                CDS UPDATE "stockp_ctx" LOCK
                break
            else
                if (adt_stockp_serie[x] == giros:Serie_fld && adt_stockp_nro[x] == giros:NroGiro_fld && \
                adt_stockp_dig[x] == giros:digito_fld) then
                    if (cant_giros == x) then
                        p_esBaja = "S"
                    end if
                    break
                end if
            end if
            x = x + 1    
        end while
        CDS UNLOCK "stockp_ctx"
        cds endselect "stockp_ctx"
        return 
    end if
    CDS UNLOCK "stockp_ctx"
    cds endselect "stockp_ctx"
    cds endselect "StockpCDD_ctx"
    cds select from "StockpCDD"  becomes "StockpCDD_ctx" \
    where adt_CDD_pieza  == p_pieza
        
    cds findfirst "StockpCDD_ctx" lock
    if (cdsretval == 0) then
        cds extract "StockpCDD_ctx" all
        
        call post:MISCformula1_CREM(post:importe_crem,l_lim_giro,l_imp_giro,l_com_giro,giro_mas_sello)
        cant_giros = retval - 1
        x = 0
        while (x < 10)
            if (adt_CDD_nro[x].numchars == 0) then
        
                CDS CLEARBUFFER "StockpCDD_ctx"
                
                adt_CDD_NIS_dest = giros:CodSucBenef_fld
                adt_CDD_original = p_imp_ori
                adt_CDD_crem_imp = p_imp
                
                adt_CDD_serie[x] = giros:Serie_fld
                adt_CDD_nro[x] = giros:NroGiro_fld
                adt_CDD_dig[x] = giros:digito_fld
                adt_CDD_fec[x] = common:system_date
                adt_CDD_PresNro[x] = post:PresNro
                adt_CDD_impGiro[x] = giros:ImporteNeto
                adt_CDD_TT_giros[x] = giros:TrackTrace_giros
                select (siaf:codigo_siaf)
                	case 70041
                		adt_CDD_contingencia = "C"
                		break
                	case 95000
                	    adt_CDD_contingencia = "V"
                	    break
                	case 95010
                		adt_CDD_contingencia = "L"
                	    break
                end select
                if (x == 0) then
                    CDS APPEND "StockpCDD_ctx" \
                    adt_CDD_original
                end if
                
                CDS APPEND "StockpCDD_ctx" \
                adt_CDD_NIS_dest \
                adt_CDD_crem_imp \
                adt_CDD_contingencia
                
                CDS APPEND "StockpCDD_ctx" \
                adt_CDD_serie[x] \
                adt_CDD_nro[x] \
                adt_CDD_dig[x] \
                adt_CDD_fec[x] \
                adt_CDD_PresNro[x] \
                adt_CDD_impGiro[x] \
                adt_CDD_TT_giros[x]
                
                if (cant_giros == x) then
                    adt_CDD_Baja = "S"
                    post:adt_CDD_devol_fec = common:system_date
		            post:adt_CDD_devol_op  = op:op_operator_id 
		            post:adt_CDD_devol_hor = common:time_of_day
                    p_esBaja = "S"
                    CDS APPEND "StockpCDD_ctx" \
                    post:adt_CDD_devol_fec \
	                post:adt_CDD_devol_op \
	                post:adt_CDD_devol_hor \
                    adt_CDD_Baja
                end if
                
                CDS UPDATE "StockpCDD_ctx" LOCK
                break
            else
                if (adt_CDD_serie[x] == giros:Serie_fld && adt_CDD_nro[x] == giros:NroGiro_fld && \
                    adt_CDD_dig[x] == giros:digito_fld) then
                    if (cant_giros == x) then
                        p_esBaja = "S"
                    end if
                    break
                end if
            end if
            x = x + 1    
        end while
        CDS UNLOCK "StockpCDD_ctx"
        cds endselect "StockpCDD_ctx"
        return 
    else
        CDS UNLOCK "StockpCDD_ctx"
        cds endselect "StockpCDD_ctx"
        return -2
    end if 

END SUB
/*******/


