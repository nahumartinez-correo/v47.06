/****o* Pago en Destino/OFB:post:CDSClientUpdatePED
* NOMBRE
*   post:CDSClientUpdatePED
* DESCRIPCION
*   Actualiza los datos del Cliente con el que se inicio la sesion
*		Para Cliente Medio actualiza la tabla CliMed
*		Para Cliente Minorista actualiza la tabla CliOca
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:SVAL30010
* DOCUMENTACION
*  	NI50479
* SOURCE
*/
#include "postcds.h"

SUB post:CDSClientUpdatePED
	LOCAL l_retval LIKE lib:err_retval
	
	IF (post:cli_tipo == CLIMED) THEN
		post:tablaCli = DSC:post:TABCliMed
		post:contextoCli = DSC:post:CONCliMed
	ELSE
		post:tablaCli = DSC:post:clioca_tbl
		post:contextoCli = DSC:post:clioca_ctx
	END IF

	CDS SELECT FROM FLD:post:tablaCli BECOMES FLD:post:contextoCli \
		WHERE post:CliMed_tipo == post:climed_tipo && \
		post:CliMed_numero == post:climed_numero

	CDS FINDFIRST FLD:post:contextoCli LOCK
	
	IF (CDSRETVAL != 0) THEN
		CDS ENDSELECT FLD:post:contextoCli
		RETURN -2
	END IF
	
	CDS CLEARBUFFER FLD:post:contextoCli

	IF (post:cli_tipo == CLIMED) THEN
		CDS APPEND FLD:post:contextoCli \
			post:es_juridica \
			post:NInscRegEmisPED AS giros:NInscRegEmisGm_fld \
			post:OcupacionEmisPED AS giros:OcupacionEmisGm_fld \
			post:OtrosOcupEmisPED AS giros:OtrosOcupEmisGm_fld \
			post:CodPaisResidEmisPED AS giros:CodPaisResidEmisGm  
	ELSE
		CDS APPEND FLD:post:contextoCli \
			post:es_juridica AS post:CloPersonaJuridica\
			post:NInscRegEmisPED AS post:CloRegistral \
			post:OcupacionEmisPED AS post:CloOcupacion \
			post:OtrosOcupEmisPED AS post:CloOtraOcupacion  
	END IF

	CDS UPDATE FLD:post:contextoCli LOCK
	CDS UNLOCK FLD:post:contextoCli
	CDS ENDSELECT FLD:post:contextoCli

END SUB 

/*******/
