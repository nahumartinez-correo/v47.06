/****o* Pendientes de agrupación/OFB:post:CDSconcb_subesp_sel
* NOMBRE
*   OFB:post:CDSconcb_subesp_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSconcb_subesp_sel

offset_0000:
    tes:tmp_espv_cod = post:adt_concb_producto
    tes:tmp_espv_subcod = adt_concb_subcod_esp
    
    IF (post:adt_concb_producto.numchars == 0) THEN
    	CDS SELECT FROM DSC:tes:Especie_tbl BECOMES DSC:tes:Especie_ctx
    	CALL CSR:proc_list(170,LST:tes:ABMespecie_flds)
    ELSE
    	CDS SELECT FROM DSC:tes:Especie_tbl BECOMES DSC:tes:Especie_ctx \
    	WHERE (tes:adt_espv_cod == post:adt_concb_producto)    	
    	CALL CSR:proc_list(170,LST:tes:ABMespecie_flds)
    END IF
        
    CDS MULTIDISPLAY DSC:tes:Especie_ctx tes:LISTadt_Especie
    IF (CDSRETVAL == 0x01FD) THEN
        GOTO offset_0000
    END IF
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
        post:adt_concb_producto = tes:tmp_espv_cod
        post:adt_concb_subcod_esp = tes:tmp_espv_subcod 
        CALL post:CDSconcb_subesp_load
        IF (RETVAL < 0) THEN
            RETURN (-2)
        ELSE
        	RETURN (0)
        END IF
    END IF
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    
    IF (RETVAL != 0) THEN
    	CLEARFIELD adt_concb_subcod_esp    	
    	REFRESH adt_concb_subcod_esp
        RETURN (-1)
    END IF
    
    CDS EXTRACT DSC:tes:Especie_ctx ALL
    post:adt_concb_subcod_esp = tes:adt_espv_subcod
    REFRESH post:adt_concb_subcod_esp
    CDS UNLOCK DSC:tes:Especie_ctx
END SUB

/*******/
