/****o* Pendientes de agrupación/OFB:post:CDSAct_Excepciones
* NOMBRE
*   OFB:post:CDSAct_Excepciones
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSAct_Excepciones

  	/*MFM - Primero busco por la clave */
	CDS SELECT FROM DSC:excep_tbl BECOMES DSC:excep_ctx \
	WHERE post:adt_excep_id == id_excepcion && \
	post:adt_excep_fecha == fecha_excepcion && \
	post:adt_excep_hora == hora_excepcion
	
	CDS FINDFIRST DSC:excep_ctx LOCK
	
	IF (CDSRETVAL == -801) THEN
		/*Si no lo encuentra es porque se trata de una saca robada en sucursal,
		tengo que eliminar todas las piezas contenidas en la saca que se 
		informaron como excepción*/
		CDS SELECT FROM DSC:excep_tbl BECOMES DSC:excep_ctx \
		WHERE post:adt_excep_saca == post:adt_codseq_nro && \
		post:adt_excep_fecha == fecha_excepcion && \
		post:adt_excep_hora == hora_excepcion
		CDS FINDFIRST DSC:excep_ctx LOCK
	END IF
		
	DO
		IF (CDSRETVAL == 0) THEN
			CDS DELETE DSC:excep_ctx
		ELSE
			CDS UNLOCK DSC:excep_ctx
			CDS ENDSELECT DSC:excep_ctx
			BREAK
		END IF
		CDS FINDNEXT DSC:excep_ctx LOCK
		
	LOOP
		
END SUB

/*******/
