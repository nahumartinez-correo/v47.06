/****o* Pendientes de agrupación/OFB:post:CDScodTrackTT
* NOMBRE
*   OFB:post:CDScodTrackTT
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScodTrackTT(pEleccion)
local l_retval like lib:err_retval
local varl_picstr like common:csr_string
local l_codtrackTx_codTx like adt_codtrackTx_codTx
local l_codtrackTx_codTT like adt_codtrackTx_codTT
    select (pEleccion)
    case "DC" //Desplegar cargados
        CALL csr:f_sadroppl "cargados"
        call csr:f_sanewpl "cargados", PIC:post:PICbeneficios
        CDS SELECT FROM "CodTrackTx" BECOMES "CodTrackTx_ctx"
        cds findfirst "CodTrackTx_ctx" nolock
        
        do
            if (cdsretval < 0) then
                break
            end if
            cds extract "CodTrackTx_ctx" adt_codtrackTx_codTx into l_codtrackTx_codTx, adt_codtrackTx_codTT into l_codtrackTx_codTT
            fprint varl_picstr, "%-5.5s  %-2.2s" l_codtrackTx_codTx, l_codtrackTx_codTT
            call csr:f_saaddpl "cargados" varl_picstr
            cds findnext "CodTrackTx_ctx" nolock
        loop
        
        cds endselect "CodTrackTx_ctx"
        
	    call drv:MISCf_sacombopl ("cargados",varl_picstr,drv:button)
        
	    l_retval = retval
        
	    IF (l_retval >= 0) THEN
	        adt_codtrackTx_codTx = substr (common:csr_string,0,5)
	        adt_codtrackTx_codTT = substr (common:csr_string,7,2)
	    END IF
	    CALL CSR:proc_list(F_REFRESH,LST:LISTCodTrackTx_flds)
	    CALL csr:f_sadroppl "cargados"
        return l_retval
    break
    case "GG" //Grabar grupo
        CDS SELECT FROM "CodTrackTx" BECOMES "CodTrackTx_ctx" WHERE \
        adt_codtrackTx_codTx == adt_codtrackTx_codTx && \
        adt_codtrackTx_codTT == adt_codtrackTx_codTT
        cds findfirst "CodTrackTx_ctx" lock
        
        l_retval = CDSRETVAL
        CDS CLEARBUFFER "CodTrackTx_ctx"

        CDS APPEND "CodTrackTx_ctx" \
           FLD:adt_codtrackTx_codTx \
           FLD:adt_codtrackTx_codTT
        
        IF (l_retval == -801) THEN
          CDS INSERT "CodTrackTx_ctx" LOCK
          l_retval = CDSRETVAL
        END IF
        
        CDS UNLOCK "CodTrackTx_ctx"
        CDS ENDSELECT "CodTrackTx_ctx"

        return l_retval
    break
    case "BG" //Borrar grupo
        CDS SELECT FROM "CodTrackTx" BECOMES "CodTrackTx_ctx" WHERE \
        adt_codtrackTx_codTx == adt_codtrackTx_codTx && \
        adt_codtrackTx_codTT == adt_codtrackTx_codTT
        
        cds findfirst "CodTrackTx_ctx" lock
        l_retval = CDSRETVAL
        
        IF (l_retval == 0) THEN
          CDS DELETE "CodTrackTx_ctx"
          l_retval = CDSRETVAL
        END IF
        CDS UNLOCK "CodTrackTx_ctx"
        CDS ENDSELECT "CodTrackTx_ctx"
        return l_retval
    break
    case "VT" //Valido transacciones
        CDS SELECT FROM "transac" BECOMES "transac_ctx" where \
        siaf:adt_tran_codigo == adt_codtrackTx_codTx
        cds findfirst "transac_ctx" nolock
        if (cdsretval == 0) then
            cds endselect "transac_ctx"
            return 0
        end if
        cds endselect "transac_ctx"
        return -2
    break
    case "VTT" //Valido transacciones
        CDS SELECT FROM "CodTrack" BECOMES "CodTrack_ctx" where \
        adt_codtrack_cod == adt_codtrackTx_codTT
        cds findfirst "CodTrack_ctx" nolock
        if (cdsretval == 0) then
            cds endselect "CodTrack_ctx"
            return 0
        end if
        cds endselect "CodTrack_ctx"
        return -2
    break
    case "GI" //GRUPO INGRESADO
        CDS SELECT FROM "CodTrackTx" BECOMES "CodTrackTx_ctx" where \
        adt_codtrackTx_codTx == adt_codtrackTx_codTx && \
        adt_codtrackTx_codTT == adt_codtrackTx_codTT
        cds findfirst "CodTrackTx_ctx" nolock
        if (cdsretval == 0) then
            cds endselect "CodTrackTx_ctx"
            return 0
        end if
        cds endselect "CodTrackTx_ctx"
        return -2
    break
    
    case "DT" //Desplegar transacciones
        CALL csr:f_sadroppl "transacciones"
        call csr:f_sanewpl "transacciones", PIC:post:PICbeneficios
        CDS SELECT FROM "transac" BECOMES "transac_ctx"
        cds findfirst "transac_ctx" nolock
        
        do
            if (cdsretval < 0) then
                break
            end if
            cds extract "transac_ctx" siaf:adt_tran_codigo,siaf:adt_tran_desc
            fprint varl_picstr, "%-5.5s   %-20.20s" siaf:adt_tran_codigo, siaf:adt_tran_desc
            call csr:f_saaddpl "transacciones" varl_picstr
            cds findnext "transac_ctx" nolock
        loop
        
        cds endselect "trnsac_ctx"
        
	    call drv:MISCf_sacombopl ("transacciones",varl_picstr,drv:button)
        
	    l_retval = retval
        
	    IF (l_retval >= 0) THEN
	        adt_codtrackTx_codTx = substr (common:csr_string,0,5)
	    END IF
	    CALL csr:f_sadroppl "transacciones"
        return l_retval
        break
    case "DTT" //Desplegar track & trace
        CALL csr:f_sadroppl "prefijos"
        call csr:f_sanewpl "prefijos", PIC:post:PICbeneficios
        CDS SELECT FROM "CodTrack" BECOMES "CodTrack_ctx"
        cds findfirst "CodTrack_ctx" nolock
        
        do
            if (cdsretval < 0) then
                break
            end if
            cds extract "CodTrack_ctx" adt_codtrack_cod
            fprint varl_picstr, "%-2.2s" adt_codtrack_cod
            call csr:f_saaddpl "prefijos" varl_picstr
            cds findnext "CodTrack_ctx" nolock
        loop
        
        cds endselect "CodTrack_ctx"
        
	    call drv:MISCf_sacombopl ("prefijos",varl_picstr,drv:button)
        
	    l_retval = retval
        
	    IF (l_retval >= 0) THEN
	        adt_codtrackTx_codTT = substr (common:csr_string,0,2)
	    END IF
	    CALL csr:f_sadroppl "prefijos"
        return l_retval
        break
    end select
    


/*
    CDS SELECT FROM DSC:adt_acreperc_tbl BECOMES DSC:adt_acreperc_ctx \
    	WHERE	adt_acreperc_cativa == FLD:adt_acreperc_cativa && \
    			post:adt_acreperc_aliciva == FLD:adt_acreperc_aliciva
    CDS FINDFIRST DSC:adt_acreperc_ctx LOCK
    LET lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF
    CDS DELETE DSC:adt_acreperc_ctx
    CDS UNLOCK DSC:adt_acreperc_ctx
    */
END SUB

/*******/
