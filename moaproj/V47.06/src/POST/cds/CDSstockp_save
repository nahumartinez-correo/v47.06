/****o* Recepción de Piezas/OFB:post:CDSstockp_save
* NOMBRE
*   OFB:post:CDSstockp_save
* DESCRIPCION
*   Pasa los registros de la tabla temporal stockp_temp (usada durante la carga de las piezas)
*   a la tabla definitiva stockp
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:SENDasigna_destino
*   OFB:post:SENDRecep_Piezas
* DOCUMENTACION
*   CD LaboralCC01.doc: http://livelink.intranet.siemens-itron.com.ar/livelink/livelink.exe?func=doc.ViewDoc&nodeId=569016&
*   CD LaboralCC03.doc: http://livelink.intranet.siemens-itron.com.ar/livelink/livelink.exe?func=doc.ViewDoc&nodeId=569219&
*   SC50190.doc:http://livelink.intranet.siemens-itron.com.ar/livelink/livelink.exe?func=doc.ViewDoc&nodeId=639223&
*		NI 50569-RPP
* SOURCE
*/
#include "postcds.h"

SUB post:CDSstockp_save

	/*Primero selecciono los registros de la tabla temporal que pertenecen al op logueado*/
	CDS SELECT FROM DSC:stockp_temp_tbl BECOMES DSC:stockp_temp_ctx \
		WHERE (post:stockp_operador == op:op_operator_id && \
		post:stockp_fecha == common:system_date)

	CDS FINDFIRST DSC:stockp_temp_ctx LOCK
	IF (CDSRETVAL == -801) THEN
		MSGBOX "NO HAY PIEZAS PARA REGISTRAR",0x00,"ATENCION"
		CDS UNLOCK DSC:stockp_temp_ctx
		CDS ENDSELECT DSC:stockp_temp_ctx
		RETURN -2
	END IF

  DO
		CALL csr:proc_list(F_CLEAR,LST:post:LISTstockp_CM_elifld)
		CLEARFIELD post:AsignaDestino
		CLEARFIELD post:stockp_ecom_tn
		CLEARFIELD post:stockp_ecom_pclave
		CLEARFIELD post:stockp_ecom_shipID
		CLEARFIELD post:stockp_ecom_entrega
        
    CDS EXTRACT DSC:stockp_temp_ctx ALL
    
		adt_stockp_pieza = stockp_pieza
		adt_stockp_plazoguar = stockp_plazoguarda
		adt_stockp_es_grancl = stockp_es_grancl
		adt_stockp_recepfech = post:stockp_fecha
		adt_stockp_recephora = common:time_of_day
		adt_stockp_recepop = post:stockp_operador
		adt_stockp_vtofecha = stockp_vtofecha
		adt_stockp_entrega_f = ""
		adt_stockp_entrega_h = ""
		adt_stockp_entrega_o = ""
		adt_stockp_devol_fec = ""
		adt_stockp_devol_hor = ""
		adt_stockp_devol_op = ""
		adt_stockp_destino = stockp_destino
		adt_stockp_abon_apar = stockp_abonado
		adt_stockp_dest_nom = stockp_destin_nom
		adt_stockp_vd_imp = stockp_vd_imp
		adt_stockp_crem_imp = stockp_crem_imp
		adt_stockp_dest_ant = stockp_dest_ant
		adt_stockp_solo_entr = stockp_solo_entrega
		
		/*Calculo el nro de orden*/
		CALL FVALstockp_crem_imp
		/*************************/
		
		adt_stockp_crem_impc = ""
		adt_stockp_ctaOM = stockp_ctaOM
		adt_stockp_tipo_doc = stockp_tipo_doc
		adt_stockp_doc = stockp_doc

		adt_stockp_Orden = stockp_Orden
		adt_stockp_franq_inc = stockp_franq_inc
		adt_stockp_en_devol = stockp_en_devol
		adt_stockp_dias_alm = stockp_dias_alm
        
		IF (post:adt_stockp_destino == "CORRESP.INTERNA") THEN
			adt_stockp_Baja = "S" //porque se genera un P de entrega!
		ELSE
			adt_stockp_Baja = "N"
		END IF
        
    adt_stockp_tyt_reenc = ""
    adt_stockp_Oficio = stockp_Oficio
    adt_stockp_Observ = stockp_Observ
    adt_stockp_ult_mod_f = adt_stockp_recepfech
    adt_stockp_ult_mod_h = adt_stockp_recephora
    adt_stockp_ult_mod_o = adt_stockp_recepop
    adt_stockp_recep_nom = ""
    adt_stockp_reenc = "N"
    adt_stockp_reenc_cul = ""
    adt_stockp_pie_obs = "N"
    adt_stockp_est_ent = ""
    adt_stockp_coment = ""
    adt_stockp_excepcion = "N"
    adt_stockp_existe = ""
    adt_stockp_rend_cent = stockp_rend_cent
    adt_stockp_rct = stockp_rct
    adt_stockp_laboral = stockp_laboral
    //SC 50190 - Reportes Gestion de Stock
    es_CDD = "N"
    adt_stockp_rev = "N"
    adt_stockp_conting = "N"

		stockp_modlist = "N"
		
		//Indica que la pieza ped fue recibida
		stockp_ped_estAct = "RECI"
		
		adt_stockp_lugarGuar = lugar_guarda_pieza
		adt_stockp_ordGuarda = ord_guarda_pieza
		//NI50569 - RPP
		adt_stockp_rpp_corp = stockp_rpp_corp
		adt_stockp_rpp_reg = "N"
		adt_stockp_PAS = stockp_PAS
		
		CLEARFIELD adt_stockp_original
		CALL csr:cleararray(adt_stockp_serie)
		CALL csr:cleararray(adt_stockp_nro)
		CALL csr:cleararray(adt_stockp_dig)
		CALL csr:cleararray(adt_stockp_fec) 
		CALL csr:cleararray(adt_stockp_PresNro)
		CALL csr:cleararray(adt_stockp_impGiro)
   
    /*Inserto el reg en la tabla stockp*/
    CDS SELECT FROM DSC:stockp_tbl BECOMES DSC:stockp_ctx \
   	 WHERE (adt_stockp_pieza == stockp_pieza)
   	 
    CDS FINDFIRST DSC:stockp_ctx LOCK
    LET lib:err_retval = CDSRETVAL
    CDS CLEARBUFFER DSC:stockp_ctx
	    
		CDS APPEND DSC:stockp_ctx adt_stockp_pieza \
			adt_stockp_es_grancl \
			adt_stockp_plazoguar
                
		CDS APPEND DSC:stockp_ctx adt_stockp_recepfech \
			adt_stockp_recephora \
			adt_stockp_recepop \
			adt_stockp_vtofecha \
			adt_stockp_entrega_f \
			adt_stockp_entrega_h
        
		CDS APPEND DSC:stockp_ctx adt_stockp_entrega_o \
			adt_stockp_devol_fec \
			adt_stockp_devol_hor \
			adt_stockp_devol_op \
			adt_stockp_destino
        
		CDS APPEND DSC:stockp_ctx adt_stockp_abon_apar \
			adt_stockp_dest_nom \
			adt_stockp_vd_imp \
			adt_stockp_crem_imp \
			adt_stockp_crem_impc \
			adt_stockp_ctaOM \
			adt_stockp_tipo_doc \
			adt_stockp_doc
		
		CDS APPEND DSC:stockp_ctx \
			adt_stockp_Orden \
			adt_stockp_franq_inc \
			adt_stockp_en_devol \
			adt_stockp_dias_alm \
			adt_stockp_Baja \
			adt_stockp_conting
        
		CDS APPEND DSC:stockp_ctx adt_stockp_tyt_reenc \
			adt_stockp_Oficio \
			adt_stockp_Observ \
			adt_stockp_ult_mod_f \
			adt_stockp_ult_mod_h \
			adt_stockp_ult_mod_o \
			adt_stockp_recep_nom \
			adt_stockp_reenc \
			adt_stockp_reenc_cul \
			adt_stockp_pie_obs \
			adt_stockp_est_ent \
			adt_stockp_coment
        
		CDS APPEND DSC:stockp_ctx adt_stockp_excepcion \
			adt_stockp_existe \
			adt_stockp_fecha_obs \
			adt_stockp_hora_obs \
			adt_stockp_dest_ant \
			adt_stockp_solo_entr \
			adt_stockp_rend_cent \
			adt_stockp_rct \
			post:AsignaDestino \
			post:adt_stockp_laboral \
			es_CDD \
			adt_stockp_original \
			adt_stockp_rev
		
		IF (post:adt_stockp_crem_imp > 0) THEN
			idx = 0
			WHILE (idx < 10)
				CDS APPEND DSC:stockp_ctx \
					adt_stockp_serie[idx] \
					adt_stockp_nro[idx] \
					adt_stockp_dig[idx] \
					adt_stockp_fec[idx] \
					adt_stockp_PresNro[idx] \
					adt_stockp_impGiro[idx]
				idx = idx + 1
			END WHILE	
     END IF
        
	  //SC 50361
	  //Se agregan los nuevos campos CCT-CREM - Cliente Mayorista
	  CDS APPEND DSC:stockp_ctx \
	  	FLD:post:id_cupon_CCT \
			FLD:post:adt_cct_nis_liq \
			FLD:post:adt_cct_comitente \
			FLD:post:adt_cct_cod_serv \
			FLD:post:adt_cct_def_cupon \
			FLD:post:adt_cct_cta_sap \
			FLD:post:adt_cct_rend_fis \
			FLD:post:cod_barra_CREM \
			FLD:post:adt_climay_razon
		
		//NI 50437 agrego servicio
		CDS APPEND DSC:stockp_ctx \
			FLD:post:serv_stockp \
			FLD:post:stockp_modlist
		
		CDS APPEND DSC:stockp_ctx \
			adt_stockp_lugarGuar \
			adt_stockp_ordGuarda
		
		IF (stockp_destino == DSC:post:PED_desc) THEN
			CDS APPEND DSC:stockp_ctx \
				FLD:post:stockp_estado_ped \
				FLD:post:stockp_idPieza_ped \
				FLD:stockp_NISorig_ped \
				FLD:stockp_NISdest_ped	\
				FLD:stockp_impCobro_ped \
				FLD:stockp_ped_estAct \
				FLD:stockp_cli_nro_ped \
				FLD:stockp_letraCompPed \
				FLD:stockp_nroCompPed
		END IF
		
		//gpb: PS10898 - Busqueda por T&T o TN (Ecommerce)
		IF (stockp_destino == DSC:post:ECOM_desc) THEN
			CDS APPEND DSC:stockp_ctx \
			post:stockp_ecom_tn AS FLD:post:adt_stockp_ecom_tn 
		END IF
		
		//Se agrega Palabra Clave para los destinos ECOMMERCE CERRADAS CON AVISO Y ENTREGA EN SUCURSAL
		/*IF (stockp_destino == DSC:post:ECOM_desc || stockp_destino == "CERRADAS CON AVISO" || \
			stockp_destino == "ENTREGA EN SUCURSAL") THEN*/
		IF (stockp_destino == DSC:post:ECOM_desc) THEN
			CDS APPEND DSC:stockp_ctx \
			post:stockp_ecom_clave AS FLD:post:adt_stockp_ecom_clav \
			post:stockp_ecom_pclave AS FLD:post:adt_stockp_ecom_pal \
			post:stockp_ecom_shipID AS FLD:post:adt_stockp_ecom_ship  \
			post:stockp_ecom_entrega AS FLD:post:adt_stockp_ecom_ent
			//Se graba el codigo de respuesta del mensaje de T&T
			CDS APPEND DSC:stockp_ctx post:tyt_pc_code
		ELSE
			post:adt_stockp_ecom_clav = "N"
			CLEARFIELD adt_stockp_ecom_pal
			CLEARFIELD adt_stockp_ecom_ship
			CLEARFIELD adt_stockp_ecom_ent

		CDS APPEND DSC:stockp_ctx \
			post:adt_stockp_ecom_clav \
			post:adt_stockp_ecom_pal \
			post:adt_stockp_ecom_ship  \
			post:adt_stockp_ecom_ent
		END IF				
		
		//NI50569
		CDS APPEND DSC:stockp_ctx \
			post:adt_stockp_rpp_corp  \
			post:adt_stockp_rpp_reg
					
	CDS APPEND DSC:stockp_ctx \
			adt_stockp_PAS
			
		IF (lib:err_retval == -801) THEN
			CDS INSERT DSC:stockp_ctx LOCK
		ELSE
			CDS REPLACE DSC:stockp_ctx LOCK
		END IF
        
    /*Agrego el numero de Orden en la temporal para que se journalice*/
    CDS CLEARBUFFER DSC:stockp_temp_ctx
    CDS APPEND DSC:stockp_temp_ctx stockp_Orden
    CDS UPDATE DSC:stockp_temp_ctx LOCK
        
    /* Termino seleccion de tabla stockp original*/
    CDS UNLOCK DSC:stockp_ctx
    CDS ENDSELECT DSC:stockp_ctx
        
		//ACTUALIZO EL REGISTRO DE LA STOCKP_RECEP CORRESPONDIENTE A DICHA PIEZA
		CALL CDSstockp_recep_upd
		
		/*Busco el siguiente reg de la tabla temporal*/
		CDS FINDNEXT DSC:stockp_temp_ctx LOCK
		IF (CDSRETVAL == -801) THEN
			/* Termino seleccion de tabla temporal*/
			CDS UNLOCK DSC:stockp_temp_ctx
			CDS ENDSELECT DSC:stockp_temp_ctx
			BREAK
		END IF
	LOOP
    
END SUB

/*******/
