/****o* Pendientes de agrupación/OFB:post:CDSUpdate_AuxImppNC
* NOMBRE
*   OFB:post:CDSUpdate_AuxImppNC
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSUpdate_AuxImppNC(Provincia,ImpDesc,Importe,Presupuesto)
	/*Acumula en la tabla AuxImpp los Impuestos de Sellados para Nota de Crédito - Gabriel Faciola*/
    local loc_err_retval like lib:err_retval
    local Presu_aux like post:PresNro

    /*Resguardo en nro de presupuesto actual*/
    Presu_aux = PresNro
    PresNro = Presupuesto

    Cds SELECT FROM Dsc:AuxImpp_tbl BECOMES DSC:AuxImpp_ctx \
            WHERE (Fld:post:adt_auximpp_op == op:op_operator_id ) && \
            	  (post:PresNro == fld:PresNro) && \
                  (post:adt_auximpp_prov == Provincia)
    Cds FINDFIRST DSC:AuxImpp_ctx LOCK
    Let lib:err_retval = cdsretval
    let loc_err_retval = lib:err_retval
    select (lib:err_retval) then
    case 0
        Cds EXTRACT DSC:AuxImpp_ctx all
        Cds CLEARBUFFER DSC:AuxImpp_ctx
        break
    case -801
        clearfield adt_auximpp_importe
	adt_auximpp_op = op:op_operator_id
	adt_auximpp_prov = Provincia
	adt_auximpp_impdesc = ImpDesc
	//cgw:busca la descripcion del impuesto sellado para la provincia.
	IF (post:adt_auximpp_impdesc.numchars == 0)
	    call post:CDSbusca_desc_sellos(Provincia,Presu_aux)
	END IF
	let adt_pcia_cod = Provincia
	call post:CDSprovincias_load
	if (retval < 0) then
	    errmsg lst:common:errmsg_list, "Error en Tabla Provincias "
	    PresNro = Presu_aux
	    return (-1)
	end if
	giros:adt_impp_pdesc = adt_pcia_desc
	adt_auximpp_desc = adt_pcia_desc
	Cds CLEARBUFFER DSC:AuxImpp_ctx
	Cds APPEND DSC:AuxImpp_ctx  \
	    adt_auximpp_op \
	    PresNro \
	    adt_auximpp_prov \
	    adt_auximpp_desc \
	    adt_auximpp_impdesc
        break
    case else
        errmsg lst:common:errmsg_list, "No se Puede Totalizar el Impuesto"
        PresNro = Presu_aux
        return (-1)
        break
    End Select
    adt_auximpp_importe = adt_auximpp_importe + Importe
    Cds APPEND DSC:AuxImpp_ctx  \
	adt_auximpp_importe
    If (loc_err_retval == -801) THEN
    	// Se crea el registro uno Nuevo
	Cds INSERT dsc:AuxImpp_ctx LOCK
    Else
    	// Modifico porque ya Existe
	Cds UPDATE DSC:post:AuxImpp_ctx LOCK
    End If
    cds unlock dsc:AuxImpp_ctx
    cds endselect dsc:AuxImpp_ctx
    PresNro = Presu_aux
END SUB

/*******/
