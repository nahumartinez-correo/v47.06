/****o* Pendientes de agrupación/OFB:post:CDSchk_pagos_masivos
* NOMBRE
*   OFB:giros:CDSchk_giros_masivos
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postCDS.h"


SUB post:CDSchk_pagos_masivos
local window_node like common:window_node

	CDS SELECT FROM "jnl_caidas_pm" BECOMES "jnl_caidas_pm_ctx" \
	WHERE op:op_operator_id == op:op_operator_id && \
	tlr:jnl_status > HOST_REJECTED	&& \
	tlr:jnl_status < RECH_REV_AUTO

  	CDS FINDFIRST "jnl_caidas_pm_ctx" LOCK

	if  (CDSRETVAL == 0 )
		CDS EXTRACT "jnl_caidas_pm_ctx"  ALL
		operativo = adt_benTmp_operativo
        beneficio = adt_benTmp_benef
        setflag tlr:controla_firma,cancelacion
		clearfield siaf:tran_retval
		window_node = common:window_node
    	common:window_node = op:op_node_id
    	importe_benef = adt_benTmp_importe
        siaf:importe = importe_benef
        call post:OFBconsulta_simon(giros:codigo_procesamiento)
    	common:window_node = window_node
        clearfield siaf:importe
		if (tlr:jnl_status > HOST_REJECTED )
			clearfield siaf:tran_retval
			CDS ENDSELECT "jnl_caidas_pm_ctx"
			return TRAN_CAIDA_VUELO
		end if

		CDS CLEARBUFFER "jnl_caidas_pm_ctx"
		CDS APPEND "jnl_caidas_pm_ctx" \
			hcomm:tran_status as tlr:jnl_status \
			giros:CodRespuesta_comm
			
		CDS UPDATE "jnl_caidas_pm_ctx" LOCK

	end if

	CDS UNLOCK "jnl_caidas_pm_ctx"
	CDS ENDSELECT "jnl_caidas_pm_ctx"

	clearfield lib:stat_message
	refresh lib:stat_message

END SUB

/*******/

