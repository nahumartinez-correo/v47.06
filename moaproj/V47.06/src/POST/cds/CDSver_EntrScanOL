/****o* Contra Reembolso/OFB:post:CDSver_EntrScanOL
* NOMBRE
*   OFB:post:CDSver_EntrScanOL
* DESCRIPCION
*   Chequea que en el presupuesto a reversar si existe una entrega de piezas con una pieza liquidada no lo permita
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCverifReversar
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDSver_EntrScanOL
	local LRetval like lib:err_retval
	cds select from dsc:TABPresuDeta becomes dsc:CONPresuDeta \
	where post:PresNro == post:PresNro && \
			siaf:codigo_siaf == 99020
	cds findfirst dsc:CONPresuDeta nolock
	lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval == 0)
		CDS EXTRACT dsc:CONPresuDeta post:Pieza
		CDS SELECT FROM "stockp" BECOMES "stockp_ctx" WHERE \
			post:adt_stockp_pieza == post:Pieza
		CDS FINDFIRST "stockp_ctx" NOLOCK
		IF (CDSRETVAL == 0)
			CALL post:MISCverif_scanOL("E")
			IF (RETVAL == 0)
				//pieza informada
				MSGBOX "Existe al menos una Pieza Informada en la Sesión. No se podrá Anular el Documento",0x00,"ERROR"
				LRetval = -2
				BREAK
			END IF
		END IF
		CDS FINDNEXT dsc:CONPresuDeta nolock
		lib:err_retval = CDSRETVAL
	END WHILE
	CDS ENDSELECT dsc:CONPresuDeta
	return (LRetval)
END SUB
