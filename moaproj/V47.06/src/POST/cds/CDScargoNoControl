/****o* Pendientes de agrupación/OFB:post:CDScargoNoControl
* NOMBRE
*   OFB:post:CDScargoNoControl
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postcds.h"

SUB post:CDScargoNoControl
/* CARGO NO CONTROL - may. 2000 - B.E. Petrella */

	/* MFM - Agosto 2000 - Modificaciones*/
	
	CLEARFIELD post:adt_corteop_ctrl
	IF (post:reimpresion != "S")  /* No Reimpresión */
			
		/*MFM - adt_relMod_corteop se cambia por adt_novtt_corte*/
		LET post:jnl_corteop_cod = post:adt_novtt_corte
		
		CALL CDScorteCtrl
		CLEARFIELD post:jnl_corteop_cod
		IF (adt_corteop_ctrl == "N" && adt_novtt_simp_esp == "" && \
		    adt_corteop_guiacont == "N" && adt_corteop_saca == "S")
			
			/* Fuerzo la grabación de un registro en DetTmp para	*/
			/* detectar desde la impresión el corte que No es de 	*/
			/* Control - Cargo campos claves de esta tabla - 	*/
			
			//LET post:jnl_grucorte_cod = post:adt_relMod_grucorte
			//LET post:jnl_apertura_cod = post:adt_relMod_apertura
			LET post:jnl_grucorte_cod = post:adt_novtt_grupo
			LET post:jnl_apertura_cod = post:adt_novtt_apertura
		
			LET post:jnl_corteop_guiacont = adt_corteop_guiacont
			LET post:jnl_corteop_despacho = adt_corteop_despacho

			LET post:TipoContenido = "A"
			LET post:Pieza_id = "NO CONTROL"
			LET post:track_trace = "NO CONTROL"

			LET siaf:jnl_codigo_siaf = "1"

			LET tlr:jnl_sequence = 1
			LET tlr:jnl_date = common:system_date
			CLEARFIELD fld:tlr:jnl_branch
			CLEARFIELD fld:tlr:jnl_operator
	  		CLEARFIELD fld:tlr:jnl_time
	  		CLEARFIELD fld:tlr:jnl_bus_date
			CLEARFIELD fld:post:cod_ctrol
			CLEARFIELD fld:post:Pieza
			CLEARFIELD MarcaBorrado
		
			let idx = idx + 1

			CALL CDSgrabaDetSaca
			RETURN (0)
		ELSE
			IF (adt_corteop_ctrl == "N" && post:adt_novtt_simp_esp == "")
				RETURN (0)
			ELSE
				RETURN (-2)
			END IF
		END IF
	ELSE
		/* Busco en RelMod todos los Cortes que incluye el tipo de saca */
		CDS SELECT FROM DSC:post:adt_relMod_table BECOMES DSC:post:adt_relMod_ctx WHERE \
		    (post:adt_relMod_modelos == common:br_modelo && \
	 	     post:adt_relMod_sacatipo == post:adt_novtt_saca_tipo)

		CDS FINDFIRST DSC:post:adt_relMod_ctx LOCK
		
		DO
			IF (CDSRETVAL < 0)
				BREAK
			      return (-2)
			END IF

			CDS EXTRACT DSC:post:adt_relMod_ctx \
						post:adt_relMod_corteop

			/* Reesguardo journal corte operativo */
			swapdup post:jnl_corteop_cod

			/* Busco en CorteOp si el corte es de control o no */

			LET post:jnl_corteop_cod = post:adt_relMod_corteop
			CALL CDScorteCtrl
			
			CLEARFIELD post:jnl_corteop_cod
			/* Recupero journal corte operativo */
			swapdup post:jnl_corteop_cod

			/* Grabo en DetTmp si es de control */
			IF (adt_corteop_ctrl == "N" && adt_corteop_guiacont == "N" && \
		    		adt_corteop_saca == "S")
				/* Fuerzo la grabación de un registro en DetTmp para	*/
				/* detectar desde la impresión el corte que No es de 	*/
				/* Control - Cargo campos claves de esta tabla - 	*/
				//LET post:jnl_grucorte_cod = post:adt_relMod_grucorte
				//LET post:jnl_apertura_cod = post:adt_relMod_apertura
				LET post:jnl_grucorte_cod = post:adt_novtt_grupo
				LET post:jnl_apertura_cod = post:adt_novtt_apertura
				LET post:TipoContenido = "A"
				LET post:Pieza_id = "NO CONTROL"
				LET post:track_trace = "NO CONTROL"

				LET siaf:jnl_codigo_siaf = "1"

				LET tlr:jnl_sequence = 1
				LET tlr:jnl_date = common:system_date
				CLEARFIELD fld:tlr:jnl_branch
				CLEARFIELD fld:tlr:jnl_operator
	  			CLEARFIELD fld:tlr:jnl_time
	  			CLEARFIELD fld:tlr:jnl_bus_date
				CLEARFIELD fld:post:cod_ctrol
				CLEARFIELD fld:post:Pieza
				CLEARFIELD MarcaBorrado
		
				let idx = idx + 1

				CALL CDSgrabaDetSaca
			END IF
    			CDS FINDNEXT DSC:adt_relMod_ctx LOCK
		LOOP
		CDS UNLOCK DSC:post:adt_relMod_ctx
		CDS ENDSELECT DSC:post:adt_relMod_ctx
	END IF
END SUB

/*******/
