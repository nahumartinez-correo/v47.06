/****o* Pendientes de agrupación/OFB:post:OFBupd_jnl_cheques
* NOMBRE
*   OFB:post:OFBupd_jnl_cheques
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postOFB.h"

SUB post:OFBupd_jnl_cheques(opcion)

    	LOCAL jnl_branch_tmp     LIKE tlr:jnl_branch
    	LOCAL jnl_operator_tmp   LIKE tlr:jnl_operator
    	LOCAL jnl_date_tmp       LIKE tlr:jnl_date
    	LOCAL jnl_time_tmp       LIKE tlr:jnl_time
    	LOCAL jnl_bus_date_tmp   LIKE tlr:jnl_bus_date
    	LOCAL jnl_sequence_tmp   LIKE tlr:jnl_sequence
    	LOCAL jnl_status_tmp     LIKE tlr:jnl_status
    	LOCAL jnl_status_tmp1    LIKE tlr:jnl_status
    	LOCAL varl_deadtime_ago  LIKE tlr:jnl_time 
    	LOCAL varl_deadtime      LIKE tlr:jnl_time 
	LOCAL loc_retval         LIKE lib:err_retval
    
    	SELECT (opcion)
    
        	CASE "RT_BATCH"
			let varl_deadtime = FREE_LOCKED_REG_TIME
			call csr:f_time_subtract(common:system_date,common:time_of_day, \
			common:system_date,varl_deadtime,varl_deadtime_ago)
	
            		CDS SELECT FROM DSC:jnl_cheques BECOMES DSC:jnl_cheques_ctx WHERE \
			tlr:jnl_branch == FLD:common:sucursal_activa && \
			(tlr:jnl_status == 99 || \
			(tlr:jnl_status == 98 && siaf:adt_jnlc_locktime < varl_deadtime_ago ))  
	
            		CDS FINDFIRST DSC:jnl_cheques_ctx LOCK 
            		BREAK
    
        	CASE "OPERADOR"
            		CDS SELECT FROM DSC:jnl_cheques BECOMES DSC:jnl_cheques_ctx WHERE  \
                	tlr:jnl_branch   == FLD:op:op_branch_id && \
                	tlr:jnl_operator == FLD:op:op_operator_id && \
                	tlr:jnl_status == 98 
	
            		CDS FINDFIRST DSC:jnl_cheques_ctx LOCK         
            		BREAK
   	 
    	END SELECT

    	lib:err_retval = CDSRETVAL

	if ( lib:err_retval != 0 )

		fprint siaf:nota_1,"Busqueda registros en tabla cheques para liberar"
		call batch:OFBlog_batch(siaf:nota_1,lib:err_retval,"N","S","INFO","N")

		fprint siaf:nota_1,"Segun estado correspondiente : 99 (RTbatch) o 98 (Aplicacion)"
		call batch:OFBlog_batch(siaf:nota_1,lib:err_retval,"S","S","INFO","N")
		
	end if

    	WHILE (lib:err_retval == 0)

        	CDS EXTRACT DSC:jnl_cheques_ctx \
            	FLD:tlr:jnl_branch   INTO FLD:jnl_branch_tmp \
            	FLD:tlr:jnl_operator INTO FLD:jnl_operator_tmp \
            	FLD:tlr:jnl_date     INTO FLD:jnl_date_tmp \
            	FLD:tlr:jnl_time     INTO FLD:jnl_time_tmp \
            	FLD:tlr:jnl_bus_date INTO FLD:jnl_bus_date_tmp \
            	FLD:tlr:jnl_sequence INTO FLD:jnl_sequence_tmp \
            	FLD:tlr:jnl_status   INTO FLD:jnl_status_tmp


		fprint siaf:nota_1,"\n"
		call batch:MISCgeneraLog(siaf:nota_1,"INFO","N")

		fprint siaf:nota_1,"Busqueda registros en tabla cheques para liberar"
		call batch:OFBlog_batch(siaf:nota_1,lib:err_retval,"N","S","INFO","N")

		fprint siaf:nota_1,"Segun estado correspondiente : 99 (RTbatch) o 98 (Aplicacion)"
		call batch:OFBlog_batch(siaf:nota_1,lib:err_retval,"S","S","INFO","N")

		fprint siaf:nota_1,\
        	"(SUC: %5.5s OPER: %5.5s FECHA: %e HORA: %e SEC: %4.4s)",jnl_branch_tmp,\
		jnl_operator_tmp,jnl_date_tmp,jnl_time_tmp,jnl_sequence_tmp 
		call batch:OFBlog_batch(siaf:nota_1,lib:err_retval,"N","S","INFO","N")

                     
        	CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE  \
            	tlr:jnl_branch   == FLD:jnl_branch_tmp && \
            	tlr:jnl_operator == FLD:jnl_operator_tmp && \
            	tlr:jnl_date == FLD:jnl_date_tmp && \
            	tlr:jnl_time == FLD:jnl_time_tmp && \
            	tlr:jnl_bus_date == FLD:jnl_bus_date_tmp && \
            	tlr:jnl_sequence == FLD:jnl_sequence_tmp 

        	CDS FINDFIRST DSC:tlr:jnl_context NOLOCK 
		loc_retval = CDSRETVAL

        	IF ( loc_retval == 0) THEN

            		// Extraigo del journal el jnl_status original
            		CDS EXTRACT DSC:tlr:jnl_context \
                		FLD:tlr:jnl_status INTO FLD:jnl_status_tmp1

            		CDS ENDSELECT DSC:tlr:jnl_context 

            		CDS FINDAGAIN DSC:jnl_cheques_ctx LOCK 

            		CDS APPEND DSC:jnl_cheques_ctx \
                		FLD:jnl_status_tmp1 AS FLD:tlr:jnl_status 

            		CDS UPDATE DSC:jnl_cheques_ctx LOCK 
	
			fprint siaf:nota_1,\
			"Resultado update segun estado del Journal"
			call batch:OFBlog_batch(siaf:nota_1,cdsretval,"S","S","INFO","N")

        	ELSE 
			fprint siaf:nota_1,\
			"Busqueda del registro en Journal segun cheques"
			call batch:OFBlog_batch(siaf:nota_1,loc_retval,"S","S","INFO","N")

            		CDS ENDSELECT DSC:tlr:jnl_context 
        	END IF 

        	CDS FINDNEXT DSC:jnl_cheques_ctx LOCK 
        	lib:err_retval = CDSRETVAL

    	END WHILE 

    	CDS ENDSELECT DSC:jnl_cheques_ctx 

END SUB

/*******/
