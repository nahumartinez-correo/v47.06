/****o* Mercado Pago/OFB:post:OFBresponse_ws_mp
* NOMBRE
*   OFB:post:OFBresponse_ws_mp
* DESCRIPCION
*   Respuesta de los Web Services de Mercado Pago
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:PBordenMercadoPago
*   post:PBconsultaOrdenMP
*		post:PBcancelaOrdenMP
* DOCUMENTACION
*   NI50546 - Mercado Pago
* SOURCE
*/
#include "postofb.ofb.h"

SUB post:OFBresponse_ws_mp

	SELECT (giros:codigo_procesamiento)
		CASE 100010
			//POINT Integrado - Consulta Orden de Pago
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200 || post:mp_response == 201) THEN
				post:mp_status = SUBSTR(post:mp_tmp_adic[0],10,20)
				post:mp_order_id = SUBSTR(post:mp_tmp_adic[1],0,10)
				
;				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[2],0,10)
;				post:mp_status_pago = SUBSTR(post:mp_tmp_adic[2],10,20)
				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[2],0,20)
				post:mp_status_pago = SUBSTR(post:mp_tmp_adic[2],20,20)
				
				post:mp_ext_reference = SUBSTR(post:mp_tmp_adic[3],0,15)
				post:mp_payer_email = SUBSTR(post:mp_tmp_adic[4],0,50)

				CALL post:MISCFtrim(post:mp_status )
				CALL post:MISCFtrim(post:mp_order_id)
				CALL post:MISCFtrim(post:mp_payment_id)
				CALL post:MISCFtrim(post:mp_status_pago)
				CALL post:MISCFtrim(post:mp_ext_reference)
				CALL post:MISCFtrim(post:mp_payer_email)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 100011
			//POINT Integrado - Crea Orden de Pago  
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200 || post:mp_response == 201) THEN
				post:mp_status = SUBSTR(post:mp_tmp_adic[0],10,20)
				post:mp_order_id = SUBSTR(post:mp_tmp_adic[1],0,10)
				
				CALL post:MISCFtrim(post:mp_status)
				CALL post:MISCFtrim(post:mp_order_id)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 100020
			//POINT Integrado - Elimina Orden de Pago 
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response != 204) THEN
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
;;		CASE 110010
;;			//QR Integrado - Consulta Orden de Pago
;;		BREAK
		CASE 110011
			//QR Integrado - Crea Orden de Pago  
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response != 200) THEN
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 110020
			//QR Integrado - Elimina Orden de Pago 
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response != 204) THEN
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK	
		CASE 200010
			//POINT Integrado - Consulta un Pago 
		CASE 210010
			//QR Integrado - Consulta un Pago  
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200) THEN
				post:mp_status_pago = SUBSTR(post:mp_tmp_adic[0],10,20)
				
				IF (giros:codigo_procesamiento == 210010) THEN
					post:mp_order_id = SUBSTR(post:mp_tmp_adic[0],30,10)
				END IF
				
				post:mp_payment_date = SUBSTR(post:mp_tmp_adic[0],40,35)
				
;;				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,10)
;;				post:mp_auth_code = SUBSTR(post:mp_tmp_adic[1],10,20)
;;				post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],30,10)
;;				post:mp_refund_date = SUBSTR(post:mp_tmp_adic[1],40,35)
				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,20)
				post:mp_auth_code = SUBSTR(post:mp_tmp_adic[1],20,20)
				post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],40,10)
				post:mp_refund_date = SUBSTR(post:mp_tmp_adic[1],50,35)
				
				post:mp_description = SUBSTR(post:mp_tmp_adic[2],0,20)
				post:mp_ext_reference = SUBSTR(post:mp_tmp_adic[2],20,15)
				post:mp_refund_amount = SUBSTR(post:mp_tmp_adic[2],35,12)
				
				post:mp_amount = SUBSTR(post:mp_tmp_adic[3],0,12)
				post:mp_refund_status = SUBSTR(post:mp_tmp_adic[3],12,20)

				post:mp_payment_method = SUBSTR(post:mp_tmp_adic[4],0,40)
				post:mp_payment_type = SUBSTR(post:mp_tmp_adic[4],40,20)
				
;;				post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],60,10)
				post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],60,20)
				
				CALL post:MISCFtrim(post:mp_status_pago)
				CALL post:MISCFtrim(post:mp_order_id)
				CALL post:MISCFtrim(post:mp_payment_date)
				CALL post:MISCFtrim(post:mp_payment_id)
				CALL post:MISCFtrim(post:mp_auth_code)
				CALL post:MISCFtrim(post:mp_refund_id)
				CALL post:MISCFtrim(post:mp_refund_date)
				CALL post:MISCFtrim(post:mp_description)
				CALL post:MISCFtrim(post:mp_ext_reference)
				CALL post:MISCFtrim(post:mp_refund_amount)
				CALL post:MISCFtrim(post:mp_amount)
				CALL post:MISCFtrim(post:mp_refund_status)
				CALL post:MISCFtrim(post:mp_payment_method)
				CALL post:MISCFtrim(post:mp_payment_type)
				CALL post:MISCFtrim(post:mp_refund_payment_id)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 200015
			//POINT Integrado - Consulta un Pago ,trae info Point
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200) THEN
;;				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,10)
;;				post:mp_caller_id = SUBSTR(post:mp_tmp_adic[1],10,20)
				post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,20)
				post:mp_caller_id = SUBSTR(post:mp_tmp_adic[1],20,20)				
			
				post:mp_poi = SUBSTR(post:mp_tmp_adic[2],0,40)
				post:mp_poi_type = SUBSTR(post:mp_tmp_adic[2],40,40)
				post:mp_operator_id = SUBSTR(post:mp_tmp_adic[3],0,10)
				post:mp_device_name = SUBSTR(post:mp_tmp_adic[4],0,10)

				CALL post:MISCFtrim(post:mp_payment_id)
				CALL post:MISCFtrim(post:mp_caller_id)
				CALL post:MISCFtrim(post:mp_poi)
				CALL post:MISCFtrim(post:mp_poi_type)
				CALL post:MISCFtrim(post:mp_operator_id)
				CALL post:MISCFtrim(post:mp_device_name)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF  
		BREAK
		CASE 210015
			//QR Integrado - Busca un Pago   
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
		
			IF (post:mp_response == 200) THEN
				//Traigo la cantidad total de registros de la busqueda
;;				post:mp_paging_total = SUBSTR(post:mp_tmp_adic[4],70,5)
				post:mp_paging_total = SUBSTR(post:mp_tmp_adic[4],80,5)

				CALL post:MISCFtrim(post:mp_paging_total)
				
				//Si la consulta trajo resultados
				IF (post:mp_paging_total > 0) THEN	
					post:mp_status_pago = SUBSTR(post:mp_tmp_adic[0],10,20)
					post:mp_order_id = SUBSTR(post:mp_tmp_adic[0],30,10)
					post:mp_payment_date = SUBSTR(post:mp_tmp_adic[0],40,35)
					
;;					post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,10)
;;					post:mp_auth_code = SUBSTR(post:mp_tmp_adic[1],10,20)
;;					post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],30,10)
;;					post:mp_refund_date = SUBSTR(post:mp_tmp_adic[1],40,35)
					post:mp_payment_id = SUBSTR(post:mp_tmp_adic[1],0,20)
					post:mp_auth_code = SUBSTR(post:mp_tmp_adic[1],20,20)
					post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],40,10)
					post:mp_refund_date = SUBSTR(post:mp_tmp_adic[1],50,35)
					
					post:mp_description = SUBSTR(post:mp_tmp_adic[2],0,20)
					post:mp_ext_reference = SUBSTR(post:mp_tmp_adic[2],20,15)
					post:mp_refund_amount = SUBSTR(post:mp_tmp_adic[2],35,12)
					
					post:mp_amount = SUBSTR(post:mp_tmp_adic[3],0,12)
					post:mp_refund_status = SUBSTR(post:mp_tmp_adic[3],12,20)
					
					post:mp_payment_method = SUBSTR(post:mp_tmp_adic[4],0,40)
					post:mp_payment_type = SUBSTR(post:mp_tmp_adic[4],40,20)
;;					post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],60,10)
					post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],60,20)
					
					CALL post:MISCFtrim(post:mp_status_pago)
					CALL post:MISCFtrim(post:mp_order_id)
					CALL post:MISCFtrim(post:mp_payment_date)
					CALL post:MISCFtrim(post:mp_payment_id)
					CALL post:MISCFtrim(post:mp_auth_code)
					CALL post:MISCFtrim(post:mp_refund_id)
					CALL post:MISCFtrim(post:mp_refund_date)
					CALL post:MISCFtrim(post:mp_description)
					CALL post:MISCFtrim(post:mp_ext_reference)
					CALL post:MISCFtrim(post:mp_refund_amount)
					CALL post:MISCFtrim(post:mp_amount)
					CALL post:MISCFtrim(post:mp_refund_status)
					CALL post:MISCFtrim(post:mp_payment_method)
					CALL post:MISCFtrim(post:mp_payment_type)
					CALL post:MISCFtrim(post:mp_refund_payment_id)
				END IF
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 200020
			//POINT Integrado/QR Integrado - Devolución de un Pago   
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200 || post:mp_response == 201) THEN
				post:mp_refund_status = SUBSTR(post:mp_tmp_adic[0],10,20)
				
;;				post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],0,10)
				post:mp_refund_id = SUBSTR(post:mp_tmp_adic[1],0,20)
								
				post:mp_refund_amount = SUBSTR(post:mp_tmp_adic[2],0,10)
				post:mp_refund_date = SUBSTR(post:mp_tmp_adic[3],0,35)
				
;;				post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],0,10)
				post:mp_refund_payment_id = SUBSTR(post:mp_tmp_adic[4],0,20)

				CALL post:MISCFtrim(post:mp_refund_status)
				CALL post:MISCFtrim(post:mp_refund_id)
				CALL post:MISCFtrim(post:mp_refund_amount)
				CALL post:MISCFtrim(post:mp_refund_date)
				CALL post:MISCFtrim(post:mp_refund_payment_id)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 300010
			//POINT Integrado - Consulta Device
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200) THEN
				post:mp_device_name = SUBSTR(post:mp_tmp_adic[1],0,9)
				post:mp_device_id = SUBSTR(post:mp_tmp_adic[2],0,10)
				post:mp_caller_id = SUBSTR(post:mp_tmp_adic[3],0,10)
				post:mp_response_status = SUBSTR(post:mp_tmp_adic[4],0,20)
				post:mp_order_id = SUBSTR(post:mp_tmp_adic[4],20,20)

				CALL post:MISCFtrim(post:mp_device_name)
				CALL post:MISCFtrim(post:mp_device_id)
				CALL post:MISCFtrim(post:mp_caller_id)
				CALL post:MISCFtrim(post:mp_response_status)
				CALL post:MISCFtrim(post:mp_order_id)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF
		BREAK
		CASE 300020
			//POINT Integrado - Elimina Device
			//POINT Integrado - Consulta Device
			post:mp_response = SUBSTR(post:mp_tmp_adic[0],0,10)
			CALL post:MISCFtrim(post:mp_response)
			
			IF (post:mp_response == 200) THEN
				post:mp_response_status = SUBSTR(post:mp_tmp_adic[1],0,20)

				CALL post:MISCFtrim(post:mp_response_status)
			ELSE
				//Capturo los datos del error
				CALL post:MISCresponseMP
			END IF			
		BREAK
		CASE ELSE
			MSGBOX "MERCADO PAGO - Codigo de procesamiento inexistente",0x00,"Error"
	END SELECT
	
END SUB

/*******/
