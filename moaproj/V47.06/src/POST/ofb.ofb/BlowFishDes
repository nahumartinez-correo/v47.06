/****o* Pendientes de agrupación/OFB:post:BlowFishDes
* NOMBRE
*   OFB:post:BlowFishDes
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postofb.ofb.h"

SUB post:BlowFishDes(prm_encry,prm_desen)
/*
local varl_length	like siaf:i
local varl_idx		like siaf:idx
local varl_idx2		like siaf:idx
local varl_encry	like common:csr_string
local varl_chunk	like siaf:nombre_dpb
local varl_target	like common:csr_string
local varl_final	like common:csr_string
local varl_result	like post:checkeo

let varl_encry = prm_encry
let varl_length = varl_encry.NUMCHARS
let varl_result = varl_length % 8
if (varl_result == 0) then
    if (varl_length < 8) then
        // la long. de clave es < 8 -> tengo que completarla hasta los 8
        fprint varl_encry "%-8.8s" varl_encry
    end if
    // la long. de clave es multiplo de 8 -> no necesita que se complete
    let varl_idx  = varl_length 
else
    // la logitud de la clave no es multiplo de 8 -> necesita que se complete
    let varl_idx = (varl_length / 8) + 1
    let varl_idx = varl_idx * 8            // <- long. calculada
    let varl_idx2 = varl_idx - varl_length
    fprint varl_encry "%s%*.*s" varl_encry,varl_idx2,varl_idx2," "
end if 

let varl_idx2 = 0
while (varl_idx2 < varl_idx) 
    let varl_chunk = substr(varl_encry,varl_idx2,8)
    call csr:SAPdescry_user_id(varl_chunk,varl_target)
    if (retval != 0) then
         return (-2)
    end if
    fprint varl_final "%s%s" varl_final,varl_target
    let varl_idx2 = varl_idx2 + 8
end while

let prm_desen = varl_final
*/
END SUB

/*******/
