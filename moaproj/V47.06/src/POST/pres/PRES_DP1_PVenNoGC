/****o* Pendientes de agrupación/OFB:post:PRES_DP1_PVenNoGC
* NOMBRE
*   OFB:post:PRES_DP1_PVenNoGC
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpres.h"

SUB post:PRES_DP1_PVenNoGC

    /*gpb:AUT- 1716 Verifico si la transaccion ya esta reservada por otro operador */
    CALL post:CDSTranStatLock("99061")
    IF (RETVAL < 0) THEN
        RETURN (-1)
    END IF

    /* Nov. 1999 - B. Petrella -    */
    /* datos de una PRES */
    siaf:nombre_transac.HIGHLITE = 0
    siaf:nombre_transac = "DEVOL PIEZAS NO GDES CLTES, NO INTER Y NO DEV REM"
    siaf:codigo_siaf = 99061
    /*MFM - OCTUBRE 2000 */
    siaf:tiene_reverso = "S"
    siaf:imprime_comprobante = "N"
    siaf:posible_off = "S"
    siaf:afecta_efectivo = " "
    siaf:continua_transaccion = " "

    call siaf:PRESfecha_hora
    if (retval < 0) then
        return (-1)
    end if
	
	
    /* Para que en la reversa muestre otra pantalla que la que tiene en
    la lista */
    if (testflag(tlr:tran_flags,correction))
		let fld:drv:INDscreen[0] = SCR:post:SCRN_DP1_Hdr
    else
	  
	  //para evitar que este campo quede sucio luego de hacer una entrega de piezas
		clearfield post:adt_serv_corteop
		SWAPDUP post:adt_serv_corteop
		clearfield post:adt_serv_corteop
		clearfield post:Pieza
		
		
	  LET FLD:post:adt_table = DSC:post:DevPza1
	  LET FLD:post:adt_ctx = DSC:post:DevPza1_ctx
        /* cargo datos para la pantalla de procesando   */
        /* SCRNpiezaXcont.                      */
       let orden = orden + 1
       DO
        call CDSleoDevPza
        if (retval != 0)
            let orden = orden + 1
		if (orden > orden_max)
                break
            end if
        else
            fprint post:DetalleContenido, " %-13.13s " , \
                    post:Pieza
            CALL MISCref_DP_1
            break
        end if
       LOOP
    end if

END SUB

/*******/
