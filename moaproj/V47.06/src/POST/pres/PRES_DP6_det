/****o* Pendientes de agrupación/OFB:post:PRES_DP6_det
* NOMBRE
*   OFB:post:PRES_DP6_det
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpres.h"

SUB post:PRES_DP6_det
    /* Nov. 1999 - B. Petrella -    */
    /* datos de una PRES */
    siaf:nombre_transac.HIGHLITE = 0
    siaf:codigo_siaf = 99072
    /*MFM - OCUTBRE 2000*/
    siaf:tiene_reverso = "N"
    siaf:imprime_comprobante = "N"
    siaf:posible_off = "S"
    siaf:afecta_efectivo = " "

    /* Hay que recuperar los campos de la primera transac.  */
    /* que estan en el area dup.-                       */
    if (!testflag(tlr:tran_flags,correction)) then
        swapdup post:Reencaminamiento
        swapdup post:Pieza
	  swapdup post:AperDesc
	  swapdup post:adt_apertura_cod
        swapdup post:adt_grucorte_cod
	  swapdup post:adt_relMod_corteop
	  swapdup post:adt_corteop_guiacont
	  swapdup post:adt_corteop_saca
	  swapdup post:adt_corteop_despacho
    endif

    call siaf:PRESfecha_hora
    if (retval < 0) then
        return (-1)
    end if

    /* Para que en el journal muestre otra pantalla que la que tiene en
    la lista */
    if (testflag(tlr:tran_flags,correction))
	    let fld:drv:INDscreen[0] = SCR:post:SCRNpzasInter_Hdr
    else
        /* cargo datos para la pantalla de procesando   */
        /* pieza: SCRN_DP_proc.                   */

	  LET FLD:post:adt_table = DSC:post:DevPza2_tbl
	  LET FLD:post:adt_ctx = DSC:post:DevPza2_ctx

       let orden = orden + 1
       DO
        call CDSleoDevPza
        if (retval != 0)
                let orden = orden + 1
            if (orden > orden_max)
                break
            end if
        else
             fprint post:DetalleContenidoGC, " %-32.32s" , \
                    post:Pieza

	        CALL MISCref_DP5
           	  break
        end if
       LOOP
    end if

END SUB

/*******/
