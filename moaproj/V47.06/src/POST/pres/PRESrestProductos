/****o* Pendientes de agrupación/OFB:post:PRESrestProductos
* NOMBRE
*   OFB:post:PRESrestProductos
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpres.h"

SUB post:PRESrestProductos
	clearfield adt_rest_elemento
	clearfield adt_rest_elementoSel
	clearfield adt_rest_tipoRest
	refresh adt_rest_elemento
	refresh adt_rest_elementoSel
	refresh adt_rest_tipoRest

	resetflag adt_rest_flags, habilitado
	ALTERCONTROLSET tag:op:CHK0
	protfield adt_rest_elementoSel

    Select (drv:screen_active)
        CASE 0
        	; Los permisos funcionan distinto en este abm. No hay modificaciones pendientes
        	; y es un abm solamente de actualizacion, por lo que si el usuario no tiene
        	; permiso sobre la tabla, directamente no se lo deja entrar.
  	        call post:ChequearPermisos("RestProdu",op:op_login_id)
	        IF (RETVAL < 0 )
 		        errmsg drv:errmsg_list, "No tiene permiso sobre la tabla que esta intentando actualizar."
			    return (-1)
            endif
			break
		CASE 1
			ENABLECONTROL drv:PBright
			DISABLECONTROL drv:PBleft
			drv:starting_tab = 0
			call drv:redraw_tabs_chks(4)
			drv:tab_active = 0
			REFRESH drv:INDscreen[0]
			if (aux_rest_tipoProd != adt_rest_tipoProd) then
				let aux_rest_tipoProd = adt_rest_tipoProd
				call post:MISCArmo_PickCabe
			end if
			call post:MISCrest_titulo
			protfield adt_rest_seleccion
			clearfield drv:skip_seq_scr

			IF (adt_rest_tipoProd.NUMCHARS == 0)
				call post:MISCresetPickRest
				call post:ABMcantRestSel
			END IF
			BREAK
        CASE 2
        	if (drv:tab_active == -1)
        		drv:starting_tab = 1
				call drv:redraw_tabs_chks(4)
				drv:tab_active = 0
				REFRESH drv:INDscreen[0]
			end if
        	if (adt_rest_regHab == "S")
	        	setflag adt_rest_flags, habilitado
				ALTERCONTROLSET tag:op:CHK0
			endif
			adt_rest_tipoRest = adt_rest_regTipo

			adt_rest_tituloSolap = "RESTRICCION A REGIONES"
			adt_rest_tituloRest = REST_REG
			adt_rest_tituloCarga = "REGIONES CARGADAS:"
        	BREAK
        CASE 3
        	if (adt_rest_prvHab == "S")
	        	setflag adt_rest_flags, habilitado
				ALTERCONTROLSET tag:op:CHK0
			endif
			adt_rest_tipoRest = adt_rest_prvTipo

			adt_rest_tituloSolap = "RESTRICCION A PROVINCIAS"
			adt_rest_tituloRest = REST_PRV
			adt_rest_tituloCarga = "PROVINCIAS CARGADAS:"
        	BREAK
        CASE 4
        	if (adt_rest_sucHab == "S")
	        	setflag adt_rest_flags, habilitado
				ALTERCONTROLSET tag:op:CHK0
			endif
			adt_rest_tipoRest = adt_rest_sucTipo

			adt_rest_tituloSolap = "RESTRICCION A SUCURSALES"
			adt_rest_tituloRest = REST_SUC
			adt_rest_tituloCarga = "SUCURSALES CARGADAS:"
        	BREAK
        CASE 5
        	if (adt_rest_cliHab == "S")
	        	setflag adt_rest_flags, habilitado
				ALTERCONTROLSET tag:op:CHK0
			endif
			adt_rest_tipoRest = adt_rest_cliTipo

			adt_rest_tituloSolap = "RESTRICCION A CLIENTES"
			adt_rest_tituloRest = REST_CLI
			adt_rest_tituloCarga = "CLIENTES CARGADOS:"
        	BREAK
        CASE 6
        	if (adt_rest_upHab == "S")
	        	setflag adt_rest_flags, habilitado
				ALTERCONTROLSET tag:op:CHK0
			endif
			adt_rest_tipoRest = adt_rest_upTipo

			adt_rest_tituloSolap = "RESTRICCION A UP"
			adt_rest_tituloRest = REST_UP
			adt_rest_tituloCarga = "UP CARGADOS:"
        	BREAK
        CASE ELSE
			clearfield drv:skip_seq_scr
			break
    END SELECT
	refresh adt_rest_tituloSolap
	refresh adt_rest_tituloRest
	refresh adt_rest_tituloCarga
END SUB

/*******/
