/****o* Pendientes de agrupación/OFB:post:TOTStotal_fact_res
* NOMBRE
*   OFB:post:TOTStotal_fact_res
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "posttots.h"

SUB post:TOTStotal_fact_res
	/* Variables para uso local */
	LOCAL OPERADOR LIKE op:op_login_id
	LOCAL TIPO LIKE adt_tipo_formulario
	LOCAL PRES LIKE PresNro_Fact
	LOCAL FECHA	LIKE adt_fecha
	LOCAL CENTRO_EMIS	LIKE adt_br_CEC_fact
	LOCAL NOTA_CREDITO LIKE NotaCredito
	LOCAL primera_entrada LIKE common:csr_string
	LOCAL primera_centro_emis LIKE common:csr_string
	LOCAL primera_nota_credito LIKE common:csr_string
	LOCAL primera_tipo_formu LIKE common:csr_string
	LOCAL cabecera_factura LIKE common:csr_string

	CALL  CSR:fld_to_upper (ope)
	idx = 1

	IF (siaf:pantalla_impreso != "P") THEN
		CALL siaf:MISCopen_tot
	END IF

	common:trap_reset = OFB:lib:KEYSreset_esc                               
	op:adt_branch_id = op:op_branch_id
	op:adt_operator_id = op:op_operator_id

	IF (siaf:pantalla_impreso != "I" || siaf:pantalla_impreso != "D") THEN
		siaf:pick_titulo = "totales"
		CALL CSR:f_sanewpl(siaf:pick_titulo,PIC:siaf:totales)
	END IF

	LET siaf:i = 0
	common:csr_string = "  "
	CALL MISCwrite_tot2
	LET siaf:i = 0

	// El campo tipo y el estado hay que convertirlos.
	IF (tip.NUMCHARS !=0) THEN
		IF (tip == "A") THEN
			tip = 1
		ELSE
			tip = 2
		END IF
	END IF

  est = adt_fact_anula
	
	/*Debo convertir también el campo del Documento Fiscal - Gabriel Falciola*/
	CALL csr:trimfield(dfisc)
	IF (dfisc.NUMCHARS != 0) THEN
		IF (dfisc == "FACTURA") THEN
			dfisc = "N"
		ELSE
			dfisc = "S"
		END IF
	END IF
	
	common:csr_string = "P"
	
	// Primero voy a abrir la tabla de facturas
	IF (post:ord == "OPERADOR")
		CDS SELECT FROM DSC:post:TABfact BECOMES DSC:CONfact WHERE LST:post:LISTclausula_where SORT "porOpe"
	ELSE
		CDS SELECT FROM DSC:post:TABfact BECOMES DSC:CONfact WHERE LST:post:LISTclausula_where SORT "porNum"
	END IF	

	CDS FINDFIRST DSC:CONfact NOLOCK
	IF (CDSRETVAL == 0) THEN
		CDS EXTRACT DSC:CONfact ALL
	ELSE
		IF (siaf:modo == "SUCURSAL") THEN
			//listados al cierre de sucursal
			CDS ENDSELECT DSC:CONfact
			CALL siaf:MISCclose_tot
			RETURN -8
		END IF
	END IF
	CALL MISCheader_con2(common:csr_string_tmp)
	primera_entrada = "S"
	primera_centro_emis = "S"
	primera_nota_credito = "S"
	primera_tipo_formu = "S"
	
	WHILE (CDSRETVAL == 0)
		OPERADOR = op_login_id_fact
		FECHA = adt_fecha
		IF (primera_entrada != "S") THEN
			cambio_recien = "N"
		END IF
		primera_entrada = "N"
		CALL MISClect_prev
		CALL MISCheader_fact2(2)
		cabecera_factura = "S"
		cambio_recien = "S"
		WHILE ((OPERADOR == op_login_id_fact || post:ord != "OPERADOR") && (cdsretval == 0))
			IF (cambio_recien == "S") THEN
				cambio_recien = "N"
			ELSE
				CALL MISClect_prev
				CALL MISCheader_fact2(2)
				cabecera_factura = "S"
			END IF
			cambio_recien = "S"
			CENTRO_EMIS = adt_br_CEC_fact		
			WHILE ((OPERADOR == op_login_id_fact || post:ord != "OPERADOR") && (CENTRO_EMIS == adt_br_CEC_fact) && (CDSRETVAL == 0))
				CALL MISClect_prev
				IF (cabecera_factura != "S") THEN
					CALL MISCheader_fact2(2)
					cabecera_factura = "S"
				END IF
				NOTA_CREDITO = NotaCredito
				WHILE ((OPERADOR == op_login_id_fact || post:ord != "OPERADOR") && (NOTA_CREDITO == NotaCredito) && (CENTRO_EMIS == adt_br_CEC_fact) && (CDSRETVAL == 0))
					CALL MISClect_prev
					IF (cabecera_factura != "S") THEN
						CALL MISCheader_fact2(2)
						cabecera_factura = "S"
					END IF
					TIPO = adt_tipo_formulario
					WHILE ((OPERADOR == op_login_id_fact || post:ord != "OPERADOR") && (TIPO == adt_tipo_formulario) && (NOTA_CREDITO == NotaCredito) && (CENTRO_EMIS == adt_br_CEC_fact) && (CDSRETVAL == 0))
						CALL MISClect_prev
						IF (cabecera_factura != "S") THEN
							CALL MISCheader_fact2(2)
							cabecera_factura = "S"
						END IF
						PRES = PresNro_Fact
						WHILE ((OPERADOR == op_login_id_fact || post:ord != "OPERADOR") && (TIPO == adt_tipo_formulario) && (PRES == PresNro_Fact) && (NOTA_CREDITO == NotaCredito) && (CENTRO_EMIS == adt_br_CEC_fact) && (CDSRETVAL == 0))
    						IF (Estado_Fact != "P") THEN
								    
							    //Inicio agrego German
								//50249-Incumplimiento
								CLEARFIELD common:csr_string
								CALL post:MISCFtrim(adt_nro_fact)
								CALL post:MISCFtrim(adt_fecha)
								//Fin agrego German
								
								IF (post:ord == "OPERADOR") THEN
									FPRINT common:csr_string, "%s                                                     %8e",adt_nro_fact, adt_fecha
								ELSE
								  //Original
								  //FPRINT common:csr_string, "%s                 %14.14s                      %8e",adt_nro_fact, op_login_id_fact, adt_fecha
								    
								  //Inicio agrego German
									//50249-Incumplimiento
									CALL post:MISCFtrim(op_login_id_fact)
									IF (post:NC_tipo == "I") THEN
								    FPRINT common:csr_string, "%s  %14.14s     %s     %8e",adt_nro_fact,op_login_id_fact,"Incumplimiento del servicio",adt_fecha
							    ELSE
                  	FPRINT common:csr_string, "%s  %14.14s     %s     %8e",adt_nro_fact,op_login_id_fact,"                           ",adt_fecha
							    END IF
								  //Fin agrego German
								END IF
								CALL MISCwrite_tot2
							END IF
							CDS FINDNEXT DSC:CONfact NOLOCK			
							IF (CDSRETVAL == 0) THEN
 								CDS EXTRACT DSC:CONfact ALL
   							END IF			
						END WHILE
					END WHILE
					primera_tipo_formu = "N"
					/*Agrego este campo para saber si ya se escribio la cabecera de la Factura
					Gabriel Falciola*/
    			cabecera_factura = "N"
				END WHILE
					primera_nota_credito = "N"
					/*Agrego este campo para saber si ya se escribio la cabecera de la Factura
					Gabriel Falciola*/
    			cabecera_factura = "N"			
			END WHILE
			primera_centro_emis = "N"
			/*Agrego este campo para saber si ya se escribio la cabecera de la Factura
			Gabriel Falciola*/
   		cabecera_factura = "N"
		END WHILE
	END WHILE

	IF (siaf:pantalla_impreso == "I") THEN
		/*Cuando termina de armar el listado agrego el número total de páginas - Gabriel Falciola*/
		WHILE (siaf:i < 57)
			common:csr_string = " "
			CALL MISCwrite_tot2 
		END WHILE
		FPRINT common:csr_string, "==========================================================================="
		CALL MISCwrite_tot2
		FPRINT common:csr_string,"                                                      Total de Hojas: %05.05d",idx
		CALL MISCwrite_tot2
	END IF

	CALL siaf:MISCclose_tot

	IF (siaf:pantalla_impreso == "P") THEN
		CLEARFIELD common:csr_string
    ;LMB - PS 9780 - 18.06.2008
    FPRINT common:csr_string, "%s%s", common:dirTemporal, "totales.lis"
    KEYDEF PUSH
    CALL siaf:KEYSdefine_tots_oper
    CALL CSR:f_sadopl(siaf:pick_titulo,common:csr_string)
    KEYDEF POP
	ELSE
		//gpb:NI50752
		CALL tes:MISCflowPDF("totales.lis")
		//Si es impreso o si fallo la creacion del PDF entonces 

		//Si es impreso o si fallo la creacion del PDF entonces fuerzo la impresion
		IF (siaf:pantalla_impreso == "I" || RETVAL < 0) THEN		
			/*Esta rutina se encarga de imprimir tantas copias como se elijan, luego borra el archivo. 
			Diego Priore 16/02/2000*/
			FYIMSG LST:common:fyimsg_list,"(L) SE ESTAN IMPRIMIENDO LOS TOTALES "
			FPRINT common:tmpDirTemporal "%s%s" common:dirTemporal, "totales.lis"
			CALL  siaf:MISCfile_print2(common:tmpDirTemporal,"predeterminada")
			PRINTDOC OFB:siaf:PDOCfile_print_gral,laser, "Imprimiendo Documento, un momento por favor..." 
		END IF	

		CALL post:MISCfile_exists(common:tmpDirTemporal)
		IF (RETVAL == 0)  THEN
			CLEARFIELD common:csr_string	
	    FPRINT common:csr_string "cmd /c del %-s%-s", common:dirTemporal, "totales.lis"
	    CALL csr:create_process common:csr_string,SW_HIDE ,CSR_WAIT        
	    EXEC common:csr_string
		END IF      
  END IF

	CDS ENDSELECT DSC:CONfact
END SUB

/*******/
