/****o* Pendientes de agrupación/OFB:post:SENDGrupoRep
* NOMBRE
*   OFB:post:SENDGrupoRep
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:post:TRANabm_GrupoRep
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDGrupoRep
	LOCAL l_tabla LIKE admin:tabla 
	LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

    ;SMC Autorizo Modificaciones
    CALL post:MISCAutorizoModif("GrupoRep")
    IF (RETVAL < 0) THEN
    	CALL post:ABMGrupoRep_clear
        CALL post:ABMGrupoRep_refresh
	    RETURN (-2)
    END IF

    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN
        RESETFLAG admin:mode_flags,update
        CALL post:CDSgruporep_save
        CALL drv:side_bar_disable
        ;SMC journalizo Modificacion
        CALL post:MISCJournalTablas
    ELSE
        IF (TESTFLAG(admin:mode_flags,delete)) THEN
            RESETFLAG admin:mode_flags,delete
            CALL post:MISCind_GrupoRep
            ;SMC Modificacion para Testear por impactos antes de Borrar.
            ;    Si se detecta impacto, se pregunta si se desea imprimir el reporte
            CALL lib:MISCchk_impacto
            IF (RETVAL < 0) THEN
                RETURN (RETVAL)
            END IF
            CALL lib:adt_delete_verify
            IF (RETVAL == 0) THEN
                CALL drv:side_bar_disable
                CALL post:CDSgruporep_del
                IF (RETVAL != 0) THEN
                    drv:button = drv:save_button
                    CALL drv:but_up_enable
                    RETURN (-1)
                ELSE
                    ;SMC journalizo Modificacion
                    CALL post:MISCJournalTablas
                    CALL post:ABMGrupoRep_clear
                    CALL post:ABMGrupoRep_refresh
                    RETURN (-1)
                END IF
            END IF
        ELSE
            IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
                RESETFLAG admin:mode_flags,imprimir
                //Inicio gpb:AUT-2415 
                /*CALL MISCdumptable
                 CALL CDSdumptable*/  
								//resguardo los valores originales
								LET l_tabla = admin:tabla 
								LET l_INDCamposTablas = post:INDCamposTablas                 
                CALL post:MISCdumptableNew 
								admin:tabla = "GrupoRep"
								post:INDCamposTablas = LST:LISTgruporep_flds
                CALL post:CDSdumptableNew  
                //recupero los valores originales
								LET admin:tabla = l_tabla
								LET post:INDCamposTablas = l_INDCamposTablas

                CALL post:ABMGrupoRep_clear
                CALL post:ABMGrupoRep_refresh
                RETURN (-1)
            END IF
        END IF
        RETURN (-1)
    END IF
    CALL post:ABMGrupoRep_clear
    CALL post:ABMGrupoRep_refresh
    RETURN (-1)
END SUB

/*******/
