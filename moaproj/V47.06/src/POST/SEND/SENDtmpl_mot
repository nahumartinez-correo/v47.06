/****o* Pendientes de agrupación/OFB:post:SENDtmpl_mot
* NOMBRE
*   OFB:post:SENDtmpl_mot
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:TRANabm_tmpl_mot
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDtmpl_mot
    LOCAL l_tabla LIKE admin:tabla 
    LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

    LET tmpl_tmp = adt_template_cod /*resguardo el codigo porque la rutina que 
    sigue limpia los campos y yo lo necesito mas adelante*/
    /*Esta parte testea que no se pueda grabar un template con ningun motivo asociado*/
	IF (!TESTFLAG(admin:mode_flags,imprimir)) THEN
	    CALL MISCexiste_mot
	    IF (RETVAL < 0) THEN
		    RETURN (-2)
	    END IF
    END IF

 	/*Valido si todos los motivos pertenecen al mismo grupo de iva - Gabriel Falciola*/
	call CDScheck_tmpl_grupo
	if (retval != 0)
		return (-2)
	end if

    //cgw:limpio datos templates por si arrastra valores
    adt_tmpl_no_exclus.HIGHLITE = 0
    CALL post:MISCclear_mot_flds        
        
    CALL post:MISCAutorizoModif("template")
    IF (retval < 0) THEN
        IF (estado_presu == 1)
            IF (op:Flag_temp != 1)
                /*Si no hay reg pendiente paso los datos a una tabla temporal*/
                CALL MISCpaso_TMtmp
            END IF
        END IF
        
        //cgw:limpio datos pantalla
        CALL CSR:proc_list(170,LST:LISTtemplate_flds)
        CALL CSR:proc_list(190,LST:LISTtemplate_flds)
        
        RETURN (-2)
    END IF
 
 
    /*Verifico que no haya registros pendientes*/
    CALL MISChay_tmpl_pend
    IF (RETVAL < 0)
        RETURN (-2)
    END IF    
 
 
    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN

        CALL CDStemplate_save
        
        /*journalizacion*/
        CALL post:MISCJournalTablas
        
        CALL drv:side_bar_disable
        RESETFLAG admin:mode_flags,update
    ELSE
        IF (TESTFLAG(admin:mode_flags,delete)) THEN
            RESETFLAG admin:mode_flags,delete
            CALL lib:adt_delete_verify
            IF (RETVAL == 0) THEN
                CALL CDStemplate_del
                
                /*journalizacion*/
                CALL post:MISCJournalTablas
                
                CALL drv:side_bar_disable
                IF (RETVAL != 0) THEN
                    drv:button = drv:save_button
                    CALL drv:but_up_enable
                    RETURN (-1)
                ELSE
                    CALL CSR:proc_list(170,LST:LISTtemplate_flds)
                    CALL CSR:proc_list(190,LST:LISTtemplate_flds)
                    RETURN (-1)
                END IF
            END IF
        ELSE
            IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
                RESETFLAG admin:mode_flags,imprimir
                /*siaf:adt_tabla_context = DSC:template_ctx
                adt_tabla_context1 = DSC:tmpl_mot_ctx
                FLD:siaf:INDencab_lis = OFB:MISCencab_template
                siaf:INDadt_sval = 0
                CALL TRANimp_tmplates*/
                
                //Inicio gpb:AUT-2415 
                /*CALL MISCdumptable 
                  CALL CDSdumptable*/  
						    //resguardo los valores originales
						    LET l_tabla = admin:tabla 
						    LET l_INDCamposTablas = post:INDCamposTablas                  
                CALL MISCdumptableNew 
								admin:tabla = "template"
								post:INDCamposTablas = LST:post:LISTtemplate_abm
                CALL CDSdumptableNew  
                //recupero los valores originales
								LET admin:tabla = l_tabla
								LET post:INDCamposTablas = l_INDCamposTablas
                CALL CSR:proc_list(170,LST:LISTtemplate_abm)
                CALL CSR:proc_list(190,LST:LISTtemplate_abm)								
                //Fin gpb:AUT-2415 
                
                CALL CSR:proc_list(170,LST:LISTtemplate_flds)
                CALL CSR:proc_list(190,LST:LISTtemplate_flds)
                //cgw:para que no ejecute la Fval
                setvaldone post:adt_template_ngiro
                setvaldone post:adt_tmpl_no_exclus
                RETURN (-1)
            END IF
        END IF
        //cgw:limpia y protege campo no exclusivo template
        clearfield adt_tmpl_no_exclus
        adt_tmpl_no_exclus.HIGHLITE = 0
        refresh adt_tmpl_no_exclus
        PROTFIELD adt_tmpl_no_exclus            
        RETURN (-1)
    END IF        
    CALL CSR:proc_list(170,LST:LISTtemplate_flds)
    CALL CSR:proc_list(190,LST:LISTtemplate_flds)
    RETURN (-1)
END SUB 

/*******/
