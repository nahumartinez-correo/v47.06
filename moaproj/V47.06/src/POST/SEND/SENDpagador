/****o* Pendientes de agrupación/OFB:post:SENDpagador
* NOMBRE
*   OFB:post:SENDpagador
* DESCRIPCION
*   SEND del ABM de Operadores Pagadores.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:TRANabm_pagador,post:TRANabm_climay_crem
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDpagador
    LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN
    	RESETFLAG admin:mode_flags,update
        if (adt_pagador_tipodoc == 96 && adt_pagador_nrodoc == 99999999999) THEN
			MSGBOX "El operador pagador no puede ser modificado",OFB_OK,"ERROR"
			return (-2)
		end if

		/*si corresponde se chequea que los dos primeros digitos sean validos*/
		CALL MISCverif2dig(adt_pagador_tipodoc, adt_pagador_nrodoc)
		if (retval != 0)
		    return (-2)
		end if

        CALL CDSpagador_grabar
        CALL drv:side_bar_disable
    ELSE
        IF (TESTFLAG(admin:mode_flags,delete)) THEN
            RESETFLAG admin:mode_flags,delete
        	if (adt_pagador_tipodoc == 96 && adt_pagador_nrodoc == 99999999999)
				MSGBOX "El operador no puede ser eliminado",OFB_OK,"ERROR"
				return (-2)
			end if
			
            CALL CDStiene_beneficios
            IF (RETVAL != 0) THEN	//TIENE BENEFICIOS ASOCIADOS
            	MSGBOX "El operador no podrá ser eliminado por tener beneficios asociados.",OFB_OK,"ERROR"
        		RETURN (-2)
        	END IF	
		    
		    drv:button = 2
		    CALL drv:but_enable
		    drv:button = drv:last_button
		    CALL drv:but_up_enable
		    CALL lib:adt_delete_verify
		    IF (RETVAL == 0) THEN
		        CALL drv:side_bar_disable
		        CALL CDSpagador_borrar
		        IF (RETVAL != 0) THEN
                    drv:button = drv:save_button
                    CALL drv:but_up_enable
                ELSE
		            CALL CSR:proc_list(170,LST:LISTpagador_flds)
                    CALL CSR:proc_list(190,LST:LISTpagador_flds)
                END IF
            END IF
        
        ELSE
            IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
                RESETFLAG admin:mode_flags,imprimir
                admin:tabla = "Pagadores"
                    
                //Inicio gpb:AUT-2415 
                /*CALL MISCdumptable 
                  CALL CDSdumptable*/  
								//resguardo los valores originales
								LET l_INDCamposTablas = post:INDCamposTablas                 
								CALL MISCdumptableNew 
								admin:tabla = "Pagadores"
								post:INDCamposTablas = LST:LISTpagador_abm
								CALL CDSdumptableNew  
								//recupero los valores originales
								LET post:INDCamposTablas = l_INDCamposTablas
								CALL CSR:proc_list(170,LST:LISTpagador_abm)
                CALL CSR:proc_list(190,LST:LISTpagador_abm)
								//Fin gpb:AUT-2415 

                CALL CSR:proc_list(170,LST:LISTdest_flds)
                CALL CSR:proc_list(190,LST:LISTdest_flds)
                RETURN (-1)
            END IF
        END IF
        RETURN (-1)
    END IF
    
	CALL CSR:proc_list(170,LST:LISTpagador_flds)
    CALL CSR:proc_list(190,LST:LISTpagador_flds)
    RETURN (-1)

END SUB 

/*******/
