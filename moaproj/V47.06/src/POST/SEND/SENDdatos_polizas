/****o* Pendientes de agrupación/OFB:post:SENDdatos_polizas
* NOMBRE
*   OFB:post:SENDdatos_polizas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDdatos_polizas(TieneImp,TieneOImp,TieneMonCobro,TieneOMon)

	common:csr_string = 0x12
	COMM PUT common:csr_string msg type BINARY length 1

	common:csr_string = 0x22
	COMM PUT common:csr_string msg type BINARY length 2

	common:csr_string = 0x0
	COMM PUT common:csr_string msg type BINARY length 4

	COMM PUT giros:codigo_procesamiento msg type BCD length 3

	if ( TieneImp == "S" || TieneImp == "s" || TESTFLAG(tlr:tran_flags,correction) || \
		testflag(giros:tran_send_mode,cancelacion))
     	  siaf:importepoliza_aux = post:EnPol_ImpPoliza * 100
     	  fprint siaf:importepoliza_aux,"%015.15d",siaf:importepoliza_aux
    	  COMM PUT siaf:importepoliza_aux msg type BCD length 8
	end if

	if ( TieneOImp == "S" || TieneOImp  == "s" )
       siaf:importepoliza_aux = post:ImporteAdicPoliza * 100
       fprint siaf:importepoliza_aux,"%015.15d",siaf:importepoliza_aux
       COMM PUT siaf:importepoliza_aux msg type BCD length 8
	end if
	//
 	IF (!TESTFLAG(tlr:controla_firma,cancelacion)) THEN
   	     giros:hora_viaje = siaf:hora
   	     giros:dia_viaje = siaf:fecha
  	ELSE //Envia una 400
     	   IF (!TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options != "REC_CAIDAS_VUELO")) THEN
            /*Si no esta recuperando la caida mediante el proceso batch se setean los sig. campos
            en caso contrario viajan con el valor que tienen en este momento*/

            		giros:hora_viaje = tlr:jnl_time
            		giros:dia_viaje = tlr:jnl_date

		   END IF 
   	END IF 

	// Fecha y Hora de la Transaccion
	fprint common:csr_string "%02.2s%02.2s%6.6s",\
	substr(giros:dia_viaje,4,2),substr(giros:dia_viaje,6,2), \
	giros:hora_viaje
	COMM PUT common:csr_string msg type BCD length 5

	COMM PUT post:adt_codseq_nro msg type BCD length 3

	// Fecha y Hora de la Transaccion
	fprint common:csr_string "%6.6s",\
	giros:hora_viaje
	COMM PUT common:csr_string msg type BCD length 3

	fprint common:csr_string "%02.2s%02.2s",\
	substr(giros:dia_viaje,4,2),substr(giros:dia_viaje,6,2) 
	COMM PUT common:csr_string msg type BCD length 2

	// Siempre va 003
	common:csr_string = 0x03
	COMM PUT common:csr_string  msg type BINARY length 2

	// Iden Terminal
	COMM PUT common:window_node  msg type ASCII length 8 justleft fill ' '

	if ( TieneMonCobro == "S" || TieneMonCobro  == "s" )
   		COMM PUT post:MonedaCobro_Hdr msg type ASCII length 3
	end if
	if ( TieneOMon == "S" || TieneOMon == "s" )
		COMM PUT post:MonedaOAdic_Hdr msg type ASCII length 3
	end if

	common:csr_string = 24
	COMM PUT  common:csr_string msg type BCD  length 2

	common:csr_string = common:window_node
	COMM PUT  common:csr_string msg type ASCII length 20 justleft fill ' '

	call giros:CDSVersion_load
	common:csr_string = giros:adt_version_nro
	COMM PUT  common:csr_string msg type ASCII length 4 

END SUB

/*******/
