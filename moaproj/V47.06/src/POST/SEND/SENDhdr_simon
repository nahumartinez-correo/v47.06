/****o* Pendientes de agrupación/OFB:post:SENDhdr_simon
* NOMBRE
*   OFB:post:SENDhdr_simon
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDhdr_simon
local l_byte like tes:idx

    if (testflag(tlr:controla_firma,cancelacion))
        common:csr_string = 0x400
    else
	    common:csr_string = 0x200
	end if
	COMM PUT common:csr_string msg type BINARY length 2

	;Bits 01-08
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b001))
		l_byte = l_byte ^ 0x80
	endif
	if (testflag(post:flags_mensaje,b002))
		l_byte = l_byte ^ 0x40
	endif
	if (testflag(post:flags_mensaje,b003))
		l_byte = l_byte ^ 0x20
	endif
	if (testflag(post:flags_mensaje,b004))
		l_byte = l_byte ^ 0x10
	endif
	if (testflag(post:flags_mensaje,b006))
		l_byte = l_byte ^ 0x04
	endif		
	if (testflag(post:flags_mensaje,b007))
		l_byte = l_byte ^ 0x02
	endif
	COMM PUT l_byte msg type BINARY length 1

	;Bits 08-16
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b011))
		l_byte = l_byte ^ 0x20
	endif
	if (testflag(post:flags_mensaje,b012))
		l_byte = l_byte ^ 0x10
	endif
	if (testflag(post:flags_mensaje,b013))
		l_byte = l_byte ^ 0x08
	endif
	if (testflag(post:flags_mensaje,b015))
		l_byte = l_byte ^ 0x02
	endif
	if (testflag(post:flags_mensaje,b016))
		l_byte = l_byte ^ 0x01
	endif
	COMM PUT l_byte msg type BINARY length 1	

	;Bits 16-24
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b024))
		l_byte = l_byte ^ 0x01
	endif
	COMM PUT l_byte msg type BINARY length 1

	;24-32
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b025))
		l_byte = l_byte ^ 0x80
	endif
	if (testflag(post:flags_mensaje,b026))
		l_byte = l_byte ^ 0x40
	endif
	if (testflag(post:flags_mensaje,b027))
		l_byte = l_byte ^ 0x20
	endif	
	if (testflag(post:flags_mensaje,b028))
		l_byte = l_byte ^ 0x10
	endif	
	if (testflag(post:flags_mensaje,b029))
		l_byte = l_byte ^ 0x08
	endif		
	if (testflag(post:flags_mensaje,b031))
		l_byte = l_byte ^ 0x02
	endif
	COMM PUT l_byte msg type BINARY length 1

	;Bits 32-40
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b036))
		l_byte = l_byte ^ 0x10
	endif
	if (testflag(post:flags_mensaje,b039))
		l_byte = l_byte ^ 0x02
	endif
	COMM PUT l_byte msg type BINARY length 1

	;Bits 40-48
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b041))
		l_byte = l_byte ^ 0x80
	endif
	if (testflag(post:flags_mensaje,b044))
		l_byte = l_byte ^ 0x10
	endif
	COMM PUT l_byte msg type BINARY length 1

	;Bits 48-56
	l_byte = 0x00
	COMM PUT l_byte msg type BINARY length 1

	;Bits 56-64
	l_byte = 0x00
	if (testflag(post:flags_mensaje,b060))
		l_byte = l_byte ^ 0x10
	endif
	COMM PUT l_byte msg type BINARY length 1

	if (testflag(post:flags_mensaje,b001))
		;Bits 064-072
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		;Bits 073-080
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		;Bits 080-088 
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		;Bits 088-096
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		;Bits 096-104
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		;Bits 104-112
		l_byte = 0x00
		if (testflag(post:flags_mensaje,b105))
			l_byte = l_byte ^ 0x80
		endif
		if (testflag(post:flags_mensaje,b106))
			l_byte = l_byte ^ 0x40
		endif
		if (testflag(post:flags_mensaje,b107))
			l_byte = l_byte ^ 0x20
		endif
		if (testflag(post:flags_mensaje,b108))
			l_byte = l_byte ^ 0x10
		endif
		if (testflag(post:flags_mensaje,b109))
			l_byte = l_byte ^ 0x08
		endif
		if (testflag(post:flags_mensaje_adic,b110))
			l_byte = l_byte ^ 0x04
		endif
		if (testflag(post:flags_mensaje_adic,b111))
			l_byte = l_byte ^ 0x02
		endif
		if (testflag(post:flags_mensaje_adic,b112))
			l_byte = l_byte ^ 0x01
		endif
		COMM PUT l_byte msg type BINARY length 1

		;Bits 112-120
		l_byte = 0x00
		if (testflag(post:flags_mensaje,b117))
			l_byte = l_byte ^ 0x08
		endif
		if (testflag(post:flags_mensaje,b118))
			l_byte = l_byte ^ 0x04
		endif			
		if (testflag(post:flags_mensaje,b119))
			l_byte = l_byte ^ 0x02
		endif			
		COMM PUT l_byte msg type BINARY length 1		

		;Bits 120-128
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1
	endif

	call post:SENDhdr_datos_simon

END SUB

/*******/
