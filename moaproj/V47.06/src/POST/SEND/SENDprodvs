/****o* Pendientes de agrupación/OFB:post:SENDprodvs
* NOMBRE
*   OFB:post:SENDprodvs
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:TRANabm_prodvs
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDprodvs
    LOCAL l_tabla LIKE admin:tabla 
    LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

    //SMC Autorizo Modificaciones
    call post:MISCAutorizoModif("ProdVs")
    if (retval < 0) then
		Call ABMprodvs_clear
		Call ABMprodvs_refresh
		return (-2)
    endif

    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN
        RESETFLAG admin:mode_flags,update
        adt_prodvs_tumst = common:time_of_day
        adt_prodvs_fumst = common:system_date
        CALL CDSprodvs_save
        IF (RETVAL == 0) THEN
        	CALL MISCbrowser_save
        END IF
        CALL drv:side_bar_disable
       ;SMC journalizo Modificacion
        call post:MISCJournalTablas
    ELSE
        IF (TESTFLAG(admin:mode_flags,delete)) THEN
            RESETFLAG admin:mode_flags,delete
            CALL MISCind_prodvs
            ;SMC Modificacion para Testear por impactos antes de Borrar.
            ;    Si se detecta impacto, se pregunta si se desea imprimir el reporte
            call lib:MISCchk_impacto
            if (retval < 0) then
                return (retval)
            endif
	        CALL lib:adt_delete_verify
	        IF (RETVAL == 0) THEN
	        	CALL drv:side_bar_disable
	          	CALL CDSprodvs_del
	          	IF (RETVAL != 0) THEN
	            	drv:button = drv:save_button
	            	CALL drv:but_up_enable
	            	RETURN (-1)
	          	ELSE
	            	CALL MISCbrowser_delete
	            	;SMC journalizo Modificacion
	            	call post:MISCJournalTablas
	            	Call ABMprodvs_clear
	            	Call ABMprodvs_refresh
	            	//CALL CSR:proc_list(170,LST:LISTprodvs_flds)
	            	//CALL CSR:proc_list(190,LST:LISTprodvs_flds)
	            	RETURN (-1)
	          	END IF
			END IF
		ELSE
	        IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
	        	RESETFLAG admin:mode_flags,imprimir
	          	/* siaf:adt_tabla_context = DSC:adt_prodvs_context
	          	siaf:INDencab_lis = OFB:MISCencab_prodvs
	          	siaf:INDselect_tabla = OFB:CDSprodvs_select
	          	siaf:INDpaso_str_tabla = OFB:MISCpaso_str_prodvs
	          	siaf:INDestado_clave = OFB:MISCclave_prodvs
	          	siaf:INDadt_sval = 0
	          	CALL siaf:TRANimprimo_driver*/
                
                //Inicio gpb:AUT-2415 
                /*CALL MISCdumptable 
                  CALL CDSdumptable*/  
						    //resguardo los valores originales
						    LET l_tabla = admin:tabla 
						    LET l_INDCamposTablas = post:INDCamposTablas                  
                CALL MISCdumptableNew 
								admin:tabla = "ProdVs"
								post:INDCamposTablas = LST:post:LISTprodvs_flds
                CALL CDSdumptableNew  
                //recupero los valores originales
								LET admin:tabla = l_tabla
								LET post:INDCamposTablas = l_INDCamposTablas
                //Fin gpb:AUT-2415 
                
				Call ABMprodvs_clear
	            Call ABMprodvs_refresh
	            //CALL CSR:proc_list(170,LST:LISTprodvs_flds)
	          	//CALL CSR:proc_list(190,LST:LISTprodvs_flds)
	          	RETURN (-1)
			END IF
		END IF
	    RETURN (0)
    END IF
	Call ABMprodvs_clear
	Call ABMprodvs_refresh
    //CALL CSR:proc_list(170,LST:LISTprodvs_flds)
    //CALL CSR:proc_list(190,LST:LISTprodvs_flds)
    RETURN (-1)
END SUB

/*******/
