/****o* Consulta TrackAndTrace/OFB:post:SENDhdr_tyt
* NOMBRE
*   OFB:post:SENDhdr_tyt
* DESCRIPCION
*   Rutina que genera el header de los mensajes de Consulta TrackAndTrace
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:SENDconsulta_tyt
* DOCUMENTACION
*   NI50606 - Imagen en Guarda
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDhdr_tyt
	LOCAL l_byte LIKE tes:idx
	
	IF (TESTFLAG(tlr:controla_firma,cancelacion)) THEN
		common:csr_string = 0x400
	ELSE
		common:csr_string = 0x200
	END IF
	COMM PUT common:csr_string MSG TYPE BINARY LENGTH 2

	//Bits 01-08
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b001)) THEN
		l_byte = l_byte ^ 0x80
	END IF
	IF (TESTFLAG(post:flags_mensaje,b002)) THEN
		l_byte = l_byte ^ 0x40
	ENDIF
	IF (TESTFLAG(post:flags_mensaje,b003)) THEN
		l_byte = l_byte ^ 0x20
	END IF
	IF (TESTFLAG(post:flags_mensaje,b007)) THEN
		l_byte = l_byte ^ 0x02
	END IF	
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 08-16
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b011)) THEN
		l_byte = l_byte ^ 0x20
	END IF
	IF (TESTFLAG(post:flags_mensaje,b012)) THEN
		l_byte = l_byte ^ 0x10
	END IF
	IF (TESTFLAG(post:flags_mensaje,b013)) THEN
		l_byte = l_byte ^ 0x08
	END IF
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 16-24
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b024)) THEN
		l_byte = l_byte ^ 0x01
	END IF
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//24-32
	l_byte = 0x00
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 32-40
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b037)) THEN
		l_byte = l_byte ^ 0x08
	END IF
	IF (TESTFLAG(post:flags_mensaje,b039)) THEN
		l_byte = l_byte ^ 0x02
	END IF
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 40-48
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b041)) THEN
		l_byte = l_byte ^ 0x80
	ENDIF
	IF (TESTFLAG(post:flags_mensaje,b044)) THEN
		l_byte = l_byte ^ 0x10
	END IF
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 48-56
	l_byte = 0x00
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	//Bits 56-64
	l_byte = 0x00
	IF (TESTFLAG(post:flags_mensaje,b060)) THEN
		l_byte = l_byte ^ 0x10
	END IF
	COMM PUT l_byte MSG TYPE BINARY LENGTH 1

	IF (TESTFLAG(post:flags_mensaje,b001)) THEN
		//Bits 064-072
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 073-080
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 080-088 
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 088-096
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 096-104
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 104-112
		l_byte = 0x00
		IF (TESTFLAG(post:flags_mensaje,b105)) THEN
			l_byte = l_byte ^ 0x80
		END IF
		IF (TESTFLAG(post:flags_mensaje,b106)) THEN
			l_byte = l_byte ^ 0x40
		END IF
		IF (TESTFLAG(post:flags_mensaje,b107)) THEN
			l_byte = l_byte ^ 0x20
		END IF
		IF (TESTFLAG(post:flags_mensaje,b108)) THEN
			l_byte = l_byte ^ 0x10
		END IF
		IF (TESTFLAG(post:flags_mensaje,b109)) THEN
			l_byte = l_byte ^ 0x08
		END IF
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1

		//Bits 112-120
		l_byte = 0x00
		IF (TESTFLAG(post:flags_mensaje,b117)) THEN
			l_byte = l_byte ^ 0x08
		END IF
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1		

		//Bits 120-128
		l_byte = 0x00
		COMM PUT l_byte MSG TYPE BINARY LENGTH 1
	END IF

	CALL post:SENDhdr_datos_tyt
	
	CLEARFIELD post:datos_msg095
	CLEARFIELD post:datos_msg096
	CLEARFIELD post:datos_msg097
	CLEARFIELD post:datos_msg098
	CLEARFIELD post:datos_msg099
	CLEARFIELD post:datos_msg105
	CLEARFIELD post:datos_msg106
	CLEARFIELD post:datos_msg107
	CLEARFIELD post:datos_msg108
	CLEARFIELD post:datos_msg110
	CLEARFIELD post:datos_msg111
END SUB

/*******/
