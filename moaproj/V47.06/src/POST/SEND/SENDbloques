/****o* Pendientes de agrupación/OFB:post:SENDbloques
* NOMBRE
*   OFB:post:SENDbloques
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:TRANabm_bloques
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDbloques
	LOCAL l_tabla LIKE admin:tabla 
	LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

	//Se modifica el seteo de botones del abm. Diego Priore 11-05-2000
	;// Rutina agregada para la adm. y journ.de tablas, Mariano Gecik.-
	CALL post:MISCAutorizoModif("bloques")
	if (retval < -1) then
		return (-2)
	endif
	IF (retval == -1) THEN
		IF (op:adt_temp_accion == "ACT.") THEN
			;CDS FINDAGAIN DSC:adt_bloques_ctx_pl nolock
			if (posPickList != 0)
				CDS findn DSC:adt_bloques_ctx_pl 1 posPickList
				;CDS SETRECORD DSC:adt_bloques_ctx_pl posPickList
				posPickList = 0
			else
				if (eligioPickList)
					CDS FINDNEXT DSC:adt_bloques_ctx_pl nolock
				else
					clearfield op:adt_temp_accion
					RETURN (-1)
				endif
			endif

			if (cdsretval == 0)
				CDS EXTRACT DSC:adt_bloques_ctx_pl ALL
				CALL CSR:proc_list(190,LST:LISTBloque_fld)
				setvaldone adt_bloque_serv
				drv:button = 25
				CALL drv:but_enable
				drv:button = 26
				CALL drv:but_enable
				drv:button = 27
				CALL drv:but_disable
				drv:button = 28
				CALL drv:but_disable
				drv:button = 2
				CALL drv:but_enable
				nextfield post:adt_bloque_precio
				;nextfield adt_opcserv_opci
				;		    drv:button = 3
				;		    CALL drv:but_enable
				drv:button = drv:last_button
				CALL drv:but_up_enable
			endif
	  END IF
		clearfield op:adt_temp_accion
    return (-2)
  END IF

	CALL CSR:proc_list(190,LST:LISTBloque_fld)
	drv:save_button = drv:last_button
	IF (TESTFLAG(admin:mode_flags,update)) THEN
		CALL CDSbloques_save
		CALL drv:side_bar_disable
		RESETFLAG admin:mode_flags,update
		;// Rutina agregada para la adm. y journ.de tablas, Mariano Gecik.-
		CALL post:MISCJournalTablas
	ELSE
		IF (TESTFLAG(admin:mode_flags,delete)) THEN
			RESETFLAG admin:mode_flags,delete
			CALL lib:MISCchk_impacto

			IF (RETVAL < 0) THEN
				RETURN (RETVAL)
			END IF
			
      CALL lib:adt_delete_verify
      IF (RETVAL == 0) THEN
        CALL drv:side_bar_disable
        CALL CDSbloques_del
        IF (RETVAL != 0) THEN
          drv:button = drv:save_button
          CALL drv:but_up_enable
          RETURN (-1)
        ELSE
          CALL post:MISCJournalTablas
          CALL CSR:proc_list(170,LST:LISTBloque_fld)
          CALL CSR:proc_list(190,LST:LISTBloque_fld)
          RETURN (-1)
        END IF
      END IF
    ELSE
	    IF (testflag(admin:mode_flags,imprimir)) THEN
				RESETFLAG admin:mode_flags,imprimir
				/* Se imprime el listado en un archivo ML - 19/05/2000*/
				
		    //Inicio gpb:AUT-2415 
		    /*CALL MISCdumptable 
		     CALL CDSdumptable*/  
				//resguardo los valores originales
				LET l_tabla = admin:tabla 
				LET l_INDCamposTablas = post:INDCamposTablas		     
		    CALL post:MISCdumptableNew 
				admin:tabla = "bloques"
				post:INDCamposTablas = LST:LISTBloque_fld
		    CALL post:CDSdumptableNew  
		    //recupero los valores originales
				LET admin:tabla = l_tabla
				LET post:INDCamposTablas = l_INDCamposTablas
		    //Fin gpb:AUT-2415 
				
				CALL CSR:proc_list(170,LST:LISTmotpv_flds)
				CALL CSR:proc_list(190,LST:LISTmotpv_flds)
				RETURN (-1)
			END IF
    END IF
    RETURN (-1)
  END IF
  CALL CSR:proc_list(170,LST:LISTBloque_fld)
  CALL CSR:proc_list(190,LST:LISTBloque_fld)
  RETURN (-1)

  ENABLECONTROL drv:PBcb5
  UNPROTFIELD adt_bloque_dest

END SUB

/*******/
