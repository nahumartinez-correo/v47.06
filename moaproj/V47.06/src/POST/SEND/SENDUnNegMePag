/****o* Pendientes de agrupación/OFB:post:SENDUnNegMePag
* NOMBRE
*   OFB:post:SENDUnNegMePag
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postSEND.h"

SUB post:SENDUnNegMePag
    ;SMC Autorizo Modificaciones
    call post:MISCAutorizoModif("UnNegMePag")
    if (retval < 0) then
	   return (-2)
    endif

    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN
       CALL CDSUnNegMePag_save
       CALL drv:side_bar_disable
       RESETFLAG admin:mode_flags,update
       ;SMC journalizo Modificacion
       call post:MISCJournalTablas
    ELSE
       IF (TESTFLAG(admin:mode_flags,delete)) THEN
          RESETFLAG admin:mode_flags,delete
          call MISCind_UnNegMp
            ;SMC Modificacion para Testear por impactos antes de Borrar.
            ;    Si se detecta impacto, se pregunta si se desea imprimir el reporte
            call lib:MISCchk_impacto
            if (retval < 0) then
                return (retval)
            endif
          CALL lib:adt_delete_verify
          IF (RETVAL == 0) THEN
             CALL drv:side_bar_disable
             CALL CDSUnNegMePag_del
             IF (RETVAL != 0) THEN
                drv:button = drv:save_button
                CALL drv:but_up_enable
                RETURN (-1)
             ELSE
                ;SMC journalizo Modificacion
                call post:MISCJournalTablas
                CALL CSR:proc_list(170,LST:LISTUnNegMePag_flds)
                CALL CSR:proc_list(190,LST:LISTUnNegMePag_flds)
                RETURN (-1)
             END IF
          END IF
       ELSE
          IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
             RESETFLAG admin:mode_flags,imprimir
           /*  siaf:adt_tabla_context = DSC:adt_UnNegMePag_ctx
             siaf:INDencab_lis = OFB:MISCencab_UnNegMePag
             siaf:INDselect_tabla = OFB:CDSUnNegMePag_select
             siaf:INDpaso_str_tabla = OFB:MISCpaso_str_UnNegMe
             siaf:INDestado_clave = OFB:MISCclave_UnNegMePag
             siaf:INDadt_sval = 0
             CALL siaf:TRANimprimo_driver*/
             CALL MISCdumptable
             CALL CDSdumptable
             CALL CSR:proc_list(170,LST:LISTUnNegMePag_flds)
             CALL CSR:proc_list(190,LST:LISTUnNegMePag_flds)
             RETURN (-1)
          END IF
       END IF
       RETURN (-1)
    END IF
    CALL CSR:proc_list(170,LST:LISTUnNegMePag_flds)
    CALL CSR:proc_list(190,LST:LISTUnNegMePag_flds)
    RETURN (-1)
END SUB

/*******/
