/****o* Pendientes de agrupación/OFB:post:RCVEgral_polizas
* NOMBRE
*   OFB:post:RCVEgral_polizas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postrcve.h"

SUB post:RCVEgral_polizas

	local apun like siaf:idx
	local cant like giros:cantidad_coi_comm
	cant = 0

	// Blanquear Campos de Comunicacion.
	call csr:proc_list(F_CLEAR,LST:giros:LISTcomunic_fld)
	call csr:proc_list(F_CLEAR,LST:giros:LISTcomunic_inter)
	call csr:proc_list(F_CLEAR,LST:post:LISTcomunic_polizas)

	While ( MSG < MSGEND )

		if (testflag(giros:flag_viajes_giros,BulkFld_61)) then
       			resetflag giros:flag_viajes_giros,BulkFld_61
       		 elseif (testflag(giros:flag_viajes_giros,BulkFld_62))
        		resetflag giros:flag_viajes_giros,BulkFld_62
        	elseif (testflag(giros:flag_viajes_giros,BulkFld_63))
          		resetflag giros:flag_viajes_giros,BulkFld_63
        	else
            		break    
       		endif

    	   	COMM get common:csr_string from MSG TYPE BCD LENGTH 2
 	      	Fprint post:codigo_impre "%d" common:csr_string
 	      	apun = post:codigo_impre		

 	      	While ( apun > 0 )

    	   		COMM get common:csr_string from MSG TYPE BCD LENGTH 2
   		     	Fprint post:codigo_impre "%d" common:csr_string  
	
 	           	// Resto los tres Byte de la longitud del Campo
  	          	// el 2 es de los dos byte de la longitud
  	        	apun = apun - post:codigo_impre - 2
  	        	post:codigo_impre = post:codigo_impre - 3
         
  	        	comm get common:csr_string from msg type ASCII length 3
  	        	select (common:csr_string)
			case "020"
  	          		comm get post:Consulta_comm from msg type ASCII length post:codigo_impre
				break
			case "024"
 	           		comm get giros:Usuario_comm from msg type ASCII length post:codigo_impre
				break
			case "026"
 	           		comm get giros:Sucursal_comm from msg type ASCII length post:codigo_impre
				break
			case "030"
 	           		comm get giros:Password_comm from msg type ASCII length post:codigo_impre
				break
			case "032"
 	           		comm get giros:Firma_comm from msg type ASCII length post:codigo_impre
				break
			case "040"
 	           		comm get post:DestNroCalle_comm from msg type ASCII length post:codigo_impre
				break
			case "043"
 	           		comm get giros:Provincia_comm from msg type ASCII length post:codigo_impre
				break
			case "046"
 	           		comm get post:DestCodPostal_comm from msg type ASCII length post:codigo_impre
				break
			case "074"
			case "089"
	            	comm get common:csr_string_aux from msg type ASCII length post:codigo_impre
				break
			case "099"
	            		comm get post:Id_aplic_comm from msg type ASCII length post:codigo_impre
				break
			case "125"
  	          		comm get giros:EstadoGiro_comm from msg type ASCII length post:codigo_impre
				break
			case "170"
 	           		comm get post:Remitente_comm from msg type ASCII length post:codigo_impre
				break
			case "171"
 	           		comm get post:Destinatario_comm from msg type ASCII length post:codigo_impre
				break
			case "172"
  	          		comm get post:DestLocalidad_comm from msg type ASCII length post:codigo_impre
				break
			case "173"
   	         		comm get post:DestSufijo_comm from msg type ASCII length post:codigo_impre
				break
			case "174"
 	           		comm get post:DestCalle_comm from msg type ASCII length post:codigo_impre
				break
			case "175"
 	           		comm get post:DestPiso_comm from msg type ASCII length post:codigo_impre
				break
			case "176"
  	          		comm get post:DestDepto_comm from msg type ASCII length post:codigo_impre
				break
			case "177"
 	           		comm get post:DestTelefono_comm from msg type ASCII length post:codigo_impre
				break
			case "178"
 	           		comm get post:DineroRobado_comm from msg type ASCII length post:codigo_impre
				break
			case "179"
            			comm get post:ImporteTGE_comm from msg type ASCII length post:codigo_impre
						post:ImporteTGE_comm = post:ImporteTGE_comm / 100
				break
			case "180"
            			comm get post:AlicuotaTGE_comm from msg type ASCII length post:codigo_impre
				break
			case "181"
            			comm get post:ImporteTPA_comm from msg type ASCII length post:codigo_impre
						post:ImporteTPA_comm = post:ImporteTPA_comm / 100
				break
			case "182"
            			comm get post:AlicuotaTPA_comm from msg type ASCII length post:codigo_impre
				break
			case "183"
            			comm get post:Poliza_comm from msg type ASCII length post:codigo_impre
				break
			case "184"
            			comm get post:CodigoTT_comm from msg type ASCII length post:codigo_impre
				break
			case "185"
            			comm get post:ValorDec_comm from msg type ASCII length post:codigo_impre
				break
			case "186"
            			comm get post:Peso_comm from msg type ASCII length post:codigo_impre
				break
			case "187"
            			comm get post:TipoPieza_comm from msg type ASCII length post:codigo_impre
				break
			case "188"
            			comm get post:CodProd1_comm from msg type ASCII length post:codigo_impre
				break
			case "189"
            			comm get post:DescProd1_comm from msg type ASCII length post:codigo_impre
				break
			case "190"
            			comm get post:CodProd2_comm from msg type ASCII length post:codigo_impre
				break
			case "191"
            			comm get post:DescProd2_comm from msg type ASCII length post:codigo_impre
				break
			case "192"
            			comm get post:Fecha1Vto_comm from msg type ASCII length post:codigo_impre
				break
			case "193"
            			comm get post:Fecha2Vto_comm from msg type ASCII length post:codigo_impre
				break
  	       	case else 
        			Fprint common:csr_string \
				"EL CODIGO DE CAMPO ( %s ) NO ES VALIDO",\
				common:csr_string
        	  		msgBox common:csr_string,OFB_OK ,"Error"
                 		let hcomm:tran_status = HOST_REJECTED   
        	 		Return -2 
		 		break
	 		end select

   		end while
	end while

        retval = 0

	call post:MISCverif_pol_firma
	If ( Retval < 0 )
 	   if (!testflag(tlr:controla_marca,cancel)) //NO 400
		// Rechazo por firma invalida.
		if (!testflag(tlr:tran_flags,correction))
			IF (!TESTFLAG(giros:tran_send_mode,cancelacion))
				// estoy en directa y no es una cancelacion
				if ( giros:codigo_procesamiento == 998001 || giros:codigo_procesamiento == 998002 || giros:consulta == 1)
				    // CANCELACION - C. SIMPLE -C. MULTIPLE
					IF (TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options == "REC_CAIDAS_VUELO")) THEN
					FPRINT common:csr_string_171,"Error en Verificacion Firma\n . Hora: %e ",common:time_of_day
					CALL batch:MISCgeneraLog(common:csr_string_171,"AMBOS","N")
					ELSE 
			  		     msgbox "Error en Verificacion Firma",OFB_OK,"Error"
		    			END IF
	
					common:trap_reset = OFB:drv:KEYSreset_esc
					let siaf:mensaje = "RECH. FIRMA INVALIDA" 
					let giros:err_firma = -1
					let hcomm:tran_status = RCV_ERROR
					return -2

				else
				     fprint giros:mensaje_transaccion \
				     "FIRMA INVALIDA LA TRANSACCION SERA CANCELADA"
	        			IF (TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options == "REC_CAIDAS_VUELO")) THEN
						FPRINT common:csr_string_171,"%s\n . Hora: %e ",giros:mensaje_transaccion,common:time_of_day
						CALL batch:MISCgeneraLog(common:csr_string_171,"AMBOS","N")
					ELSE 
						msgbox giros:mensaje_transaccion OFB_OK "Error"
					END IF	        										
					setflag tlr:controla_firma,cancelacion
					let giros:err_firma = -1
					let hcomm:tran_status = HOST_REJECTED
					let siaf:mensaje = "RECH. FIRMA INVALIDA" 
					return -2
				end if
			ELSE
				// es una cancelacion
				let hcomm:tran_status = HOST_REJECTED
				let siaf:mensaje = "RECH. FIRMA INVALIDA"
				let giros:mensaje_transaccion = "CANC. RECHAZADA POR FIRMA INVALIDA"
				resetflag tlr:controla_firma,cancelacion
			END IF					
		else 	// Estoy en REVERSA
			// Firma invalida en reverso
			let hcomm:tran_status = HOST_REJECTED
			let siaf:mensaje = "RECH. FIRMA INVALIDA"
			let giros:mensaje_transaccion = "REV. RECHAZADO POR FIRMA INVALIDA"
			resetflag tlr:controla_firma,cancelacion
		endif
   	 end if
	else
	// Firma esta OK
	// Si estoy en directa, la transaccion esta ok.
	if (!testflag(tlr:controla_marca,cancel))
 	  if (!testflag(tlr:controla_firma,cancelacion))
		resetflag tlr:controla_firma,cancelacion
		let giros:err_firma = 0
		let hcomm:tran_status = HOST_ACCEPTED
		let siaf:mensaje = "TRANSACCION ACEPTADA"

		/*Si no es cancelacion*/
		IF (!TESTFLAG(giros:tran_send_mode,cancelacion))
				FPRINT giros:mensaje_transaccion "TRANSACCION  ACEPTADA"
		ELSE //F.OK - 200 - Flag Firma != Set - SI Canc
				FPRINT giros:mensaje_transaccion "CANCELACION ACEPTADA"		
		END IF

    else
		// Estoy en una cancelacion, no se controlo firma. La transaccion
		// original fue cancelada.
	    resetflag tlr:controla_firma,cancelacion
		if (hcomm:tran_status == HOST_ACCEPTED)
			// la cancelacion fue aceptada
			// marco la directa como rechazada porque se reverso.
			let siaf:mensaje = "RECH. FIRMA INVALIDA" 
			let giros:mensaje_transaccion = "RECH. FIRMA INVALIDA" 
			let hcomm:tran_status = HOST_REJECTED
			CLEARFIELD lib:stat_message
			REFRESH lib:stat_message					
			return -2
		else
			// La cancelacion por firma invalida fue rechazada.
			let hcomm:tran_status = HOST_ACCEPTED
		   	fprint giros:mensaje_transaccion "TRANSACCION  ACEPTADA."
		endif
 	  endif
	else
		let giros:err_firma = 0					
		let siaf:mensaje = "TRANSACCION ACEPTADA"
  	 	fprint giros:mensaje_transaccion "TRANSACCION  ACEPTADA."
	end if
	end if
END SUB

/*******/
