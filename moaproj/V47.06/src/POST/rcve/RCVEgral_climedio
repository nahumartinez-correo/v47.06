/****o* Pendientes de agrupación/OFB:post:RCVEgral_climedio
* NOMBRE
*   OFB:post:RCVEgral_climedio
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postrcve.h"

SUB post:RCVEgral_climedio

call post:MISCverif_firma_cm
if (retval < 0 )
	if (!testflag(tlr:controla_marca,cancel))
		if (!testflag(tlr:tran_flags,correction))
			if (!testflag(giros:tran_send_mode,cancelacion))
				// estoy en directa y no es una cancelacion
				if ( giros:codigo_procesamiento != 997026 && \
				     giros:codigo_procesamiento != 997027 )
					if (testflag(common:rt_flags,batch_mode) && \
					    (batch:batch_options == "REC_CAIDAS_VUELO")) then
						fprint common:csr_string_171,\
						"Error en Verificacion Firma\n . Hora: %e ",\
						common:time_of_day
						call batch:MISCgeneraLog\
						(common:csr_string_171,"AMBOS","N")
					else
						msgbox "Error en Verificacion Firma",OFB_OK,"Error"
					end if
					common:trap_reset = OFB:drv:KEYSreset_esc
					let siaf:mensaje = "RECH. FIRMA INVALIDA" 
					let giros:err_firma = -1
					let hcomm:tran_status = RCV_ERROR
					return -2
				else
					fprint giros:mensaje_transaccion \
					"FIRMA INVALIDA LA TRANSACCION SERA CANCELADA"
	        			if (testflag(common:rt_flags,batch_mode) && \
					   (batch:batch_options == "REC_CAIDAS_VUELO")) then
						fprint common:csr_string_171,\
						"%s\n . Hora: %e ",\
						giros:mensaje_transaccion,common:time_of_day
						call batch:MISCgeneraLog\
						(common:csr_string_171,"AMBOS","N")
					else
						msgbox giros:mensaje_transaccion OFB_OK "Error"
					end if
					setflag tlr:controla_firma,cancelacion
					let giros:err_firma = -1
					let hcomm:tran_status = HOST_REJECTED
					let siaf:mensaje = "RECH. FIRMA INVALIDA" 
					return -2
				end if
			else	// es una cancelacion
				let hcomm:tran_status = HOST_REJECTED
				let siaf:mensaje = "RECH. FIRMA INVALIDA"
				let giros:mensaje_transaccion = "CANC. RECHAZADA POR FIRMA INVALIDA"
				resetflag tlr:controla_firma,cancelacion
			end if
		else 	// estoy en reversa
			// Firma invalida en reverso
			let hcomm:tran_status = SEND_RESET
			let giros:mensaje_transaccion = \
			"REV. RECHAZADO POR FIRMA INVALIDA.  LA TRANSACCION SE CANCELARA."
			resetflag tlr:controla_firma,cancelacion
		endif
    	end if
else
	// Firma esta OK
	// Si estoy en directa, la transaccion esta ok.
	if (!testflag(tlr:controla_marca,cancel))
		if (!testflag(tlr:controla_firma,cancelacion))
			resetflag tlr:controla_firma,cancelacion
			let giros:err_firma = 0
			let hcomm:tran_status = HOST_ACCEPTED
			if (RegularizaContingen == "S") then
			    let siaf:mensaje = "TRANSACCION ACEPTADA - SALIDA FORZADA POR CONTINGENCIA"
			else
			    let siaf:mensaje = "TRANSACCION ACEPTADA"
            end if
			if (!testflag(giros:tran_send_mode,cancelacion))
				fprint giros:mensaje_transaccion "TRANSACCION  ACEPTADA"
			else
				fprint giros:mensaje_transaccion "CANCELACION ACEPTADA"		
			end if
		else
			// Estoy en una cancelacion, no se controlo firma. La transaccion
			// original fue cancelada.
			resetflag tlr:controla_firma,cancelacion
				
			if (hcomm:tran_status == HOST_ACCEPTED)
				// la cancelacion fue aceptada
				// marco la directa como rechazada porque se reverso.
				let siaf:mensaje = "RECH. FIRMA INVALIDA" 
				let giros:mensaje_transaccion = "RECH. FIRMA INVALIDA" 
				let hcomm:tran_status = HOST_REJECTED
				return -2
			else
				// La cancelacion fue rechazada.
				let hcomm:tran_status = HOST_ACCEPTED
				fprint giros:mensaje_transaccion "TRANSACCION  ACEPTADA"
			endif
		endif
	else	
		let giros:err_firma = 0					
		if (RegularizaContingen == "S") then
		    let siaf:mensaje = "TRANSACCION ACEPTADA - SALIDA FORZADA POR CONTINGENCIA"
		else
		    let siaf:mensaje = "TRANSACCION ACEPTADA"
        end if
  		fprint giros:mensaje_transaccion "TRANSACCION  ACEPTADA"
	end if
		
end if

END SUB

/*******/
