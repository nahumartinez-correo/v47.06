/****o* Pendientes de agrupación/OFB:post:MISCcheckTipoCli
* NOMBRE
*   OFB:post:MISCcheckTipoCli
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcheckTipoCli(prmTipo)
/*ABM DE COMBOS: Controles y chequeos para los tipos de clientes asociados*/

/*Busco los datos del servicio asociado al combo*/
CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:adt_serv_context \
        WHERE adt_serv_serv == FLD:post:adt_cb_cod
CDS FINDFIRST DSC:adt_serv_context NOLOCK
LET lib:err_retval = CDSRETVAL
IF (lib:err_retval == -801) THEN
    /*Desmarco y muestro error*/
    CALL post:MISCdesmarcoCheck(prmTipo,"No se encontro informacion acerca del servicio")
    CDS ENDSELECT DSC:adt_serv_context
    RETURN (-2)
END IF
CDS EXTRACT DSC:adt_serv_context ALL
CDS ENDSELECT DSC:adt_serv_context
/*Segun el tipo que fue chequeado hago controles...*/
SELECT (prmTipo)
    CASE "CtaCorr"
        /*Si el servicio acepta canal MAYORISTA o AMBOS => se puede marcar CORPORATIVO*/
        IF (post:adt_serv_canal != "MAYORISTA" && post:adt_serv_canal != "AMBOS")
            CALL post:MISCdesmarcoCheck(prmTipo,"El Servicio asociado al combo no acepta canal MAYORISTA")
            RETURN (-2)
        ENDIF
        BREAK
    CASE "Minorista"
        /*Si el servicio acepta canal MAYORISTA o AMBOS => se puede marcar minorista*/
        IF (post:adt_serv_canal != "MINORISTA" && post:adt_serv_canal != "AMBOS")
            CALL post:MISCdesmarcoCheck(prmTipo,"El Servicio asociado al combo no acepta canal MINORISTA")
            RETURN (-2)
        ENDIF
        BREAK
    CASE "VentaUP"
    /*Si el servicio acepta UP => se puede marcar UP. Verifico que en la transac este este campo*/
        CDS JOIN FROM DSC:post:adt_UniNeg_table as "u" DSC:siaf:adt_tran_table as "t" \
        BECOMES DSC:post:adt_UniNeg_ctx \
        WHERE "t".siaf:adt_tran_codigo == FLD:post:adt_cb_cod && \
        "u".post:adt_unineg_cod == "t".siaf:adt_tran_fliatran && \
        "u".post:adt_unineg_admiteUP == "S"
        CDS FINDFIRST dsc:post:adt_UniNeg_ctx NOLOCK
        LET lib:err_retval = CDSRETVAL
        CDS ENDSELECT DSC:post:adt_UniNeg_ctx
        IF (lib:err_retval != 0) then
            CALL post:MISCdesmarcoCheck(prmTipo,"La unidad de negocio no acepta UP")
            RETURN (-2)
        END IF
        BREAK
END SELECT

RETURN (0)
END SUB

/*******/
