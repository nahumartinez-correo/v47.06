/****o* Pago en Destino/OFB:post:MISClst_docPED_close
* NOMBRE
*   OFB:post:MISClst_docPED_close
* DESCRIPCION
*   Extrae los datos del archivo para imprimir el reporte NOTAS DE CREDITO Y REFACTURACIONES PED
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:MISClst_docPED
* DOCUMENTACION
*   NI50479
*		NI50572 Digitalizacion de Reportes
* SOURCE
*/
#include "postmisc.h"

SUB post:MISClst_docPED_close(tipo,link_num)
	LOCAL l_cant LIKE siaf:i

	l_cant = 0

	FYIMSG CLEAR
	CALL CSR:file_close(link_num)

//NI50572 Digitalizacion de Reportes
	//IF (tipo == "I") THEN
	IF (tipo != "P") THEN	
			//NI50572 Digitalizacion de Reportes
			CALL tes:MISCflowPDF("docPED.lis")
			//Si es impreso y no es Cierre /Cierre Forzado de Sucursal/Tesoro
;;	 	IF (siaf:pantalla_impreso == "I" || RETVAL < 0) THEN  
			IF (siaf:pantalla_impreso == "I" && RETVAL == -5) THEN
				//Genero el PDF y lo imprimo
				CALL tes:MISCcrearPDF("docPED.lis")


;;					WHILE (l_cant < siaf:nro_copias)
;;			
;;							FPRINT common:tmpDirTemporal, "%s%s", common:dirTemporal, "docPED.lis"
;;							CALL CSR:file_open(7,common:tmpDirTemporal,"r")
;;							IF (RETVAL < 0) THEN
;;								MSGBOX "No se puede abrir el archivo a imprimir",0x00000000,"Error"
;;								//MFM - 2019 Agrego para que borre el archivo.
;;								FPRINT common:csr_string "cmd /c del %-s%-s", common:dirTemporal, "docPED.lis"
;;								CALL csr:create_process common:csr_string,SW_HIDE ,CSR_WAIT        
;;								EXEC common:csr_string
;;								RETURN 
;;							END IF 
;;							PRINTDOC OFB:siaf:PDOCfile_print_gral,laser, "Imprimiendo Documento, un momento por favor..." 
;;							IF (PRTRETVAL != 0) THEN
;;								FPRINT siaf:mensaje,"Error imprimiendo en impresora"
;;								MSGBOX siaf:mensaje,0x00000000,"Error"
;;							END IF 
;;							CALL CSR:file_close(7)
;;							l_cant = l_cant + 1
;;				END WHILE
			ENDIF
	END IF
	
	FPRINT common:csr_string "cmd /c del %-s%-s", common:dirTemporal, "docPED.lis"
	CALL csr:create_process common:csr_string,SW_HIDE ,CSR_WAIT        
	EXEC common:csr_string
  FYIMSG CLEAR
END SUB

/*******/
