/****o* Pendientes de agrupación/OFB:post:MISCcalcBonifBlq
* NOMBRE
*   OFB:post:MISCcalcBonifBlq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcalcBonifBlq()
LOCAL l_CodServ like siaf:codigo_siaf
LOCAL l_bloque like post:adt_promo_elemento
LOCAL l_tieneBoni like siaf:i

	CDS EXTRACT DSC:post:promoDetalleCli_ctx ALL
	l_CodServ = (SUBSTR(post:adt_promo_elemento,0,10))
	IF ((post:adt_promo_cliente == post:cli_tipo || \
		post:adt_promo_cliente == TODOS_LOS_CLIENTES) && \
		(l_CodServ == siaf:codigo_siaf || l_CodServ == post:tipo_produc2)) THEN
		l_bloque = (SUBSTR(post:adt_promo_elemento,13,20))
		l_tieneBoni = false
		IF (l_bloque == SELECCION_TODOS_BLOQUES) THEN
			l_tieneBoni = true
		ELSE
			IF (l_bloque == post:destino) THEN
				l_tieneBoni = true
			END IF
		END IF
		IF (l_tieneBoni == true) THEN
			if (post:adt_promo_tipoBon == TIPO_BONIF_VALOR && adt_promo_bon > adt_bloque_precio )
				return 0
			end if
			LET promoBlqTipoBon = adt_promo_tipoBon
			CALL post:MISCcalcBonifGral(promoBlqTipoBon, TIPO_BLOQUE)
			if (post:adt_promo_tipoBon == TIPO_BONIF_VALOR)
				CALL post:MISCdetalleBonifGral(post:adt_promo_desc,imp_bloques,"----",promo_imp_blq_tot,TIPO_BLOQUE, "")
			else
				CALL post:MISCdetalleBonifGral(post:adt_promo_desc,imp_bloques,post:adt_promo_bon,promo_imp_blq_tot,TIPO_BLOQUE, "")
			end if
			promo_desc = adt_promo_desc
			promo_cod = adt_promo_cod
			promo_inhibeUpServ = adt_promo_permiteUP
		END IF
		REFRESH post:fld_promo_imp
	END IF
END SUB

/*******/
