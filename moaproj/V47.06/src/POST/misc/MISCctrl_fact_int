/****o* Pendientes de agrupación/OFB:post:MISCctrl_fact_int
* NOMBRE
*   OFB:post:MISCctrl_fact_int
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCctrl_fact_int
local idx like siaf:i
local i_idx like siaf:i
local ind like siaf:i
local entro like common:csr_string
	
	siaf:i = 0 //Lo uso para contar la cantidad
	call csr:cleararray(vec_facturas)
	call csr:cleararray(docfis_tasa_por)
	call csr:cleararray(docfis_importe)
	call csr:cleararray(docfis_imp_siva)

	//Recorro el picklist de facturas
	let idx = 0
	let i_idx = PL_GETITEM + idx
	call csr:myPickcontrol(dsc:facturas_cliente,common:csr_string,i_idx)
	
	Do
		if (retval < 0)
	    	break
	    end if
		if (siaf:i == 10) then
			call csr:cleararray(vec_facturas)
			return (-2)
		end if
		
		siaf:importe = substr(common:csr_string,44,16)
		post:adt_serv_aliciva = substr(common:csr_string,61,6)
		
		CALL post:MISCgenerarIva
		
		ind = 0
		entro = "N"
		while (ind < 20 && docfis_tasa_por[ind].NUMCHARS != 0)
			if (docfis_tasa_por[ind] == post:adt_serv_aliciva)
				docfis_importe[ind] = docfis_importe[ind] + siaf:importe
				docfis_imp_siva[ind] = docfis_imp_siva[ind] + ImporteSinIva
				entro = "S"
				break
			end if
			ind = ind + 1
		end while
		if (entro == "N")
			docfis_tasa_por[ind] = post:adt_serv_aliciva
			docfis_importe[ind]  = siaf:importe
			docfis_imp_siva[ind] = ImporteSinIva
		end if
	
		vec_tipofact[siaf:i] = SUBSTR(common:csr_string,89,1)
      	vec_facturas[siaf:i] = SUBSTR(common:csr_string,91,15)
      	vec_impfact[siaf:i] = SUBSTR(common:csr_string,16,16)
      	vec_intfact[siaf:i] = SUBSTR(common:csr_string,44,16)
      	vec_ivaintfact[siaf:i] = SUBSTR(common:csr_string,61,6)
      	vec_seqfac[siaf:i] = SUBSTR(common:csr_string,107,15)
		
		siaf:i = siaf:i + 1
		
		let idx = idx + 1
	    let i_idx = PL_GETITEM + idx
	    call csr:myPickcontrol(dsc:facturas_cliente,common:csr_string,i_idx)
	    
	Loop

	
END SUB

/*******/
