/****o* Pendientes de agrupación/OFB:post:MISCesp_val_datos
* NOMBRE
*   OFB:post:MISCesp_val_datos
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCesp_val_datos
                // Inicializo los campos
                tes:adt_espv_importe  = 0
                tes:adt_espv_imp_inic = 0
                tes:adt_espv_imp_ent  = 0
                tes:adt_espv_imp_sal  = 0
                //*****Importe Inicial******//
                //Tabla UltMovEspv
                CDS SELECT FROM DSC:adt_umev_table BECOMES DSC:adt_umev_context WHERE \
                post:adt_umev_suc        == op:op_branch_id      && \
                post:adt_umev_op       == tes:adt_espv_id    && \
                post:adt_umev_es_tes     == tes:adt_espv_es_tesoro && \
                post:adt_umev_especie    == tes:adt_espv_cod     && \
                post:adt_umev_subespecie == tes:adt_espv_subcod  && \
                post:adt_umev_fecha      == siaf:fecha_proceso   && \
                post:adt_umev_tran       == 11110

                CDS FINDFIRST DSC:adt_umev_context NOLOCK
                IF (cdsretval == 0)
                   CDS EXTRACT DSC:adt_umev_context ALL
                   tes:adt_espv_imp_inic = post:adt_umev_impini
                   tes:adt_espv_importe  = post:adt_umev_impini
                END IF
                CDS ENDSELECT DSC:adt_umev_context


                //Tabla UltMovEspv
                CDS SELECT FROM DSC:adt_umev_table BECOMES DSC:adt_umev_context WHERE \
                post:adt_umev_suc        == op:op_branch_id      && \
                post:adt_umev_op       == tes:adt_espv_id   && \
                post:adt_umev_es_tes     == tes:adt_espv_es_tesoro && \
                post:adt_umev_especie    == tes:adt_espv_cod     && \
                post:adt_umev_subespecie == tes:adt_espv_subcod  && \
                post:adt_umev_fecha      == siaf:fecha_proceso   && \
                post:adt_umev_tran       != 11110
                CDS FINDFIRST DSC:adt_umev_context NOLOCK


                While (cdsretval == 0) //por UltMovEspv

                      CDS EXTRACT DSC:adt_umev_context ALL

                      tes:adt_espv_importe = tes:adt_espv_importe + (post:adt_umev_entrada - post:adt_umev_salida)
                      tes:adt_espv_imp_ent = tes:adt_espv_imp_ent + post:adt_umev_entrada
                      tes:adt_espv_imp_sal = tes:adt_espv_imp_sal + post:adt_umev_salida

                      CDS FINDNEXT DSC:adt_umev_context NOLOCK

                End while //Tabla UltMovEspv
                CDS UNLOCK DSC:adt_umev_context
                CDS ENDSELECT DSC:adt_umev_context

                CDS CLEARBUFFER DSC:espval_aux_ctx
                CDS APPEND DSC:espval_aux_ctx \
                tes:adt_espv_suc         \
                tes:adt_espv_es_tesoro   \
                tes:adt_espv_id          \
                tes:adt_espv_marca_cierr \
                tes:adt_espv_fecha       \
                tes:adt_espv_cod         \
                tes:adt_espv_subcod
                CDS APPEND DSC:espval_aux_ctx \
                tes:adt_espv_importe     \
                tes:adt_espv_imp_ent     \
                tes:adt_espv_imp_sal     \
                tes:adt_espv_imp_inic

                CDS INSERT DSC:espval_aux_ctx NOLOCK
                CDS UNLOCK DSC:espval_aux_ctx
END SUB

/*******/
