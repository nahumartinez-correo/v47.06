/****o* Pendientes de agrupación/OFB:post:MISCver_LoteCie_pend
* NOMBRE
*   OFB:post:MISCver_LoteCie_pend
* DESCRIPCION
*   Rutina que verifica si existen Lotes pendientes de Cierre
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:MISCopen_day_tlr
*		tes:CDSProximo_Estado(est)
*		tes:PRETcierre_suc
* DOCUMENTACION
*   NI50525 POS Integrado
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCver_LoteCie_pend(tipo)
	LOCAL l_retval LIKE lib:err_retval
	
;;	//gpb:Rutina de contingencia
;;	CALL post:MISCfix_LoteCie_pend(tipo)
	
	SELECT (tipo)
		CASE "APER_CAJA"
;;			CDS SELECT FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:OperacionesVPI_ctx WHERE \
;;				post:adt_opvpi_termi_win == common:window_node && \
;;				post:adt_opvpi_batchClose == "N"
;;			CDS FINDFIRST DSC:OperacionesVPI_ctx NOLOCK
;;    		IF (CDSRETVAL == 0)
;;	    		MSGBOX "EXISTE LOTE DE CIERRE PENDIENTE EN ESTA TERMINAL\nNO OLVIDE REALIZAR EL CIERRE CORRESPONDIENTE ANTES DE COMENZAR A OPERAR",0x00,"ATENCION!!!!!!"			
;;			END IF
				MSGBOX "SI TIENE UN LOTE DE CIERRE PENDIENTE EN ESTA TERMINAL\nNO OLVIDE REALIZAR EL CIERRE CORRESPONDIENTE ANTES DE COMENZAR A OPERAR",0x00,"ATENCION!!!!!!"			
			BREAK
		CASE "CIERRE_SUC"	
;;			CDS SELECT SEMIDISTINCT post:adt_opvpi_termi_win FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:OperacionesVPI_ctx WHERE \
;;				post:adt_opvpi_batchClose == "N" SORT "Terminal"
;;			CDS MULTIDISPLAY DSC:OperacionesVPI_ctx LISTcieLote_pend	
				MSGBOX "SI TIENE UN LOTE DE CIERRE PENDIENTE EN ALGUNA TERMINAL\nNO OLVIDE REALIZAR EL CIERRE CORRESPONDIENTE ANTES DE COMENZAR A OPERAR",0x00,"ATENCION!!!!!!"				
			BREAK
		CASE "CIERRE_CAJA"
;;			CDS SELECT FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:OperacionesVPI_ctx WHERE \
;;			post:adt_opvpi_termi_win == common:window_node && \
;;			post:adt_opvpi_batchClose == "N"
;;			CDS FINDFIRST DSC:OperacionesVPI_ctx NOLOCK
;;    	IF (CDSRETVAL == 0)
	    		l_retval = 0			
;;			ELSE 
;;				l_retval = -2
;;			END IF
			BREAK
	END SELECT
;; 	CDS ENDSELECT DSC:OperacionesVPI_ctx
 	RETURN l_retval 		
END SUB

/*******/
