/****o* Cobro por Cuenta de Terceros/OFB:post:MISCobtengo_cct_crem
* NOMBRE
*   OFB:post:MISCobtengo_cct_crem
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCconsultacct_crem
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-1684
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCobtengo_cct_crem(datos,long)

	/****************************************************************/
	/* OBTENER LAS ACTUALIZACIONES DEL MAESTRO DE CLIENTES    	    */
	/* BITS : 105,106,107 							                */
	/****************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local l_tipo_serv       like common:csr_string
	local l_desc_tipo_serv  like common:csr_string
	local l_canal           like common:csr_string
	local l_operacion       like common:csr_string
	local l_fecha_emision like post:fecha_vencimiento
		
	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2

	while ( posicion < longitud )

		post:adt_cct_ult_modif = substr(datos,posicion,14)
		posicion = posicion + 14

		post:adt_cct_comitente = substr(datos,posicion,10)
		posicion = posicion + 10

		post:adt_cct_cod_serv = substr(datos,posicion,8)
		posicion = posicion + 8

		post:adt_cct_def_cupon = substr(datos,posicion,10)
		posicion = posicion + 10

		post:adt_cct_cta_sap = substr(datos,posicion,5)
		posicion = posicion + 5

		post:adt_cct_comit_desc = substr(datos,posicion,35)
		posicion = posicion + 35
		call csr:trimfield(post:adt_cct_comit_desc)
		
		post:adt_cct_cta_om = substr(datos,posicion,10)
		posicion = posicion + 10

		post:adt_cct_domicilio = substr(datos,posicion,50)
		posicion = posicion + 50

		post:adt_cct_tipodoc = substr(datos,posicion,2)
		posicion = posicion + 2

		post:adt_cct_nrodoc = substr(datos,posicion,11)
		posicion = posicion + 11
		
		post:adt_cct_nis_liq = substr(datos,posicion,5)
		posicion = posicion + 5

		post:adt_cct_vig_inic = substr(datos,posicion,8)
		posicion = posicion + 8
		
		post:adt_cct_vig_fin = substr(datos,posicion,8)
		posicion = posicion + 8
		if (post:adt_cct_vig_fin == "00000000") then
		 	clearfield post:adt_cct_vig_fin
		endif
		
		post:adt_cct_id_serv = substr(datos,posicion,10)
		posicion = posicion + 10
		
		post:adt_cct_desc_serv = substr(datos,posicion,35)
		posicion = posicion + 35
		
		post:adt_cct_rend_fis = substr(datos,posicion,1)
		posicion = posicion + 1
		
		l_tipo_serv  = substr(datos,posicion,4)
		posicion = posicion + 4
		call csr:trimfield(l_tipo_serv)
		
		l_desc_tipo_serv = substr(datos,posicion,50)
		posicion = posicion + 50
		
		post:adt_cct_ctrl_venc = substr(datos,posicion,1)
		posicion = posicion + 1 
				
		post:adt_cct_cod_barra = substr(datos,posicion,1)
		posicion = posicion + 1
		
		post:adt_cct_long_cb = substr(datos,posicion,3)
		posicion = posicion + 3

		post:adt_cct_valid_std = substr(datos,posicion,1)
		posicion = posicion + 1
		call csr:trimfield(post:adt_cct_valid_std)
		
		post:adt_cct_letraserv = substr(datos,posicion,1)
		posicion = posicion + 1
		call csr:trimfield(post:adt_cct_letraserv)
		
		post:adt_cct_tipocupon = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_longcupon = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PI_id_cup = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PF_id_cup = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PI_imp = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PF_imp = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PD_imp = substr(datos,posicion,1)
		posicion = posicion + 1
		call csr:trimfield(post:adt_cct_PD_imp)
		
		post:adt_cct_CD_imp = substr(datos,posicion,3)
		posicion = posicion + 3
				
		post:adt_cct_PI_venc = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_PF_venc = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_cct_formvenc = substr(datos,posicion,8)
		posicion = posicion + 8
		call csr:trimfield(post:adt_cct_formvenc)
		CALL csr:fld_to_upper(post:adt_cct_formvenc)
		
		l_canal  = substr(datos,posicion,1)
		posicion = posicion + 1
		
		post:adt_cct_cta_cupon = substr(datos,posicion,17)
		posicion = posicion + 17 
		call csr:trimfield(post:adt_cct_cta_cupon)
		
		//Operacion (A=alta, B=baja, M=modificacion)
		l_operacion = substr(datos,posicion,1)
		posicion = posicion + 1
			
		fprint post:cct_ult_item,"%014.14s%010.10d%8.8s%010.10s",post:adt_cct_ult_modif,\
	post:adt_cct_comitente,post:adt_cct_cod_serv,post:adt_cct_def_cupon
	
		//Debo guardar en DGralSuc la ultima fecha de actualizacion post:adt_cct_ult_modif
		if (giros:adt_dgralsuc_Ufec_MC.numchars == 0) then
			giros:adt_dgralsuc_Ufec_MC = post:adt_cct_ult_modif
		else
			if (giros:adt_dgralsuc_Ufec_MC < post:adt_cct_ult_modif)
				giros:adt_dgralsuc_Ufec_MC = post:adt_cct_ult_modif
			endif 
		endif
		  
		if (l_tipo_serv == "CCT")
			//Actualizo ParamCCT
			call post:CDSUpdate_ParamCCT(l_operacion)
		else
		    //Se debe actualizar la CliMay_crem
			call post:CDSUpdate_CREM(l_operacion)
		end if
		//sino se pudo grabar la parametria corto el proceso
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if
		
	end while
	
	
	return loc_retval

END SUB

/*******/
