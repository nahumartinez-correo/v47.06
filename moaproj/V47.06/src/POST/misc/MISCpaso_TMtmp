/****o* Pendientes de agrupación/OFB:post:MISCpaso_TMtmp
* NOMBRE
*   OFB:post:MISCpaso_TMtmp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCpaso_TMtmp /*seguirla!!!!!*/
    CDS SELECT FROM DSC:TmplMot_tmp_tbl BECOMES DSC:TmplMot_tmp_ctx WHERE \
    adt_tmpl_cod == tmpl_tmp && \
    estado_tmpl == "P"
    CDS FINDFIRST DSC:TmplMot_tmp_ctx LOCK
    /*No hay ninguna modificacion Pendiente. Grabo los datos en una tabla temporal
    para acceder desde Modificaciones Pendientes*/
    IF (CDSRETVAL == -801)
        LET estado_tmpl = "P"
        CDS SELECT FROM TmplMot_aux_tbl BECOMES DSC:TmplMot_aux_ctx
        CDS FINDFIRST TmplMot_aux_ctx LOCK
        LET lib:err_retval = CDSRETVAL
        fecha_tmp = temp_fecha_tmp
        hora_tmp  = temp_hora_tmp
        //seq_tmp   = temp_seq_tmp
        seq_tmp   = op:adt_temp_seq
        op_tmp    = temp_op_tmp
        WHILE (lib:err_retval != -801)
            CDS EXTRACT TmplMot_aux_ctx ALL
            CDS CLEARBUFFER TmplMot_tmp_ctx
            CDS APPEND TmplMot_tmp_ctx \
            FLD:adt_tmpl_cod       \
            FLD:adt_tmpl_nromot    \
            FLD:adt_tmpl_motivo    \
            FLD:adt_tmpl_motmod    \
            FLD:adt_tmpl_motsubmod \
            FLD:adt_tmpl_mot_desc  \
            FLD:adt_tmpl_no_exclus \
            FLD:fecha_tmp          \
            FLD:hora_tmp           \
            FLD:op_tmp             \
            FLD:estado_tmpl		   \
            FLD:seq_tmp
            CDS INSERT TmplMot_tmp_ctx LOCK
            CDS FINDNEXT TmplMot_aux_ctx LOCK
            LET lib:err_retval = CDSRETVAL
        END WHILE
        CDS ENDSELECT TmplMot_aux_ctx
        CDS ENDSELECT TmplMot_tmp_ctx
        CALL MISCdel_TmplMot_aux
    ELSE
    /*Hay modificacion pendiente. No puedo grabar mas registros hasta que no se actualice
    el que esta pendiente*/
        ERRMSG LST:common:errmsg_list,DSC:mod_pend
        CALL MISCborro_TTemp
    END IF
END SUB

/*******/
