/****o* Notas de Credito CM/OFB:post:MISCProd_Incumplido
* NOMBRE
*   OFB:post:MISCProd_Incumplido
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   tipo_presu = PROFORMA
*   tipo_presu = SESION
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:SVAL99510,post:PCOL99510
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-354
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCProd_Incumplido(tipo_presu)
	
	LOCAL loc_imp       LIKE siaf:importe
    LOCAL loc_cant      LIKE siaf:cantidad
    LOCAL loc_codtx     LIKE siaf:codigo_siaf    
    LOCAL loc_INDtx     LIKE tlr:INDtran_name
    LOCAL loc_INDlist   LIKE drv:INDcur_list
    LOCAL loc_forfis    LIKE post:PreDForFis
    LOCAL loc_impconiva LIKE post:TotalSinIva
    LOCAL loc_impsiniva LIKE post:TotalSinIva
    LOCAL loc_totsiniva LIKE post:TotalSinIva
    LOCAL NroTrn 		LIKE post:PreDNroTrn
    LOCAL HayPresu 		LIKE lib:err_retval
    LOCAL NroAux 		LIKE tes:adt_evaux_prestran
    LOCAL loc_BonifCM	LIKE post:bonificaCM
    LOCAL loc_DctoCM	LIKE post:Dcto_CliMed
    LOCAL loc_AdmiteMP  LIKE post:AdmiteMP
    LOCAL lcodigo		LIKE siaf:codigo_siaf
    LOCAL lflia			LIKE siaf:adt_tran_fliatran
    LOCAL ltarifa		LIKE post:tarifa
    LOCAL lnro_asoc		LIKE post:PreDNroTrnAsoc
    LOCAL Hay_Remitos   LIKE post:bonificaCM
    LOCAL MarcaRemito	LIKE post:marca_remito
    LOCAL loc_DctoCliMed LIKE post:Imp_DctoCliMed
	LOCAL loc_INDtran	LIKE  drv:INDcur_tran
	LOCAL loc_siaf_importe	LIKE  siaf:importe
	LOCAL ind	LIKE  siaf:i
	local l_cantidad	like post:cantidad
		
	//Solicitud 50104
   /* if (tipo_presu == SESION) then
    	CALL CDSBorro_PresuDetOC //me parece que no tiene sentido que me meta con la presudetoc porque no tengo que 
    	//mostrar los productos agrupados..
    endif*/
    
    /* Resguardo los campos de la tx */

	//PS Cliente Medio - Bienes de Cambio : Se resguarda el campo Dcto_CliMed y Tarifa
	loc_DctoCM = post:Dcto_CliMed
	ltarifa    = post:tarifa
    loc_forfis  = post:PreDForFis
    loc_imp     = siaf:importe
    loc_cant    = siaf:cantidad
    loc_codtx   = siaf:codigo_siaf
    loc_INDtx   = tlr:INDtran_name
    loc_INDlist = drv:INDcur_list
    loc_INDtran = drv:INDcur_tran
    loc_impconiva = siaf:ImporteConIva
    loc_impsiniva = siaf:ImporteSinIva
    loc_totsiniva = post:TotalSinIva  
    loc_BonifCM = post:bonificaCM                                                            
	loc_AdmiteMP = post:AdmiteMP
	
	Hay_Remitos = "N"
	

	if (tipo_presu == SESION) then
		CDS SELECT FROM DSC:post:Fact_Incumplida_tbl BECOMES DSC:post:Fact_Incumplida_ctx WHERE \
    	post:op_operator_id == op:op_operator_id && \
    	post:adt_oc_nro == FLD:post:adt_oc_nro && \
    	post:marca_remito == "*"  && \
		ErrorPresu == FALSE
	else
		CDS SELECT FROM DSC:Fact_Incumplida_tbl BECOMES DSC:Fact_Incumplida_ctx WHERE \
		post:op_operator_id == op:op_operator_id && \
		post:marca_remito == "" && \
		ErrorPresu == FALSE
	endif
	
	cds findfirst dsc:Fact_Incumplida_ctx lock
	lib:err_retval = cdsretval
	
	if (lib:err_retval < 0 ) then
			MSGBOX "NO EXISTEN NOTAS DE CREDITO PENDIENTES DE EMISION",0X00,"AVISO"
			return -2
	end if
	
	post:tot_imp_remito = 0
	
	//importe de los remitos pagados con adelanto
	clearfield post:anticipo_rem_CM

	do
		clearfield post:remito_tarifa
		clearfield ErrorPresu
		if (lib:err_retval < 0 ) then
			break
		end if
		cds extract dsc:Fact_Incumplida_ctx all
		
		/*//Solicitud 50105
		if ( tipo_presu != PROFORMA) then
		//Actualizar la tabla AdelCM (poner * en los registros correspondientes al remito)	
			call post:CDSabmAdelCM("M", 0, 0, CM_CREM)
		endif*/
		
		//acumular en el campo post:tot_imp_remito
		post:tot_imp_remito = post:tot_imp_remito + post:remito_importe
		//grabar en la PRESU el total de los remitos y el importe de los remitos pagados con adelanto (post:anticipo_rem_CM)
	 	call CDSpresu_imp_remito
		
		/* Busco los productos asociados a eses factura*/
		Cds select from dsc:Prod_Incumplido_tbl becomes dsc:Prod_Incumplido_ctx where \
		post:op_operator_id == op:op_operator_id && \
		post:fact_id == post:fact_id 
		cds findfirst dsc:Prod_Incumplido_ctx lock
		do
			if (cdsretval < 0) then
				break
			end if
			//PS 9495 se borra este campo porque en el caso de una TX que no tarifa queda con el valor anterior
			clearfield siaf:importe
			
			cds extract dsc:post:Prod_Incumplido_ctx all
			
			fprint post:item_cantidad "%d.d",post:item_cantidad
			/* Limpio el importe donde calculo la tarifa */
			clearfield post:item_impaux
			call post:MISCArmo_PresuDetNC(tipo_presu)
			/* Acumulo el total del remito */
			if (tipo_presu == PROFORMA)
				if (post:item_efvo == "+") then
					post:remito_tarifa = post:remito_tarifa + post:item_impaux
				else
					post:remito_tarifa = post:remito_tarifa - post:item_impaux
				end if			
			else
				MarcaRemito = "*"
				cds clearbuffer dsc:Prod_Incumplido_ctx
				cds append dsc:Prod_Incumplido_ctx MarcaRemito as post:marca_remito \
				siaf:adt_tran_fliatran as post:item_flia 
				select (siaf:adt_tran_fliatran)
				case "TES"	
					cds append dsc:Prod_Incumplido_ctx post:tarifa as post:item_importe tes:adt_espv_aliciva as post:item_iva \
					array post:item_opc_iva \
					siaf:ImporteConIva siaf:ImporteSinIva as post:item_sin_iva
					//calculo el importe del credito a aplicar!!
					loc_siaf_importe = loc_siaf_importe + (post:item_importe_oc * item_cantidad)
					break
				case "CME"
					cds append dsc:Prod_Incumplido_ctx post:tarifa as post:item_importe post:adt_prodvs_aliciva as post:item_iva \
					array post:item_opc_iva  \
					post:ImporteConIva fld:post:ImporteSinIva as post:item_sin_iva
					//calculo el importe del credito a aplicar!!
					loc_siaf_importe = loc_siaf_importe + (post:item_importe_oc * item_cantidad)
					break
				case "CSV"
					cds append dsc:Prod_Incumplido_ctx post:tarifa as post:item_importe siaf:adt_mot_aliciva as post:item_iva \
					array post:item_opc_iva  \
					siaf:ImporteConIva siaf:ImporteSinIva as post:item_sin_iva
					//calculo el importe del credito a aplicar!!
					loc_siaf_importe = loc_siaf_importe + (post:item_importe_oc * item_cantidad)
					break
				case "CSP"
				case "CSE"
					cds append dsc:Prod_Incumplido_ctx post:tarifa as post:item_importe post:adt_serv_aliciva as post:item_iva \
					array post:ali_opc as array post:item_opc_iva 	//habria que ver si la alicuota esta en la misma posicion del opcional al que corresponde!!
					cds append dsc:Prod_Incumplido_ctx post:ImporteConIva post:ImporteSinIva as post:item_sin_iva \
					array FLD:post:siniva_opc array  FLD:post:siniva_opc4 
					cds append dsc:Prod_Incumplido_ctx post:cos_opc[0] as post:item_opc_importe[0] \
					post:cos_opc[1] as post:item_opc_importe[1] \
					post:cos_opc[2] as post:item_opc_importe[2] \
					post:cos_opc[3] as post:item_opc_importe[3] \
					post:cos_opc[4] as post:item_opc_importe[4] \
					post:cos_opc[5] as post:item_opc_importe[5]  
					//calculo el importe del credito a aplicar!!
					loc_siaf_importe = loc_siaf_importe + (post:item_importe_oc * item_cantidad)
					//sumar opcionales
					ind = 0
					while (ind < 6)
						loc_siaf_importe =  loc_siaf_importe + (item_opc_imp_oc[ind] * item_cantidad)
						ind = ind + 1
					end while

					break
				case "CST"	
					cds append dsc:Prod_Incumplido_ctx post:tarifa as post:item_importe post:adt_serv_aliciva as post:item_iva \
					array post:ali_opc as array post:item_opc_iva //habria que ver si la alicuota esta en la misma posicion del opcional al que corresponde!!
					cds append dsc:Prod_Incumplido_ctx post:cos_opc[0] as post:item_opc_importe[0] \
					post:cos_opc[1] as post:item_opc_importe[1] \
					post:cos_opc[2] as post:item_opc_importe[2] \
					post:cos_opc[3] as post:item_opc_importe[3] \
					post:cos_opc[4] as post:item_opc_importe[4] \
					post:cos_opc[5] as post:item_opc_importe[5] 
					cds append dsc:Prod_Incumplido_ctx siaf:ImporteConIva post:ImporteSinIvaOC as post:item_sin_iva \
					array FLD:post:siniva_opc array  FLD:post:siniva_opc4 post:imp_bloques_siva post:cant_bloq post:adt_bloque_precio
					//calculo el importe del credito a aplicar!!
					loc_siaf_importe = loc_siaf_importe + (post:item_importe_oc * item_cantidad)
					//sumar opcionales
					ind = 0
					while (ind < 6)
					INIT 22,1		
					//if (post:flia_opc[ind] == "CST")
						l_cantidad = post:item_cantidad
						;PS9490
            			CALL post:MISCopcCantPart(post:cod_opc[ind], post:tipo_produc, l_cantidad)
						if (RETVAL == 1)
							loc_siaf_importe = loc_siaf_importe + post:item_opc_imp_oc[ind]
						else
							//loc_siaf_importe = loc_siaf_importe + (post:item_opc_imp_oc[ind] / l_cantidad)
							loc_siaf_importe =  loc_siaf_importe + (item_opc_imp_oc[ind] * post:item_cantidad)
						endif
					//else
						//loc_siaf_importe =  loc_siaf_importe + (item_opc_imp_oc[ind] * post:item_cantidad)
					//endif
					INIT 22,0
						ind = ind + 1
					end while
					//sumar bloques adicionales
					loc_siaf_importe = loc_siaf_importe + ((item_imp_bloq * cant_bloq) * item_cantidad)
					break
				end select
				cds update dsc:Prod_Incumplido_ctx lock
			end if
			cds findnext dsc:Prod_Incumplido_ctx lock
			Hay_Remitos = "S"
		loop	
		cds endselect dsc:Prod_Incumplido_ctx
		
		if (tipo_presu == PROFORMA) then
			cds clearbuffer dsc:Fact_Incumplida_ctx
			cds append dsc:Fact_Incumplida_ctx post:remito_tarifa post:ErrorPresu
			cds update dsc:Fact_Incumplida_ctx lock
		else
			//cargo el vector de remitos para enviar en el bit 105 el remito correspondiente a la nota de credito que se esta emitiendo.
			post:vec_remitos[0] = post:fact_id
		end if
		
		cds findnext dsc:Fact_Incumplida_ctx lock
		let lib:err_retval = cdsretval
	loop
	
	cds endselect dsc:Fact_Incumplida_ctx
	
	if (tipo_presu == SESION) then
		/*DESCUENTO POR ORDEN DE COMPRA*/
		//50104:Necesito acumular en la PresuDetOC antes de generar los descuentos
		//CALL post:MISCSavePresuDetOC("I")
		//Calcular el dcto.OC
		call post:MISCDcto_OC_NC("A")
		//Generar el dcto.OC
		call CDSagregTrnDctoNC
	endif

    /*Restaurar campos*/
    post:INDPresuD_Dat   = OFB:post:CDSgral_append
    tlr:INDtran_name     = loc_INDtx
    drv:INDcur_list      = loc_INDlist
    siaf:importe         = loc_imp    
    siaf:cantidad        = loc_cant   
    siaf:codigo_siaf     = loc_codtx  
    post:PreDForFis      = loc_forfis
    siaf:adt_tran_codigo = siaf:codigo_siaf
    siaf:ImporteConIva   = loc_impconiva
    siaf:ImporteSinIva   = loc_impsiniva
    post:TotalSinIva     = loc_totsiniva
    post:bonificaCM 	 = loc_BonifCM
    post:AdmiteMP 		 = loc_AdmiteMP
   	//PS Cliente Medio - Bienes de Cambio : Restauro el campo del descuento y la tarifa
   	post:Dcto_CliMed = loc_DctoCM
   	post:tarifa      = ltarifa
   	drv:INDcur_tran = loc_INDtran


	//A esta altura está la PresuDet armada, entonces hay que acumular
	//por descripcion en la PresuDetOC 
//REVISAR SI HAY QUE HACER ESTO!
	/*if (tipo_presu == SESION) then
		CALL post:MISCSavePresuDetOC("X")
	endif*/
	
	//restaurar el siaf:importe con el credito a aplicar calculado
	if (tipo_presu == SESION) then
		siaf:importe = loc_siaf_importe 
	endif
	     
	CALL siaf:CDSadt_tran_load
	if (tipo_presu != PROFORMA) then
    	/*Fin Grabar en la PresuDet*/
    	if (Hay_Remitos == "S") then
    		return (1)
    	else
    		return (0)
    	end if
    end if
	
END SUB

/*******/
