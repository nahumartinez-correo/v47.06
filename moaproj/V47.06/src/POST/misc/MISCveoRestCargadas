/****o* Pendientes de agrupación/OFB:post:MISCveoRestCargadas
* NOMBRE
*   OFB:post:MISCveoRestCargadas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCveoRestCargadas
	local nro_caracteres like post:cantidad
	local l_cadena like common:csr_string
	local idx like siaf:i
	select (adt_rest_tipoProd)
		case "PRD"
		case "SRV"
			if (adt_rest_clave1.numchars != 0)
				nro_caracteres = 1
			else
				nro_caracteres = 0
			end if
			break
		case "ESP"
			if (adt_rest_clave3.numchars != 0 && adt_rest_clave2.numchars != 0)
				nro_caracteres = 1
			else
				nro_caracteres = 0
			end if
			break
		case "MOT"
			if (adt_rest_clave4.numchars != 0 && adt_rest_clave5.numchars != 0 && \
				adt_rest_clave6.numchars != 0)
				nro_caracteres = 1
			else
				nro_caracteres = 0
			end if
			break
	end select
	if (nro_caracteres != 0)
		select (adt_rest_tipoProd)
			case "PRD"
			case "SRV"
				fprint l_cadena, "%-3s   %-20s" adt_rest_tipoProd, adt_rest_clave1
				bck_rest_tipoProd = adt_rest_tipoProd
				bck_rest_claveProdu = adt_rest_clave1
				break
			case "ESP"
				fprint l_cadena, "%-3s   %-20s %-20s" adt_rest_tipoProd, adt_rest_clave3, adt_rest_clave2
				bck_rest_tipoProd = adt_rest_tipoProd
				bck_rest_claveProdu = (SUBSTR(l_cadena,6,41))
				break
			case "MOT"
				fprint l_cadena, "%3s   %-5s %2s %-5s" adt_rest_tipoProd, adt_rest_clave4, adt_rest_clave5 \
				adt_rest_clave6
				bck_rest_tipoProd = adt_rest_tipoProd
				bck_rest_claveProdu = (SUBSTR(l_cadena,6,14))
				break
		end select
		call post:MISCresetPickRest
		call post:ABMcantRestSel
		CALL csr:PickOp PICKOP_SEARCH DSC:pic_restCabe l_cadena //Buscar en el picklist
		IF (retval < 0) THEN
			drv:button = 26
   			CALL drv:but_disable
   			CALL post:ABMrestClear
			clearfield bck_rest_tipoProd
			clearfield bck_rest_claveProdu
		ELSE
			idx = retval + PL_GETITEM
			call csr:myPickcontrol(DSC:pic_restCabe,common:csr_string,idx)
			adt_rest_regHab = (SUBSTR(common:csr_string,49,1))
			adt_rest_regTipo = (SUBSTR(common:csr_string,51,1))
			if (adt_rest_regTipo != "I" && adt_rest_regTipo != "E") then
				CLEARFIELD adt_rest_regTipo
			end if
			adt_rest_prvHab = (SUBSTR(common:csr_string,55,1))
			adt_rest_prvTipo = (SUBSTR(common:csr_string,57,1))
			if (adt_rest_prvTipo != "I" && adt_rest_prvTipo != "E") then
				CLEARFIELD adt_rest_prvTipo
			end if
			adt_rest_sucHab = (SUBSTR(common:csr_string,61,1))
			adt_rest_sucTipo = (SUBSTR(common:csr_string,63,1))
			if (adt_rest_sucTipo != "I" && adt_rest_sucTipo != "E") then
				CLEARFIELD adt_rest_sucTipo
			end if
			adt_rest_cliHab = (SUBSTR(common:csr_string,67,1))
			adt_rest_cliTipo = (SUBSTR(common:csr_string,69,1))
			if (adt_rest_cliTipo != "I" && adt_rest_cliTipo != "E") then
				CLEARFIELD adt_rest_cliTipo
			end if
			adt_rest_upHab = (SUBSTR(common:csr_string,73,1))
			adt_rest_upTipo = (SUBSTR(common:csr_string,75,1))
			if (adt_rest_upTipo != "I" && adt_rest_upTipo != "E") then
				CLEARFIELD adt_rest_upTipo
			end if
			CALL post:MISCllenaSelPickDeta
			drv:button = 26
   			CALL drv:but_enable
		END IF
		call post:ABMrestRefresh
		drv:button = 27
   		CALL drv:but_enable
	else
		drv:button = 26
   		CALL drv:but_disable
   		drv:button = 27
   		CALL drv:but_disable
	end if
END SUB

/*******/
