/****o* Pendientes de agrupación/OFB:post:MISCacum_mon_totcaj
* NOMBRE
*   OFB:post:MISCacum_mon_totcaj
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

/*Voy acumulando en un picklist, por moneda, el importe total de las transacciones
que son anuladas. Esto me sirve para luego chequear si esta disponible
en caja la suma correspondiente - Gabriel Falciola*/
SUB post:MISCacum_mon_totcaj(accion,mone_aux,importe)
local mone_acum like siaf:moneda
local mone_aux2 like siaf:moneda
local imp_acum like post:tmpl_importe
local imp_aux like post:tmpl_importe
local indice like siaf:i
local operacion like common:csr_string
local signo like common:csr_string

	indice = PL_GETITEM
	operacion = accion
	do
		call csr:myPickcontrol(dsc:pic_mone_caja,common:csr_string,indice)
		if (retval < 0)
			break
		end if
		mone_acum = substr(common:csr_string,0,2)
		mone_aux2 = mone_aux
		if (mone_acum == mone_aux2)
			imp_acum = substr(common:csr_string,3,13)
			signo = substr(common:csr_string,17,1)
			if (signo == "-")
				imp_acum = imp_acum * -1
			end if
			imp_aux = importe
			if (operacion == "SUMO")
				imp_acum = imp_acum + imp_aux
			else
				imp_acum = imp_acum - imp_aux
			end if
			if (imp_acum == 0)
				indice = indice - PL_GETITEM
				CALL CSR:myPickdelete(dsc:pic_mone_caja,common:csr_string,indice)
			else
				indice = indice - PL_GETITEM
				if (imp_acum > 0)
					fprint common:csr_string "%013.013s +" imp_acum
				else
					fprint common:csr_string "%013.013s -" imp_acum
				end if
				call csr:f_samodpl dsc:pic_mone_caja,common:csr_string,common:csr_string,3,indice
			end if
			return (0)
		end if
		indice = indice + 1
	loop
	if (operacion == "SUMO")
		fprint common:csr_string "%02.02s %013.013s +" mone_aux importe
	else
		fprint common:csr_string "%02.02s %013.013s -" mone_aux importe
	endif
	call csr:f_saaddpl dsc:pic_mone_caja common:csr_string
END SUB

/*******/
