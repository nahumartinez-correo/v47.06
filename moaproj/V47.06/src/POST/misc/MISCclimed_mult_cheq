/****o* Pendientes de agrupación/OFB:post:MISCclimed_mult_cheq
* NOMBRE
*   OFB:post:MISCclimed_mult_cheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCclimed_mult_cheq
    local varl_cheque  like common:csr_string
    local varl_importe     like siaf:importe
    local varl_neto        like siaf:importe
    local varl_interes     like siaf:importe
    local varl_iva         like siaf:importe
    local varl_interes_cli like siaf:importe
    local varl_imp_importe like common:csr_string
    local varl_imp_neto    like common:csr_string
    local varl_imp_interes like common:csr_string
    local varl_imp_iva     like common:csr_string
    local varl_moneda      like siaf:moneda
    local varl_clearing    like tes:clearing

    clearfield post:Cheques
    post:BulkFldCant = 0

    ;ANTES DE GENERAR EL BIT CON LOS CHEQUES SE CONTROLA
    ;LA EXISTENCIA DE LA TRANSACCION DE CAPTURA DE CHEQUES APROBADA
    ;POR CAIDAS DEL SISTEMA

    call post:CDSclimed_ctrol_cheq
    if (retval == -1)
	;EXISTE TRANSACCION ACEPTADA
	;DE MULTIPLES CHEQUES
	return 0
    end if

    CDS SELECT FROM Dsc:TblImpreMedio BECOMES "CtxTotMedP" WHERE \
	(fld:post:op_operator_id == fld:post:op_operator_id \
	&& siaf:moneda == 02 && post:moneda_status == 002 )

    CDS FINDFIRST "CtxTotMedP" NOLOCK
    let lib:err_retval = cdsretval

    WHILE (lib:err_retval == 0)

	   CDS EXTRACT "CtxTotMedP" \
		post:nro_cheque \
		post:fec_e \
		post:fec_d \
		post:cod_banco \
		post:cuenta \
		siaf:importe into varl_importe \
		post:imp_intereses into varl_interes_cli \
		post:jnl_interes_diferido into varl_interes \
		post:iva_Porcentaje       into varl_iva \
		siaf:moneda               into varl_moneda \
		tes:clearing              into varl_clearing

	   varl_neto = (varl_importe - varl_interes_cli)
	   varl_imp_importe = varl_importe * 100 
	   varl_imp_neto = varl_neto    * 100
	   varl_imp_interes = varl_interes * 100
	   varl_imp_iva = varl_iva * 100

	   fprint varl_cheque, "%08.8s%8.8s%8.8s%03.3s%020.20s%012.12s%012.12s%012.12s%012.12s",\
		  post:nro_cheque,post:fec_e,post:fec_d,cod_banco,post:cuenta,\
		  varl_imp_importe,varl_imp_neto,varl_imp_interes,varl_imp_iva
	   fprint varl_cheque,"%s%02.2s%03.3s",varl_cheque,varl_moneda,varl_clearing


	   if (post:Cheques.numchars <= 950)
	       fprint post:Cheques,"%s%s",post:Cheques,varl_cheque
	       post:BulkFldCant = post:BulkFldCant + 1
	   end if

	   CDS FINDNEXT "CtxTotMedP" NOLOCK
	   lib:err_retval = cdsretval

    END WHILE

    CDS ENDSELECT "CtxTotMedP"
    fprint post:Cheques,"%03.3s%s",post:BulkFldCant,post:Cheques

END SUB

/*******/
