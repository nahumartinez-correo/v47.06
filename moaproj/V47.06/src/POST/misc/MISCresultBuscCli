/****o* Pendientes de agrupación/OFB:post:MISCwrite_reporte
* NOMBRE
*   OFB:post:MISCwrite_reporte
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"


SUB post:MISCresultBuscCli(p_descrip)
local L_aux like siaf:cant
local L_item like siaf:idx
local l_return like lib:err_retval

    let common:csr_string = p_descrip
	call csr:PickOp(3,"Lista Global",common:csr_string)
	if (retval >= 0) then
		// al menos encontre uno... veo si hay mas.
		let L_item = PL_GETITEM + retval 
		let L_aux = retval
		call csr:f_sadroppl DSC:busca_cliente
		call csr:f_sanewpl DSC:busca_cliente PIC:busca_cliente
		
		do 
			call csr:myPickcontrol "Lista Global" common:csr_string L_item
			; los que voy encontrando los agrego en un picklist resultado 
			call csr:f_saaddpl DSC:busca_cliente common:csr_string
			let L_aux = L_aux + 1
			; busco a partir del siguiente item...
			let common:csr_string = p_descrip
			call csr:PickOp(3,"Lista Global",common:csr_string,L_aux)
			if (retval < 0) then
				break
			endif
			L_item = PL_GETITEM + retval
			L_aux = retval 
		loop
		; el operador debe seleccionar una opcion de las encontradas
		clearfield common:csr_string
		CALL drv:MISCf_sacombopl (DSC:busca_cliente, common:csr_string,drv:button)
		l_return = retval
		call csr:f_sadroppl DSC:busca_cliente	
        return l_return
    end if
    return retval
END SUB

/*******/

