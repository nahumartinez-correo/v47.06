/****o* Pago en destino/OFB:post:MISCobt_pzasPED
* NOMBRE
*   OFB:post:MISCobt_pzasPED
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:RCVEcons_pzasPED
* DOCUMENTACION
*   
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCobt_pzasPED(datos,long)

	/****************************************************************/
	/* OBTENER LAS PIEZAS PED 							    	    */
	/* BITS : 105,106,107 							                */
	/****************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local l_importe 		like common:csr_string
	local l_cuit			like common:csr_string
	
	
		
	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2
	
	while ( posicion < longitud )
	
		post:adt_reppzaped_id = substr(datos,posicion,8)
		posicion = posicion + 8

		post:adt_reppzaped_pieza = substr(datos,posicion,13)
		posicion = posicion + 13
		
		post:adt_reppzaped_RSEmi = substr(datos,posicion,50)
		posicion = posicion + 50

		post:adt_reppzaped_RSDest = substr(datos,posicion,50)
		posicion = posicion + 50

		post:adt_reppzaped_TDoc = substr(datos,posicion,2)
		posicion = posicion + 2
		
		l_cuit = substr(datos,posicion,13)
		post:adt_reppzaped_NDoc = (l_cuit * 1)
		posicion = posicion + 13
		
		post:adt_reppzaped_PEnt = substr(datos,posicion,1)
		posicion = posicion + 1
		
		post:adt_reppzaped_SEnt = substr(datos,posicion,5)
		posicion = posicion + 5
		
		post:adt_reppzaped_EComp = substr(datos,posicion,3)
		posicion = posicion + 3
		
		l_importe = substr(datos,posicion,12)
		if ( l_importe == "000000000000")
			post:adt_reppzaped_ImpPza = 0.00
		else
			post:adt_reppzaped_ImpPza = (l_importe / 100 )
		end if
		posicion = posicion + 12	
	
		post:adt_reppzaped_EstPza = substr(datos,posicion,3)
		posicion = posicion + 3
		
		post:adt_reppzaped_UltMod = substr(datos,posicion,8)
		posicion = posicion + 8

		//se agregaron datos a ultimo momento para semi por lo que se agregan posiciones que 
		//en auto no se usan pero afectan el mensaje
		//Tipo comprobante		A(5)	Comprobantes.com_tipo
		//Letra del Comprobante	A(1)	Comprobantes.com_letra
		//Número de Comprobante	A(15)	Comprobantes.com_numero
		posicion = posicion + 21

		CALL CDSsave_pzasPED
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if

		//seteo more data
		CALL MISCarma_pzasPED
		fprint post:ped_ult_item,"%s%08.8s",post:ped_ult_item,post:adt_reppzaped_id
		
	end while
	
	
	return loc_retval

END SUB

/*******/
