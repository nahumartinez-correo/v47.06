/****o* Pendientes de agrupación/OFB:post:MISCsaveOpeVPI
* NOMBRE
*   OFB:post:MISCsaveOpeVPI
* DESCRIPCION
*   Guarda un registro en la tabla OperacionesVPI
* ENTRADAS
*		TES - Test de conexión 
*		VEN - Venta 
*		ANV - Anulación de venta 
*		DEV -	Devolución 
*		AND - Anulación de devolución 
*		CIE - Cierre 
*		ULT - Ultima transacción 
*		ULC - Ultimo cierre 
*		IMT -	Reimpresión de ultima transacción 
*		IMC - Reimpresión de ultimo cierre 
*		TAR - Obtención de tabla de tarjetas 
*		PLA - Obtención de tabla de planes 
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:MISCvpiPurchase
* DOCUMENTACION
*   NI50525 POS Integrado
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCsaveOpeVPI(p_operacion)
	LOCAL l_retval LIKE lib:err_retval
	LOCAL l_operacion LIKE common:csr_string
	LOCAL l_batchClose LIKE post:adt_opvpi_batchClose 
	LOCAL l_opvpi_jnlOK LIKE post:adt_opvpi_jnlOK
	
	LET l_operacion = p_operacion
	LET l_batchClose = "N"
	LET l_opvpi_jnlOK = "N"

	CDS SELECT FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:post:OperacionesVPI_ctx \
		WHERE post:adt_opvpi_fecha == common:system_date \
		&& post:adt_opvpi_login_id == op:op_login_id \
		&& post:adt_opvpi_PresNro == post:PresNro \
		&& post:adt_opvpi_termi_win == common:window_node \
		&& post:adt_opvpi_comandos == l_operacion \
		&& post:adt_opvpi_codseq_nro == post:adt_vpi_codseq_nro
		
	CDS FINDFIRST DSC:post:OperacionesVPI_ctx LOCK
	LET l_retval = CDSRETVAL
    
  CDS CLEARBUFFER DSC:post:OperacionesVPI_ctx
  
	CDS APPEND DSC:post:OperacionesVPI_ctx \
		common:system_date AS post:adt_opvpi_fecha \
		op:op_login_id AS post:adt_opvpi_login_id \
		post:PresNro AS post:adt_opvpi_PresNro \
		common:window_node AS post:adt_opvpi_termi_win \
		post:adt_vpi_codseq_nro AS post:adt_opvpi_codseq_nro \
		siaf:codigo_siaf AS post:adt_opvpi_cod_siaf

  SELECT (l_operacion)
  	CASE "VEN" //Venta
	  	CDS APPEND DSC:post:OperacionesVPI_ctx \
	  		l_operacion AS post:adt_opvpi_comandos
  	
  		CALL csr:proc_list(F_COPY, LST:post:LISTvpiPurchaseIn, LST:post:LISTopvpiPurchaseIn)
			CALL csr:proc_list(F_COPY, LST:post:LISTvpiTrxOut, LST:post:LISTopvpiTrxOut)
			
			//gpb:Quito caracteres no soportados por Interfaz!!!
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_customName")
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_hostMessge")

			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiPurchaseIn,2)
			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiTrxOut,2)
  	BREAK
  	CASE "ANV" //Anulación de venta
			CDS APPEND DSC:post:OperacionesVPI_ctx \
				l_operacion AS post:adt_opvpi_comandos

  		CALL csr:proc_list(F_COPY, LST:post:LISTvpiVoidIn, LST:post:LISTopvpiVoidIn)
			CALL csr:proc_list(F_COPY, LST:post:LISTvpiTrxOut, LST:post:LISTopvpiTrxOut)
			
			//gpb:Quito caracteres no soportados por Interfaz!!!
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_customName")
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_hostMessge")

			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiVoidIn,2)
			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiTrxOut,2)  	
  	BREAK
  	CASE "DEV" //Devolución
			CDS APPEND DSC:post:OperacionesVPI_ctx \
				l_operacion AS post:adt_opvpi_comandos

  		CALL csr:proc_list(F_COPY, LST:post:LISTvpiRefundIn, LST:post:LISTopvpiRefundIn)
			CALL csr:proc_list(F_COPY, LST:post:LISTvpiTrxOut, LST:post:LISTopvpiTrxOut)
			
			//gpb:Quito caracteres no soportados por Interfaz!!!
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_customName")
			CALL post:MISCvpi_Interfaz("post:adt_opvpi_hostMessge")

			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiRefundIn,2)
			CALL csr:proc_list(F_APPEND,DSC:post:OperacionesVPI_ctx ,LST:post:LISTopvpiTrxOut,2)  	
  	BREAK
  END SELECT
  
  CDS APPEND DSC:post:OperacionesVPI_ctx \
  	l_batchClose AS post:adt_opvpi_batchClose \
  	l_opvpi_jnlOK AS post:adt_opvpi_jnlOK
  
	IF (l_retval == -801) THEN
		CDS INSERT DSC:post:OperacionesVPI_ctx LOCK
	ELSE
		CDS REPLACE DSC:post:OperacionesVPI_ctx LOCK
	END IF
	CDS UNLOCK DSC:post:OperacionesVPI_ctx	
		
END SUB

/*******/
