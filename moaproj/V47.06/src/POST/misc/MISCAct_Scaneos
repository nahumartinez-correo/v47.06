/****o* Novedades T&T/OFB:post:MISCAct_Scaneos
* NOMBRE
*   OFB:post:MISCAct_Scaneos
* DESCRIPCION
*   Esta rutina actualiza las novedades de T&T segun corresponda.
* ENTRADAS
*   tipo = "C" Actualizo la guia de contenedor de los scaneos O, P y 99
*   tipo = "S"Si esoy cargando un contenedor, selecciono por guia de contenedor,y tipo de scaneo
*	Si estoy cargando una pieza, selecciono por sequence, op, pieza y tipo de scaneo
*   tipo = "L"	Actualizo el campo adt_novtt_linea del Scaneo X
*   tipo = "F" Grabo la linea en los scaneos 15, 16 y 99 
*   tipo = "P" Transferencia de Piezas
*	tipo = "E"	Marca de Excepción
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:CDSextCont_max,OFB:post:CDSmodifJNLCCont,OFB:post:CDSmodifJNLlinea,OFB:post:CDSmodifJNLsaca
*	OFB:post:MISCRegistro_Excep,OFB:post:MISCjnl_DetTCont,OFB:post:MISCTrato_Pieza
*	OFB:post:MISCTrato_Saca,OFB:post:SVALMarca_Excepcion
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCAct_Scaneos (tipo, scaneo)

LOCAL caratula LIKE post:CaratulaSaca
LOCAL fecha LIKE post:adt_novtt_fecha

  	SELECT (tipo)
    	CASE "C"
				/*Actualizo la guia de contenedor de los scaneos O, P y 99*/
				CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
    	        WHERE (adt_novtt_op == tlr:jnl_operator && \
	    	    adt_novtt_sequence == tlr:jnl_sequence && \
	    	    adt_novtt_pieza == Pieza_id)
		        CDS FINDFIRST DSC:NovTT_ctx LOCK
		        //DO
			        
    			   // IF (CDSRETVAL == -801)
    			    IF (CDSRETVAL < 0)
            			CDS UNLOCK DSC:NovTT_ctx
		        		CDS ENDSELECT DSC:NovTT_ctx
	        	    	BREAK
    	        	END IF
	        	    CDS EXTRACT DSC:NovTT_ctx post:adt_novtt_tipo
    		    	    
        			IF (post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || \
        				post:adt_novtt_tipo == 99) THEN
        		    	adt_novtt_guia_cont = post:adt_codseq_nro
    	    		    CDS CLEARBUFFER DSC:NovTT_ctx
    		        	CDS APPEND DSC:NovTT_ctx adt_novtt_guia_cont
	        	    	CDS UPDATE DSC:NovTT_ctx LOCK
	        	    	CDS UNLOCK DSC:NovTT_ctx
	        	    	CDS ENDSELECT DSC:NovTT_ctx
            		ELSE
            			//Para Recepciones UP porque se graba primero el scaneo 12
            			IF (post:adt_novtt_tipo != 15)
            				CDS FINDNEXT DSC:NovTT_ctx LOCK
            				lib:err_retval = cdsretval
            				While (lib:err_retval != -801)
            					CDS EXTRACT DSC:NovTT_ctx post:adt_novtt_tipo
            					IF (post:adt_novtt_tipo == 15)
            						adt_novtt_guia_cont = post:adt_codseq_nro
    	    		    			CDS CLEARBUFFER DSC:NovTT_ctx
    		        				CDS APPEND DSC:NovTT_ctx adt_novtt_guia_cont
	        	    				CDS UPDATE DSC:NovTT_ctx LOCK
	        	    				CDS UNLOCK DSC:NovTT_ctx
	        	    			END IF
	        	    			CDS FINDNEXT DSC:NovTT_ctx LOCK
            					lib:err_retval = cdsretval
            				END WHILE
            				CDS UNLOCK DSC:NovTT_ctx
            			END IF	
            		END IF
            		
            		//CDS FINDNEXT DSC:NovTT_ctx LOCK
            	//LOOP
    	 	    BREAK
        CASE "S"
                /*Si esoy cargando un contenedor, selecciono por guia de contenedor,
                y tipo de scaneo*/
	            IF (jnl_guia_cont.numchars != 0) THEN
	        	    
        			CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
    	        	WHERE ((adt_novtt_guia_cont == post:jnl_guia_cont) && \
    	        	(adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || \
    	        	adt_novtt_tipo == 99))
    	        	/*(adt_novtt_op == op:op_operator_id) && \*/
	        	    CDS FINDFIRST DSC:NovTT_ctx LOCK
                	lib:err_retval = CDSRETVAL
                ELSE
    	        	/*Si estoy cargando una pieza, selecciono por sequence, op, pieza y 
    	        	tipo de scaneo*/
    	        	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	            	WHERE ((adt_novtt_sequence == post:jnl_sequence_ori) && \
    	            (adt_novtt_op == post:jnl_operator_ori) && \
	    	        (adt_novtt_pieza == post:track_trace || \
    	    	     adt_novtt_pieza == post:Pieza_id ) && \
        	    	(adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || adt_novtt_tipo == 99))
        	    	CDS FINDFIRST DSC:NovTT_ctx LOCK
                	lib:err_retval = CDSRETVAL
                	
    	        END IF
    	        DO
            		//IF (lib:err_retval == -801)
            		IF (lib:err_retval < 0)
                		CDS UNLOCK DSC:NovTT_ctx
                    	CDS ENDSELECT DSC:NovTT_ctx
                        BREAK
	                END IF
    	            CLEARFIELD adt_novtt_tipo
    	            CLEARFIELD adt_novtt_pieza //nuevo
    	            /*Para mayor seguridad*/
    	            CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo \
    	            adt_novtt_pieza //nuevo
    	            IF (adt_novtt_tipo == 15 || adt_novtt_tipo == 16 || \
    	            	adt_novtt_tipo == 99) THEN
    	                adt_novtt_guia_saca = post:adt_codseq_nro
    	              // NI50562 - Se necesita tener el campo caratula de Saca en los scaneos de imposicion para el reporte de Piezas pendientes de Expedicion
    	                adt_novtt_carat_rep  = post:CaratulaSaca
    	                CDS CLEARBUFFER DSC:NovTT_ctx
    	        	    CDS APPEND DSC:NovTT_ctx adt_novtt_guia_saca adt_novtt_carat_rep
    	        	    CDS UPDATE DSC:NovTT_ctx LOCK
    	        	    /*MFM - Se calcula el checksum de las piezas*/
    	        	    IF (adt_novtt_tipo != 99) THEN
    	        	    	//solicitud Cartas Rapidas
	        				IF (substr(post:adt_novtt_pieza,0,2) != "SR" && substr(post:adt_novtt_pieza,0,2) != "SU" && \
	        					substr(post:adt_novtt_pieza,0,2) != "GR" && substr(post:adt_novtt_pieza,0,2) != "GS") THEN
    	        	    		CantTotPza_label = CantTotPza_label + 1
    	        	    		CALL MISCCalcChkSum (adt_novtt_pieza, 13, itemcheck)
	    	        	    	//FPRINT checksum_piezas "%06.6x" itemcheck
    		        	    	FPRINT checksum_piezas "%04.4x" itemcheck
    		        	    	//CALL csr:fld_to_upper (checksum_piezas)
    		        	    ENDIF
    	        	    END IF
    	        	    /*******************************************/
        	        END IF
                    CDS FINDNEXT DSC:NovTT_ctx LOCK
                    lib:err_retval = CDSRETVAL
                
	            LOOP
                
                BREAK

     CASE "L"
/*Req 3822*/
   	   	  	  FPRINT fecha, "%s%s", post:FechaCteLinMDisp,"*"
              /*MFM - Agosto 2000 - Actualizo el campo adt_novtt_linea del Scaneo X*/
   	   	  IF (scaneo == 24 || scaneo == 2) THEN
   	   	  		  CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
   	   	  		  WHERE ((adt_novtt_sequence == post:jnl_sequence_ori) && \
    	    	  (adt_novtt_op == post:jnl_operator_ori) && \
    	    	  (adt_novtt_fecha SMATCH fecha) && \
    	    	  (adt_novtt_tipo == scaneo))
			      
	    	  ELSE
        		  /*CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	    	      WHERE ((adt_novtt_sequence == post:jnl_sequence_ori) && \
    	    	  (adt_novtt_op == post:jnl_operator_ori) && \
	    	      (adt_novtt_pieza == post:track_trace || \
       	    	  adt_novtt_pieza == post:Pieza_id ) && \
	        	  (adt_novtt_tipo == scaneo))*/
        		  CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
    		 	  WHERE (adt_novtt_fecha SMATCH fecha && \
    		 	  post:adt_novtt_guia_saca == post:jnl_guia_saca && \
    		 	  adt_novtt_tipo == scaneo)
    		  END IF
    		  
    		  CDS FINDFIRST DSC:NovTT_ctx LOCK
    		  lib:err_retval = CDSRETVAL
    		  
        	  DO
        	  	//IF (lib:err_retval == -801)
        	  	IF (lib:err_retval < 0)
            	   CDS UNLOCK DSC:NovTT_ctx
                   CDS ENDSELECT DSC:NovTT_ctx
		           BREAK
    		  	END IF
        	  	adt_novtt_linea = post:adt_codseq_nro
        	  	post:adt_novtt_listo = "S"
              	post:adt_novtt_en_cond = "S"
	          	CDS CLEARBUFFER DSC:NovTT_ctx
	          	CDS APPEND DSC:NovTT_ctx adt_novtt_linea adt_novtt_listo adt_novtt_en_cond
	          	CDS UPDATE DSC:NovTT_ctx LOCK
	          	CDS FINDNEXT DSC:NovTT_ctx LOCK
	          	lib:err_retval = CDSRETVAL
	    	  LOOP
    	      BREAK
     CASE "F"  
     	/* MFM - Agosto 2000 - Grabo la linea en los scaneos 15, 16 y 99 */
     	/*Busco por pieza que viene directo al Corte de Linea*/
     	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	    WHERE ((adt_novtt_sequence == post:jnl_sequence_ori) && \
    	(adt_novtt_op == post:jnl_operator_ori) && \
	    (adt_novtt_pieza == post:track_trace || \
    	adt_novtt_pieza == post:Pieza_id ) && \
	    (post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || \
     	post:adt_novtt_tipo == 99)) 
		CDS FINDFIRST DSC:NovTT_ctx LOCK
    	//IF (CDSRETVAL == -801) THEN
    	IF (CDSRETVAL < 0) THEN
	     	CDS UNLOCK DSC:NovTT_ctx
	     	CDS ENDSELECT DSC:NovTT_ctx
	     	/*Busco por saca que viene al Corte de Linea*/
	     	IF (post:jnl_guia_saca.numchars != 0) THEN
		     	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
    		 	WHERE ((post:adt_novtt_guia_saca == post:jnl_guia_saca) && \
     			(post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || \
	     		post:adt_novtt_tipo == 99))
    	 		CDS FINDFIRST DSC:NovTT_ctx LOCK
	     	ELSE
	     		/*Busco por contenedor que viene directo al Corte de Linea*/
    	 		IF (post:jnl_guia_cont.numchars != 0) THEN
	    	 		CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
		     		WHERE ((post:adt_novtt_guia_cont == post:jnl_guia_cont) && \
    		 		(post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || \
     				post:adt_novtt_tipo == 99))
	     			CDS FINDFIRST DSC:NovTT_ctx LOCK
	     		END IF
			END IF
		END IF
     	
     	DO
			//IF (CDSRETVAL == -801) THEN
			IF (CDSRETVAL < 0) THEN
    	 		CDS UNLOCK DSC:NovTT_ctx 
        		CDS ENDSELECT DSC:NovTT_ctx 
        		RETURN -2
        	END IF
    	 	CLEARFIELD adt_novtt_tipo
    	 	CLEARFIELD adt_novtt_pieza //nuevo
    	 	CDS EXTRACT DSC:NovTT_ctx adt_novtt_tipo \
    	  adt_novtt_pieza //nuevo
    	 	adt_novtt_linea = adt_codseq_nro
    	 	adt_novtt_listo = "S"
     		CDS CLEARBUFFER DSC:NovTT_ctx
     		/*Condición Provisoria(post:jnl_guia_cont.numchars != 0)hasta que se hagan las reversas por encabezado*/
     		IF (adt_novtt_tipo == 99) THEN //&& post:jnl_guia_cont.numchars != 0)
     			adt_novtt_trans = "T"
     		    CDS APPEND DSC:NovTT_ctx adt_novtt_linea adt_novtt_trans
     		ELSE
     			CDS APPEND DSC:NovTT_ctx adt_novtt_linea adt_novtt_listo
     		END IF
    	    CDS UPDATE DSC:NovTT_ctx LOCK
    	    /*MFM - Se calcula el checksum de las piezas*/
    	   if (adt_novtt_tipo != 99) THEN
    	       //solicitud Cartas Rapidas
	          IF (substr(post:adt_novtt_pieza,0,2) != "SR" && substr(post:adt_novtt_pieza,0,2) != "SU" && \
	        	substr(post:adt_novtt_pieza,0,2) != "GR" && substr(post:adt_novtt_pieza,0,2) != "GS") THEN
	    	      CantTotPza_label = CantTotPza_label + 1
	    	      CALL MISCCalcChkSum (adt_novtt_pieza, 13, itemcheck)
	    		    FPRINT checksum_piezas "%04.4x" itemcheck
	    		 ENDIF
	    		endif
    	    
        	CDS FINDNEXT DSC:NovTT_ctx LOCK
        LOOP
 
        BREAK
    
    CASE "P"  /*Transferencia de Piezas*/
     	
     	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	    WHERE ((adt_novtt_op == post:jnl_operator_ori) && \
	    (adt_novtt_sequence == tlr:jnl_sequence) && \
	    (adt_novtt_pieza == post:track_trace || adt_novtt_pieza == cod_ctrol || \
	    adt_novtt_pieza == Pieza) && \
	    (post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16 || \
     	post:adt_novtt_tipo == 99)) 
     	CDS FINDFIRST DSC:NovTT_ctx LOCK
     	lib:err_retval = CDSRETVAL
     	CDS CLEARBUFFER DSC:NovTT_ctx
     	adt_novtt_op2 = CodOperador        //Operador al que se le transfiere la pieza
     	adt_novtt_guia_cont = "99999999" //para que no aparezcan en cierre de contenedor y transferencia de operador destino
     	
     	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_op2 post:adt_novtt_guia_cont 
     	
     	//Si es transferencia forzada
     	IF (siaf:codigo_siaf == 99110) THEN
     		adt_novtt_est_pieza = "T"        //para que no aparezcan en las transferencias de piezas del op origen ni en la del op destino - German
     		CDS APPEND DSC:NovTT_ctx post:adt_novtt_est_pieza
     	END IF
     	
     	//Inicio agrego German
     	CLEARFIELD adt_novtt_op2  
     	CLEARFIELD adt_novtt_guia_cont
     	CLEARFIELD adt_novtt_est_pieza
     	//Fin agrego German
     	
     	IF (lib:err_retval == 0) THEN
     		CDS UPDATE DSC:NovTT_ctx LOCK
     	END IF
     	CDS UNLOCK DSC:NovTT_ctx
     	CDS ENDSELECT DSC:NovTT_ctx
		BREAK     	
		
	CASE "E"  /*Marca de Excepción*/

	  IF (scaneo == 0) THEN
	  	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	  	WHERE (post:adt_novtt_pieza == post:id_excepcion && \
	  	post:adt_novtt_tipo == 15) 
	  END IF

	  IF (scaneo == 1) THEN	
	  	/*Tener en cuenta que acá se están actualizando scaneos de recepción, si se
	  	llega a reversar la excepcion no se vuelven a actualizar pero esto no genera 
	  	ningun incoveniente, es mejor dejarlo así que tratar de actualizarlo*/
	  	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	  	WHERE (post:adt_novtt_pieza == post:Pieza_id && \
	  	(post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16))
	  END IF

      IF (scaneo == 2) THEN
	  	FPRINT caratula, "%11.11s%3.3s", substr(id_excepcion,0,11), substr(id_excepcion,17,3)
	  	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	  	WHERE (post:adt_novtt_caratula == caratula && \
	  	post:adt_novtt_tipo == 24) 
	  END IF
	  
	  IF (scaneo == 3) THEN	
	  	IF (post:adt_codseq_nro == 0) THEN
	  		/*Quiere decir que no hay scaneos asociados a la saca para actualizar*/
	  		RETURN 0
	  	END IF
	  	CDS SELECT FROM DSC:NovTT_table BECOMES DSC:NovTT_ctx \
	  	WHERE (post:adt_novtt_guia_saca == post:adt_codseq_nro && \
	  	(post:adt_novtt_tipo == 15 || post:adt_novtt_tipo == 16))
	  END IF
	  
      CDS FINDFIRST DSC:NovTT_ctx LOCK
      lib:err_retval = CDSRETVAL
      
      DO
      	
      	//IF (lib:err_retval == -801) THEN
      	IF (lib:err_retval < 0) THEN
      		CDS UNLOCK DSC:NovTT_ctx
      		CDS ENDSELECT DSC:NovTT_ctx
      		BREAK
      	END IF
      	
      	CDS CLEARBUFFER DSC:NovTT_ctx
	 
		IF (!testflag(tlr:tran_flags,correction)) THEN
		   	adt_novtt_excep = "S"
    	 	adt_novtt_excep_exis = existe_fisicamente
	    ELSE
		   	adt_novtt_excep = "N"
    	 	adt_novtt_excep_exis = ""
      	END IF
     
      	CDS APPEND DSC:NovTT_ctx FLD:adt_novtt_excep adt_novtt_excep_exis
      	IF (lib:err_retval == 0) THEN
	       	CDS UPDATE DSC:NovTT_ctx LOCK
    	END IF
      	
      	CDS FINDNEXT DSC:NovTT_ctx LOCK
      	lib:err_retval = CDSRETVAL
      	
	  LOOP
	  BREAK     	

    END SELECT	
    
END SUB

/*******/
