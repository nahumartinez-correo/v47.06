/****o* Rendición Piezas CDD/OFB:post:MISCExiste_Pieza_CDD
* NOMBRE
*   OFB:post:MISCExiste_Pieza_CDD
* DESCRIPCION
*  Valida que la pieza no exista en la StockpCDD, ni en la stockp,ni en la stockpHist, ni en la stockpHist_CDD.
*  Verifica que si existe en la StockpCDD_Aux tenga la misma fecha y nro que los ingresados.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*  l_retval = 3 indica que la pieza existe en alguna de las tablas
*  l_retval = -801 indica que no encontró la pieza en ninguna de las tablas, por lo tanto se habilitara el alta.
*  l_retval = 0 indica que la encontró en la tabla auxiliar con mismo nro y fecha de planilla, por lo tanto se habiltará la modificacion y borrado.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:FVALpieza_CDD
* DOCUMENTACION
*   SC50190.doc:http://livelink.intranet.siemens-itron.com.ar/livelink/livelink.exe?func=doc.ViewDoc&nodeId=639223&
* SOURCE
*/
#include "postmisc.h"

Sub post:MISCExiste_Pieza_CDD
local l_retval like lib:err_retval
local l_fecha  like post:CDD_plan_fecha
local l_nro    like post:CDD_plan_nro
local l_crem   like post:CDD_crem_imp
local l_ctaOM like	post:CDD_ctaOM 
local l_TipoDoc like post:CDD_rtte_TipoDoc
local l_NumDoc like post:CDD_rtte_NumDoc
local l_may like post:es_mayorista 

	//StockpCDD
	CDS SELECT FROM DSC:StockpCDD_tbl BECOMES DSC:StockpCDD_ctx \
	WHERE post:adt_CDD_pieza == post:Pieza
	CDS FINDFIRST DSC:StockpCDD_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS ENDSELECT DSC:StockpCDD_ctx
		MSGBOX "LA PIEZA FUE PREVIAMENTE RENDIDA.",0X00,"AVISO"
		CDS ENDSELECT DSC:StockpCDD_ctx
		RETURN 3
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(StockpCDD).",0X00,"ERROR"
		   CDS ENDSELECT DSC:StockpCDD_ctx
		   RETURN -2
		ENDIF
	ENDIF
	CDS ENDSELECT DSC:StockpCDD_ctx
	
	//StockpCDDHist
	CDS SELECT FROM DSC:StockpCDDHist_tbl BECOMES DSC:StockpCDDHist_ctx \
	WHERE post:adt_CDD_pieza == post:Pieza
	CDS FINDFIRST DSC:StockpCDDHist_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS ENDSELECT DSC:StockpCDDHist_ctx
		MSGBOX "LA PIEZA FUE PREVIAMENTE RENDIDA.",0X00,"AVISO"
		CDS ENDSELECT DSC:StockpCDDHist_ctx
		RETURN 3
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(StockpCDDHist).",0X00,"ERROR"
		   CDS ENDSELECT DSC:StockpCDDHist_ctx
		   RETURN -2
		ENDIF
	ENDIF
	CDS ENDSELECT DSC:StockpCDDHist_ctx
	
	//stockp_recep
	CDS SELECT FROM DSC:stockp_recep_tbl BECOMES DSC:stockp_recep_ctx \
	WHERE post:stockp_pieza == post:Pieza && \
	post:AsignaDestino == "N"
	CDS FINDFIRST DSC:stockp_recep_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS ENDSELECT DSC:stockp_recep_ctx
		MSGBOX "LA PIEZA FUE RECIBIDA POR LA TX DE RECEPCION DE PIEZAS.(NO ASIGNADA A DESTINO)",0X00,"AVISO"
		CDS ENDSELECT DSC:stockp_recep_ctx
		RETURN 3
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(stockp_recep).",0X00,"ERROR"
		   CDS ENDSELECT DSC:stockp_recep_ctx
		   RETURN -2
		ENDIF
	ENDIF
	CDS ENDSELECT DSC:stockp_recep_ctx
	
	//stockp
	CDS SELECT FROM DSC:stockp_tbl BECOMES DSC:stockp_ctx \
	WHERE post:adt_stockp_pieza == post:Pieza
	CDS FINDFIRST DSC:stockp_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS ENDSELECT DSC:stockp_ctx
		MSGBOX "LA PIEZA FUE RECIBIDA POR LA TX DE RECEPCION DE PIEZAS(stockp).",0X00,"AVISO"
		CDS ENDSELECT DSC:stockp_ctx
		RETURN 3
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(stockp).",0X00,"ERROR"
		   CDS ENDSELECT DSC:stockp_ctx
		   RETURN -2
		ENDIF
		
	ENDIF
	CDS ENDSELECT DSC:stockp_ctx
	
	//stockpHist
	CDS SELECT FROM DSC:stockpHist_tbl BECOMES DSC:stockpHist_ctx \
	WHERE post:adt_stockp_pieza == post:Pieza
	CDS FINDFIRST DSC:stockpHist_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS ENDSELECT DSC:stockpHist_ctx
		MSGBOX "LA PIEZA FUE RECIBIDA POR LA TX DE RECEPCION DE PIEZAS (stockpHist).",0X00,"AVISO"
		CDS ENDSELECT DSC:stockpHist_ctx
		RETURN 3
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(stockpHist).",0X00,"ERROR"
		   CDS ENDSELECT DSC:stockpHist_ctx
		   RETURN -2
		ENDIF
	ENDIF
	CDS ENDSELECT DSC:stockpHist_ctx
	
	//StockpCDD_Aux
	CDS SELECT FROM DSC:StockpCDD_Aux_tbl BECOMES DSC:StockpCDD_Aux_ctx \
	WHERE post:Pieza == post:Pieza
	CDS FINDFIRST DSC:StockpCDD_Aux_ctx NOLOCK
	IF (CDSRETVAL == 0)
		CDS EXTRACT DSC:StockpCDD_Aux_ctx CDD_plan_fecha into l_fecha \
		CDD_plan_nro into l_nro \
		CDD_crem_imp into l_crem \
		CDD_ctaOM into l_ctaOM \
		CDD_rtte_TipoDoc into l_TipoDoc \
		CDD_rtte_NumDoc into l_NumDoc \
		es_mayorista into l_may
		CDS ENDSELECT DSC:StockpCDD_Aux_ctx
		IF (CDD_plan_fecha == l_fecha && CDD_plan_nro == l_nro) THEN
			/*
			CDD_crem_imp_ant = l_crem
			CDD_crem_imp = l_crem
			CDD_ctaOM = l_ctaOM
			CDD_rtte_TipoDoc = l_TipoDoc 
			CDD_rtte_NumDoc = l_NumDoc 
			es_mayorista = l_may			
			refresh CDD_crem_imp
			*/
			RETURN 0
		ELSE
			FPRINT common:csr_string "LA PIEZA SE INGRESO EL %e CON LA PLANILLA Nº %s",l_fecha,l_nro
			MSGBOX common:csr_string,0X00,"AVISO" 
			CDS ENDSELECT DSC:StockpCDD_Aux_ctx
			RETURN 3
		ENDIF
	ELSE
		IF (CDSRETVAL == -801) THEN
			l_retval  = -801
		ELSE
		   MSGBOX "NO SE PUEDE ACCEDER A LOS DATOS(StockpCDD_Aux).",0X00,"ERROR"
		   CDS ENDSELECT DSC:StockpCDD_Aux_ctx
		   RETURN -2
		ENDIF
		
	ENDIF
	CDS ENDSELECT DSC:StockpCDD_Aux_ctx
	
	RETURN l_retval
END SUB

/*******/
