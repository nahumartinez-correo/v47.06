/****o* Pendientes de agrupación/OFB:post:MISCwri_piezasBuzon
* NOMBRE
*   OFB:post:MISCwri_piezasBuzon
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCwri_piezasBuzon
	
	local cant_nac like tmpUP_cant_simples
	local cant_int like tmpUP_cant_simples
	
	//Recorro la stockpUP_simp para las piezas buzon y acumulo...
	CDS SELECT FROM dsc:stockpUP_simp_tbl BECOMES dsc:stockpUP_simp_ctx WHERE \
	post:fecha == siaf:fecha_proceso && \
	post:NisUP == "BUZON"
	CDS FINDFIRST dsc:stockpUP_simp_ctx NOLOCK
	lib:err_retval = CDSRETVAL
	IF (lib:err_retval == -801)
		cds endselect dsc:stockpUP_simp_ctx
		return -2
	END IF
	while (lib:err_retval == 0)
		CDS EXTRACT dsc:stockpUP_simp_ctx \
		post:tipo_piezaUP post:tmpUP_cant_simples
		call csr:trimfield post:tipo_piezaUP
		if (post:tipo_piezaUP == "SIMPLES NAC") then
			cant_nac = cant_nac + tmpUP_cant_simples
		else
			cant_int = cant_int + tmpUP_cant_simples
		end if
		cds findnext dsc:stockpUP_simp_ctx NOLOCK
		lib:err_retval = cdsretval
	end while
	cds endselect dsc:stockpUP_simp_ctx
	
	//Imprimo encabezado de PIEZAS BUZON
	common:csr_string = "    PIEZAS EN BUZON "
	CALL MISCwrite_rec_up
	common:csr_string = "   "
	CALL MISCwrite_rec_up	

	if (cant_int > 0)
		//imprimo cantidad internacionales
		FPRINT common:csr_string,"SimInt  %6.6s",cant_int
		CALL MISCwrite_rec_up
	end if
	if (cant_nac > 0)
		//imprimo cantidad nacionales
		FPRINT common:csr_string,"SimNac  %6.6s",cant_nac
		CALL MISCwrite_rec_up
	end if
		
END SUB

/*******/
