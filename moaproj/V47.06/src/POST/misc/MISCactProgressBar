/****o* Pendientes de agrupación/OFB:post:MISCactProgressBar
* NOMBRE
*   OFB:post:MISCactProgressBar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"
//#define BARRACOMPLETA2 	"##############################################################################################################################################"

#ifdef COMPCONBARRA
SUB post:MISCactProgressBar(titulo, salto, tipo, refresco)

	/*********************************************************************************/
	/* Subrutina: post:MISCactProgressBar(titulo, salto, tipo, refresco)             */
	/*                                                                               */
	/* [PAW]: Esta rutina se encarga de actualizar la barra de progreso y refrescar  */
	/*        la salida por pantalla.                                                */
	/*                                                                               */
	/* Parámetros:                                                                   */
	/*        titulo       : Hace referencia al título que se desea visualizar       */
	/*                       a la izquierda de la barra.                             */
	/*        salto        : Hace referencia al salto que se desea dar en el         */
	/*                       progreso en esta llamada.                               */
	/*        tipo         : Hace referencia al tipo de visualización que se         */
	/*                       desea para la barra de progreso.                        */
	/*        refresco     : Hace referencia a la cantidad de operaciones que        */
	/*                       se desean realizar para refrescar la barra de progreso. */
	/*                                                                               */
	/* Salidas:                                                                      */
	/*   ( 0) BARRAOK      : Se actualizó correctamente la barra de progreso.        */
	/*                                                                               */
	/* Comentarios:                                                                  */
	/*                     Esta rutina debe llamarse la misma cantidade de veces     */
	/*                     que el valor del parámetro totalPasos pasado a la inic.   */
	/*                                                                               */
	/*********************************************************************************/

	local cant like progressPor
	local barTmp like progressBar
	local lngTit like post:cantidad
	local strMedio like progressBar
	local lngMed like post:cantidad
	local lngCor like post:cantidad
	local lngCorB like post:idx
	local tmpCant like post:cantidad
	local strA like progressBar
	local strB like progressBar
	local long like post:cantidad

	/* Longitudes, auxiliares... : */
	tmpString = titulo
    CALL csr:trimfield(tmpString)
	long = tmpString.numchars
	lngTit = long + 1
	barTmp = progressBar

	/* Acumulo el salto: */
	progressAct = progressAct + salto

	/* Según el refresco debo o no visualizar: */
	if (progressAct % refresco != 0)
		return BARRAOK
	endif

	/* Calculo el largo de la barra, sin tener en cuenta el título ni el indicador: */
	clearfield progressBar
	if (progressTot <= progressAct)
		progressPor = 100
		tmpCant = 71 - lngTit
		fprint progressBar "%*.*s", tmpCant, tmpCant, BARRACOMPLETA2
	else
		if (progressTot <= 0)
			return E_TOTALPASOS
		endif
		progressPor = (100 * progressAct) / progressTot
		cant = (71 - lngTit) * progressPor / 100
		if (cant == progressBar.numchars)
			return BARRAOK
		endif
		fprint progressBar "%*.*s", cant, cant, BARRACOMPLETA2
	endif

	/* Acá tengo que meter el porcentaje o el progreso en la mitad de la barra (indicador) */
	if (tipo == BARRAPORCENT)
		fprint strMedio "- %%%s -", progressPor
	else
		fprint strMedio "- %s/%s -", progressAct, progressTot
	endif

	/* Junto algunas partes involucradas: (parteA + indicador + parteB) */
	lngMed = strMedio.numchars
	if (lngMed < 71 - lngTit - 2)
		lngCor = (71 - lngTit - lngMed) / 2
		strA = substr(progressBar, 0, lngCor)
		tmpCant = lngCor + lngMed
		strB = substr(progressBar, tmpCant, 999)
		progressBar = strA
		lngCorB = lngCor - progressBar.numchars
		fprint progressBar "%s%*.*s%s%s", strA, lngCorB, lngCorB, "", strMedio, strB
	endif

	/* Junto todas las partes involucradas: (título + parteA + indicador + parteB) */
	fprint progressBar "%s%s" titulo, progressBar

	/* Visualizo la barra sólo si se modificó, evitando parpadeos: */
	if (barTmp != progressBar)
		lib:stat_msg_line = FLD:progressBar
		refresh lib:stat_msg_line
	endif

	/* Cuando termina el proceso, limpio la barra de estados: */
	if (progressTot < progressAct)
		lib:stat_msg_line = ""
		refresh lib:stat_msg_line
	endif
	return BARRAOK
END SUB
#endif

/*******/
