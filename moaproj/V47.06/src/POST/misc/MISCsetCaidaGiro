/****o* Pendientes de agrupación/OFB:post:MISCsetCaidaGiro
* NOMBRE
*   OFB:post:MISCsetCaidaGiro
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCsetCaidaGiro
	local nto_trn like PreDNroTrn
	//Recorro la PresuDet para ver si existe una tx de giro que tenga status = 003
	CDS SELECT FROM DSC:TABPresuDeta BECOMES DSC:PresuDet_ctx2 WHERE \
		post:fecha == common:system_date && \
		post:op_operator_id == op:op_operator_id && \
		post:PresNro == post:PresNro && \
		siaf:adt_tran_fliatran == "CSM" && \
		siaf:siaf_status == 003
	CDS FINDFIRST DSC:PresuDet_ctx2 NOLOCK
	lib:err_retval = CDSRETVAL
	WHILE (lib:err_retval == 0)
		CDS EXTRACT DSC:PresuDet_ctx2 PreDNroTrn into nro_trn
		
		siaf:siaf_status = 101
		
		//accedo al journal para setear el tlr:jnl_status > 100 y genero jnl_caidas
		CALL post:CDScaidaGiroCombo(nro_trn)
		IF (RETVAL < 0)
			CDS UNLOCK DSC:PresuDet_ctx2
			CDS ENDSELECT DSC:PresuDet_ctx2
			RETURN (RETVAL)
		END IF

		CDS FINDNEXT DSC:PresuDet_ctx2 NOLOCK
		lib:err_retval = CDSRETVAL
	END WHILE
	CDS UNLOCK DSC:PresuDet_ctx2
	CDS ENDSELECT DSC:PresuDet_ctx2	
END SUB

/*******/
