/****o* Pendientes de agrupación/OFB:post:MISCcargaDatosTabla
* NOMBRE
*   OFB:post:MISCcargaDatosTabla
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcargaDatosTabla(p_abm,p_tabla)
    LOCAL Lmensaje LIKE common:csr_string_4096
    LOCAL l_cant_total LIKE siaf:i
    /* Carga todos los registros de la Tabla en picklist */

    CALL CSR:trimfield(p_abm)
    CALL CSR:trimfield(p_tabla)
    CDS SELECT FROM p_tabla BECOMES DSC:Tabla_ctx
    CDS FINDFIRST DSC:Tabla_ctx NOLOCK
    IF (CDSRETVAL == 0) THEN
    	CDS AGGREGATE DSC:Tabla_ctx count admin:adt_br_branch
    	CDS EXTRACT DSC:Tabla_ctx admin:adt_br_branch INTO l_cant_total
    END IF
    CDS SELECT FROM p_tabla BECOMES DSC:Tabla_ctx
    IF (CDSRETVAL < 0) THEN
        FPRINT Lmensaje "La tabla %s es inexistente en el sistema\n", p_tabla
		call post:MISClogCargaMas(mdata_directorio, mdata_abm, Lmensaje)
        CDS ENDSELECT DSC:Tabla_ctx
    	RETURN (-2)
    END IF
    CDS FINDFIRST DSC:Tabla_ctx LOCK
	call post:MISCinicProgressBar("CARGANDO REGISTRO    - ", l_cant_total)
    WHILE (CDSRETVAL == 0)
       CDS EXTRACT DSC:Tabla_ctx ALL
       CALL post:MISCagregarRegistro(p_abm,p_tabla) //vuelco contenido del registro en picklist
       CDS FINDNEXT DSC:Tabla_ctx LOCK
    END WHILE
    call post:MISCfinProgressBar
	FYIMSG LST:common:fyimsg_list, ""
    CDS UNLOCK DSC:Tabla_ctx
    CDS ENDSELECT DSC:Tabla_ctx
    ;CALL CSR:magic_PickOp 4 DSC:PickCargaTabla "2,81"
END SUB

/*******/
