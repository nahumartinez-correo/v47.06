/****o* Anulación de Documentos/OFB:post:MISCgenDirect
* NOMBRE
*   OFB:post:MISCgenDirect
* DESCRIPCION
*   Esta rutina se encarga de generar las directas de la anulación parcial
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCgenDirect()

   ;*******************************************************************************************************
   ;*                                                                                                      
   ;* [PAW - 22/04/99]            Esta rutina se encarga de generar las directas de la anulación parcial.  
   ;*                                                                                                      
   ;*******************************************************************************************************

	local auxNC like NotaCredito
	local tmpPresNro like PresNro
	local auxPresNro like PresNro
	local tmpSiaf like siaf:codigo_siaf
	local pasada like PresNro
	local j like siaf:i
	local aux like post:PreDNroTrn
	local cant like post:idx  //un fixed sin decimales.
	local tmpPres like post:PresNro
	local l_retval like lib:err_retval
	local varl_fecha like common:system_date


	call post:MISCclrgenDirect
	call CDSleoEstAnul
  	if (enSesion == "S")
		adt_PreDNroTrn = 0
		call CDSgrbEstado("")
	endif


	if (sistCaido != "S")
		; actualiza marcas para el manejo de track & trace y especies valorizadas (lo limpia por si
		; viene sucio de una anulacion anterior).
		call post:CDSactMarcas
		// pongo el numero en cero.
		cant = (PreAUltTrn * -1)
		call CDSIncSecSesion(post:PresNro,"TRN", cant, enAnulacion)
		PreDNroTrn = retval
	endif

	/*Este campo se utiliza para numerar secuencialmente las Directas que se van journalizando.
	El sentido de esto es poder detectar con mayor eficiencia el estado en que se encontraba
	el sistema luego de una caída y que de esta forma no se pierda nada de la Sesión ni queden
	datos erróneos - Gabriel Falciola*/

	; Para lograr la persistencia del campo contador_directas, había que tener en cuenta que
	; hay diferencias entre la anulación y el fin de sesión respecto a cuando se generan las
	; directas. El tema es que en las primeras directas de la anulación, el select que se
	; hace, filtra los registros que ya se generaron en caso de caida, en cambio en el resto
	; de los casos, el select se hace sobre la totalidad de los registros y se va salteando
	; los journalizados. Esto incide en el campo contador_directas ya que en un caso (el
	; primero), hay que levantar el último valor del campo ya que se continua desde ahí, y
	; en el segundo caso, el campo debe valer siempre 2 (ya que hace el recorrido y lo
	; incrementa nuevamente.)

	call MISCleeEstado(DIRECTAS)
	l_retval = retval
	call MISCleeEstado("2")
  	if (enSesion == "S" || (retval == VERDAD && l_retval == VERDAD) || sistCaido != "S")
		contador_directas = 2
	endif

	if (post:presNewObten == "N")
		call CDSanulFacturas
		CALL post:CDSobtiene_secuen("PRESU")
   		post:presNroNew = adt_codseq_nro
		post:presNewObten = "S"
		call post:CDSgraboPresNew
		auxPresNro = PresNro
		PresNro = post:presNroNew
		clearfield post:importe
		; copiar los nuevos campos!!
		call post:CDSadt_presu_save
		call post:CDSpresu_imp_save
		if (enSesion == "S")
			call post:CDSadt_presuact_save
		endif
		PresNro = auxPresNro
		call CDSgrbEstado("")
	endif

	if (!post:FechaAnt) then
		varl_fecha = common:system_date
	else
		varl_fecha = post:fecha_factCM
	end if
	
  	if (enSesion == "S" || estAnul == "D2_")
  	;Si estoy en facturacion automática busco con fecha de otro dia
		 CDS SELECT FROM "journal" BECOMES dsc:post:Jounarl_anul_Ctx \
			where post:PresNro == post:PresNro &&\
	     		  tlr:jnl_status < 100 && \
	     		  tlr:jnl_bus_date == varl_fecha && \
	     		  tlr:jnl_operator == op:op_operator_id && \
	     		  tlr:jnl_branch == common:sucursal_activa && \
				  siaf:codigo_siaf != 99023 && siaf:cancelacion == ""
		#ifdef COMPCONBARRA
		CDS AGGREGATE dsc:post:Jounarl_anul_Ctx count siaf:codigo_siaf
		if (cdsretval == 0)
			CDS EXTRACT dsc:post:Jounarl_anul_Ctx siaf:codigo_siaf
			siaf:codigo_siaf = siaf:codigo_siaf / 2
		else
			siaf:codigo_siaf = 0
		endif
		call post:MISCinicProgressBar("JOURNALIZANDO - ", siaf:codigo_siaf)
		call post:MISCactProgressBar("JOURNALIZANDO - ", 1, BARRAPORCENT, 1)
		#endif
		CDS FINDFIRST dsc:post:Jounarl_anul_Ctx LOCK
		CDS EXTRACT dsc:post:Jounarl_anul_Ctx siaf:codigo_siaf
	else
		call post:CDSabroNcTable(dsc:NC_TAB, dsc:NC_CON)
	endif
	lib:err_retval = cdsretval
	call post:CDSabroPresuD
	call post:CDSabroPresuO

 	 call MISCleeEstado(DIRECTAS)
 	 if (retval == VERDAD)
		pasada = 0
		while (lib:err_retval == 0  && !(pasada == 1 && siaf:codigo_siaf == 99021))
		 /* Esto es una horrenda asquerocidad pero no lo puedo poner en el select
		porque no me leeria las transacciones distintas a la 70030 */
		/* JLA 03-01-01 para que bypasee las cancelaciones de giros por roturas de cheques */
			if (siaf:codigo_siaf == 70030 || siaf:codigo_siaf == 70040 || siaf:codigo_siaf == 70041 || \
				siaf:codigo_siaf == 70140 || siaf:codigo_siaf == 70141 || siaf:codigo_siaf == 70322 || \
				siaf:codigo_siaf == 95000)
			  	if (enSesion == "S" || estAnul == "D2_")
					CDS EXTRACT dsc:post:Jounarl_anul_Ctx giros:cancelacion
				else
					CDS EXTRACT dsc:post:NC_CON giros:cancelacion
				endif
				//
				if (giros:cancelacion != "") then
					CLEARFIELD giros:cancelacion
					goto giros_goto:
				endif
			endif
			if (siaf:codigo_siaf == 99021)
				if (enSesion == "S" || estAnul == "D2_")
					CDS FINDAGAIN dsc:Jounarl_anul_Ctx LOCK
					CDS EXTRACT dsc:Jounarl_anul_Ctx post:cli_tipo post:CliCod post:CliRaz post:CloTipDoc \
					post:CloCuit post:IvaCod post:percep_r212 post:IngBCod post:CloProvin post:adt_PreDNroTrn
				else
					CDS FINDAGAIN dsc:NC_CON LOCK
					CDS EXTRACT dsc:NC_CON post:cli_tipo post:CliCod post:CliRaz post:CloTipDoc \
					post:CloCuit post:IvaCod post:percep_r212 post:IngBCod post:CloProvin post:adt_PreDNroTrn
				endif
				adt_cativa_discri = "N"
				post:adt_cativa_cod = IvaCod
				Call  post:CDS_CatIva_Load
			endif
	   		/*Antes de grabar en la PresuDet chequeo si no se hizo anteriormente
	     	Esta rutina solo se ejecuta cuando la anulacion quedo incompleta - Gabriel Falciola*/
			retval = 0
    		if (sistCaido == "S")
				aux = post:adt_PreDNroTrn
	   			call CDScheck_presu_anul
				post:adt_PreDNroTrn = aux
			end if
	   		if (retval == 0 || sistCaido != "S")
				if ((siaf:codigo_siaf != 99021) && (siaf:codigo_siaf != 7100))
					/*Filtro de registros que no estan en la PresuDet - Gabriel Falciola*/
					call MISCfiltro_directas
					if (retval == 0)
						call post:CDSpresuParcial(PreAUltTrn)
					end if
				endif
			end if
	   		/*Antes de grabar la Directa chequeo si no se hizo anteriormente
	     	Esta rutina solo se ejecuta cuando la anulacion quedo incompleta - Gabriel Falciola*/
			retval = 0
	    		if (sistCaido == "S")
				aux = post:adt_PreDNroTrn
	   			call CDScheck_jnl_anul
				post:adt_PreDNroTrn = aux
	   		end if
	   		if (retval == 0 || sistCaido != "S")
				aux = post:adt_PreDNroTrn
				post:adt_PreDNroTrn = PreAUltTrn
				if ((enSesion == "S" || estAnul == "D2_") && siaf:codigo_siaf == 99099)
                   		 // En una reimpresion el cheque
                  		 // se debe grabar con acreditación automática.
				    let tes:teso_cheq_auto = "S"
				end if
	
				call CDSjournalParcial

				//CCT: Si es CREM y gran cliente se deba grabar la cupon y la cupon_rep
				IF (siaf:codigo_siaf == 18701 )
					CALL MISCgenCupon_Crem
	            END IF			

		        /*Esta rutina genera los escaneos correspondientes a las directas*/
		        CALL MISCgenDir_scaneos
				
				/*MFM - Esta rutina actualiza la TranCont*/
				CALL MISCact_TranCont("N")
				
				/* sba 20030513 - Si usó franqueadora, actualizo en la */
				/* control_franq el Nro de Presupuesto y limpio el campo */
				/* de factura anulada */
				if (post:usa_franqueadora == "S") then
					call post:CDScfranq_factnew
				end if
				
				/*Genero la tabla auxiliar de Impuesto de Sellados - Gabriel Falciola*/
				call post:MISCgenerarImpp(presNroNew)
				/*Acumulo en la tabla AuxIngBr el Importe Con y Sin IVA para Ingresos Brutos*/
				call MISCTratIngBrNC(presNroNew)
				call post:CDSCobraPagaNC(siaf:importe,siaf:afecta_efectivo,presNroNew)
				post:adt_PreDNroTrn = aux
			end if
			
			if (siaf:codigo_siaf != 7100 && siaf:codigo_siaf != 99021)
				contador_directas = contador_directas + 1
				; aseguro persistencia del campo contador_directas
				call CDSgrbEstado("")
			endif
			
			if (enSesion != "S" && estAnul != "D2_")
				call CDSestadoDirOk
			endif
			if (siaf:codigo_siaf != 7100)
				pasada = 1
			endif
giros_goto:
			if (enSesion == "S" || estAnul == "D2_")
				CDS FINDNEXT dsc:Jounarl_anul_Ctx LOCK
			else
				CDS FINDNEXT dsc:NC_CON LOCK
			endif
			lib:err_retval = cdsretval
			CLEARFIELD post:enCombo
			CLEARFIELD post:fld_promo_imp //cgw:se limpia para que no arrastre valores
			if (lib:err_retval == 0)
			    call MISCclrgenDirect
	  			if (enSesion == "S" || estAnul == "D2_")
	  				CDS EXTRACT dsc:Jounarl_anul_Ctx ver_anulacion cod_agrupacion
					CDS EXTRACT dsc:Jounarl_anul_Ctx post:adt_PreDNroTrn siaf:codigo_siaf
				else
					CDS EXTRACT dsc:NC_CON ver_anulacion cod_agrupacion
					CDS EXTRACT dsc:NC_CON post:adt_PreDNroTrn siaf:codigo_siaf
				endif
			endif
			#ifdef COMPCONBARRA
			call post:MISCactProgressBar("JOURNALIZANDO - ", 1, BARRAPORCENT, 1)
			#endif
	    End While
		#ifdef COMPCONBARRA
		call post:MISCactProgressBar("JOURNALIZANDO - ", 1, BARRAPORCENT, 1)
		#endif
	endif
	call post:MISCfinProgressBar
	NotaCredito = "S"
	tmpPresNro = post:PresNro
	post:PresNro = post:presNroNew
	if (enSesion != "S" && estAnul == "D1_")
		fprint estAnul, "%s%s%s", DIRECTAS, IMPUESTOSELLADO, "1"
		call CDSgrbEstado(estAnul)
	endif
	CDS UNLOCK dsc:PRESU_ORI_CON
	CDS UNLOCK dsc:PRESU_DES_CON
	
	call MISCcompletoDir
	post:PresNro = tmpPresNro
	CDS ENDSELECT dsc:PRESU_DES_CON
	CDS ENDSELECT dsc:PRESU_ORI_CON
	if (enSesion == "S" || estAnul == "D2_")
		CDS ENDSELECT dsc:Jounarl_anul_Ctx
	else
		CDS ENDSELECT dsc:NC_CON
	endif
END SUB   

/*******/
