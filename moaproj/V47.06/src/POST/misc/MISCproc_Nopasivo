/****o* Pendientes de agrupación/OFB:post:MISCproc_Nopasivo
* NOMBRE
*   OFB:post:MISCproc_Nopasivo
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

Sub post:MISCproc_Nopasivo

    post:adt_fecdes_web = post:adt_fecperd_web
    post:adt_fechas_web = post:adt_fecperh_web

   CDS SELECT unique post:adt_nroDoc_web \
        FROM Dsc:TblClienWeb BECOMES DSC:CtxClienWeb \
        WHERE post:adt_fecha_web >= post:adt_fecdes_web && \
              post:adt_fecha_web <= post:adt_fechas_web && \
              post:adt_pasivo_web != "S" && \
              journalizacionOk != "S"

	CDS FINDFIRST DSC:CtxClienWeb  NOLOCK
    IF (CDSRETVAL == -801) THEN
	    CALL batch:MISCgeneraLog("\n... Sin proceso de no pasivos pendientes ...\n","INFO","N")
		CDS ENDSELECT DSC:CtxClienWeb
        RETURN (-2)
    END IF
    let lib:err_retval = cdsretval
	CALL batch:MISCgeneraLog("\n[JOURNALIZANDO - NO PASIVOS]\n","INFO","N")
	While ( lib:err_retval == 0 )
        CDS EXTRACT DSC:CtxClienWeb post:adt_nroDoc_web
		if (terminoProcesoAnt == "S")
			NroLote_inic_aux1 = 0
			NroLote_fin_aux1 = 99999999
			NroLote_inic_aux2 = 0
			NroLote_fin_aux2 = 99999999
		else
			if (NroLote_inic_web > NroLote_web)
				NroLote_inic_aux1 = NroLote_inic_web
				NroLote_fin_aux1 = 99999999
				NroLote_inic_aux2 = 0
				NroLote_fin_aux2 = NroLote_web
			else
				NroLote_inic_aux1 = NroLote_inic_web
				NroLote_fin_aux1 = NroLote_web
				NroLote_inic_aux2 = NroLote_inic_web
				NroLote_fin_aux2 = NroLote_web
			endif
		endif
        Call post:MISCprocClienWeb(adt_nroDoc_web)
        CDS FINDAGAIN DSC:CtxClienWeb NOLOCK
		CDS FINDNEXT DSC:CtxClienWeb NOLOCK
		let lib:err_retval = cdsretval
		clearfield sistCaido
	End While

    CDS ENDSELECT DSC:CtxClienWeb
	clearfield NroLote_web
End Sub

/*******/
