/****o* Pendientes de agrupación/OFB:post:MISCprt2laser
* NOMBRE
*   OFB:post:MISCprt2laser
* DESCRIPCION
* 	[PAW - 17/12/99]Esta rutina se encarga de analizar la cadena que se desea imprimir y           
*                   redireccionarla correctamente según sea impresión por laser, docprt o un campo.
* 	Aclaración:Para el correcto funcionamiento de este algoritmo, se debieron modificar       
*              ciertas rutinas en donde se enviaba directamente lo deseado al PRT TRANSPARENT 
*              y en ese lugar hacer una llamada a esta rutina.                                
* ENTRADAS
*   cadena:Hace referencia a la cadena que se desea imprimir.
* 	modoPrt(global):Hace referencia al modo en que se va a imprimir la cadena. Hay 3 modos:       
*                   LASER: manda a un archivo.                                                   
*                   FACTFIELD: manda al campo factField.                                             
*                   DOCPR: manda a la DocPrt.                                                    
* SALIDAS
* 	[archivo]:Se va generando un archivo con cada linea de impresión: "\temp\laser.fac".
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCprt2laser(cadena)
	LOCAL l_cadena LIKE common:csr_string
	
	LET l_cadena = cadena

	SELECT (modoPrt)
		CASE LASER
			SELECT (l_cadena)
				CASE SALTODEPAGINA
					//[PAW] --> Tengo que avanzar hasta llegar al final de la página.
					IF (siaf:i <= 60) THEN
						common:csr_string = "\n"
						WHILE (siaf:i <= 60)
							siaf:i = siaf:i + 1
							CALL CSR:file_write 1 common:csr_string
						END WHILE
						siaf:i = 1
					END IF
				BREAK
				CASE SETEODEFAULT
				CASE SETEODOC
					//[PAW] --> No tiene que hacer nada!
				BREAK
				CASE LINEANUEVA
					common:csr_string = "\n"
					CALL CSR:file_write 1 common:csr_string
					siaf:i = siaf:i + 1
				BREAK
				CASE ELSE
					CALL CSR:file_write 1 l_cadena
					siaf:i = siaf:i + 1
				BREAK
			END SELECT
		BREAK
		CASE FACTFIELD
			common:csr_string = l_cadena
			CALL csr:printbuffer_add(common:csr_string)
		BREAK
		CASE ELSE
			Prt Transparent l_cadena
		BREAK
	END SELECT
END SUB

/*******/
