/****o* Adelantos/OFB:post:MISCcm_armar_consumo
* NOMBRE
*   OFB:post:MISCcm_armar_consumo
* DESCRIPCION
*   Rutina que genera los consumos de adelantos vs / monetarios segun corresponda que seran enviados en el 
*   mensaje 997032 de los bits 105/106/107
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:SVAL99430,post:MISCarmo_viaje_UP
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcm_armar_consumo(tipo_adel)

	/****************************************************************************/
	/* GENERAR ADELANTOS VS/MONETARIOS		 	 				    			*/
	/* BITS : 105,106,107 		 	 											*/
	/* Suma / resta	Char(1)	'0' = suma , 'D' = resta  							*/
	/* Tipo de adelanto	Char(1)	Cliente_Adelantos.cade_tipo 					*/
	/* ID de adelanto	Char(15)	Cliente_Adelantos.cade_nro 					*/ 
	/* Importe / consumo	Num(12)	Cliente_Adelantos.cade_saldo 				*/
	/****************************************************************************/
	local loc_retval       like lib:err_retval
	local varl_importe     like siaf:importe
	local varl_importe2    like common:csr_string
	local varl_id_adelanto like post:adt_adelcm_id
	local varl_longitud   like giros:Longitud

	post:BulkFldCant   = 0

	clearfield post:datos_msg105
	clearfield post:datos_msg106
	clearfield post:datos_msg107

/*50295-El bit 105 se enviara vacio en el caso de ingresar un adelanto monetario con un medio de pago
//distinto de efectivo o cheque certificado dentro del plazo	
if (tipo_adel == "M" && post:imp_adel_mon == 0) then
	fprint post:datos_msg105,"%03.3s%s",post:BulkFldCant,post:datos_msg105
else*/

	CDS SELECT FROM DSC:post:AdelCM_tbl BECOMES DSC:post:AdelCM_ctx \
	WHERE post:adt_adelcm_op == op:op_operator_id && \
	post:adt_adelcm_remito == "" && \
	post:adt_adelcm_marca == "*"

	CDS FINDFIRST DSC:post:AdelCM_ctx NOLOCK
    	lib:err_retval = CDSRETVAL
	if ( lib:err_retval == -801  )
		CDS ENDSELECT DSC:AdelCM_ctx
		return 0
	else
		if ( lib:err_retval < 0 )
			msgbox "Error al obtener los datos de los adelantos.",\
			OFB_OK,"Atencion"
			CDS ENDSELECT DSC:AdelCM_ctx
			return -1
		end if
	end if

	WHILE (lib:err_retval ==  0 )

		clearfield siaf:nota_1
		clearfield varl_id_adelanto
		clearfield varl_importe

		CDS EXTRACT DSC:AdelCM_ctx \
			post:adt_adelcm_id      into varl_id_adelanto \
			post:adt_adelcm_consumo into varl_importe
	
		if (tipo_adel == "M" && post:imp_adel_mon == 0) then
			varl_importe2 = post:imp_adel_mon * 100
		else
			varl_importe2 = varl_importe * 100
		endif
	
		fprint siaf:nota_1,"%01.1s%01.1s%015.15s%012.12s",consumo_operacion,tipo_adel,varl_id_adelanto,varl_importe2


		varl_longitud = post:datos_msg105.numchars + siaf:nota_1.numchars
		if ( varl_longitud <= 830 )
			fprint post:datos_msg105,"%s%s",post:datos_msg105,siaf:nota_1
			post:BulkFldCant = post:BulkFldCant + 1
		else
			varl_longitud = post:datos_msg106.numchars + siaf:nota_1.numchars
			if ( varl_longitud <= 830  && post:datos_msg105.numchars == 830 )
				fprint post:datos_msg106,"%s%s",post:datos_msg106,siaf:nota_1
				post:BulkFldCant = post:BulkFldCant + 1
			else
				varl_longitud = post:datos_msg107.numchars + siaf:nota_1.numchars
				if ( varl_longitud <= 830 && datos_msg105.numchars == 830  && \
			    	 post:datos_msg106.numchars == 830 )
					fprint post:datos_msg107,"%s%s",post:datos_msg107,siaf:nota_1
					post:BulkFldCant = post:BulkFldCant + 1
				endif
			endif
		endif

    	CDS FINDNEXT DSC:AdelCM_ctx NOLOCK
    		lib:err_retval = CDSRETVAL
		if ( lib:err_retval == -801 )
			loc_retval = 0
			break
		else
			if ( lib:err_retval < 0 )
				msgbox \
				"Error al obtener los datos de los adelantos.",\
				OFB_OK,"Atencion"
				loc_retval = -1
				break
			end if
		end if
	
	END WHILE

	fprint post:datos_msg105,"%03.3s%s",post:BulkFldCant,post:datos_msg105
	
	CDS ENDSELECT DSC:AdelCM_ctx

	return loc_retval
//endif
END SUB

/*******/
