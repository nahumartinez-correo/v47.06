/****o* Pendientes de agrupación/OFB:post:MISCprintConFormato
* NOMBRE
*   OFB:post:MISCprintConFormato
* DESCRIPCION
*   Se utiliza para establecer el estilo, el tamaño y el tipo de fuente
* ENTRADAS
*   Cadena que contiene los metacaracteres de estilo, tamaño y fuente
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:PDOCfile_print y siaf:PDOCfile_print_gral
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCprintConFormato(pCadena)
LOCAL INDICE_INF LIKE post:cantidad
LOCAL INDICE LIKE post:cantidad
LOCAL l_cantidad LIKE post:cantidad
LOCAL l_valor LIKE common:csr_string
LOCAL l_subcadenaAux LIKE common:csr_string_4096
LOCAL l_tags LIKE common:csr_string
LOCAL l_EncontroCaracter LIKE siaf:i
	
	;ej
	;common:csr_string = "<st>1</st>cadena a imprimir"
	;common:csr_string = "cadena a imprimir<st>1</st>cadena a imprimir"
	;common:csr_string = "cadena a imprimir<txS>1</txS>cadena a imprimir"
	;common:csr_string = "cadena a imprimir<txF>Courier New</txF>cadena a imprimir"
	l_subcadenaAux = pCadena
	
	do
		INDICE_INF = 0
		CALL csr:str_search (l_subcadenaAux,"<",INDICE,INDICE_INF)
		l_EncontroCaracter = retval == 0
		if (l_EncontroCaracter) then
			l_cantidad = INDICE - INDICE_INF
			l_valor = SUBSTR(l_subcadenaAux,0,l_cantidad)
			INDICE = INDICE + 1
			INDICE_INF = l_subcadenaAux.numchars - INDICE
			l_subcadenaAux = SUBSTR(l_subcadenaAux,INDICE,INDICE_INF)
			INDICE_INF = 0
				
			CALL csr:str_search (l_subcadenaAux,">",INDICE,INDICE_INF)
			l_EncontroCaracter = retval == 0
			if (l_EncontroCaracter) then
				l_cantidad = INDICE - INDICE_INF
				l_tags = SUBSTR(l_subcadenaAux,0,l_cantidad)
			
				INDICE = INDICE + 1
				INDICE_INF = l_subcadenaAux.numchars - INDICE
				l_subcadenaAux = SUBSTR(l_subcadenaAux,INDICE,INDICE_INF)
			else
				break
			end if
		else
			break
		end if
	
		select (l_tags)
			case "st" 
				if (l_valor.numchars) then
					PRT PRINT edit l_valor
				end if
				break
			case "/st" //Estilo
				select (l_valor)
					case 0 //Normal (resets 1-8)
						PRT STYLE 0
						break
					case 1	//Bold
						PRT STYLE 1
						break
					case 3	//Italic
						PRT STYLE 3
						break
					case 4	//Underline
						PRT STYLE 4
						break
					case 5	//Double wide font
						PRT STYLE 5
						break
					case 9	//Single wide font
						PRT STYLE 9
						break
					case 10	//Draft, 10 pitch
						PRT STYLE 10
						break
					case 11	//Draft, 10.063 pitch
						PRT STYLE 11
						break
					case 12	//Draft, 12 pitch
						PRT STYLE 12
						break
					case 13	//Draft, 16.5 pitch
						PRT STYLE 13
						break
					case 14	//Correspondence, 10 pitch
						PRT STYLE 14
						break
					case 15	//Correspondence, 10.063 pitch
						PRT STYLE 15
						break
					case 16	//Correspondence, 12 pitch
						PRT STYLE 16
						break
					case 17	//Correspondence, 16.5 pitch
						PRT STYLE 17
						break
					case 30	//Bold off
						PRT STYLE 30
						break
					case 32	//Italic off
						PRT STYLE 32
						break
					case 33	//Underline off
						PRT STYLE 33
						break
				end select

				break
			case "txS"
			case "txF"
			    break
			case "/txS" //Tamaño del fuente
			    ;gpb
					call post:MISCSetFontSize(l_valor)
			    break
			case "/txF" //Fuente
			    PRT TEXTFONTNAME fld:l_valor
			    break
			case "pTab"
				if (l_valor.numchars) then
					PRT PRINT edit l_valor
				end if
				break
			case "/pTab" //Posicion donde se va a escribir
					call post:MISCSetPosTab(l_valor)
			    break	
			case else
				;tags no reconocido
		end select
	loop	

	if (l_subcadenaAux.numchars) then
		PRT PRINT edit l_subcadenaAux
	end if
	;Establesco un estilo normal para lo que sigue
	prt style 0

	;gpb:Establesco tamaño de la fuente (capturada en el encabezado del reporte) para lo que sigue 
	call post:MISCSetFontSize(post:txS)
END SUB

/*******/
