/****o* Clientes Medios/OFB:post:MISCcm_cons_fact_int
* NOMBRE
*   OFB:post:MISCcm_cons_fact_int
* DESCRIPCION
*   Esta rutina obtiene del host los datos de las facturas con intereses.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:RCVEcm_cons_fact_int
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-354
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcm_cons_fact_int(datos,long)

	/****************************************************************************/
	/* OBTENER LAS FACTURAS A PAGAR						    */
	/* BITS : 105,106,107 							    */
	/****************************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local varl_importe      like common:csr_string
	local varl_intereses    like common:csr_string
	local varl_tasa		like common:csr_string
	local varl_fecha        like common:csr_string
	local limp_iva 		like siaf:importe
	local ind 		like siaf:i
	local varl_fact_id      like common:csr_string
	local varl_tipo_fact    like common:csr_string
	local varl_real_fact    like common:csr_string
	local varl_seq          like post:factura_nro
	local varl_imp_rem      like post:importe_factura
	local varl_tipo			like  common:csr_string
	local varl_tipo_comp       	like common:csr_string
	
	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2
	ind = 0
	
	while ( posicion < longitud )

		post:factura_nro = substr(datos,posicion,15)
		posicion = posicion + 15

		varl_tipo_fact = substr(datos,posicion,1)
		posicion = posicion + 1

		varl_real_fact = substr(datos,posicion,15)
		posicion = posicion + 15

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:importe_factura = 0.00
		else
			post:importe_factura = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		post:estado_factura = substr(datos,posicion,1)
		posicion = posicion + 1

		varl_fecha = substr(datos,posicion,8)
		posicion = posicion + 8
		move varl_fecha to post:fecha_vencimiento

		varl_intereses = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:factura_intereses = 0.00
		else
			post:factura_intereses = (varl_intereses / 100 )
		end if
		posicion = posicion + 12

		varl_fact_id = substr(datos,posicion,15)
		posicion = posicion + 15
	
		varl_tasa = substr(datos,posicion,12)
		if ( varl_tasa == "000000000000")
			post:factura_iva = 0.00
		else
			post:factura_iva = (varl_tasa / 100 )
		end if
		posicion = posicion + 12	

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:importe_consumo = 0.00
		else
			post:importe_consumo = (varl_importe / 100 )
		end if
		posicion = posicion + 12
		

		if (varl_real_fact  != "000000000000000")
			varl_seq = varl_real_fact
		else
			varl_seq = post:factura_nro
		end if


		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			varl_imp_rem = 0.00
		else
			varl_imp_rem = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		varl_tipo = substr(datos,posicion,1)
		posicion = posicion + 1
		
		//50249 Fecha de Emision de Fact y NC
		//varl_fecha = substr(datos,posicion,8)
		posicion = posicion + 8
		//move varl_fecha to l_fecha_emision
		
		//50249
		/*if (post:OperacionNC || post:ReporteNC) then
			varl_tipo_comp = "CRE"  //notas de credito
		else*/
			varl_tipo_comp = "FAC" //FACTURAS
		//endif
		fprint climed_ult_item,"%015.15s%3.3s",post:factura_nro,varl_tipo_comp
		
		
		//verificar que la factura tenga intereses generados y que aun no hayan sido facturados!!!
		if ( post:factura_nro.numchars != 0 && post:factura_intereses > 0 && varl_fact_id == 0) 
			// Verificar que no sean mas de 10 facturas con intereses 
			// porque no se puede mas de 10!!!
			if (ind < 11) then
				clearfield limp_iva
				limp_iva = (post:factura_intereses * factura_iva ) / 100
				post:factura_intereses = post:factura_intereses + limp_iva 
				post:Imp_IntPunitorios = post:Imp_IntPunitorios + post:factura_intereses
			
				fprint common:csr_string,\
				"%015.15s %16.16e %10.10e %16.16e %6.6e %20.20s %1.1s %015.15s %015.15s", \
				varl_seq,post:importe_factura,\
				post:fecha_vencimiento,post:factura_intereses,factura_iva," ",\
				varl_tipo_fact,varl_real_fact,post:factura_nro

				
	   			call csr:f_saaddpl(DSC:facturas_cliente,common:csr_string)
				if (retval < 0 )
					loc_retval = -2
					msgbox \
					"ERROR AL AGREGAR ITEMS AL PICKLIST.",OFB_OK,"Atencion"
					break
				else
					loc_retval = 0
				end if
			
				ind = ind + 1
			else
				loc_retval = 0
				msgbox \
					"Existen más de 10 facturas con intereses punitorios.Se cobrarán las 10 primeras, luego deberá ingresar nuevamente a la transacción para facturar el resto.",OFB_OK,"Atencion"
				break
			end if
		end if

	end while
	
	call post:CDSsave_IntPunitorio
	return loc_retval

END SUB

/*******/
