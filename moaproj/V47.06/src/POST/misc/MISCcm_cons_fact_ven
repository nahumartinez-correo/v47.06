/****o* Clientes Medios/OFB:post:MISCcm_cons_fact_ven
* NOMBRE
*   OFB:post:MISCcm_cons_fact_ven
* DESCRIPCION
* OBTENER LAS FACTURAS A PAGAR	y NC A DEBITAR. Se guardan en un picklist las facturas vencidas y en otro las facturas no vencidas junto a las notas de credito.		
* BITS : 105,106,107 							    
* ENTRADAS
*   datos: datos correspondientes a los bits 105-106-107 respectivamente
*   long: longitud de bits 105-106-107 respectivamente
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   OFB:post:MISCclimed_cons_fact
* REFERENCIADO POR
*   OFB:post:RCVEcm_cons_fact_ven
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-350
*   NI 50552 -  MEJORAS EN LA APLICACION DE LAS TRANFERENCIAS BANCARIAS
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcm_cons_fact_ven(datos,long)

	/****************************************************************************/
	/* OBTENER LAS FACTURAS A PAGAR						    */
	/* BITS : 105,106,107 							    */
	/****************************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local varl_importe      like common:csr_string
	local varl_intereses    like common:csr_string
	local varl_tasa					like common:csr_string
	local varl_fecha        like common:csr_string
	local varl_fact_id      like common:csr_string
	local varl_neto         like importe_consumo
	local varl_tipo_fact    like common:csr_string
	local varl_real_fact    like common:csr_string
	local varl_seq          like post:factura_nro
	local varl_imp_rem      like post:importe_factura
	local varl_tipo					like  common:csr_string
	local l_tipo_comp       like giros:EstadoGiro_fld
	local varl_tipo_comp    like post:fact_tipo_comp
	local l_fecha_emision   like post:fecha_vencimiento
	local varl_fecha_venc   like common:csr_string
	local limporte_fc_venc 	like siaf:importe
	local limporte_fc_nc 		like siaf:importe	

	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2
	clearfield limporte_fc_venc
	clearfield limporte_fc_nc
	while ( posicion < longitud )

		post:factura_nro = substr(datos,posicion,15)
		posicion = posicion + 15

		varl_tipo_fact = substr(datos,posicion,1)
		posicion = posicion + 1

		varl_real_fact = substr(datos,posicion,15)
		posicion = posicion + 15

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:importe_factura = 0.00
		else
			post:importe_factura = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		post:estado_factura = substr(datos,posicion,1)
		posicion = posicion + 1

		varl_fecha_venc = substr(datos,posicion,8)
		posicion = posicion + 8
		move varl_fecha_venc to post:fecha_vencimiento

		varl_intereses = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:factura_intereses = 0.00
		else
			post:factura_intereses = (varl_intereses / 100 )
		end if
		posicion = posicion + 12

		varl_fact_id = substr(datos,posicion,15)
		posicion = posicion + 15
	
		varl_tasa = substr(datos,posicion,12)
		if ( varl_tasa == "000000000000")
			post:factura_iva = 0.00
		else
			post:factura_iva = (varl_tasa / 100 )
		end if
		posicion = posicion + 12	

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:importe_consumo = 0.00
		else
			post:importe_consumo = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		if (varl_real_fact  != "000000000000000")
			varl_seq = varl_real_fact
		else
			varl_seq = post:factura_nro
		end if

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			varl_imp_rem = 0.00
		else
			varl_imp_rem = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		varl_tipo = substr(datos,posicion,1)
		posicion = posicion + 1
		
		//50249 Fecha de Emision de Fact y NC
		varl_fecha = substr(datos,posicion,8)
		posicion = posicion + 8
		move varl_fecha to l_fecha_emision
		//50249
		varl_tipo_comp = post:fact_tipo_comp //FACTURAS y NOTAS DE CREDITO para las TXs de Cobranza

		fprint climed_ult_item,"%015.15s%3.3s",post:factura_nro,varl_tipo_comp
		
		varl_neto = importe_factura - importe_consumo

		//if ( post:fecha_vencimiento <= common:system_date && varl_tipo != "C") then ;verificar que la factura esté vencida y que no sea nota de credito!!
		//50552 - Se podran cobrar con TB tambien las facturas que no vencieron y descontar las NC, pero tendra prioridad el cobro de las facturas vencidas.
		if (varl_tipo != "C") then //no es nota de credito
		   //verificar si la factura tiene intereses generados aun no facturados
		  if ( varl_real_fact.numchars != 0 && post:factura_intereses > 0 && varl_fact_id == 0) 
		   //este tipo de facturas no deberán cobrarse
		   else
					if ( post:fecha_vencimiento <= common:system_date) then //factura vencida
								limporte_fc_venc = limporte_fc_venc + varl_neto
							//	l_tipo_comp = "F" no es necesario mostrarlo en el picklist pues son todas facturas vencidas, no hay notas de credito mezcladas.
								clearfield common:csr_string
								fprint common:csr_string,\
								"%10.10e %1.1s %015.15s %16.16e %015.15s               %16.16e%16.16e%16.16e%1.1s", \
								post:fecha_vencimiento,varl_tipo_fact,varl_real_fact,post:importe_factura,post:factura_nro, \
								varl_neto,importe_consumo,varl_imp_rem,varl_tipo
								fprint common:csr_string,\
								"%s%e",common:csr_string,l_fecha_emision
		   		
								call csr:f_saaddpl(DSC:facturas_venc,common:csr_string)
								
	   				else //factura no vencidas
			 					limporte_fc_nc = limporte_fc_nc + varl_neto
				 				l_tipo_comp = "F"
	  	 					clearfield post:csr_string_250
	   						fprint post:csr_string_250,\
								"%1.1s%015.15s %16.16e %e %16.16e                         %16.16e %1.1s %015.15s %15.15s ", \
								l_tipo_comp,varl_seq,post:importe_factura,post:fecha_vencimiento,varl_neto,\
								post:factura_intereses,varl_tipo_fact,varl_real_fact,post:factura_nro
								fprint post:csr_string_250,"%s%15.15s%16.16e %16.16e %1.1s%e",\
								post:csr_string_250,varl_fact_id,varl_imp_rem,importe_consumo,\
								varl_tipo,l_fecha_emision

								call csr:f_saaddpl(DSC:facturas_cliente,post:csr_string_250)
	  				endif
	   endif
	  else // nota de credito
	  	 	limporte_fc_nc = limporte_fc_nc - varl_neto
	  	 	l_tipo_comp = "N"
	   		clearfield post:csr_string_250
	   		fprint post:csr_string_250,\
				"%1.1s%015.15s %16.16e %e %16.16e                         %16.16e %1.1s %015.15s %15.15s ", \
				l_tipo_comp,varl_seq,post:importe_factura,post:fecha_vencimiento,varl_neto,\
				post:factura_intereses,varl_tipo_fact,varl_real_fact,post:factura_nro
				fprint post:csr_string_250,"%s%15.15s%16.16e %16.16e %1.1s%e",\
				post:csr_string_250,varl_fact_id,varl_imp_rem,importe_consumo,\
				varl_tipo,l_fecha_emision
			
	   		call csr:f_saaddpl(DSC:facturas_cliente,post:csr_string_250)
	   end if
				if (retval < 0 )
					loc_retval = -2
					msgbox \
					"ERROR AL AGREGAR ITEMS AL PICKLIST.",OFB_OK,"Atencion"
					break
				else
					loc_retval = 0
				end if
		
	end while

  //Importe Total de facturas Vencidas
	Imp_TotFactVenc = Imp_TotFactVenc + limporte_fc_venc
	//50552 - Importe Total de las facturas NO vencidas - NC
	importe_factpend = importe_factpend + limporte_fc_nc
	call post:CDSsave_TotFactVenc
	return loc_retval

END SUB

/*******/
