/****o* Pendientes de agrupación/OFB:post:MISCprocBonifSrvVs
* NOMBRE
*   OFB:post:MISCprocBonifSrvVs
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCprocBonifSrvVs(l_codigo_siaf, l_promo_cod, l_promo_desc, l_PreDNroTrn, conJournal)
	local l_alicuota_iva like post:adt_prodvs_aliciva
	local l_importe_bon like post:promo_imp_tot
	local l_cantidad like post:cantidad2
	local l_inhibeUp like promo_inhibeUpPdvs

	if (l_codigo_siaf == 18301) // listas
		CDS EXTRACT DSC:CONPresuDeta 				   \
			post:envios			into 	l_cantidad	   \
			fld_promo_imp 		into 	l_importe_bon  \
			adt_serv_aliciva 	into 	l_alicuota_iva \
			promo_inhibeUpList 	into	l_inhibeUp
	else	// gestiones varias
		CDS EXTRACT DSC:CONPresuDeta 				   \
			post:cantidad		into 	l_cantidad	   \
			fld_promo_imp 		into 	l_importe_bon  \
			adt_serv_aliciva 	into 	l_alicuota_iva \
			promo_inhibeUpServ 	into	l_inhibeUp
	endif

	bInhibirUP = (bInhibirUP || l_inhibeUp == "S")

	call post:MISCacumula_vec_bon(l_importe_bon, l_alicuota_iva, l_cantidad)
	call post:MISCtotal_vec_bon
	call post:CDSgeneraTrnBonLocal(l_promo_cod, l_promo_desc, ImporteTotBon, l_PreDNroTrn, conJournal, "", "", "")
END SUB

/*******/
