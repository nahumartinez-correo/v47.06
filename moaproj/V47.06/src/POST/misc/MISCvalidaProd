/****o* Pendientes de agrupación/OFB:post:MISCvalidaProd
* NOMBRE
*   OFB:post:MISCvalidaProd
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCvalidaProd
    LOCAL LMensaje  LIKE common:csr_string_aux
	local bError like siaf:i
	local l_maximo like post:String_Nume50
	; primero valido tamaños y tipos de datos.
	bError = false
	select (post:adt_rest_tipoProd)
		case "PRD"
			; el siguiente valor se tuvo que pasar antes a un campo local
			; porque sino al compilar daba overflow y aparecía un número
			; menor haciendo fallar al proceso de validación.
		    l_maximo = "9999999999"
			call post:MISCvalidoTipoLong(adt_rest_claveProdu, "N", l_maximo, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu1")
				siaf:columnas_cl = retval
			endif
			break
		case "SRV"
			call post:MISCvalidoTipoLong(adt_rest_claveProdu, "A", 10, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu1")
				siaf:columnas_cl = retval
			endif
			break
		case "ESP"
			call post:MISCvalidoTipoLong(adt_rest_claveProdu1, "A", 20, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu1")
				siaf:columnas_cl = retval
			endif
			call post:MISCvalidoTipoLong(adt_rest_claveProdu2, "A", 20, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu2")
				siaf:columnas_cl = retval
			endif
			break
		case "MOT"
			call post:MISCvalidoTipoLong(adt_rest_claveProdu1, "A", 5, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu1")
				siaf:columnas_cl = retval
			endif
			call post:MISCvalidoTipoLong(adt_rest_claveProdu2, "N", 99, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu2")
				siaf:columnas_cl = retval
			endif
			; en el caso particular del submódulo tiene que tener 2 caracteres...
			if (adt_rest_claveProdu2.numchars != 2)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu2")
				siaf:columnas_cl = retval
		    	FPRINT FLD:LMensaje "El valor debe tener 2 caracteres.\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			endif
			call post:MISCvalidoTipoLong(adt_rest_claveProdu3, "N", 99999, 1, 0)
			if (retval != 0)
				bError = true
				call post:MISCbuscaColumna("post:adt_rest_claveProdu3")
				siaf:columnas_cl = retval
			endif
			break
	end select

	if (bError)
	   	fprint common:csr_string "Error en los tipos de datos o longitudes!"
	   	return -2
	endif

	; después valido que existan
	select (post:adt_rest_tipoProd)
		case "PRD"
	    	CDS SELECT FROM DSC:adt_prodvs_table BECOMES DSC:post:CargaMasiva_ctx \
	    	where  adt_prodvs_cod == adt_rest_claveProdu
	    	fprint common:csr_string "El código de productos varios ingresado no existe!"
			break
		case "SRV"
	    	CDS SELECT FROM DSC:adt_serv_table BECOMES DSC:post:CargaMasiva_ctx \
	    	where  post:adt_serv_serv == adt_rest_claveProdu
	    	fprint common:csr_string "El código de servicio ingresado no existe!"
			break
		case "ESP"
	    	CDS SELECT FROM DSC:tes:Especie BECOMES DSC:post:CargaMasiva_ctx \
	    	 where   tes:adt_espv_cod == adt_rest_claveProdu1 && \
	    			 tes:adt_espv_subcod == adt_rest_claveProdu2
	    	fprint common:csr_string "La especie ingresada no existe!"
			break
		case "MOT"
			CDS SELECT FROM DSC:siaf:adt_motiv_table BECOMES DSC:post:CargaMasiva_ctx \
			where 	siaf:adt_mot_codigo == adt_rest_claveProdu1 && \
					siaf:adt_mot_modulo == adt_rest_claveProdu2 && \
					siaf:adt_mot_submodulo == adt_rest_claveProdu3
	    	fprint common:csr_string "El motivo ingresado no existe!"
			break
	end select

	CDS FINDFIRST DSC:post:CargaMasiva_ctx nolock
	if (cdsretval != 0)
		call post:MISCbuscaColumna("post:adt_rest_claveProdu1")
		siaf:columnas_cl = retval
		CDS ENDSELECT DSC:post:CargaMasiva_ctx
		return (-2)
	endif
	CDS ENDSELECT DSC:post:CargaMasiva_ctx
END SUB

/*******/
