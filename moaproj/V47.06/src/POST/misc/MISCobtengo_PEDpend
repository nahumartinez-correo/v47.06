/****o* Pago en destino/OFB:post:MISCobtengo_PEDpend
* NOMBRE
*   OFB:post:MISCobtengo_PEDpend
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCconsMult_PEDpend
* DOCUMENTACION
*   
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCobtengo_PEDpend(datos,long)

	/****************************************************************/
	/* OBTENER LAS PIEZAS PED PENDIENTES DE LA SUCURSAL		    	    */
	/* BITS : 105,106,107 							                */
	/****************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local l_importe 		like common:csr_string
	local l_nro_comp_ped like common:csr_string

	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2
	
	while ( posicion < longitud )
	
		post:id_pieza_ped = substr(datos,posicion,8)
		posicion = posicion + 8
		
		post:pieza_ped = substr(datos,posicion,13)
		posicion = posicion + 13
		
		post:fecha_impos_ped = substr(datos,posicion,8)
		posicion = posicion + 8
		
		post:NisOrigen_ped = substr(datos,posicion,5)
		posicion = posicion + 5
		
		l_importe = substr(datos,posicion,12)
		if ( l_importe == "000000000000")
			post:imp_cobro_ped = 0.00
		else
			post:imp_cobro_ped = (l_importe / 100 )
		end if
		posicion = posicion + 12
		
		post:razon_soc_ped = substr(datos,posicion,50)
		posicion = posicion + 50
		call csr:trimfield(post:razon_soc_ped)
		
		post:TipoDoc_dest_ped = substr(datos,posicion,2)
		posicion = posicion + 2
		
		//hago esta triquiñuela porque el host manda siempre dos ceros adelante ya que en el host se almacena el documento 
		//en un campo de 13 posiciones porque lo definieron mal ya que deberia ser de 11 posiciones
		posicion = posicion + 2
		post:NroDoc_dest_ped = substr(datos,posicion,11)
		CALL post:MISCquita_ceros_izq(post:NroDoc_dest_ped)
		posicion = posicion + 11
		
		post:tipo_comp_ped = substr(datos,posicion,5)
		posicion = posicion + 5
		
		post:letra_comp_ped = substr(datos,posicion,1)
		posicion = posicion + 1
		
		//post:nro_comp_ped  = substr(datos,posicion,15)
		l_nro_comp_ped  = substr(datos,posicion,15)
		post:nro_comp_ped  = l_nro_comp_ped * 1
		posicion = posicion + 15

		post:estado_pieza_ped  = substr(datos,posicion,3)
		posicion = posicion + 3

		l_importe = substr(datos,posicion,8)
		post:valor_dec_ped = (l_importe / 100)
		posicion = posicion + 8
		
		l_importe = substr(datos,posicion,8)
		post:valor_cre_ped = (l_importe / 100)
		posicion = posicion + 8
		
		post:cli_nro_ped = substr(datos,posicion,11)
		posicion = posicion + 11

		post:NisDestino_ped = substr(datos,posicion,5)
		posicion = posicion + 5
		
		post:razon_soc_emi_ped = substr(datos,posicion,50)
		posicion = posicion + 50
		
		post:TipoDoc_emi_ped = substr(datos,posicion,2)
		posicion = posicion + 2

		//hago esta triquiñuela porque el host manda siempre dos ceros adelante ya que en el host se almacena el documento 
		//en un campo de 13 posiciones porque lo definieron mal ya que deberia ser de 11 posiciones
		posicion = posicion + 2
		post:NroDoc_emi_ped = substr(datos,posicion,11)
		CALL post:MISCquita_ceros_izq(post:NroDoc_emi_ped)
		posicion = posicion + 11

		CALL CDSsave_PEDpend
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if

		//seteo more data
		fprint climed_ult_item,"%-5.5s%-5.5s%08.8s",common:sucursal_activa,common:sucursal_activa,post:id_pieza_ped
		
	end while
	
	
	return loc_retval

END SUB

/*******/
