/****o* Pendientes de agrupación/OFB:post:MISCJour_ConNroTrn
* NOMBRE
*   OFB:post:MISCJour_ConNroTrn
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCJour_ConNroTrn
    LOCAL l_retval LIKE lib:err_retval

    /* cgw: Ultima tx journalizada esta dentro del presupuesto.
            (No es Inicio de Sesion ni tx sin nro de presupuesto) */

    //Busca ultima tx journalizada en la PresuDet y verifico marca de journalizacion.    
    DO 
      l_retval = CDSRETVAL
      IF (CDSRETVAL == 0) THEN
          CDS EXTRACT "trans_pend" post:PreDNroTrn
      END IF
      IF (l_retval != 0 || post:PreDNroTrn == post:adt_PreDNroTrn) THEN
          BREAK
      END IF
      CDS FINDNEXT "trans_pend" NOLOCK
    LOOP

    IF (CDSRETVAL == 0) THEN
    	CDS EXTRACT "trans_pend" post:PreDEst
    	
    	
    	
        //Encuentra ultima secuencia journalizada y verifica marca journalizacion en PresuDet.
        IF (post:PreDEst == 1) THEN //Inconsistencia: No fue marcado como journalizada.
            //Si es una emision de giro no actualiza el registro de PresuDet para solucionar esta
            //inconsistencia, dado que giros, ya tiene un tratamiento para recuperacion de sus caidas.
            IF (post:jnl_flia_tran != "CSM" || (post:jnl_flia_tran == "CSM" && \
                giros:es_emision_postal != "S" && giros:es_emision_tele != "S" && \
                giros:es_envio_WU != "S")) THEN
            	CDS FINDAGAIN "trans_pend" LOCK
            	select (siaf:codigo_siaf)
            	    case 8500
            	        //si se cae en una especie, tes:adt_evaux_prestran queda desactualizado.    
    	                tes:adt_evaux_prestran = post:PreDNroTrn
                        CDS APPEND "trans_pend" tes:adt_evaux_prestran
            	        break
            	    case 6640
            	    case 6650
            	        post:PreDEst = 1
            	        break
            	    case else
            	        //Soluciona inconsistencia: lo journalizo pero no lo marco en la PresuDet.
            	        post:PreDEst = 2
            	        CDS APPEND "trans_pend" post:PreDEst
            	        break
            	end select
            	IF (post:jnl_flia_tran == "CSM" || siaf:codigo_siaf == 99124 || siaf:codigo_siaf == 99200 || siaf:codigo_siaf == 99240 || siaf:codigo_siaf == 99242 ) THEN
            	    //cgw:si es un giro, que no sea emision, o consulta y cobro de piezas con polizas,
            	    //    actualizo status journalizado, por si hubo caida en vuelo.
            	    siaf:siaf_status = tlr:jnl_status
            	    CDS APPEND "trans_pend" siaf:siaf_status
            	END IF

            	

	        CDS UPDATE "trans_pend" LOCK
	        CDS UNLOCK "trans_pend"

            	IF ((post:jnl_flia_tran == "CSM" || siaf:codigo_siaf == 99124 || siaf:codigo_siaf == 99200 || siaf:codigo_siaf == 99240 || siaf:codigo_siaf == 99242) && \
            	    tlr:jnl_status >= 100) THEN
            	    //cgw:actualiza la PresuPag,AuxIva,AuxIngBr no considerando la tx caida en vuelo.
            	    plataf:verify_status = tlr:jnl_status
            	    plataf:verify_session = VALUE_CHANGED
            	    post:fecha = common:system_date
            	    post:op_operator_id = op:op_operator_id
                    siaf:adt_tran_afec_efvo = siaf:afecta_efectivo
                    CALL giros:MISCanulo_transac("NONE")
            	    CALL plataf:curstate_conf_drv
            	END IF
            END IF
        END IF
    END IF

    //Accede al siguiente registro de Presudet para verificar marca de journalizacion.
    IF (l_retval == 0) THEN
        CDS FINDNEXT "trans_pend" NOLOCK
        l_retval = CDSRETVAL
        IF (CDSRETVAL == 0) THEN
    	    CDS EXTRACT "trans_pend" post:PreDEst
    	END IF
    END IF
    RETURN (l_retval)
END SUB



/*******/
