/****o* Pendientes de agrupación/OFB:post:MISCObtieneImporte
* NOMBRE
*   OFB:post:MISCObtieneImporte
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCObtieneImporte
   LOCAL MuestraMensaje    LIKE siaf:i
   LOCAL loc_plataforma    LIKE adt_formu_tipo //ascii
   LOCAL loc_cod_duplicado LIKE sf1_cod_duplicado
   LOCAL loc_PresNro       LIKE common:csr_string
   local loc_op_title	   like op:op_title

   Fprint common:csr_string "rt%s" ,post:proyecto

   DLL FindWindowA(common:csr_string,"Olivetti North America Branch Automation")
   rt_handle = retval

   DLL bob_do (rt_handle, "inicio", 0)

   If (Retval > 0)
      FPRINT loc_plataforma,     "M"
      FPRINT loc_cod_duplicado,  "0"
      FPRINT loc_PresNro,  "0001"

      // Agrego las variables necesarias al Bob
      DLL free_variables()
      /* TBC 29-12-2000 Comento pues no quiero que me pise el valor anterior */
      DLL agregar_variables ("codigo_de_barras", sf1_codbarras)
      DLL agregar_variables ("codigo_de_barras2", sf1_segunda_barra)
      DLL agregar_variables ("nro_secuencia",loc_PresNro)
      DLL agregar_variables ("medio_de_pago",sf1_med_pago)
      DLL agregar_variables ("codigo_de_moneda",sf1_moneda)
      DLL agregar_variables ("modo_de_ingreso", sf1_tipo_ingreso)
      DLL agregar_variables ("codigo_duplicado", loc_cod_duplicado)
      DLL agregar_variables ("terminal", sf1_id_terminal)
      DLL agregar_variables ("info_medio_pago", NroCompPago)
      DLL agregar_variables ("plataforma", loc_plataforma)
      call csr:trimfield op:op_title loc_op_title
      DLL agregar_variables ("nombre_del_cajero_bob" , loc_op_title) // se agrega nombre del cajero al tck
      CLEARFIELD siaf:serv_msgerror
      CLEARFIELD siaf:serv_coderror

      DLL bob_execute (rt_handle, "principal", 0, 0, 0)
      if (retval != 1) then
	 Fprint common:csr_string_tmp "BOBLIB MSG (ERROR DE EJECUCION %s)",retval
	 MSGBOX common:csr_string_tmp,OFB_OK,"Error"
    	 Call MISClimpia_sf1
         Return -2
      end if

      DLL MOSAIC_get_variable ("mensaje_de_error",siaf:serv_msgerror, 60)
      DLL MOSAIC_get_variable ("codigo_de_error", siaf:serv_coderror, 5)
      IF (siaf:serv_msgerror.NUMCHARS > 0) THEN
	 Fprint common:csr_string_tmp "BOBLIB MSG (%s) %s",siaf:serv_coderror,siaf:serv_msgerror
	 MSGBOX common:csr_string_tmp,OFB_OK,"Error"
    	 Call MISClimpia_sf1
    	 Return -2
      END IF

      // Tomo los Datos que me deja el BoB
      Call post:MISCleo_datos_bob
      siaf:importe = sf1_importe /100

   endif
END SUB

/*******/
