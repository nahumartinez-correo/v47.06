/****o* Pendientes de agrupación/OFB:post:MISCreemplazarMacro
* NOMBRE
*   OFB:post:MISCreemplazarMacro
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCreemplazarMacro(macro, comienzo, fin)
	/********************************************************************************************************/
	/*                                                                                                      */
	/* [PAW - 17/12/99]      Esta rutina se encarga de analizar los identificadores de macros que se        */
	/*                       encuentran en la factura pre-generada y los procesa según sea necesario.       */
	/*                                                                                                      */
	/* Parámetros:                                                                                          */
	/* - macro           :   Hace referencia al identificador de macro que se debe modificar.               */
	/* - comienzo        :   Hace referencia al offset en que se encuentra dicho identificador de macro.    */
	/* - fin             :   Hace referencia al offset de fin de identificador de macro.                    */
	/*                                                                                                      */
	/* Salidas:                                                                                             */
	/* - post:factField  :   El campo factField (factura) actualizado con el cambio. (macro)                */
	/*                                                                                                      */
	/********************************************************************************************************/
	LOCAL cadena LIKE common:csr_string
	LOCAL nro_factura_aux LIKE nro_factura

	factFieldAux = SUBSTR(factField,0,comienzo)
	fin = fin + 1
	factField = SUBSTR(factField, fin, 99999)

	// [PAW] --> según la macro armo la cadena a reemplazar.
	SELECT (macro)
		CASE "[Nro. Factura]"
			IF (bloqueoVentas != "S") THEN
				nro_factura_aux = nro_factura
				nro_factura = nro_impre
				CALL post:MISCgen_digito_ver
				nro_factura = nro_factura_aux
				cadena = common:csr_string
				nro_impre = nro_impre + 1
				nro_factura = nro_factura + 1
			ELSE
				cadena = "             "
			END IF
		BREAK
		CASE "[Tipo Doc.                           ]"
			IF (impNotaCred == "S") THEN
				cadena = "                COMPROBANTE DE CREDITO"
				;comienzo = comienzo - 11
				;factFieldAux = substr(factField,0,comienzo)
				ELSE
					//gpb:Original
					//IF (ModalidadCC || ModalidadCD || OperacionCob  || OperacionAut  || OperacionInt) THEN
					//gpb:NI50479
					IF (ModalidadCC || ModalidadCD || OperacionCob  || OperacionAut  || OperacionInt || TESTFLAG(post:sesion_ped_flags,es_sesion_ped)) THEN
						cadena = "                               FACTURA"
					ELSE
						cadena = "                 FACTURA VENTA CONTADO"
					END IF
				;comienzo = comienzo - 2
				;factFieldAux = substr(factField,0,comienzo)
			END IF
		BREAK
		CASE "[Tipo Doc. y Num.                    ]"
			nro_factura_aux = nro_factura
			nro_factura = nro_impre
			CALL post:MISCgen_digito_ver
			nro_factura = nro_factura_aux
			IF (impNotaCred == "S") THEN
				FPRINT cadena "%s           %s", "  COMPROBANTE DE CREDITO", common:csr_string
			ELSE
				//gpb:Original
				//IF (ModalidadCC || ModalidadCD || OperacionCob  || OperacionAut  || OperacionInt) THEN
				//gpb:NI50479
				IF (ModalidadCC || ModalidadCD || OperacionCob  || OperacionAut  || OperacionInt || TESTFLAG(post:sesion_ped_flags,es_sesion_ped)) THEN				
					FPRINT cadena "%s           %s", "                 FACTURA", common:csr_string		
				ELSE
					FPRINT cadena "%s           %s", "   FACTURA VENTA CONTADO", common:csr_string
				END IF
			END IF
		BREAK
		CASE "[Hoja XX de XX]"
			FPRINT cadena "  HOJA %2.2s de %2.2s", pagActual, cantidad2
			pagActual = pagActual + 1
		BREAK
		CASE ELSE
			cadena = macro
		BREAK
	END SELECT

	CALL csr:StrConcat(factFieldAux, cadena, factFieldAux)
	CALL csr:StrConcat(factFieldAux, factField, factField)
END SUB

/*******/
