/****o* Pendientes de agrupación/OFB:post:MISCesp_val_fecha
* NOMBRE
*   OFB:post:MISCesp_val_fecha
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCesp_val_fecha
/*
    CDS CREATETABLE "ev_aux" DELETE NOKEYCHANGE ADDFIELDS \
    FLD:tes:adt_espv_suc       ASCENDING \
    FLD:tes:adt_espv_es_tesoro ASCENDING \
    FLD:tes:adt_espv_id        ASCENDING \
    FLD:tes:adt_espv_cod       ASCENDING \
    FLD:tes:adt_espv_subcod    ASCENDING \
    200 100 1024
*/

    //Tabla auxiliar de especies valorizadas
    CDS SELECT FROM DSC:post:espval_aux BECOMES DSC:post:espval_aux_ctx
    CDS DELETE DSC:post:espval_aux_ctx ALL
    //CDS FINDFIRST DSC:post:espval_aux_ctx NOLOCK


    //Tabla profiles
    CDS SELECT FROM DSC:op:adt_op_table BECOMES DSC:op:adt_op_context WHERE \
    (op:op_branch_id == op:op_branch_id) && (op:op_tlr_auth == "X")
    //&& op:op_operator_id == tlr:jnl_operator)
    CDS FINDFIRST DSC:op:adt_op_context NOLOCK



    WHILE (cdsretval == 0)   //por profiles
          CDS EXTRACT DSC:op:adt_op_context op:op_operator_id into op:adt_operator_id  \
          op:op_tesoro into op:adt_tesoro \
          op:op_tesoro_id into op:adt_tesoro_id

          //Tabla de especies valorizadas
          CALL tes:CDSespecie_select  //hace select y findfirst de especie
          lib:err_retval = cdsretval

          WHILE (lib:err_retval == 0) //por especies valorizadas
                CDS EXTRACT DSC:tes:Especie ALL


                //inicializar variables
                tes:adt_espv_suc         = op:op_branch_id
                tes:adt_espv_es_tesoro   = "N"
                tes:adt_espv_id          = op:adt_operator_id
                tes:adt_espv_marca_cierr = "X"
                tes:adt_espv_fecha       = siaf:fecha_proceso
                tes:adt_espv_cod         = tes:adt_espv_cod
                tes:adt_espv_subcod      = tes:adt_espv_subcod
                tes:adt_espv_importe     = 0  //ent-sal  + inic
                tes:adt_espv_imp_ent     = 0
                tes:adt_espv_imp_sal     = 0
                tes:adt_espv_imp_inic    = 0

                call post:MISCesp_val_datos

                if (op:adt_tesoro == "S") then
                        /* Si es tesorero hago lo mismo */
                        tes:adt_espv_es_tesoro   = "S"
                        tes:adt_espv_id          = op:adt_tesoro_id
                        tes:adt_espv_marca_cierr = "X"
                        call post:MISCesp_val_datos
                end if
                CDS FINDNEXT DSC:tes:Especie NOLOCK
                lib:err_retval = CDSRETVAL
               ENDWHILE
               CDS ENDSELECT DSC:tes:Especie
                CDS FINDNEXT DSC:op:adt_op_context NOLOCK
    END WHILE //por profiles
    CDS UNLOCK DSC:op:adt_op_context
    CDS ENDSELECT DSC:op:adt_op_context

    CALL tes:TRANesp_val_fecha   //imprime la tabla ev_aux

    CDS COMPRESS DSC:espval_aux WHERE tes:adt_espv_suc != op:op_branch_id
    //CDS DROPTABLE DSC:espval_aux
END SUB

/*******/
