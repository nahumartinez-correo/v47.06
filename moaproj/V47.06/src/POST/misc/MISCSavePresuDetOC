/****o* Pendientes de agrupación/OFB:post:MISCSavePresuDetOC
* NOMBRE
*   OFB:post:MISCSavePresuDetOC
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCSavePresuDetOC(tipo)

//Variables locales Nuevo Tratamiento Facturacion OC
LOCAL l_importe LIKE siaf:importe
LOCAL l_tarifa LIKE post:tarifa
LOCAL l_costo_opc LIKE post:costo_opc
LOCAL l_cantidad  LIKE post:cantidad
LOCAL l_cantidad2 LIKE post:cantidad2
LOCAL l_valor_dec LIKE post:valor_dec
LOCAL l_valor_cre LIKE post:valor_cre
LOCAL l_valor_ar LIKE post:valor_ar
LOCAL l_valor_csar LIKE post:valor_csar
LOCAL l_siva LIKE siaf:ImporteSinIva 
LOCAL l_civa LIKE siaf:ImporteConIva 
LOCAL l_ImpServUP LIKE post:ImpServUP
LOCAL l_ImpSinIva_serv LIKE post:ImpSinIva_serv
LOCAL l_tot_serv LIKE tele:importe_tot_serv_tel 
LOCAL l_imp_iva LIKE post:ImporteIva 
LOCAL l_siva_post LIKE post:ImporteSinIva 
LOCAL l_civa_post LIKE post:ImporteConIva
LOCAL l_cont LIKE post:cantidad
LOCAL l_cod_opc[6] LIKE post:cod_opc1_web
LOCAL l_cos_opc[6] LIKE post:costo_opc
LOCAL l_siniva_opc[6] LIKE post:importe_pesos
LOCAL l_impciva_vec[20] LIKE post:importe_pesos
LOCAL l_impsiva_vec[20] LIKE post:importe_pesos
LOCAL l_siva_bis LIKE post:ImporteSinIva_bis
LOCAL l_siniva_opc4[6] LIKE post:ImporteSinIva_bis
LOCAL l_bloq_siva4 LIKE post:imp_bloques_siva4
	
	//Resguardo Campos
	l_importe = siaf:importe
	l_tarifa = post:tarifa
	l_costo_opc = post:costo_opc
	l_cantidad  = post:cantidad
	l_cantidad2 = post:cantidad2
	l_valor_dec = post:valor_dec
	l_valor_cre = post:valor_cre
	l_valor_ar = post:valor_ar
	l_valor_csar = post:valor_csar
	l_siva = siaf:ImporteSinIva 
	l_civa = siaf:ImporteConIva 
	l_ImpServUP = post:ImpServUP
	l_ImpSinIva_serv = post:ImpSinIva_serv
	l_tot_serv = tele:importe_tot_serv_tel 
	l_imp_iva = post:ImporteIva 
	l_siva_post = post:ImporteSinIva 
	l_civa_post = post:ImporteConIva
	// SC 50170
	l_siva_bis = post:ImporteSinIva_bis
	l_bloq_siva4 = post:imp_bloques_siva4

	l_cont = 0
	while (l_cont < 6)
		l_cod_opc[l_cont] = post:cod_opc[l_cont]
		l_cos_opc[l_cont] = post:cos_opc[l_cont]
		l_siniva_opc[l_cont] = post:siniva_opc[l_cont]
		l_siniva_opc4[l_cont] = post:siniva_opc4[l_cont]
		l_cont = l_cont + 1
	end while
	l_cont = 0
	while (l_cont < 20)
		l_impciva_vec[l_cont] = post:impciva_vec[l_cont]
		l_impsiva_vec[l_cont] = post:impsiva_vec[l_cont]
		l_cont = l_cont + 1
	end while
	
	if (tipo == "I") then
		//Recorro la PresuDet y agrupo en la PresuDetOC los items
		CALL post:MISCAcumPresuDetOC("ITEMS")
	else
		//Recorro la PresuDet y agrupo en la PresuDetOC las tx auxiliares
		CALL post:MISCAcumPresuDetOC("AUXILIAR")
	endif
		
	//Restauro Campos
	siaf:importe = l_importe
	post:tarifa = l_tarifa
	post:costo_opc = l_costo_opc
	post:cantidad = l_cantidad
	post:cantidad2 = l_cantidad2
	post:valor_dec = l_valor_dec
	post:valor_cre = l_valor_cre
	post:valor_ar = l_valor_ar
	post:valor_csar = l_valor_csar
	siaf:ImporteSinIva = l_siva 
	siaf:ImporteConIva = l_civa 
	post:ImpServUP = l_ImpServUP
	post:ImpSinIva_serv = l_ImpSinIva_serv
	tele:importe_tot_serv_tel = l_tot_serv 
	post:ImporteIva = l_imp_iva
	post:ImporteSinIva = l_siva_post 
	post:ImporteConIva	= l_civa_post
	//SC 50170
	post:ImporteSinIva_bis = l_siva_bis
	post:imp_bloques_siva4 = l_bloq_siva4

	l_cont = 0
	while (l_cont < 6)
		post:cod_opc[l_cont] = l_cod_opc[l_cont]
		post:cos_opc[l_cont] = l_cos_opc[l_cont]
		post:siniva_opc[l_cont] = l_siniva_opc[l_cont]
		post:siniva_opc4[l_cont] = l_siniva_opc4[l_cont]
		l_cont = l_cont + 1
	end while
	l_cont = 0
	while (l_cont < 20)
		post:impciva_vec[l_cont] = l_impciva_vec[l_cont]
		post:impsiva_vec[l_cont] = l_impsiva_vec[l_cont]
		l_cont = l_cont + 1
	end while
			
END SUB

/*******/
