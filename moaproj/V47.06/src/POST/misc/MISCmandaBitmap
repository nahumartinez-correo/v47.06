/****o* Pendientes de agrupación/OFB:post:MISCmandaBitmap
* NOMBRE
*   OFB:post:MISCmandaBitmap
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCmandaBitmap(codigo)
	local l_byte like tes:idx

	; Primero mando el codigo del mensaje.
    ;COMM PUT  common:csr_string msg type BINARY length 2
	COMM PUT codigo msg type BINARY length 2

	; Voy verificando los bits del flag.
	; 1er byte bits 1 - 8.
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b001Secondary))
		l_byte = l_byte | 0x80
	endif
	if (TESTFLAG(post:secuenFlags, b002PAN))
		l_byte = l_byte | 0x40
	endif
	if (TESTFLAG(post:secuenFlags, b003CodProc))
		l_byte = l_byte | 0x20
	endif
	if (TESTFLAG(post:secuenFlags, b007FechaHora))
		l_byte = l_byte | 0x02
	endif
	COMM PUT l_byte msg type BINARY length 1

	; 2do byte bits 9 - 16.
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b011STAN))
		l_byte = l_byte | 0x20
	endif
	if (TESTFLAG(post:secuenFlags, b012LocalTime))
		l_byte = l_byte | 0x10
	endif
	if (TESTFLAG(post:secuenFlags, b013LocalDate))
		l_byte = l_byte | 0x08
	endif
	COMM PUT l_byte msg type BINARY length 1

	; 3er byte bits 17 - 24.
	l_byte = 0x00
	COMM PUT l_byte msg type BINARY length 1

	; 4to byte bits 25 - 32.
;	1,2,3,7,11,12,13,30,41
;	1110-0010-0011-1000-0000-0000-0000-0100-0000-0000-1000-0000
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b030NIS))
		l_byte = l_byte | 0x04
	endif
	COMM PUT l_byte msg type BINARY length 1

	; 5to byte bits 33 - 40.
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b039CodRespuesta))
		l_byte = l_byte | 0x02
	endif
	COMM PUT l_byte msg type BINARY length 1

	; 6to byte bits 41 - 48.
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b041Terminal))
		l_byte = l_byte | 0x80
	endif
	COMM PUT l_byte msg type BINARY length 1

	; 7mo byte bits 49 - 56.
	l_byte = 0x00
	COMM PUT l_byte msg type BINARY length 1

	; 8vo byte bits 57 - 64.
	l_byte = 0x00
	if (TESTFLAG(post:secuenFlags, b060NombreTerm))
		l_byte = l_byte | 0x10
	endif
	COMM PUT l_byte msg type BINARY length 1

	; ************ Fin Primary Bitmap **************

	; Los bits 65 a 128 se usan solo si el primer bit estaba prendido.
	if (TESTFLAG(post:secuenFlags, b001Secondary))
		; 9no byte bits 65 - 72.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 10mo byte bits 73 - 80.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 11vo byte bits 81 - 88.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 12vo byte bits 89 - 96.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 13vo byte bits 97 - 104.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 14vo byte bits 105 - 112.
		l_byte = 0x00
		if (TESTFLAG(post:secuenFlags, b105DatosRepet))
			l_byte = l_byte | 0x80
		endif
		if (TESTFLAG(post:secuenFlags, b106DatosRepet))
			l_byte = l_byte | 0x40
		endif
		if (TESTFLAG(post:secuenFlags, b107DatosRepet))
			l_byte = l_byte | 0x20
		endif
		if (TESTFLAG(post:secuenFlags, b108Firma))
			l_byte = l_byte | 0x10
		endif
		COMM PUT l_byte msg type BINARY length 1

		; 15vo byte bits 113 - 120.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1

		; 16vo byte bits 121 - 128.
		l_byte = 0x00
		COMM PUT l_byte msg type BINARY length 1
	endif
END SUB

/*******/
