/****o* Pago en Destino/OFB:post:MISCvalidaSucDestPED
* NOMBRE
*   OFB:post:MISCvalidaSucDestPED
* DESCRIPCION
*   Validacion de la Sucursal Destino
* ENTRADAS
*   P_CodSucBenef_fld = NIS Destino
* SALIDAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*		post:MISCvalReg2PED
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCvalidaSucDestPED(P_CodSucBenef_fld)
	LOCAL L_CodSucBenef_fld LIKE giros:CodSucBenef_fld 

	LET L_CodSucBenef_fld = P_CodSucBenef_fld
	LET giros:CodSucBenef_fld = L_CodSucBenef_fld
	CALL post:MISCFtrim(giros:CodSucBenef_fld)
	
	LET giros:SucSel2_fld = SUBSTR(giros:CodSucBenef_fld,0,1)
	CALL giros:MISCProvinciaFVAL(giros:SucSel2_fld,giros:ProvBenef_fld)
	
	//cgw:se agrego que se pueda seleccionar sucursales del tipo SA,SN,SF,NG,SB,SE.
	CDS SELECT FROM DSC:admin:adt_br_table BECOMES DSC:admin:adt_br_context \
		WHERE (admin:adt_br_branch == giros:CodSucBenef_fld && (admin:adt_br_tipo == "SA" \
		|| admin:adt_br_tipo == "SN" || admin:adt_br_tipo == "SF" \
		|| admin:adt_br_tipo == "SB" )&& admin:adt_br_admitePED == "S")

	CDS FINDFIRST DSC:admin:adt_br_context NOLOCK
	IF (CDSRETVAL < 0) THEN
		CDS ENDSELECT DSC:admin:adt_br_context 
		FPRINT post:msje_err_log_PED "Sucursal [%s] no habilitada para recibir PED" giros:CodSucBenef_fld
		RETURN -2	
	END IF
	CDS ENDSELECT DSC:admin:adt_br_context 
	
	RETURN 0
	
END SUB

/*******/
