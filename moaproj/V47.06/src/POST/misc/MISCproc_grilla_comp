/****o* Pendientes de agrupación/OFB:post:MISCproc_grilla_comp
* NOMBRE
*   OFB:post:MISCproc_grilla_comp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCproc_grilla_comp

/************************************************************/
/* Esta rutina carga en un vector que simula un picklist    */
/* el cual se va a ir moviendo segun el boton presionado    */
/************************************************************/
    local idx  like Tarif_idx
    local idx2 like Tarif_idx
    local lcod like Tarif_idx
    local col  like siaf:i

    
    idx  = Tarif_idx + PL_GETITEM
    idx2 = 0
    call csr:cleararray(comp_desc)
    call csr:cleararray(comp_imp)
    call csr:getrowcol post:comp_imp
    col = retval            	    
    
    
    //Recorro el picklist y proceso la informacion de cada item
    WHILE (idx2 < 11)    
        call csr:myPickcontrol(dsc:aux_pic_medios,common:csr_string,idx)
        comp_desc[idx2] = substr(common:csr_string,18,30)            
        comp_imp[idx2] = substr(common:csr_string,49,13)
        unprotfield comp_imp[idx2] 
        refresh comp_desc[idx2]
        refresh comp_imp[idx2]
        
        if ((idx - PL_GETITEM) == comp_cant_tot - 1)
        	//Se limpian los items que sobran para simular el scroll
            call MISCsobra_comp(idx2)        
            break
        end if

        idx  = idx  + 1
        idx2 = idx2 + 1

    End While

    
    ;call MISCrefresh_items

    //Deshabilito todas las flechas
    if (comp_cant_tot < 11)
        disablecontrol PBcomp_arriba 
        disablecontrol PBcomp_abajo
	call MISCflecha_restore
    else
        //Para deshabilitar la flecha para bajar me fijo si llegue hasta el ultimo
        idx = (comp_cant_tot - 1) + PL_GETITEM
        idx2 = Tarif_idx + col + PL_GETITEM 
        call csr:myPickcontrol(dsc:aux_pic_medios,common:csr_string,idx)        
        if (idx == idx2)
            disablecontrol PBcomp_abajo 
            keydef f32,RT_DOWN
        end if
        
        //Para deshabilitar la flecha para subir me fijo si estoy parado en el primero
        if (Tarif_idx == 0)
            disablecontrol PBcomp_arriba
        end if
    end if
END SUB

/*******/
