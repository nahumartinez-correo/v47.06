/****o* Pendientes de agrupación/OFB:post:MISCrestoEvAnul
* NOMBRE
*   OFB:post:MISCrestoEvAnul
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCrestoEvAnul()
	local aux like post:estado_presu
	cds select FROM DSC:tes:AuxEspV_tbl becomes DSC:tes:AuxEspV_ctx \
	where tes:adt_evaux_suc == op:op_branch_id && \
		  tes:adt_evaux_op == op:op_operator_id && \
		  tes:adt_evaux_tesoro == "N" && \
		  post:jnl_sequence_dire == "ND"

		  /*tes:adt_evaux_codigo == tes:espv_cod && \
		  tes:adt_evaux_prestran == tes:adt_evaux_prestran && \*/

	//cds findfirst DSC:tes:AuxEspV_ctx LOCK
	cds findfirst DSC:tes:AuxEspV_ctx NOLOCK
	let lib:err_retval = CDSRETVAL
	DO
		if (lib:err_retval != 0) then
			break
		end if
		cds extract DSC:tes:AuxEspV_ctx ALL
		If (tes:adt_evaux_importe > 0)
			cantidad = tes:adt_evaux_cantidad
			codigo_impre =  tes:adt_evaux_subcod
			aux = post:estado_presu
			post:estado_presu = 4
			//SC 50170
			Call post:MISCdesglosaIva(tes:adt_evaux_importe,tes:adt_espv_aliciva,cantidad,0)
			post:estado_presu = aux
			importe_sesion = importe_sesion - tes:adt_evaux_importe
			Importe_sin_iva = Importe_sin_iva - ImporteSinIva
		EndIf
		//cds findnext DSC:tes:AuxEspV_ctx LOCK
		cds findnext DSC:tes:AuxEspV_ctx NOLOCK
		let lib:err_retval = CDSRETVAL
	LOOP
	cds unlock DSC:tes:AuxEspV_ctx
	cds endselect DSC:tes:AuxEspV_ctx
END SUB

/*******/
