/****o* Pendientes de agrupación/OFB:post:MISCcontrol_stk_real
* NOMBRE
*   OFB:post:MISCcontrol_stk_real
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcontrol_stk_real
local cant_caja	like post:cant_caja_prev
local imp_ev  like tes:adt_espv_importe

	/*Si se vende, controlo el stock del producto con el stock real*/
	if (prod_serv.numchars > 0 && cant_caja_prev < cantidad)
		cant_caja = cantidad - post:cant_caja_prev
		adt_stock_codprod = prod_serv
	    adt_stock_coddep = 0
	    adt_stock_stock = 0
	    CALL post:CDSstock_load
	   	
	    if (cant_caja > post:adt_stock_stock)
		    errmsg clear
		    fprint common:csr_string,"EL PRODUCTO %5s SUPERA EL STOCK EXISTENTE",post:adt_prodvs_desc
	        errmsg common:errmsg_list,FLD:common:csr_string
		    RETURN (-2)
	    end if		
	end if
	
	/*Si se vende, controlo el stock de la especie relacionada al producto con el stock real*/
	if (codesp_prod.numchars > 0 && cant_cinta_prev < cantidad)
		tes:adt_espv_cod = codesp_prod
	    tes:adt_espv_subcod = subcod_prod
	    CALL tes:CDSadt_esp_load
	    
	    imp_ev = cantidad - cant_cinta_prev
	    imp_ev = imp_ev * tes:adt_espv_valor    
	    
	    if (imp_ev > 0)
		    call tes:CDSget_imp_TesEspV(op:op_branch_id,"N",op:op_operator_id,tes:adt_espv_cod,tes:adt_espv_subcod,importe)
	        if (retval < 0 || importe < imp_ev) then
		        errmsg clear
		        ;fprint common:csr_string,"LA DENOMINACION %5s SUPERA EL STOCK EXISTENTE",tes:adt_espv_subcod
		        fprint common:csr_string,"LA DENOMINACION %-20.20s %-20.20s SUPERA EL STOCK EXISTENTE",tes:adt_espv_cod,tes:adt_espv_subcod
	            errmsg common:errmsg_list,FLD:common:csr_string
		        RETURN (-2)
	        end if
		end if
	end if
	
	if (codesp_serv.numchars > 0) then
		/*Controlo el stock de la especie con el stock real*/
		tes:adt_espv_cod = codesp_serv
	    tes:adt_espv_subcod = subcod_serv
	    CALL tes:CDSadt_esp_load
	    
	    imp_ev = cantidad
	    imp_ev = imp_ev * tes:adt_espv_valor    
	    
	    if (imp_ev > 0)
		    call tes:CDSget_imp_TesEspV(op:op_branch_id,"N",op:op_operator_id,tes:adt_espv_cod,tes:adt_espv_subcod,importe)
	        if (retval < 0 || importe < imp_ev) then
		        errmsg clear
		        ;fprint common:csr_string,"LA DENOMINACION %5s SUPERA EL STOCK EXISTENTE",tes:adt_espv_subcod
		        fprint common:csr_string,"LA DENOMINACION %-20.20s %-20.20s SUPERA EL STOCK EXISTENTE",tes:adt_espv_cod,tes:adt_espv_subcod
	            errmsg common:errmsg_list,FLD:common:csr_string
		        RETURN (-2)
	        end if
		end if
	end if

	/*Si es cliente CC y el servicio tiene un producto asociado, controlo el stock real del producto*/
	if ((cli_tipo == 1 || (post:cli_tipo == 5 && post:consulta_ordenCM == "S"))&& prodCC_serv.numchars > 0) then
		adt_stock_codprod = prodCC_serv
	    adt_stock_coddep = 0
	    adt_stock_stock = 0
	    CALL post:CDSstock_load
	   	
	    if (cantidad > post:adt_stock_stock)
		    errmsg clear
		    fprint common:csr_string,"EL PRODUCTO %5s SUPERA EL STOCK EXISTENTE",post:adt_prodvs_desc
	        errmsg common:errmsg_list,FLD:common:csr_string
		    RETURN (-2)
	    end if		
	end if
END SUB

/*******/
