/****o* Pendientes de agrupación/OFB:post:MISCcontrolo_cheque
* NOMBRE
*   OFB:post:MISCcontrolo_cheque
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcontrolo_cheque

    cds select from "journal" becomes "jnl" where \
    tlr:jnl_bus_date    == common:system_date && \
    tlr:jnl_operator    == op:op_operator_id  && \
    post:PresNro        == post:PresNro       && \
    (siaf:codigo_siaf    == 99099 || \
    siaf:codigo_siaf    == 99097)
    cds findfirst "jnl" nolock
    let lib:err_retval = cdsretval
    
    do
        if (lib:err_retval < 0) then
           /* Todos los Cheques están en la caja del operador */
           cds endselect "jnl"
            return (0)
        end if
        //Cds extract "PresuContext" post:nro_cheque into tes:teso_cheq_nro \
        //post:cod_banco into tes:teso_cheq_banco siaf:moneda into tes:teso_cheq_moneda \
        //post:cuenta into tes:teso_cheq_cuenta
        Cds extract "jnl" siaf:moneda post:cod_banco post:cuenta post:nro_cheque \
        post:codigo_interno post:NroCompPago2
        call post:MISCcargo_valor(siaf:moneda,cod_banco,cuenta,nro_cheque,codigo_interno,NroCompPago2)
        // Debe ser un medio de pago itemizado
        if (post:adt_mp_adm == "I")
    		call tes:MISCbusco_cheque_rev
            
            if (retval == 0) then
                cds findnext "jnl" nolock
                let lib:err_retval = cdsretval
            else
                cds endselect "jnl"
                return (-1)
            end if
        else
            cds findnext "jnl" nolock
            let lib:err_retval = cdsretval
        end if
   loop
END SUB

/*******/
