/****o* Pendientes de agrupación/OFB:post:MISCvalidoTipoLong
* NOMBRE
*   OFB:post:MISCvalidoTipoLong
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCvalidoTipoLong(l_str, l_tipo, l_max, l_min, l_dec)
    LOCAL LMensaje  LIKE common:csr_string_4096
    LOCAL LError    LIKE lib:err_retval
	LOCAL l_tmp like common:csr_string

    CLEARFIELD LError
    l_tmp = l_str
	; Validar tipo de datos
	;El valor nulo es valido para todos los tipos
	if (FLD:l_tmp.NUMCHARS > 0)
		select (l_tipo)
			case "N"
				call post:MISCesNumerico(l_tmp)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser numérico.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
				break
			case "F"
				call post:MISCesFixed(l_tmp, l_dec)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser fixed.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
				break
			case "I"	; idem numeric pero con signo
				call post:MISCesInteger(l_tmp)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser integer.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
				break
			case "D"
				call post:MISCesDate(l_tmp)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser date.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
				break
			case "T"
				call post:MISCesTime(l_tmp)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser time.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
				break
			case "G"
				call post:MISCesFlag(l_tmp)
				if (retval != VERDAD)
			    	FPRINT FLD:LMensaje "Error en el tipo de dato. El valor debe ser flag.\n"
				    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
			    	LError = -2
				endif
			case "A"
				; en principio no tendría nada para validar...
				break
		end select
	end if
	; si falló el tipo, termino acá, no tiene sentido validar longitud...
	if (LError != 0)
		RETURN LError
	endif

	; valido máximos y mínimos.
	select (l_tipo)
		case "N"
		case "F"
		case "I"
		    IF (l_tmp < l_min) THEN
		    	FPRINT FLD:LMensaje "Error de rango. El valor es menor al mínimo permitido.\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF
		    IF (l_tmp > l_max) THEN
		    	FPRINT FLD:LMensaje "Error de rango. El valor es mayor al máximo permitido.\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF
			break
		case "D"
			if (FLD:l_tmp.NUMCHARS > 0 && l_tmp.NUMCHARS != 8)
				FPRINT FLD:LMensaje "Error en la longitud del campo. El valor debe ser un Date (aaaammdd).\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF

			break
		case "T"
			if (FLD:l_tmp.NUMCHARS > 0 && l_tmp.NUMCHARS != 6)
				FPRINT FLD:LMensaje "Error en la longitud del campo. El valor debe ser un Time (hhmmss).\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF
			break
		case "A"
		    IF (l_tmp.numchars < l_min) THEN
		    	FPRINT FLD:LMensaje "Error en la cantidad de caracteres. La cadena es menor al mínimo permitido.\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF
		    IF (l_tmp.numchars > l_max) THEN
		    	FPRINT FLD:LMensaje "Error en la cantidad de caracteres. La cadena es mayor al máximo permitido.\n"
			    call post:MISClogCargaMas(mdata_directorio, mdata_abm, LMensaje)
		    	LError = -2
		    END IF
			break
	end select
	RETURN LError
END SUB

/*******/
