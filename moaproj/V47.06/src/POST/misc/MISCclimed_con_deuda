/****o* Clientes Medios/OFB:post:MISCclimed_con_deuda
* NOMBRE
*   OFB:post:MISCclimed_con_deuda
* DESCRIPCION
*   Obtiene los datos de la deuda del cliente medio (COMPROBANTES DE IMPOSICION) BITS : 105,106,107 y setea
*   el campo post:climed_ult_item que sera el valor del BIT 108 (MORE DATA)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCclimed_deuda
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-354
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCclimed_con_deuda(datos,long)

	/****************************************************************************/
	/* OBTENER LOS DATOS DE LA DEUDA DEL CLIENTE (COMPROBANTES DE IMPOSICION)   */
	/* BITS : 105,106,107 							    */
	/****************************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local varl_importe      like common:csr_string
	local indice            like siaf:i
	local indice_total      like post:item_cant_opci
	local idx               like siaf:i
	local idx2              like siaf:i
	local varl_longitud     like post:Longitud_105
	

	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2

	while ( posicion < longitud )

		post:remito_nro = substr(datos,posicion,15)
		posicion = posicion + 15

    		post:item_secuencia  = substr(datos,posicion,3)
		posicion = posicion + 3

		post:item_codigo_trx = substr(datos,posicion,5)
		posicion = posicion + 5
		// PS 9875 (Eliminar los 0 a izq)
		// singlestep on
		CALL post:MISCborrar_ceros_izq(post:item_codigo_trx)
		post:item_codigo_trx = post:sin_ceros_izq
				
		post:item_servicio = substr(datos,posicion,10)
		posicion = posicion + 10

    		post:item_especie = substr(datos,posicion,20)
		posicion = posicion + 20
		
    		post:item_subespecie = substr(datos,posicion,20)
		posicion = posicion + 20

    		post:item_motivo = substr(datos,posicion,5)
		posicion = posicion + 5

    		post:item_mod_motivo = substr(datos,posicion,2)
		posicion = posicion + 2

    		post:item_submod_motivo = substr(datos,posicion,5)
		posicion =  posicion + 5
		
		post:item_nis = substr(datos,posicion,5)
		posicion = posicion + 5

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:item_importe = 0.00
		else
			post:item_importe = (varl_importe / 100 )
		end if
		posicion =  posicion + 12

		post:item_comprob_motivo = substr(datos,posicion,8)
		posicion = posicion + 8

		post:item_prodvs_cod = substr(datos,posicion,10)
		posicion = posicion + 10

		post:item_cantidad = substr(datos,posicion,6)
		posicion = posicion + 6
		
		post:item_cant_pal = substr(datos,posicion,5)
		posicion = posicion + 5
		
		varl_importe = substr(datos,posicion,8)
		if ( varl_importe == "00000000")
			post:item_peso = 0.000
		else
			post:item_peso = (varl_importe / 1000 )
		end if
		posicion = posicion + 8

		post:item_aforo1 = substr(datos,posicion,3)
		posicion = posicion + 3

		post:item_aforo2 = substr(datos,posicion,3)
		posicion = posicion + 3

		post:item_aforo3 = substr(datos,posicion,3)
		posicion = posicion + 3

		post:item_destino = substr(datos,posicion,20)
		posicion = posicion + 20

 		post:item_tipo_caja = substr(datos,posicion,18)
		posicion = posicion + 18

		varl_importe = substr(datos,posicion,5)
		if ( varl_importe == "00000")
			post:item_dcto = 0.00
		else
			post:item_dcto = (varl_importe / 100 )
		end if
		posicion = posicion + 5

		post:item_bonifCM = substr(datos,posicion,1)
		posicion =  posicion + 1

		post:item_cant_opci = substr(datos,posicion,1)
		posicion = posicion + 1

		post:item_categoria = substr(datos,posicion,30)
		posicion = posicion + 30

		;OPCIONALES
		if (post:item_cant_opci != 0 )
			indice_total = post:item_cant_opci
		else
			indice_total = 0
		end if
			
		idx = 0
		call csr:cleararray(post:item_opc_opci)
		call csr:cleararray(post:item_opc_bonif)
		call csr:cleararray(post:item_opc_importe)
		call csr:cleararray(post:item_opc_imp_oc)

		WHILE (idx < indice_total )

			post:item_opc_opci[idx] = substr(datos,posicion,4)
			posicion = posicion + 4
	
			post:item_opc_bonif[idx] = substr(datos,posicion,1)
			posicion = posicion + 1

			varl_importe = substr(datos,posicion,8)
			posicion = posicion + 8
			post:item_opc_importe[idx] = varl_importe/100

			varl_importe = substr(datos,posicion,8)
			posicion = posicion + 8
			post:item_opc_imp_oc[idx] = varl_importe/100

			idx = idx + 1

		END WHILE
			
		idx2 = 126 - (indice_total * 21)

		posicion = posicion + idx2

		post:item_desc_factura = substr(datos,posicion,40)
		posicion = posicion + 40

		varl_importe  = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:item_importe_oc = 0.00
		else
			post:item_importe_oc = (varl_importe / 100 )
		end if
		posicion = posicion + 12

		post:item_prodvarios = substr(datos,posicion,10)
		posicion = posicion + 10

		post:item_bien_cambio = substr(datos,posicion,10)
		posicion = posicion + 10

		varl_importe = substr(datos,posicion,12)
		if ( varl_importe == "000000000000")
			post:item_imp_bloq = 0.00
		else
			post:item_imp_bloq = (varl_importe / 100 )
		end if
		posicion =  posicion + 12
		
		//VAP
		post:item_nis_impos = substr(datos,posicion,5)
		posicion = posicion + 5
		
		fprint climed_ult_item,\
		"%015.15s%03.3s",post:remito_nro,post:item_secuencia
		//50249 - NC por Incumplimiento
		//singlestep on
		//call CDSpresu_climed_load
		if (OperacionNC) then
			call post:CDSgrabar_fact_inc
		else
			call post:CDSgrabar_con_deuda
		endif
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if

	end while

	return loc_retval

END SUB

/*******/
