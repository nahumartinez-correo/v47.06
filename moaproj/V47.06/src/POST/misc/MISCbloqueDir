/****o* Anulación de Documentos/OFB:post:MISCbloqueDir
* NOMBRE
*   OFB:post:MISCbloqueDir
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCmanejoImpre
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCbloqueDir(p_estado, p_cayoSistema, p_ticket, p_presup)

	local parametro like common:csr_string
	local l_retval  like lib:err_retval
	
	//SC 50170 Actualizo tablas auxiliares (MotAgrup y EntrPieza) para eliminar posibles diferencias.
	CALL post:CDSclear_dif_EP
	CALL post:CDSclear_dif_Templ
	CALL post:CDSclear_dif_EspV


	if (enSesion != "S")
		call MISCleeEstado("1")
		if (retval == VERDAD )
			; regenerar TotMedioPago (nueva) - en base al vector totCaptAnt
			call CDSgenTotMedPago("NUE")
		endif
	endif

	post:impNotaCred = "N"
	
	if (testflag(giros:giros_masivos,proc_anul_masivos))
		post:tipo_giro_presu  = "GM"
	else
		clearfield post:tipo_giro_presu
	end if

	call MISCleeEstado(DIRECTAS)
	if (retval == VERDAD)
		; generar sin la 99023.
		call MISCgenDirect
		call MISCleeEstado("1")
		if (retval == VERDAD)
			; reseteo el contador_directas
			contador_directas = 2
			call post:CDSgrbEstado("F1c")
		else
			call post:CDSgrbEstado("F2c")
		endif
		clearfield sistCaido
	endif
	call MISCleeEstado(CAPTURA)
	if (retval == VERDAD)
		; Regenero el presupuesto por la factura y los totales.
		if (enSesion != "S" && estAnul == "F1c")
			call post:CDSgenTabImpre(presNroNew)
		endif
		; capturar numero.
		call MISCcapturo(FACTURAS, p_ticket)
		
		; 99023
		call post:MISCdirPend99023
		call MISCleeEstado("1")
		if (retval == VERDAD)
			call post:CDSgrbEstado("F1i")
		else
			call post:CDSgrbEstado("F2i")
		endif
		clearfield sistCaido
	endif
	factor_conversion = auxFactConvNue
	adt_mon_desc = auxDescConvNue
	call post:CDSPresu_Save_factor
	call MISCleeEstado(IMPRESION)
	if (retval == VERDAD)
	     call MISCleeEstado("1")
	     if ((retval == VERDAD && enSesion != "S") || sistCaido == "S")
			
		    ; Antes de generar la tabla para la impresión de la factura, 
		    ; aplico la fórmula superadora, actualizando la PresuDet y el journal
		    ; siempre y cuando este en una anulación parcial. 
		    ; Hay que tener en cuenta que la formula superadora aplicada a la
		    ; factura original, devió ser reversada. *** MDG
		    if (revTotal != "S")
                ;enAnulacion = "S"
		//SC 50170
		
    		//Restaurar las diferencias en los casos que sea necesario
    		CALL MISCRestauro_DifNewP
                //SC 50170 Se realiza el tratamiento para calcular si existen diferencias.
                call post:MISCDif_Anulacion
                       
             end if
			
		call post:CDSgenTabImpre(PresNro)
		call MISCdocFiscal
		; [PAW] --> Tengo que regenerar el campo factField.
		call MISCmuestraPaginas("N")
	endif
	call CDSgrabaNum("0")
	call MISCleeEstado("1")
	if (retval == VERDAD)
		; imprimir.
		call MISCfacImp
		l_retval = retval //reservo retval
		if (l_retval < 0) then
		    //cgw:se imprimio factura/ticket manual.
		    //    borro los registros de AuxImpp, para luego ser rearmados.
		    Call post:CDSdelete_AuxImpp
		    clearfield adt_secuen_nro 
                    clearfield adt_secuen_nro_final 
	            call post:CDSsaveSecEnPresuAct()
		end if	
		clearfield sistCaido
		//return retval
		return l_retval 
	endif
endif
p_estado = p_estado
p_cayoSistema = p_cayoSistema
p_presup = p_presup

END SUB

/*******/
