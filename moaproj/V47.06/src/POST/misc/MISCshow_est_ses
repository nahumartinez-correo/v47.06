/****o* Pendientes de agrupación/OFB:post:MISCshow_est_ses
* NOMBRE
*   OFB:post:MISCshow_est_ses
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCshow_est_ses
	
	//Esta rutina carga en un vector, que simula el picklist, los datos que se van a 
	//mostrar en la grilla y por los que se va a acceder al estado_presu = 3

        local idx like siaf:i
        local idx2 like siaf:i
        
        clearfield common:csr_string  //limpio para que no arrastre valores
        
        idx = tx_ses_idx + PL_GETITEM
        idx2 = 0
        //Recorro el picklist y proceso la informacion de cada item
        do
                call csr:myPickcontrol("Txs_Presupuesto",common:csr_string,idx)
                
                //Descripcion + Importe
                est_ses_vec[idx2][0] = substr(common:csr_string,0,34)
                //fecha de la PresuDet
                est_ses_vec[idx2][1] = substr(common:csr_string,35,8)
                //operador
                est_ses_vec[idx2][2] = substr(common:csr_string,44,5)
                //Numero Presupuesto
                est_ses_vec[idx2][3] = substr(common:csr_string,50,8)
                //jerarquia
                est_ses_vec[idx2][4] = substr(common:csr_string,59,1)
                //Nro de tx
                est_ses_vec[idx2][5] = substr(common:csr_string,61,10)
                //Importe Real
                est_ses_vec[idx2][6] = substr(common:csr_string,72,12)                                
                //codigo_siaf
                est_ses_vec[idx2][7] = substr(common:csr_string,85,5)
                refresh est_ses_vec[idx2][0]

                //Busco si el item se encuentra seleccionado o no y en base a eso
                //lo reflejo en el checkbox por si se está moviendo con el scroll
                call MISCverif_tx_check(idx2)
                if (retval == 0)
                        call MISCmarca_tx_ses(idx2)
                else
                        call MISCdesmarca_tx_ses(idx2)
                end if
                if (idx2 == 9)
                        break
                else
                        if ((idx - PL_GETITEM) == cant_tx_sesion - 1)
                        		//Limpia las posiciones de la  grilla que no tienen tx cargadas
                                call MISCsobra_show_tran(idx2)
                                break
                        else
                                idx = idx + 1
                                idx2 = idx2 + 1
                        end if
                end if
        loop
       
        call MISCref_item_ses

        //Deshabilito todas las flechas
        if (cant_tx_sesion <= 10)
                disablecontrol PBest_ses_arriba
                disablecontrol PBest_ses_abajo
				//call MISCflecha_restore
        else
                //Para deshabilitar la flecha para bajar me fijo si llegue hasta el ultimo
                idx = (cant_tx_sesion - 1) + PL_GETITEM
                call csr:myPickcontrol("Txs_Presupuesto",common:csr_string,idx)
                //controlo por el número de presupuesto (si está cargado en el vector)
                if (substr(common:csr_string,61,10) == est_ses_vec[idx2][5])
                        disablecontrol PBest_ses_abajo
                        //keydef f32,RT_DOWN
                end if
                //Para deshabilitar la flecha para subir me fijo si estoy parado en el primero
                if (tx_ses_idx == 0)
                        disablecontrol PBest_ses_arriba
                end if
        end if
END SUB

/*******/
