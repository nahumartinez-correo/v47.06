/****o* Clientes Medios/OFB:post:MISCclimed_id_orden
* NOMBRE
*   OFB:post:MISCclimed_id_orden
* DESCRIPCION
*   Se reciben del HOST los Items,los opcionales y los bloques adicionales de la Orden de Compra  
*	y se guardan en las tablas locales correspondientes (Items_OC, Opc_Items_OC, Bloq_Adic_OC)
* ENTRADAS
*   datos = datos informados en bit 105,106,107
*	long = longitud total del bit
* SALIDAS
*   loc_retval = -2 Problemas al actualizar los datos en las tablas locales.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:OFBclimed_id_orden
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-1427
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCclimed_id_orden(datos,long)

local posicion          like post:cantidad
local longitud          like post:Longitud_105
local loc_retval        like lib:err_retval
local cont				like cant_opc
local varl_descuento    like common:csr_string
local varl_distorsion   like common:csr_string
local varl_importe      like common:csr_string
local varl_imp_parcial  like common:csr_string
local varl_desde        like common:csr_string
local posicion_tmp		like cantidad
local rdesde 			like common:csr_string
local rhasta            like common:csr_string

fprint longitud,"%s",long
posicion = 0
loc_retval = -2

		while ( posicion < longitud )

			post:adt_itemoc_nro = substr(datos,posicion,9)
			posicion = posicion + 9
			
			post:adt_itemoc_codprod = substr(datos,posicion,10)
			posicion = posicion + 10
	
			post:adt_itemoc_destino = substr(datos,posicion,20)
			posicion = posicion + 20
			
			post:adt_itemoc_umstd = substr(datos,posicion,3)
			posicion = posicion + 3


			rdesde = substr(datos,posicion,9)
			posicion = posicion + 9
			
			rhasta = substr(datos,posicion,9)
			posicion = posicion + 9			
			
			clearfield post:adt_itemoc_bdesde
			clearfield post:adt_itemoc_bhasta
			clearfield post:adt_itemoc_rdesde
			clearfield post:adt_itemoc_rhasta		
			
			//diferenciar si lo que viene es rango o bloque
			SELECT (post:adt_itemoc_umstd)
				CASE "PAL"
					post:adt_itemoc_bdesde = rdesde / 1000
 					post:adt_itemoc_bhasta = rhasta / 1000
					BREAK
				CASE "KGS"
					adt_itemoc_rdesde = rdesde / 1000
					adt_itemoc_rhasta = rhasta / 1000
					IF (adt_itemoc_rdesde.NUMCHARS == 0)
						adt_itemoc_rdesde = rdesde
						adt_itemoc_rdesde = adt_itemoc_rdesde / 1000
					ENDIF
					IF (adt_itemoc_rhasta.NUMCHARS == 0) THEN
						adt_itemoc_rhasta = rhasta
						adt_itemoc_rhasta = adt_itemoc_rhasta / 1000
					ENDIF
					BREAK
				CASE ELSE
					adt_itemoc_rdesde = rdesde / 1000
					adt_itemoc_rhasta = rhasta / 1000
					BREAK
			END SELECT

			post:adt_itemoc_aforo1 = substr(datos,posicion,3)
			posicion = posicion + 3
			
			post:adt_itemoc_aforo2 = substr(datos,posicion,3)
			posicion = posicion + 3
			
			post:adt_itemoc_aforo3 = substr(datos,posicion,3)
			posicion = posicion + 3

			varl_importe = substr(datos,posicion,12)
			posicion = posicion + 12
			adt_itemoc_puni = (varl_importe / 100)			
			
			post:adt_itemoc_cant_tot = substr(datos,posicion,6)
			posicion = posicion + 6			

			post:adt_itemoc_factdesc =  substr(datos,posicion,40)
			posicion = posicion + 40
			
			post:adt_itemoc_tol =  substr(datos,posicion,6)
			posicion = posicion + 6
			
			post:adt_itemoc_cant_con =  substr(datos,posicion,6)
			posicion = posicion + 6
			
			clearfield adt_itemoc_cant
			adt_itemoc_cant = adt_itemoc_cant_tot + adt_itemoc_tol - adt_itemoc_cant_con
			
			varl_importe = substr(datos,posicion,12)
			posicion = posicion + 12
			post:adt_bloqoc_precio = (varl_importe / 100)
			
			post:adt_itemoc_cantopc = substr(datos,posicion,1)
			posicion = posicion + 1						
			
			cont = 0
			//posiciones ocupadas por los opcionales
			posicion_tmp = 72
			while (cont < post:adt_itemoc_cantopc)
				;Si tiene Opcionales se desglosan los valores	
				;y se van grabando en la tabla de opcionales*/
				post:adt_opcoc_codopc =  substr(datos,posicion,4)
				posicion = posicion + 4
				varl_importe = substr(datos,posicion,8)
				post:adt_opcoc_impopc = (varl_importe / 100)
				posicion = posicion + 8				
				posicion_tmp = posicion_tmp - 12
				call post:CDSopc_orden_save
				if (retval < 0 )
					loc_retval = -2
					break
				else
					loc_retval = 0
				end if
				cont = cont + 1
			end while			
			
			IF (adt_itemoc_cantopc > 0 && loc_retval == -2)
				//si hay opcionales y no se pudieron grabar en la tabla de opcionales
				//salgo del while mayor
				break
			END IF
			
			//sumo los espacios que corresponden a los opcionales si los hubiera o no
			posicion = posicion + posicion_tmp		
						
			fprint climed_ult_item,"%9.9s",post:adt_itemoc_nro

			call post:CDSitem_orden_save
			if ( retval < 0 )
				loc_retval = -2
				break
			else
				loc_retval = 0
			end if
			
			if (post:adt_bloqoc_precio > 0) then
				call post:CDSbloq_orden_save
				if ( retval < 0 )
					loc_retval = -2
					break
				else
					loc_retval = 0
				end if
			endif

		end while

	
return loc_retval

END SUB

/*******/
