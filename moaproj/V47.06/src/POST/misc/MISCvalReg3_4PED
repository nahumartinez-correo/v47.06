/****o* Pago en Destino/OFB:post:MISCvalReg3_4PED
* NOMBRE
*   OFB:post:MISCvalReg3_4PED
* DESCRIPCION
*   Validacion de los datos del servicio ped y del destintario del archivo a Importar
* ENTRADAS
*   P_registro_2 = Datos del Destinatario - 1er parte
*   P_registro_3 = Datos del Destinatario - 2da parte
* SALIDAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*		post:MISCvalRegPED
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCvalReg3_4PED(P_registro_2,P_registro_3)
	LOCAL l_registro_2 LIKE common:csr_string_4096
	LOCAL l_registro_3 LIKE common:csr_string_4096	
	LOCAL l_CloTipDoc LIKE common:csr_string
	LOCAL l_CloCuit LIKE common:csr_string

  LET l_registro_2 = P_registro_2
  LET l_registro_3 = P_registro_3
  
  /************************************************************************************************/
	/*Tercer Registro a "N" registros (Datos del Destinatario - 1er parte) - Longitud 223 caracteres*/
	/************************************************************************************************/
	LET l_CloTipDoc = SUBSTR(l_registro_2,0,2)    				  //NUMERIC 2
	LET l_CloCuit  = SUBSTR(l_registro_2,2,11)    				  //NUMERIC 2
	CALL post:MISCFtrim(l_CloTipDoc)
	CALL post:MISCFtrim(l_CloCuit)
	
	CALL post:MISCesNumerico(l_CloTipDoc)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Destinatario tipo de documento [%s] , caracteres invalidos" l_CloTipDoc
		RETURN -2		
	ELSE
		LET post:CloTipDoc = l_CloTipDoc
	END IF
	
	CALL post:MISCesNumerico(l_CloCuit)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Destinatario numero de documento [%s] , caracteres invalidos" l_CloCuit
		RETURN -2		
	ELSE
		LET post:CloCuit = l_CloCuit
	END IF

	//Inicio - Validacion existencia del Cliente Minorista
	CALL post:MISCvalidaCliPED
	IF (RETVAL == 0) THEN
		RETURN 0
	END IF
	//Fin  - Validacion existencia del Cliente Minorista
	
	LET post:CliRazon = SUBSTR(l_registro_2,13,50)       		  //ASCII 50
	CALL post:MISCFtrim(post:CliRazon)
	CALL post:MISCdurePipePED(post:CliRazon)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Razon Social del destinatario [%s], caracteres invalidos" post:CliRazon
		RETURN -2
	END IF	
	
	LET post:CliApellido = SUBSTR(l_registro_2,63,20)   		  //ASCII 20 
	CALL post:MISCFtrim(post:CliApellido)
	CALL post:MISCdurePipePED(post:CliApellido)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Apellido del destinatario [%s], caracteres invalidos" post:CliApellido
		RETURN -2
	END IF	
	
	LET post:CliNombre = SUBSTR(l_registro_2,83,20)    			  //ASCII 20
	CALL post:MISCFtrim(post:CliNombre)
	CALL post:MISCdurePipePED(post:CliNombre)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Nombre del destinatario [%s], caracteres invalidos" post:CliNombre
		RETURN -2
	END IF	
	
	LET post:IvaCod = SUBSTR(l_registro_2,103,3)          	  //ASCII 3
	CALL post:MISCFtrim(post:IvaCod)	
	CALL post:MISCdurePipePED(post:IvaCod)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Categoria de Iva del destinatario [%s], caracteres invalidos" post:IvaCod
		RETURN -2
	END IF	
	
	LET post:CloCalle = SUBSTR(l_registro_2,106,40)       	  //ASCII 40
	CALL post:MISCFtrim(post:CloCalle)
	CALL post:MISCdureCharsPED(post:CloCalle)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Calle del destinatario [%s], caracteres invalidos" post:CloCalle
		RETURN -2
	END IF	
	
	LET post:CloNroDir = SUBSTR(l_registro_2,146,6)       	  //ASCII 6
	CALL post:MISCFtrim(post:CloNroDir)
	CALL post:MISCdureCharsPED(post:CloNroDir)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Numero de Calle del destinatario [%s], caracteres invalidos" post:CloNroDir
		RETURN -2
	END IF	
	
	LET post:CloPiso = SUBSTR(l_registro_2,152,6)      			  //ASCII 6
	CALL post:MISCFtrim(post:CloPiso)
	CALL post:MISCdureCharsPED(post:CloPiso)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Piso del destinatario [%s], caracteres invalidos" post:CloPiso
		RETURN -2
	END IF	
	
	LET post:CloCodPost = SUBSTR(l_registro_2,158,8) 				  //ASCII 8
	CALL post:MISCFtrim(post:CloCodPost)
	CALL post:MISCdureCharsPED(post:CloCodPost)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Codigo Postal del destinatario [%s], caracteres invalidos" post:CloCodPost
		RETURN -2
	END IF
	
	LET post:CloTelefono = SUBSTR(l_registro_2,166,20) 			  //ASCII 20
	CALL post:MISCFtrim(post:CloTelefono)
	CALL post:MISCdurePipePED(post:CloTelefono)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Telefono del destinatario [%s], caracteres invalidos" post:CloTelefono
		RETURN -2
	END IF	
	
	LET post:CloProvin = SUBSTR(l_registro_2,186,1) 				  //ASCII 1
	CALL post:MISCFtrim(post:CloProvin)
	CALL post:MISCdureCharsPED(post:CloProvin)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Codigo de Provincia del destinatario [%s], caracteres invalidos" post:CloProvin
		RETURN -2
	END IF
	
	LET post:CloPartido = SUBSTR(l_registro_2,187,30)     	  //ASCII 30
	CALL post:MISCFtrim(post:CloPartido)
	CALL post:MISCdureCharsPED(post:CloPartido)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Partido del destinatario [%s], caracteres invalidos" post:CloPartido
		RETURN -2
	END IF
	
	LET post:porcExentoRG3337 = SUBSTR(l_registro_2,217,6)    //FIXED 5.2
	LET post:porcExentoRG3337 = post:porcExentoRG3337 * 1

	/************************************************************************************************/
	/*Cuarto Registro a "N" registros (Datos del Destinatario - 2da parte) - Longitud 209 caracteres*/
	/************************************************************************************************/
	LET post:CloLoc = SUBSTR(l_registro_3,0,50) 						  //ASCII 50
	CALL post:MISCFtrim(post:CloLoc)	
	CALL post:MISCdureCharsPED(post:CloLoc)
		IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Localidad del destinatario [%s], caracteres invalidos" post:CloLoc
		RETURN -2
	END IF
	
	LET post:CloCatCodIB = SUBSTR(l_registro_3,50,3)     		  //ASCII 3
	CALL post:MISCFtrim(post:CloCatCodIB)	
	
	LET post:CloNroInb = SUBSTR(l_registro_3,53,11)      		  //NUMERIC 11 
	CALL post:MISCdurePipePED(post:CloNroInb)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Nro de Ing Brutos del destinatario [%s], caracteres invalidos" post:CloNroInb
		RETURN -2
	END IF	
	LET post:CloNroInb = post:CloNroInb * 1
	IF (post:CloNroInb == 0) THEN
		CLEARFIELD post:CloNroInb
	END IF
	
	LET post:CloInscripto = SUBSTR(l_registro_3,64,1)      	  //ASCII 1
	CALL post:MISCFtrim(post:CloInscripto)	
	CALL post:MISCdurePipePED(post:CloInscripto)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Inscripto del destinatario [%s], caracteres invalidos" post:CloInscripto
		RETURN -2
	END IF	
	
	LET post:CatGCod = SUBSTR(l_registro_3,65,1)            	//ASCII 1
	CALL post:MISCFtrim(post:CatGCod)	
	CALL post:MISCdurePipePED(post:CatGCod)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "CatGCod del destinatario [%s], caracteres invalidos" post:CatGCod
		RETURN -2
	END IF	
	
	LET post:CatECod = SUBSTR(l_registro_3,66,1)            	//ASCII 1
	CALL post:MISCFtrim(post:CatECod)
	CALL post:MISCdurePipePED(post:CatECod)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "CatECod del destinatario [%s], caracteres invalidos" post:CatECod
		RETURN -2
	END IF
	
	LET post:esExentoRG3337 = SUBSTR(l_registro_3,67,1)     	//ASCII 1
	CALL post:MISCFtrim(post:esExentoRG3337)
	
	LET post:CloRegistral = SUBSTR(l_registro_3,68,30)        //ASCII 30
	CALL post:MISCFtrim(post:CloRegistral)
	CALL post:MISCdureCallePED(post:CloRegistral)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "CloRegistral del destinatario [%s], caracteres invalidos" post:CloRegistral
		RETURN -2
	END IF
	
	LET post:CloOcupacion = SUBSTR(l_registro_3,98,20)        //ASCII 20   
	CALL post:MISCFtrim(post:CloOcupacion)
	CALL post:MISCdureCaracterPED(post:CloOcupacion)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Ocupacion del destinatario [%s], caracteres invalidos" post:CloOcupacion
		RETURN -2
	END IF	
	
	LET post:CloOtraOcupacion = SUBSTR(l_registro_3,118,20)   //ASCII 20
	CALL post:MISCFtrim(post:CloOtraOcupacion)
	CALL post:MISCdureCaracterPED(post:CloOtraOcupacion)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Otra Ocupacion del destinatario [%s], caracteres invalidos" post:CloOtraOcupacion
		RETURN -2
	END IF	
	
	LET post:CloPersonaJuridica = SUBSTR(l_registro_3,138,1)  //ASCII 1
	CALL post:MISCFtrim(post:CloPersonaJuridica)
	CALL post:MISCdurePipePED(post:CloPersonaJuridica)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Persona Juridica del destinatario [%s], caracteres invalidos" post:CloPersonaJuridica
		RETURN -2
	ELSE
		IF (post:CloPersonaJuridica != "S" && post:CloPersonaJuridica != "N") THEN
			FPRINT post:msje_err_log_PED "Persona Juridica del destinatario [%s], invalido" post:CloPersonaJuridica
			RETURN -2
		END IF 
	END IF	
	
	LET post:CloMail = SUBSTR(l_registro_3,139,50)            //ASCII 50
	CALL post:MISCFtrim(post:CloMail)
	CALL post:MISCdurePipePED(post:CloMail)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Mail del destinatario [%s], caracteres invalidos" post:CloMail
		RETURN -2
	END IF

	LET post:CloCelular = SUBSTR(l_registro_3,189,20)         //ASCII 20
	CALL post:MISCFtrim(post:CloCelular)
	CALL post:MISCdureTelefonoPED(post:CloCelular)
	IF (RETVAL < 0) THEN
		FPRINT post:msje_err_log_PED "Celular del destinatario [%s], caracteres invalidos" post:CloCelular
		RETURN -2
	END IF	

	//Inicio - Validacion Persona Juridica
	CALL post:MISCvalidaJuirdPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF
	//Fin- Validacion Persona Juridica
	
	//Inicio - Validacion Categoria de Iva
	CALL post:MISCvalidaCatIvaPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF
	//Fin - Validacion Categoria de Iva
	
	//Inicio - Validacion Tipo Documento
	CALL post:MISCvalidaTipDocPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF
	//Fin - Validacion Tipo Documento

	//Inicio - Validacion Numero de Documento
	CALL post:MISCvalidaNumDocPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF
	//Fin - Validacion Numero de Documento
	
	//Inicio - Validacion Inscripto
		IF (post:CloInscripto != "S" && post:CloInscripto != "N") THEN
			FPRINT post:msje_err_log_PED  "Valor de CloInscritpo [%s] del destinatario invalido" post:CloInscripto
			RETURN -2
		END IF
	//Fin - Validacion Inscripto
	
	//Inicio - Validacion Categoria de Ingresos Brutos
	CALL post:MISCvalidaCatIBPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF
	//Fin - Validacion Categoria de Ingresos Brutos

	//Inicio - Validacion Numero de Ingresos Brutos
	CALL post:MISCvalidaNumIBPED
		IF (RETVAL < 0) THEN
		RETURN -2
	END IF
  //Fin - Validacion Numero de Ingresos Brutos
  
  //Inicio - Validacion Exento RG3337
  CALL post:MISCvalidaRG3337PED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF	
  //Fin - Validacion Exento RG3337

  //Inicio - Validacion Numero de Inscripcion Registral
  IF (post:CloPersonaJuridica == "S") THEN
		CALL post:CDSreqNIR_oblig
		IF (RETVAL) THEN
			IF (post:CloRegistral.NUMCHARS == 0) THEN
				FPRINT post:msje_err_log_PED  "Numero de Inscripcion Registral del destinatario vacio"
				RETURN -2	
			END IF
		END IF
	END IF
  //Fin - Validacion Numero de Inscripcion Registral
  
	//Inicio - Validacion CatGCod y CatCEod
	IF (post:CatGCod.NUMCHARS > 0 && post:CatGCod != "X") THEN
			FPRINT post:msje_err_log_PED  "Valor de CatGCod [%s] del destinatario invalido" post:CatGCod
			RETURN -2			
	END IF
	IF (post:CatECod.NUMCHARS > 0 && post:CatECod != "X") THEN
			FPRINT post:msje_err_log_PED  "Valor de CatECod [%s] del destinatario invalido" post:CatECod
			RETURN -2				
	END IF
	//Fin - Validacion CatGCod y CatCEod	
	
	//Inicio - Validacion Calle
	IF (post:CloCalle.NUMCHARS == 0) THEN
		FPRINT post:msje_err_log_PED  "Falta ingresar la Calle del destinatario"
		RETURN -2		
	END IF
	//Fin - Validacion Calle
	
	//Inicio - Validacion Numero de Direccion
	IF (post:CloNroDir.NUMCHARS == 0) THEN
		FPRINT post:msje_err_log_PED  "Falta ingresar Numero de la Calle del destinatario"
		RETURN -2
	END IF
	//Fin - Validacion Numero de Direccion
	
	//Inicio - Validacion Codigo Postal
	CALL post:MISCvalidaCodPostPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF	
	//Fin - Validacion Codigo Postal

	//Inicio - Validacion Codigo de Provincia
	IF (post:CloProvin.NUMCHARS == 0) THEN
		FPRINT post:msje_err_log_PED  "Codigo de Provincia del destinatario vacio"
		RETURN -2			
	ELSE
		IF (post:CloProvin != giros:SucSel2_fld)THEN
			FPRINT post:msje_err_log_PED  "El Codigo de Provincia [%s] no coincide con la NIS destino [%s]" post:CloProvin giros:CodSucBenef_fld
			RETURN -2				
		END IF
	END IF
	//Fin - Validacion Codigo de Provincia
	
	//Inicio - Validacion Localidad
	CALL post:MISCvalidaLocPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF	
	//Fin - Validacion Localidad

	//Inicio - Validacion Ocupacion
	CALL post:MISCvalidaOcupPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF	
	//Fin - Validacion Ocupacion

	//Inicio - Validacion Otra Ocupacion
	CALL post:MISCvalidaOtrOcupPED
	IF (RETVAL < 0) THEN
		RETURN -2
	END IF	
	//Fin - Validacion Otra Ocupacion

	//Inicio - Validacion Mail
	IF (post:CloMail.NUMCHARS > 0) THEN
		CALL post:MISCvalidaEmail(post:CloMail)
		IF (RETVAL != 0) THEN
			FPRINT post:msje_err_log_PED  "Direccion de Mail [%s] del destinatario invalida" post:CloMail
			RETURN -2	
		END IF		
	END IF
 	//Fin - Validacion Mail
 
  RETURN (0)
END SUB

/*******/
