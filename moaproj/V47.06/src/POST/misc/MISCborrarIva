/****o* Facturación/OFB:post:MISCborrarIva
* NOMBRE
*   OFB:post:MISCborrarIva
* DESCRIPCION
*   Esta rutina desglosa y vuelve atrás el importe sin iva y del iva de la tabla AuxIva
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   OFB:post:MISCgenerarIva
* REFERENCIADO POR
*   giros:CDSdel_desctoReemb,OFB:giros:MISCanulo_transac,OFB:giros:MISCverif_resp,OFB:plataf:recalc_iva_conf_drv
*	OFB:post:CDSagregTrnDctoCM,OFB:post:CDSagregTrnDctoNC,OFB:post:CDSagregTrnDctoOC,OFB:post:CDSagregTrnDctoOpcCM
*	OFB:post:CDSborrarIntPagoDif,OFB:post:CDSdel_6690,OFB:post:CDSdel_6890,OFB:post:CDSdel_bonifAsocSurP
*	OFB:post:CDSelimBonSurPost,OFB:post:CDSVenUP_Presu,OFB:post:MISCanulo_adic,OFB:post:MISCanulo_reemp,FB:post:MISCanulo_tx_pago
*	OFB:post:MISCConvenioSesionV,OFB:post:MISCDcto_OC,OFB:post:MISCDcto_OC_NC,OFB:post:MISCdel_tx_sesion
*	OFB:post:MISCLeo_Adicional,OFB:post:MISCLeo_PresDet,OFB:post:MISCOpc_OC,OFB:post:MISCOpc_OC_NC
*	OFB:post:MISCProd_Y_Adic,OFB:post:MISCProd_Y_BCambio,OFB:post:MISCreversaUP,OFB:post:PBborrar_tran_presu
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-354
*   http://jira.sibs.net/jira/browse/AUT-2355
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCborrarIva
	LOCAL loc_cuenta    LIKE post:cantidad
	LOCAL loc_impSinIva LIKE siaf:importe
	LOCAL loc_importe   LIKE siaf:importe
	LOCAL loc_tasa      LIKE post:adt_serv_aliciva
	LOCAL loc_cantidad  LIKE post:cantidad
	LOCAL NRO_ITEM      LIKE post:cantidad
	local ind like siaf:i
	LOCAL loc_imp_iva_bis   LIKE post:ImporteIva_bis
	LOCAL loc_imp_siva_bis LIKE  post:ImporteSinIva_bis
   
	;LOCAL cont LIKE cantidad
	if (siaf:adt_tran_afec_efvo == "+" || siaf:adt_tran_afec_efvo == "-") && \
			((cli_tipo == 2) || (cli_tipo == CLIUP) || (cli_tipo == CLIMED)) && (PreDForFis.NUMCHARS > 0 || siaf:codigo_siaf == 99019)
		INIT 22,1
		loc_impSinIva = 0
		SobreTasaIva = 0
	
		SELECT (siaf:adt_tran_fliatran)
			CASE "CSE" // ENCOMIENDAS
				#ifdef SUCU_VIRTUAL
			CASE "NET"	// CARTA ELECTRONICA
				#endif
			CASE "CSP" // POSTALES
			CASE "CMB" // COMBOS
				loc_importe  = tarifa
				loc_tasa     = adt_serv_aliciva
				loc_cantidad = cantidad
				
				//SC 50170
				CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
				
				//SC 50170 - FACTURACION
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				
				loc_importe  = imp_bloques
			
				//SC 50170
				CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
			
				//SC 50170 - FACTURACION
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)

				if (post:promo_imp_srv_tot > 0 )
					loc_importe  = post:promo_imp_srv_tot
					//SC 50170
					CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					//SC 50170 - FACTURACION
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				end if

				if (post:promo_imp_blq_tot > 0 )
					loc_importe  = post:promo_imp_blq_tot
					//SC 50170
					CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					//SC 50170 - FACTURACION
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				end if
            
				if (post:descuento > 0)
					loc_importe  = descuento
					// Si la Tasa del Servicio Pedido por Nina PJM 22-02-1998
					loc_cantidad = 1
					//SC 50170
					CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					//SC 50170 - FACTURACION
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				end if
	    
				if (estado_presu == 3) // && LASTKEY == RT_ESC) then
					/*NI 50324 - Es dcto de bien de cambio
					if (post:DctoCM_bc > 0) then
						init 22,1
						loc_importe  = (siaf:importe * post:DctoCM_bc) / 100
						init 22,0
						//SC 50170 - FACTURACION
						CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
						Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
					endif*/
					if (post:Dcto_CliMed > 0) then
						init 22,1
						loc_importe  = (tarifa * post:Dcto_CliMed) / 100
						init 22,0
						//SC 50170
						CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
						//SC 50170 - FACTURACION
						Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
					endif
		    end if
	    
				/*MFM Req 3159*/
				loc_cantidad = post:cantidad
				if (post:cant_opc > 0)
					loc_cuenta = 0
					DO
						/*MFM Req 3159 - Calculo el importe sin iva de cada carta por separado,
						en el caso de que sean multiples T&T*/
						;PS9490
						CALL post:MISCopcCantPart(post:cod_opc[loc_cuenta], post:tipo_produc, loc_cantidad)
						if (retval == 1)
							loc_importe  = cos_opc[loc_cuenta]
							loc_tasa     = ali_opc[loc_cuenta]
							//SC 50170
							CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
							ImporteSinIva_bis = ImporteSinIva_bis * -1
							ImporteIva_bis = ImporteIva_bis * -1
							//SC 50170 - FACTURACION
							Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
							if (post:promo_imp_opc_tot[loc_cuenta] > 0)
								loc_importe  = post:promo_imp_opc_tot[loc_cuenta]
								//SC 50170
								CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
								//??
								ImporteSinIva_bis = ImporteSinIva_bis
								ImporteIva_bis = ImporteIva_bis
								//SC 50170 - FACTURACION
								Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
							end if
	            		 
							if (estado_presu == 3) // && LASTKEY == RT_ESC) then
								if (post:Dcto_CliMed > 0 && post:bonifCM_opc[loc_cuenta] == "S") then
									init 22,1
									loc_importe  = (post:cos_opc[loc_cuenta] * post:Dcto_CliMed) / 100
									init 22,0
									//SC 50170
									CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
									Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
								endif
							end if
						else
							WHILE (loc_cantidad >= 1)
								/*loc_importe  = cos_opc[loc_cuenta]*/
								loc_importe  = cos_opc[loc_cuenta] / cantidad
								loc_tasa     = ali_opc[loc_cuenta]
								/*loc_cantidad = 1*/
								/*CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad)*/
								//SC 50170
								CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
								    ImporteSinIva_bis = ImporteSinIva_bis * -1
								ImporteIva_bis = ImporteIva_bis * -1
								//SC 50170 - FACTURACION
								Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
								
								if (post:promo_imp_opc_tot[loc_cuenta] > 0)
									loc_importe  = post:promo_imp_opc_tot[loc_cuenta] / cantidad
									//SC 50170
									CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
									//SC 50170 - FACTURACION
									Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
								end if
	            		     
	    	        loc_cantidad = loc_cantidad - 1
							END WHILE
				
							if (estado_presu == 3) // && LASTKEY == RT_ESC) then
								if (post:Dcto_CliMed > 0 && post:bonifCM_opc[loc_cuenta] == "S") then
									init 22,1
									loc_importe  = (post:cos_opc[loc_cuenta] * post:Dcto_CliMed) / 100
									init 22,0
									//SC 50170
									CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
									Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
								endif
							end if
						end if
						/*FIN Req 3159*/
			  
						loc_cuenta = loc_cuenta + 1
						IF (loc_cuenta == post:cant_opc)
							BREAK
						ELSE
							/*MFM - Restauro la cantidad para que vuelva a entrar al while y
							calcule el importe sin iva del siguiente opcional*/
							loc_cantidad = post:cantidad
						END IF
						
					LOOP
	    	end if
			break
			CASE "CST" // TELEGRAFIA
				call tele:MISCborrarIva_CST
			break
			CASE "CME" //MERCHA
				//loc_importe  = siaf:importe + imp_bloques
				loc_importe  = siaf:importe
				loc_tasa     = adt_prodvs_aliciva
				loc_cantidad = cantidad2
				//SC 50170 - FACTURACION
				CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)

				if (post:fld_promo_imp > 0)
					loc_importe  = fld_promo_imp
					//SC 50170 - FACTURACION
					CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				end if
            
				if (estado_presu == 3) // && LASTKEY == RT_ESC) then
					
					//NI 50324 - Es dcto de bien de cambio
					if (post:DctoCM_bc > 0) then
						init 22,1
						loc_importe  = (siaf:importe * post:DctoCM_bc) / 100
						init 22,0
						//SC 50170 - FACTURACION
						CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
						Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
					else
					//Es dcto de producto vario
						if (post:Dcto_CliMed > 0) then
							init 22,1
							loc_importe  = (siaf:importe * post:Dcto_CliMed) / 100
							init 22,0
							//SC 50170 - FACTURACION
							CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
							Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
						endif	
					endif				
				end if

			break
			CASE "CSV" //SERVICIOS VARIOS
				/*Carina - Desglosa el iva para la transaccion Templates*/
				IF (siaf:codigo_siaf == 6900) THEN //TEMPLATES
					CALL post:CDSborraIva_tmpl
				ELSE
					//loc_importe  = siaf:ImporteSinSello + imp_bloques
					loc_importe  = siaf:ImporteSinSello

					//gpb: SC50368 - AUT-1692
					IF (siaf:codigo_siaf == 7210) THEN
						loc_tasa     = post:TasaIva
					ELSE
						loc_tasa     = siaf:adt_mot_aliciva
					END IF
					
					loc_cantidad = 1
					//SC 50170
					CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					//Tratamiento cliente medio
					//	tengo que diferenciar el borrado del modificado!!!
					if (siaf:codigo_siaf == 6800 && post:Dcto_CliMed > 0 && post:estado_presu == 3 && post:tran_presu_est == "M") then
						post:PreDNroTrnAsoc = post:PreDNroTrn
						call CDSTrnDctoCMAnt(6800)
						//SC 50170 - FACTURACION ?????
						ImporteSinIva_bis = ImporteSinIva_bis - siaf:ImporteSinIva
						ImporteIva_bis = ImporteIva_bis - (siaf:ImporteConIva - siaf:ImporteSinIva)
					end if
					//SC 50170 - FACTURACION
					ImporteSinIva_bis = ImporteSinIva_bis * -1
					ImporteIva_bis = ImporteIva_bis * -1
					
					Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
				END IF
			break
			CASE "TES" //TESORERIA
				;loc_tasa      = tes:adt_espv_aliciva
				loc_impSinIva = 0
				
				/* Se cambia la estructura anterior (vector de 14 posiciones:
				una posicion para cada subespecie) por una nueva que no
				limita la cantidad de subespecies por especie */
				cds select FROM DSC:tes:AuxEspV_tbl becomes DSC:tes:AuxEspV_ctx \
										where tes:adt_evaux_suc == op:op_branch_id && \
										tes:adt_evaux_op == op:op_operator_id && \
										tes:adt_evaux_tesoro == "N" && \
										tes:adt_evaux_prestran == PreDNroTrn
				
				//V26-Correccion: Se elimina del select la pregunta del codigo de la especie por motivo de la nueva funcionalidad.
				/*tes:adt_evaux_codigo == tes:espv_cod && \*/
				cds findfirst DSC:tes:AuxEspV_ctx LOCK
				let lib:err_retval = CDSRETVAL
              
				DO
					if (lib:err_retval != 0) then
						break
					end if
					
					cds extract DSC:tes:AuxEspV_ctx ALL
					
					If (tes:adt_evaux_importe > 0 )
						//loc_importe  = tes:adt_evaux_importe + imp_bloques
						loc_importe  = tes:adt_evaux_importe
						loc_cantidad = tes:adt_evaux_cantidad
						loc_tasa      = tes:adt_espv_aliciva
						//SC 50170
						CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
						//SC 50170 - FACTURACION
						ImporteSinIva_bis = ImporteSinIva_bis  *  -1
						ImporteIva_bis = ImporteIva_bis * -1
						Call CDSUpdate_ImpreIva(loc_tasa,  ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
					END IF
					
					if (post:fld_promo_imp > 0)
						loc_importe  = fld_promo_imp
						//SC 50170
						CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
						//SC 50170 - FACTURACION
						Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
					end if
                   
					if (estado_presu == 3) // && LASTKEY == RT_ESC) then
						if (post:Dcto_CliMed > 0 && tes:adt_espv_bonifCM == "S") then
							init 22,1
							loc_importe  = (tes:adt_evaux_importe * post:Dcto_CliMed) / 100
							init 22,0
							//SC 50170
							CALL MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
							Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
						endif
					end if
	    	   
					//  cds unlock DSC:tes:AuxEspV_ctx
					cds findnext DSC:tes:AuxEspV_ctx LOCK
					let lib:err_retval = CDSRETVAL
				LOOP
        cds unlock DSC:tes:AuxEspV_ctx
        cds endselect DSC:tes:AuxEspV_ctx
			BREAK
			CASE "TAV" //ACTIVIDADES VARIAS
				select (siaf:codigo_siaf)
					case 99008
						//loc_importe  = siaf:importe + imp_bloques
						loc_importe  = siaf:importe
						loc_tasa     = adt_serv_aliciva
 						//SC 50170
						CALL MISCdesglosaIva(loc_importe, loc_tasa, cantidad,0)
						//SC 50170 - FACTURACION
						ImporteSinIva_bis = ImporteSinIva_bis * -1
						ImporteIva_bis = ImporteIva_bis * -1
						Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
						RETURN 0
						break			
					case 99200  // reempl. chq rech
					case 99240	// reempl. cheq rob
					case 99242  // reempl. chq rob. Empresa Recaudadora
						loc_cantidad = 1
						loc_importe = post:comision_rechazo
						loc_tasa = adt_serv_aliciva
						//SC 50170
						CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
						//SC 50170 - FACTURACION
						ImporteSinIva_bis = ImporteSinIva_bis * -1
						ImporteIva_bis = ImporteIva_bis * -1
						Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
						INIT 22,0		
						RETURN 0
					case 99020 //Entrega de Piezas a Clientes en Ventanilla
						CALL MISCborrarIva_EP
						INIT 22,0
						RETURN 0
					case 99124
						if (siaf:siaf_status != HOST_REJECTED) then
							loc_importe  = post:EnPol_ImpPresAd
							loc_cantidad = 1
							loc_tasa      = post:EnPol_TasaPresAd
							//SC 50170
							call MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
							//SC 50170 - FACTURACION
							ImporteSinIva_bis = ImporteSinIva_bis * -1
							ImporteIva_bis = ImporteIva_bis * -1
							call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
					
							loc_importe  = post:EnPol_ImpGestEn
							loc_cantidad = 1
							loc_tasa      = post:EnPol_TasaGestEn
							//SC 50170
							call MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
							//SC 50170 - FACTURACION
							ImporteSinIva_bis = ImporteSinIva_bis * -1
							ImporteIva_bis = ImporteIva_bis * -1
							call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
						end if
						INIT 22,0
						RETURN 0
					case 99480 //Facturacion de Intereses Punitorios CM
						loc_cantidad = 1
						loc_importe = siaf:importe
						loc_tasa = adt_serv_aliciva
						break
					case 6680 //Registracion WEB
					loc_importe  = post:adt_pweb_tarifa * post:web_tmp_cantidad
					loc_cantidad = 1
					loc_tasa = adt_pweb_iva
					case else
					// no hago nada
						INIT 22,0
						RETURN 0
				end select
				//SC 50170
				call MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
				//SC 50170 - FACTURACION
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
			
			BREAK
			CASE "SVC" //SERVICIOS VARIOS CORREO
				//loc_importe  = siaf:importe + imp_bloques
				loc_importe  = siaf:importe
				loc_tasa     = adt_serv_aliciva
				select (siaf:codigo_siaf)
					case 18201
						loc_cantidad = 1
					break
					case 18301
					case 18501
						//loc_importe  = siaf:importe + imp_bloques
						loc_importe  = siaf:importe
						loc_cantidad = cantidad
					break
					case else
						loc_cantidad = cantidad
					break
				end select
            
				//SC 50170
				CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
				//SC 50170 - FACTURACION
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
		  	
				if (post:fld_promo_imp > 0)
					loc_importe  = fld_promo_imp
					//SC 50170
					call MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
					//SC 50170 - FACTURACION
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva_bis, ImporteIva_bis, SobreTasaIva)
				end if
            
			break
			Case "CSM" // Giros
    		call giros:MISC_CSM_IVA_BOR
			BREAK
			CASE "PCL"
				if (siaf:codigo_siaf == 99019) /*Bonificación a Unidades Postales*/
					ind = 0
					loc_cantidad = cantidad
					while (ind < 20 && docfis_tasa_por[ind].NUMCHARS != 0)
						//SC 50170
						//loc_importe = (docfis_importe[ind] - docfis_imp_siva[ind]) * -1
						//ImporteSinIva = docfis_imp_siva[ind] * -1
						;PS9756
						if (docfis_tasa_por[ind] > 0) then
							loc_imp_iva_bis = (docfis_importe[ind] - docfis_imp_siva4[ind]) * -1
							loc_imp_siva_bis = docfis_imp_siva4[ind] * -1
						else
							loc_imp_iva_bis = (docfis_importe[ind] - docfis_imp_siva[ind]) * -1
							loc_imp_siva_bis = docfis_imp_siva[ind] * -1
						end if
						Call CDSUpdate_ImpreIva(docfis_tasa_por[ind], loc_imp_siva_bis, loc_imp_iva_bis, SobreTasaIva)
						ind = ind + 1
					end while
				end if
	 	    
				if (siaf:codigo_siaf == 99160) /*Interes Cobrado por financiacion*/
					//SC 50170 No es necesario porque en la factura
					//no sale como un item mas  sino que se muestra despues del SUBTOTAL
					loc_importe = post:jnl_iva_int_dif * -1
					ImporteSinIva = post:jnl_interes_diferido * -1
					Call CDSUpdate_ImpreIva(post:iva_Porcentaje, ImporteSinIva, loc_importe, 0)
				end if
			
				if (siaf:codigo_siaf == 99300) //Descuento cliente medio
					/*loc_importe = (siaf:ImporteConIva - siaf:ImporteSinIva) * -1
					siaf:ImporteSinIva = siaf:ImporteSinIva * -1
					Call CDSUpdate_ImpreIva(post:AliTrnCM, siaf:ImporteSinIva, loc_importe, 0)*/
					//SC 50170
					post:ImporteIva_bis = post:ImporteIva_bis * -1
					post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
					Call CDSUpdate_ImpreIva(post:AliTrnCM, post:ImporteSinIva_bis, post:ImporteIva_bis, 0)
				end if
			
				if (siaf:codigo_siaf == 99095) /*Descuento sur postal*/
					loc_tasa     = adt_prodvs_aliciva
					Call CDSUpdate_ImpreIva(loc_tasa, ImporteSinIva, ImporteIva, 0)
				end if
			
				if (siaf:codigo_siaf == 99350) //Descuento cliente medio OC
					/*loc_importe = (siaf:ImporteConIva - siaf:ImporteSinIva) * -1
					siaf:ImporteSinIva = siaf:ImporteSinIva * -1
					Call CDSUpdate_ImpreIva(post:AliTrnCM, siaf:ImporteSinIva, loc_importe, 0)*/
					//SC 50170
					post:ImporteIva_bis = post:ImporteIva_bis * -1
					post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
					Call CDSUpdate_ImpreIva(post:AliTrnCM, post:ImporteSinIva_bis, post:ImporteIva_bis, 0)
				end if
			
				if (siaf:codigo_siaf == 99511) //Indemnizacion de Servicio por Alicuota
					post:ImporteIva_bis = post:ImporteIva_bis * -1
					post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
					siaf:afecta_efectivo = "-"
					Call CDSUpdate_ImpreIva(post:AliTrnCM, post:ImporteSinIva_bis, post:ImporteIva_bis, 0)
				end if
	   		
				if (siaf:codigo_siaf == 99513) /*Descuento cliente medio OC NC*/
					post:ImporteIva_bis = post:ImporteIva_bis * -1
					post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
					siaf:afecta_efectivo = "+"
					Call CDSUpdate_ImpreIva(post:AliTrnCM, post:ImporteSinIva_bis, post:ImporteIva_bis, 0)
				end if
			break
			
			CASE "VAP" //VUELTA A PAGAR
				//loc_importe  = siaf:importe + imp_bloques
				loc_importe  = siaf:importe
				loc_tasa     = adt_serv_aliciva
          
				//SC 50170
				CALL MISCdesglosaIva(loc_importe, loc_tasa, cantidad,0)
				//SC 50170 - FACTURACION
				ImporteSinIva_bis = ImporteSinIva_bis * -1
				ImporteIva_bis = ImporteIva_bis * -1
				Call CDSUpdate_ImpreIva(loc_tasa,ImporteSinIva_bis, ImporteIva_bis ,SobreTasaIva)
			break			
			
			
		END SELECT
		INIT 22,0
	end if
END SUB

/*******/
