/****o* Pendientes de agrupación/OFB:post:MISCtarifaSurPost
* NOMBRE
*   OFB:post:MISCtarifaSurPost
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCtarifaSurPost(pPreDNroTrn)
	;Esta rutina se encarga de recuperar los datos de la caja a bonificar *** MDG
	CDS ENDSELECT DSC:adt_promoCabe_ctx
	CDS ENDSELECT DSC:adt_promoDetalle_ctx
	Cds SELECT FROM DSC:TABPresuDeta BECOMES DSC:adt_promoCabe_ctx \
               	    WHERE (FLD:post:fecha == FLD:post:fecha ) && \
                 	  (Fld:post:op_operator_id == fld:post:op_operator_id )&& \
                 	  (fld:post:PresNro == fld:post:PresNro) && \
                 	  (fld:post:PreDNroTrn == pPreDNroTrn)
    Cds FINDFIRST DSC:adt_promoCabe_ctx NOLOCK

    Let lib:err_retval = cdsretval
    IF (lib:err_retval == 0) THEN
    	CDS EXTRACT DSC:adt_promoCabe_ctx post:cod_agrupacion post:cantidad post:prod_serv
    	CDS SELECT FROM DSC:adt_prodvs_table BECOMES DSC:adt_promoDetalle_ctx \
    				WHERE post:adt_prodvs_cod == post:prod_serv
                 	  
        Cds FINDFIRST DSC:adt_promoDetalle_ctx NOLOCK
        Let lib:err_retval = cdsretval
    	IF (lib:err_retval == 0) THEN
    		CDS EXTRACT DSC:adt_promoDetalle_ctx post:adt_prodvs_tarifa post:adt_prodvs_aliciva \
    			post:adt_prodvs_cod post:adt_prodvs_desc
    		IF (post:adt_prodvs_tarifa == 0) THEN
    			lib:err_retval = -1
    		END IF
		END IF
	END IF
	CDS ENDSELECT DSC:adt_promoCabe_ctx
	CDS ENDSELECT DSC:adt_promoDetalle_ctx
	RETURN lib:err_retval
END SUB

/*******/
