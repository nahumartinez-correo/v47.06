/****o* Pendientes de agrupación/OFB:post:MISCimp_vec_totp
* NOMBRE
*   OFB:post:MISCimp_vec_totp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCimp_vec_totp
LOCAL i_idx LIKE post:idx
LOCAL lidx LIKE post:idx

    Call post:MISCencab_rec_up
    
    common:csr_string = "Totales Por Productos:"
    CALL MISCwrite_rec_up
    common:csr_string = "     "
    CALL MISCwrite_rec_up
	
	lidx = 0
    call csr:PickOp 4 Dsc:post:aux_pic_medios "0,2"
	let i_idx = PL_GETITEM + lidx
	call csr:myPickcontrol dsc:post:aux_pic_medios common:csr_string i_idx
	Do
		if (retval < 0)
	    	break
	    end if
		
		Select (substr(common:csr_string,0,2))
			Case "_N"
				fprint common:csr_string "SimNac %e",substr(common:csr_string,3,8)
				break
			Case "_I"
				fprint common:csr_string "SimInt %e",substr(common:csr_string,3,8)
				break
			Case Else
				fprint common:csr_string "  %2s   %e",substr(common:csr_string,0,2),substr(common:csr_string,3,8)
				break
		End Select
		CALL MISCwrite_rec_up
		
		let lidx = lidx + 1
	    let i_idx = PL_GETITEM + lidx
	    call csr:myPickcontrol dsc:post:aux_pic_medios common:csr_string i_idx            
	Loop
	fprint common:csr_string "Tot.UP %8e",TotGralProdUP
	CALL MISCwrite_rec_up
END SUB

/*******/
