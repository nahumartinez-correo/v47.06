/****o* Pendientes de agrupación/OFB:post:MISCingbrutos_climed
* NOMBRE
*   OFB:post:MISCingbrutos_climed
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCingbrutos_climed(datos,long)

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local varl_numingbr     like post:CloNroInb
	local varl_importe      like common:csr_string
	local loc_retval        like lib:err_retval

	/*********************************************************************
	Se obtiene los campos BULK's y se van grabando los datos en la tabla 
	de Inscripcion en Ing. Brutos
	La consulta del cliente retorna:
	PROV - COD.IB  -  NUM.IB - COEF.PART. - EXENTO
	**********************************************************************/

	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2

	while ( posicion < longitud )

		post:CloProvin = substr(datos,posicion,1)
		posicion =  posicion + 1

		post:IngBCod = substr(datos,posicion,3)
		posicion = posicion  + 3

		post:CloNroInb = substr(datos,posicion,11)
		posicion = posicion + 11

		varl_importe = substr(datos,posicion,8)
		posicion = posicion + 8

		post:CloCoefPartProv = ( varl_importe/100000 )

		post:CloExento = substr(datos,posicion,1)
		posicion = posicion + 1

		call csr:trimfield post:CloProvin
		call csr:trimfield post:IngBCod
		call csr:trimfield post:CloExento

		call post:CDSgrabar_ingbrutos
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if

	end while

	return loc_retval

END SUB

/*******/
