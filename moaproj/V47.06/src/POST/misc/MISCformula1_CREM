/****o* Pendientes de agrupación/OFB:post:MISCformula1_CREM
* NOMBRE
*   OFB:post:MISCformula1_CREM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"


SUB post:MISCformula1_CREM(p_imp_crem,p_limite_giro,p_imp_giro,p_comision,p_giro_mas_sello)
local l_comision like post:tarifa
local l_acrec like post:tarifa
local Evento like giros:adt_impp_modo
local SEL_FIJO_PROV_EMI like giros:adt_impp_montofijo
local SEL_FIJO_PROV_PAG like giros:adt_impp_montofijo
local MILAJE_SEL_PROV_EMI like giros:adt_impp_por_milaje
local MILAJE_SEL_PROV_PAG like giros:adt_impp_por_milaje
local cont like siaf:i
local l_imp_crem like giros:ImporteCremAcumulado
local l_imp_crem_res like giros:ImporteCremAcumulado

    
    if (p_limite_giro == 0) then
        return -2
    end if
    
    l_imp_crem = p_imp_crem    
    
    cont = 1
    p_imp_giro = 0
    
    ;Calculo comisión
    post:adt_tarif_desde = l_imp_crem
    CALL post:MISCactualizo_tarifa
    if (retval < 0) then
        return -2
    end if
    l_comision = post:tarifa
    p_comision = post:tarifa
    ;calculo acrecentamiento sobre la comisión
    INIT 22,1
    l_acrec = (l_comision * post:adt_acreperc_aliacre / 100)
    INIT 22,0               
    
    do 
        init 22,1
        l_imp_crem_res = (l_imp_crem - l_comision - l_acrec) / cont
        init 22,0
        ;Obtengo los sellados del emisor
        siaf:ProvImpuesto = SUBSTR(common:sucursal_activa,0,1)
        let Evento = "E"
        call giros:MISCtarifaSellados(siaf:ProvImpuesto,l_imp_crem_res,Evento,post:adt_serv_serv,giros:SucSel2_fld,SEL_FIJO_PROV_EMI,MILAJE_SEL_PROV_EMI)
        
        ;Obtengo los sellados del pagador
        ;siaf:ProvImpuesto = SUBSTR(giros:CodSucBenef_fld,0,1)
        siaf:ProvImpuesto = giros:SucSel2_fld
        if (SEL_FIJO_PROV_EMI.numchars > 0 || MILAJE_SEL_PROV_EMI.numchars > 0)
            giros:Impuesto = 0
        else
            giros:Impuesto = 1
        end if
        let Evento = "A"
        call giros:MISCtarifaSellados(siaf:ProvImpuesto,l_imp_crem_res,Evento,post:adt_serv_serv,giros:SucSel2_fld,SEL_FIJO_PROV_PAG,MILAJE_SEL_PROV_PAG)
        clearfield giros:Impuesto
        
        ;Obtengo el importe y cantidad de giros
        INIT 22,1
        p_imp_giro = ((((l_imp_crem - l_comision - l_acrec) / cont) - SEL_FIJO_PROV_EMI - SEL_FIJO_PROV_PAG) * 1000) / (1000 + MILAJE_SEL_PROV_EMI + MILAJE_SEL_PROV_PAG)
        p_giro_mas_sello = p_imp_giro + \
        (SEL_FIJO_PROV_PAG + (p_imp_giro * MILAJE_SEL_PROV_PAG) / 1000) + \
    	(SEL_FIJO_PROV_EMI + (p_imp_giro * MILAJE_SEL_PROV_EMI) / 1000)
        INIT 22,0
        if (p_imp_giro <= p_limite_giro) then
            break
        end if
        cont = cont + 1
    loop
    return cont
END SUB
/*******/
