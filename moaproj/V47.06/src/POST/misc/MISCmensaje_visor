/****o* Pendientes de agrupación/OFB:post:MISCmensaje_visor
* NOMBRE
*   OFB:post:MISCmensaje_visor
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCmensaje_visor(prm_opcion)

local varl_escape	like post:err_retval
local varl_Testing	like common:csr_string

// para eliminar el uso del visor
CALL csr:variable_environment("VISOR",varl_Testing)
call csr:fld_to_upper(varl_Testing)
if (varl_Testing == "DISABLE") then
       return 0
end if

// para que no muestre nada mientras se revisan trx's en el journal
if (testflag(lib:state_flags,scan_mode)) then
   return (-2)
end if

// para que cuando se esta ejecutando una reversa, no se muestren mensajes
if (testflag(tlr:tran_flags,correction)) then
   return (-2)
end if

// limpio el buffer del teclado por si quedo un ESC como ultima tecla y 
// esto cancela la impresion...
if (nextkey == RT_ESC) then
   let varl_escape = 1
   init 33,0
end if

INIT 76,"docprt WAIT 0"

select (prm_opcion)
   case "A"
      printdoc OFB:post:DSPLmenu_msg,docprt," "
      break
   case "B"
      printdoc OFB:post:DSPLini_ses_msg,docprt," "
      break
   case "C"
      printdoc OFB:post:DSPLfin_ses_msg,docprt," "
      break
   case "D"
      printdoc OFB:post:DSPLconf_ses_msg,docprt," "
      break
   case "I" // inicializacion
      printdoc OFB:post:DSPLinitialize,docprt," "
      break
end select

INIT 76,"docprt WAIT 1"

if (varl_escape) then
    ungetkey RT_ESC
end if

END SUB

/*******/
