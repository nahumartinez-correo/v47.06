/****o* Pendientes de agrupación/OFB:post:MISCtotBonifPostTel
* NOMBRE
*   OFB:post:MISCtotBonifPostTel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCtotBonifPostTel
	local ind like siaf:i
    local l_vecesp like post:cantidad
    local l_tot_blq	like post:cantidad
  
	call csr:cleararray(docfis_importe)
	call csr:cleararray(docfis_tasa_por)
	call csr:cleararray(docfis_imp_siva)

	call post:MISCacumula_vec_bon(post:promo_imp_srv_tot, post:adt_serv_aliciva, post:cantidad)

	l_tot_blq = cantidad // cant_bloq * cantidad
	call post:MISCacumula_vec_bon(promo_imp_blq_tot, adt_serv_aliciva, l_tot_blq)

	ind = 0
	while (ind < MAX_VEC_OPC)
		/*ACP- Ps 9318 error de redondeo telegrama multiple, con opcional CDFA*/
		l_vecesp = 0
		;PS9490
        CALL post:MISCopcCantPart(post:cod_opc[ind], post:tipo_produc, l_vecesp)
		if (retval == 1)
	 		call post:MISCacumula_vec_bon(promo_imp_opc_tot[ind], ali_opc[ind], 1)
		else
			call post:MISCacumula_vec_bon(promo_imp_opc_tot[ind], ali_opc[ind], post:cantidad)
		end if
		ind = ind + 1
	end while
	post:promo_iva = 0
	call post:MISCtotal_vec_bon
	post:promo_tot = ImporteTotBon
	post:promo_tot = post:promo_tot * -1
	post:promo_iva = post:promo_iva * -1
END SUB

/*******/
