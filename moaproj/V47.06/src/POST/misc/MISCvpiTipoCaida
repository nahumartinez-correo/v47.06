/****o* Pendientes de agrupación/OFB:post:MISCvpiTipoCaida
* NOMBRE
*   OFB:post:MISCvpiTipoCaida
* DESCRIPCION
*   Realiza la verificacion por caida de RT en las operaciones VPI
* ENTRADAS
*   p_operacion: ANV - Anulación de venta 
*								 DEV - Devolución 
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*  op:TRANlogin
* DOCUMENTACION
*   NI50525 POS Integrado
* SOURCE
*/
#include "postmisc.h"
#include "moa2vpipc.h"

SUB post:MISCvpiTipoCaida(p_operacion)
	LOCAL l_retval LIKE lib:err_retval
	LOCAL l_operacion LIKE common:csr_string
	LOCAL l_Total_importe LIKE post:Total_importe
	LOCAL l_codigo_interno LIKE post:codigo_interno
	LOCAL l_NroCompPago2 LIKE post:NroCompPago2
	LOCAL l_Nro_Lote_Pos LIKE post:Nro_Lote_Pos
	LOCAL l_NroTransac LIKE post:NroTransac
	LOCAL l_Tipo_Operacion_Pos LIKE post:Tipo_Operacion_Pos
	LOCAL l_importe_origen LIKE post:importe_origen
	LOCAL l_moneda LIKE siaf:moneda
	LOCAL l_codigo_medio_pago LIKE post:codigo_medio_pago
	LOCAL l_DescripMedPag LIKE post:DescripMedPag
	LOCAL l_medio_pago_desc	 LIKE post:medio_pago_desc	
	LOCAL l_PresNro LIKE post:PresNro
	LOCAL l_vpi_codseq_nro LIKE adt_vpi_codseq_nro
	LOCAL l_ven_amount LIKE post:adt_opvpi_amount
	LOCAL l_ven_ticketNumb LIKE post:adt_opvpi_ticketNumb
	LOCAL l_ven_batchNumb LIKE post:adt_opvpi_batchNumb 
	LOCAL l_ven_authCode LIKE post:adt_opvpi_authCode
	LOCAL l_ven_PresNro LIKE post:adt_opvpi_PresNro
	LOCAL l_ven_codseq_nro LIKE post:adt_opvpi_codseq_nro
	LOCAL l_ven_issuerCode LIKE post:adt_opvpi_issuerCode
	LOCAL l_codint_tarj_desc LIKE post:codint_tarj_desc
	LOCAL l_ven_merchaCode LIKE post:jnl_opvpi_merchaCode
	
	LET l_operacion = p_operacion

	//Verifico si existe alguna Anulacion/Devolucion pendiente de journalizacion
	CDS SELECT FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:post:OperacionesVPI_ctx \
		WHERE post:adt_opvpi_comandos == l_operacion \
		&& post:adt_opvpi_fecha == common:system_date \
		&& post:adt_opvpi_termi_win == common:window_node \
		&& post:adt_opvpi_login_id == op:op_login_id \
		&& post:adt_opvpi_comandos == l_operacion \
		&& post:adt_opvpi_batchClose == "N" \
		&& post:adt_opvpi_jnlOK == "N" 	

	CDS FINDFIRST DSC:post:OperacionesVPI_ctx NOLOCK
	LET l_retval = CDSRETVAL
	IF (l_retval != 0) THEN
		CDS ENDSELECT DSC:post:OperacionesVPI_ctx
		RETURN -2
	END IF
	
	CDS EXTRACT DSC:post:OperacionesVPI_ctx ALL
	CDS ENDSELECT DSC:post:OperacionesVPI_ctx
	
	//Si es una Venta, fuerzo la Anulacion
	IF (l_operacion == "VEN") THEN
		//Recupero el secuenciador
		LET post:adt_vpi_codseq_nro = post:adt_opvpi_codseq_nro
		
		//Realizo la anulacion
		CALL drv:MISCpopup(SCR:post:SCRN99600,OFB:post:PRES99601,OFB:PREC99601,OFB:post:SVAL99600,LST:post:BUT99600)
		IF (LASTKEY == RT_ESC) THEN
			RETURN -2
		END IF
		
		//Resguardo valores
		LET l_Total_importe =	post:Total_importe
		LET l_codigo_interno = post:codigo_interno
		LET l_NroCompPago2 = post:NroCompPago2
		LET l_Nro_Lote_Pos = post:Nro_Lote_Pos
		LET l_NroTransac = post:NroTransac
		LET l_Tipo_Operacion_Pos = post:Tipo_Operacion_Pos
		LET l_importe_origen = post:importe_origen
		LET l_moneda =	siaf:moneda
		LET l_codigo_medio_pago =	post:codigo_medio_pago
		LET l_DescripMedPag =	post:DescripMedPag
		LET l_medio_pago_desc =	post:medio_pago_desc
		LET l_PresNro =	post:adt_opvpi_PresNro	
		LET l_vpi_codseq_nro = post:adt_opvpi_codseq_nro
		LET l_ven_merchaCode = post:adt_opvpi_merchaCode
	ELSE
		//Tratamiento por caida de Anulacion Automatica de Venta con Tarjeta
		IF (post:adt_opvpi_cod_siaf == 99601) THEN
			CDS SELECT FROM DSC:post:OperacionesVPI_tbl BECOMES DSC:post:OperacionesVPI_ctx \
				WHERE post:adt_opvpi_comandos == "VEN" \
				&& post:adt_opvpi_fecha == common:system_date \
				&& post:adt_opvpi_termi_win == common:window_node \
				&& post:adt_opvpi_login_id == op:op_login_id \
				&& post:adt_opvpi_codseq_nro == post:adt_opvpi_codseq_nro \
				&& post:adt_opvpi_batchClose == "N" \
				&& post:adt_opvpi_jnlOK == "N" 	

			CDS FINDFIRST DSC:post:OperacionesVPI_ctx NOLOCK
			LET l_retval = CDSRETVAL
			IF (l_retval != 0) THEN
				CDS ENDSELECT DSC:post:OperacionesVPI_ctx
				RETURN -2
			END IF
			
			CDS EXTRACT DSC:post:OperacionesVPI_ctx \
				post:adt_opvpi_amount INTO l_ven_amount \
				post:adt_opvpi_ticketNumb INTO l_ven_ticketNumb \
				post:adt_opvpi_batchNumb INTO l_ven_batchNumb \
				post:adt_opvpi_authCode INTO l_ven_authCode \
				post:adt_opvpi_PresNro INTO l_ven_PresNro \
				post:adt_opvpi_codseq_nro INTO l_ven_codseq_nro \
				post:adt_opvpi_issuerCode INTO l_ven_issuerCode \
			  post:adt_opvpi_merchaCode INTO l_ven_merchaCode
			
			CDS ENDSELECT DSC:post:OperacionesVPI_ctx
			
			//Resguardo valores
			LET l_Total_importe =	l_ven_amount / 100
			
			//Obtengo el codigo interno y descripcion
			LET post:adt_lcie_issuerCode = l_ven_issuerCode
			CALL post:CDSobt_CodInt_tarj
			LET l_codigo_interno = post:jnl_lcie_CodInt
			LET l_codint_tarj_desc = post:jnl_lcie_CodIntDesc
			
			LET l_NroCompPago2 = l_ven_ticketNumb
			LET l_Nro_Lote_Pos = l_ven_batchNumb
			LET l_NroTransac = l_ven_authCode
			LET l_Tipo_Operacion_Pos = "ONLINE"
			LET l_importe_origen = l_ven_amount / 100
			
			LET l_moneda =	"06"
			LET l_codigo_medio_pago =	l_moneda
			LET post:adt_mp_cod = l_moneda
			CALL post:CDSadt_MedPago_load
			LET l_DescripMedPag =	post:adt_mp_desc
			LET l_medio_pago_desc =	post:adt_mp_desc
			
			LET l_PresNro =	l_ven_PresNro	
			LET l_vpi_codseq_nro = l_ven_codseq_nro
		ELSE
			//Busco en el journal los datos de la Venta
			CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:jnl_context WHERE \
				tlr:jnl_bus_date == common:system_date && \
				siaf:codigo_siaf == 99099 && \
				post:PresNro == post:adt_opvpi_PresNro && \
				siaf:moneda == "06" && \
				tlr:jnl_operator == op:op_operator_id
			
			CDS FINDFIRST DSC:tlr:jnl_context NOLOCK
			l_retval = CDSRETVAL
			IF (l_retval == 0) THEN
				CDS EXTRACT DSC:tlr:jnl_context \
					post:Total_importe INTO l_Total_importe \
					post:codigo_interno INTO l_codigo_interno \
					post:codint_tarj_desc INTO l_codint_tarj_desc \
					post:NroCompPago2 INTO l_NroCompPago2 \
					post:Nro_Lote_Pos INTO l_Nro_Lote_Pos \
					post:NroTransac INTO l_NroTransac \
					post:Tipo_Operacion_Pos INTO l_Tipo_Operacion_Pos \
					post:importe_origen INTO l_importe_origen \
					siaf:moneda INTO l_moneda \
					post:codigo_medio_pago INTO l_codigo_medio_pago \
					post:DescripMedPag INTO l_DescripMedPag \
					post:medio_pago_desc INTO l_medio_pago_desc \
					post:PresNro INTO l_PresNro	\
					post:adt_vpi_codseq_nro INTO l_vpi_codseq_nro \
					post:jnl_opvpi_merchaCode INTO l_ven_merchaCode
					
			ELSE
				CDS ENDSELECT DSC:tlr:jnl_context 
				RETURN -2
			END IF
			CDS ENDSELECT DSC:tlr:jnl_context 
		END IF
	END IF

	//Inicio - Tratmiento de journalizacion de la transaccion
	CALL tlr:JNLinitialize

	//Cargo el codigo de la transaccion
	SELECT (l_operacion)
		CASE "VEN"
			//Anulación de venta con presupuesto
			LET siaf:codigo_siaf = 99601		
		BREAK
		CASE "ANV"
			IF (post:adt_opvpi_cod_siaf == 99601) THEN
				//Anulación de venta con presupuesto
				LET siaf:codigo_siaf = 99601	
			ELSE
				//Anulación de venta
				LET siaf:codigo_siaf = 99600	
			END IF	
		BREAK
		CASE "DEV"
			//Devolución de venta
			LET siaf:codigo_siaf = 99605			
		BREAK
	END SELECT
	
	CALL siaf:PRESfecha_hora
	IF (RETVAL < 0) THEN
		RETURN (-2)
	END IF

	//Asigno valores a la transaccion
	IF (siaf:codigo_siaf == 99600 || siaf:codigo_siaf == 99601) THEN
		LET	post:NroCompPago2AN = post:adt_opvpi_ticketNumb
		LET	post:Nro_Lote_PosAN = post:adt_opvpi_batchNumb
		LET	post:NroTransacAN = post:adt_opvpi_authCode
		LET post:Tipo_Operacion_PosAN = "ONLINE"
	ELSE
		LET	post:NroCompPago2DV = post:adt_opvpi_ticketNumb
		LET	post:Nro_Lote_PosDV = post:adt_opvpi_batchNumb
		LET	post:NroTransacDV = post:adt_opvpi_authCode
		LET	post:Tipo_Operacion_PosDV = "ONLINE"
	END IF

	//Recupero los datos
	LET post:Total_importe = l_Total_importe
	LET post:codigo_interno = l_codigo_interno
	LET post:codint_tarj_desc = l_codint_tarj_desc
	LET post:NroCompPago2 = l_NroCompPago2
	LET post:Nro_Lote_Pos = l_Nro_Lote_Pos
	LET post:NroTransac = l_NroTransac
	LET post:Tipo_Operacion_Pos = l_Tipo_Operacion_Pos
	LET post:importe_origen = l_importe_origen
	LET siaf:moneda = l_moneda
	LET post:codigo_medio_pago = l_codigo_medio_pago
	LET post:DescripMedPag = l_DescripMedPag
	LET post:medio_pago_desc = l_medio_pago_desc
	LET giros:PresNro_canc = l_PresNro
	LET siaf:importe =  post:Total_importe
	LET post:adt_vpi_codseq_nro = l_vpi_codseq_nro
	LET post:jnl_opvpi_merchaCode = l_ven_merchaCode
	
	//Asigno campos indirectos para la journalizacion
	SELECT (l_operacion)
		CASE "VEN"
			tlr:INDdcol_scrn[0] = SCR:post:SCRN99600 //Reutilizo la pantalla de la anulacion
			tlr:INDtran_name = LST:post:TRAN99601
			tlr:INDjnl_append = OFB:post:JNL99601		
		BREAK
		CASE "ANV"
			tlr:INDdcol_scrn[0] = SCR:post:SCRN99600
			IF (post:adt_opvpi_cod_siaf == 99600) THEN
				tlr:INDtran_name = LST:post:TRAN99600
				tlr:INDjnl_append = OFB:post:JNL99600		
			ELSE
				tlr:INDtran_name = LST:post:TRAN99601
				tlr:INDjnl_append = OFB:post:JNL99601
			END IF
		BREAK
		CASE "DEV"
			tlr:INDdcol_scrn[0] = SCR:post:SCRN99605
			tlr:INDtran_name = LST:post:TRAN99605
			tlr:INDjnl_append = OFB:post:JNL99605		
		BREAK
	END SELECT
	
	CALL post:MISCmuevo_campos_jou
	CALL siaf:MISClleno_modalidad
	
	CLEARFIELD post:PresNro
	
	UNGETKEY RT_SEND
	CALL tlr:JNLtran
	UNGETKEY RT_SEND
	
	RESETFLAG drv:mode_flags,no_stack_list
	//Fin - Tratmiento de journalizacion de la transaccion
	
	IF (siaf:codigo_siaf != 99601) THEN
		IF (l_operacion == "ANV" || l_operacion == "DEV") THEN
				MSGBOX "QUEDO PENDIENTE UNA ANULACION DE DOCUMENTOS",0x00,"AVISO"	
		END IF
	END IF

	RETURN 0
END SUB

/*******/
