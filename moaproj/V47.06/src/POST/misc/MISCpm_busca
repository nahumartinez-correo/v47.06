/****o* Pendientes de agrupación/OFB:post:MISCpm_busca
* NOMBRE
*   OFB:post:MISCpm_busca
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCpm_busca(que_busca)
    /*
    Si que_busca es 0, se busca por codigo. 
    Si que_busca es 1, se busca por descripcion.
    */
    local cod           like adt_pm_material
    local desc          like adt_pm_matdesc    
    local um            like adt_pm_um
    
    local cant_ch_cod   like siaf:cant
    local cant_ch_desc  like siaf:cant
    local cant_ch2_cod  like siaf:cant
    local cant_ch2_desc like siaf:cant
        
    local item          like idx
    local cont          like idx            
    local ret           like lib:err_retval
    local encontro      like idx
    
    
    let encontro = 0
    
    CALL CSR:f_sadroppl(DSC:siaf:motivos)
    CALL CSR:f_sanewpl(DSC:siaf:motivos ,PIC:siaf:Motivos)

    LET cont = 0
    LET item = PL_GETITEM + 0
	LET common:csr_string = ""
	LET common:csr_string_130 = ""
    
    DO
        /*Tengo que recorrer el picklist*/
        CALL csr:myPickcontrol "prodmay_pic" common:csr_string_130 item 
        IF (RETVAL < 0) THEN
            BREAK
        END IF
        
        cod  = substr(common:csr_string_130,0,18)
        desc = substr(common:csr_string_130,19,30)

        if (que_busca == 0) //buscar por codigo            
            let cant_ch_cod  = prodmay_cod.numchars
            let cant_ch2_cod = cod.numchars
            call siaf:busca_chars(prodmay_cod,cod,cant_ch_cod,cant_ch2_cod)
        else                //buscar por descripcion                        
            let cant_ch_desc  = prodmay_desc.numchars
            let cant_ch2_desc = desc.numchars
            call siaf:busca_chars(prodmay_desc,desc,cant_ch_desc,cant_ch2_desc)
        end if        
        if (retval == 0) then            
            um = substr(common:csr_string_130,50,3)                        
    	    FPRINT common:csr_string "%-18.18s %-30.30s %3.3e",cod,desc,um            
            CALL CSR:f_saaddpl(DSC:siaf:motivos,common:csr_string)
            let encontro = 1
        END IF
 
        LET cont = cont + 1
        LET item = PL_GETITEM + cont
    LOOP
    
    if (encontro == 0) then
	    errmsg lst:common:errmsg_list, "Descripción no encontrada"
        return (-2)
    endif
    
    CALL CSR:f_sadopl(DSC:siaf:motivos,common:csr_string)
    ret = RETVAL
    CALL CSR:f_sadroppl(DSC:siaf:motivos)
    if (ret >= 0) then
	    let adt_pmaux_codmat = substr(common:csr_string,0,18)
        call csr:trimfield(adt_pmaux_codmat)
        let adt_pmaux_descmat = substr(common:csr_string,19,30)
        adt_pmaux_um      = SUBSTR(common:csr_string,50,3)
        call post:MISChabilito_pm2
    endif
    RETURN (ret)
END SUB

/*******/
