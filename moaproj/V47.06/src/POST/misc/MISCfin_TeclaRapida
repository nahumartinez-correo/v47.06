/****o* Pendientes de agrupación/OFB:post:MISCfin_TeclaRapida
* NOMBRE
*   OFB:post:MISCfin_TeclaRapida
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCfin_TeclaRapida
	LOCAL COLLECTA LIKE drv:collect
	LOCAL MODEFLAGS LIKE drv:mode_flags
	LOCAL IMPORTE LIKE siaf:importe
	LOCAL NROIMPRE LIKE post:nro_impre
	LOCAL PREDFORFIS LIKE post:PreDForFis
	LOCAL seq_ant LIKE tlr:jnl_sequence
	LOCAL cod_ant LIKE siaf:codigo_siaf
	LOCAL l_importe LIKE siaf:importe
	LOCAL l_screen_active LIKE drv:screen_active
	LOCAL l_INDscreen[13] LIKE drv:INDside_bar_scr
	LOCAL l_index LIKE siaf:idx
	LOCAL PresNro_aux LIKE post:PresNro
	;LOCAL l_modo LIKE post:Modo
	LOCAL l_retval LIKE lib:err_retval
	
	CALL post:CDSadt_presuact_load
	
	IF (post:codigo_impre == 99023 && post:estado_presu == 1 && post:PresNro != 0) THEN
	; LA TX SE CALLO DESPUÉS DE JOURNALIZAR Y NO PUDO ACTUALIZAR LA PRESUACT *** MDG
		CALL CDSadt_presuact_save 
		RETURN 0
	END IF
	
	IF (post:estado_presu == 2)
		//Si la tabla ReguPza_tmp esta cargada pare este operador significa que hubo una caida del rt dentro de la 
		//tx de Regularizacion de Pzas por lo tanto borro la tabla y limpio la marca en la NCpedEnOrigen
		CALL post:CDSdelReguPza_tmpAll
	END IF	
	
	//gpb:NI50479
	CALL post:MISCVerifCaidaSesPED
	LET l_retval = RETVAL

	//gpb:Original
	//IF (post:estado_presu == 1 && post:PresNro != 0) THEN
	//gpb:NI50479
	IF (post:PresNro != 0 && (post:estado_presu == 1 || l_retval != 0)) THEN
		post:Modo = "R"
		;l_modo = post:Modo
		LASTKEY = 0
		// drv:stack_cnt = drv:stack_cnt + 1
		// Muevo todos los campos que necesito
		COLLECTA = drv:collect
		MODEFLAGS = drv:mode_flags
		NROIMPRE  = post:nro_impre
		siaf:importe = post:importe_rapido
		TotalSinIva = post:impRapidoSinIva
		IMPORTE = siaf:importe
		post:nro_impre = post:nro_impre_aux
		post:PreDForFis = post:PreDForFis_aux
		siaf:moneda = common:csr_string_171

		IF (siaf:codigo_siaf_ant == 8500) THEN /*Vta Especies*/
			CALL tes:CDSget_imp_TesEspV(common:sucursal_activa,"N",op:op_operator_id,tes:especie_ant, tes:subespv_ant,tes:adt_espv_importe)
			;Si no actualizó nada
			IF (tes:importe_evant == tes:adt_espv_importe) THEN
				;Debo actualizar la tabla de especies que no llego a grabarse
				LET tes:espv_subcod = tes:subespv_ant
				LET tes:espv_cod = tes:especie_ant
				seq_ant = tlr:jnl_sequence
				tlr:jnl_sequence = tes:jnl_sequence_ant
				cod_ant = siaf:codigo_siaf
				siaf:codigo_siaf = 8500
	        
				IF (tlr:jnl_sequence_corr.NUMCHARS == 0) THEN
					CALL tes:CDSmodif_TesEspV("resta",common:sucursal_activa, "N", op:op_operator_id,tes:importe_vta)
					CALL post:MISCumev_asig_datos(common:sucursal_activa,tes:espv_cod,tes:espv_subcod,op:op_operator_id,"N",0,tes:importe_vta)
				ELSE /*es reversa de la tran 8500*/
					CALL tes:CDSmodif_TesEspV("suma",common:sucursal_activa, "N", op:op_operator_id,tes:importe_vta)
					CALL post:MISCumev_asig_datos(common:sucursal_activa,tes:espv_cod,tes:espv_subcod,op:op_operator_id,"N",tes:importe_vta,0)
				END IF
				tlr:jnl_sequence = seq_ant
				siaf:codigo_siaf = cod_ant
			END IF
		END IF
	
		CLEARFIELD tes:espv_cod
		CLEARFIELD tes:espv_subcod
		CLEARFIELD tes:importe_vta
		CLEARFIELD tes:importe_evant
		CLEARFIELD siaf:codigo_siaf_ant

		// FGB 6.9.2001: esta rutina graba las capturas de medios de pago, cuando la
		// transaccion de teclas rapidas puede ser hecha con mas de un medio de pago...
		CALL MISCrecup_cap_multi
		IF (RETVAL != 0) THEN
			IF (post:codigo_impre!= 99099 && post:codigo_impre != 99098) THEN
				/*Guardo valores en la tabla Presu - Gabriel Falciola*/
				l_importe = siaf:importe
				siaf:importe = siaf:importe - fld_promo_imp
				CALL post:CDSGrabaPresuR(siaf:importe)
				siaf:importe = l_importe
				UngetKey RT_SEND
				tlr:INDdcol_scrn[0] = SCR:post:SCRNcaptura_adiciona
	    
				/*CSZ - Si la tx es de giros y tiene saldo negativo el importe deberia ser negativo
				para que la captura se journalice con el codigo siaf 99098*/
				IF (giros:flia_tran_aux == "CSM") THEN
					IF (giros:afec_efvo_aux == "-")
						siaf:importe = (siaf:importe * (-1)) - giros:importe2_aux + giros:imp_rev_aux
					ELSE
						siaf:importe = siaf:importe - giros:importe2_aux + giros:imp_rev_aux
					END IF
					IF (giros:status_aux == HOST_ACCEPTED) THEN
						/*limpio el campo por las dudas, pero si se lo necesita mas adelante habrá que
						sacar este clearfield*/
						//clearfield giros:status_aux
						CALL post:MISCcap_teclas_rap(siaf:importe)
					END IF       		
				//gpb:AUT-1332 caida de PAGO ON SITE
				ELSEIF (post:codigo_impre == 6630) THEN
					CALL post:OFBrecu_pago_on_site
				ELSE
					; PS9328: Cuando en una transacción de teclas rápidas se cae
					; el sistema antes de journalizar la captura, al levantar
					; nuevamente el sistema esta se journaliza en primera instancia
					; con el estado 105 y luego se actualiza a 002, pero, si se cae
					; en medio de esa actualización queda journalizado definitivamente
					; con 105. Cuando la transacción no tiene una tx de envio ni de recibo
					; Se debe grabar en primera instancia con 002 (MEMO) para evitar el
					; inconveniente. *** MDG
					IF (drv:INDhcomm_rtn == 0 && drv:INDspc_rtn[1] == 0) THEN
						LET hcomm:tran_status = MEMO
					END IF
					CALL post:MISCcap_teclas_rap(siaf:importe)
				END IF	    
			END IF
		END IF
		/*cgw:Verifico si la tx en tecla rapidas de giros tiene generada la AuxIva, de no existir, es porque
		el rt se cayo luego de borrarla antes de generar la PresuDet, por lo que se volvera a generarla.
		*/
		//cgw:Verifico si se genero en PresuDet una transaccion pos venta de giro.
		CALL post:MISCverif_PresuDet_g
		
		CALL post:PRESimpre_fiscal
		CALL post:PCOLimpresion_fiscal
		
		//cgw:recupera valores que estaban quedando vacio y que son de grabacion obligatoria.
		CALL post:MISCrecup_jour_oblig

		/*cgw:en la journalizacion del fin de sesion tlr:INDdcol_scrn[1] quedaba con valor post:SCRNimpre_fiscal
		debido a que drv:screen_active llega con valor 1 a la tlr:JNLtran. Por este motivo se reserva en
		variable local el valor de drv:screen_active, y se le asigna a este valor 0, y luego de la
		journalizacion se repone el valor reservado. Tambien limpia los valores del array drv:INDscreen que
		arrastraba valores, reservando previamente estos valores y luego reponiendola despues de journalizar. 
		*/
		l_screen_active = drv:screen_active
		drv:screen_active = 0
		l_index = 0
		DO
			IF (l_index == 13) THEN
				BREAK
			END IF    
			l_INDscreen[l_index] = drv:INDscreen[l_index]
			l_index = l_index + 1
		LOOP
		CALL csr:cleararray drv:INDscreen

		//Se resguarda el numero de presupuesto por si hubo una caida de teclas rapidas
		PresNro_aux = PresNro
	    
		CALL post:SVALimpre_fiscal
		; PS9478 La journalización se hace ahora desde la post:SVALimpre_fiscal
	        
		/*
		//cgw:journaliza fin de sesion si la ultima transaccion journalizada no es un giro.
		
		IF (siaf:adt_tran_fliatran != "CSM") THEN
			// Muevo a los Campos indirectos
			drv:INDscr = scr:SCRNimpre_fiscal
			tlr:INDdcol_scrn[0] = scr:SCRNimpre_fiscal
			drv:INDhcomm_rtn = 0
			drv:INDspc_rtn[1] = 0
			drv:INDcur_tran = lst:TRANimpre_fiscal
			drv:INDjnl_rtn  = ofb:JNLimpre_fiscal
			drv:INDspc_rtn[0] = 0
			drv:INDspc_rtn[2] = 0
			drv:INDspc_rtn[3] = 0
			drv:INDscreen[drv:screen_active + 1]  = 0
			CALL tlr:JNLtran		
		END IF
		*/
	
		//cgw:repone valores que habian sido reservados antes de journalizar fin de sesion.
		drv:screen_active = l_screen_active
		l_index = 0
		DO
			IF (l_index == 13) THEN
				BREAK
			END IF    
			drv:INDscreen[l_index] = l_INDscreen[l_index]
			l_index = l_index + 1
		LOOP

		PresNro = PresNro_aux
		//tratamiento para caidas de rt en tx multiples de control para teclas rápidas
		IF ((giros:flia_tran_aux == "CSP" || giros:flia_tran_aux == "CSE") && post:piezacont_aux == "T") THEN
			IF (cant_aux_aux != (cont_jnl_aux +1)) THEN
				MSGBOX "Hubo una caída del Sistema. La transacción será reversada automáticamente",0x00,"Aviso"
				post:rechazoDiferido = TRUE
				CALL post:MISCajusteUP
				post:rechazoDiferido = FALSE
			END IF
		END IF

		; PS9478 La CDSadt_presuact_save se la volvió a incorporar en la
		; post:SVALimpre_fiscal, por lo que no tiene sentido volver a ejecutarla
		
		; PS9425 Cuando el sistema se cae después de ejecutarse la 
		; CDSadt_presuact_save dentro de la SVALimpre_fiscal
		; cuando se vuelve a levantar el sistema, se pierde el fin de sesión. 
		; para solventar esto se comentó la línea en la SVAL y se la agregó
		; en esta. *** MDG
		/*
		IF (l_modo == "R") THEN
			CALL CDSadt_presuact_save
		END IF
		*/
    	
		post:Modo = ""
		enSesion = "" /* JLA 23.03.01 - Req-2482:queda sucio el campo y no se setea el tlr:jnl_status */
		CLEARFIELD tlr:INDtran_name
		drv:collect = COLLECTA
		drv:mode_flags = MODEFLAGS
		SWAPDUP drv:INDscreen[drv:screen_active]

		/*
		//tratamiento para caidas de rt en tx multiples de control para teclas rápidas
		IF (giros:flia_tran_aux == "CSP" || giros:flia_tran_aux == "CSE") 
			IF (cant_aux_aux != (cont_jnl_aux +1))
				MSGBOX "Hubo una caída del Sistema. La transacción será reversada automáticamente",0x00,"Aviso"
				post:rechazoDiferido = TRUE
				CALL post:MISCajusteUP
				post:rechazoDiferido = FALSE
			END IF
		END IF
		*/
	END IF

	//Se comenta a partir de la V26 por obtener los datos del Switch
	/*****************************************************************************/
	/*// FGB (11.9.2000) - SAP -
	// Agrego reconexion en caso de que se haya caido la aplicacion y/o salido de
	// la misma, mientras se tenia una sesion de cliente de ctas.ctes.
	IF (cli_tipo == 1) THEN
		IF (post:estado_presu > 1 &&  post:estado_presu < 4 && post:PresNro != 0 ) THEN
			IF (estado_conexion_sap == SAP_ON) then
				CALL sap_logon  // intento reconexion
			END IF
		END IF
	END IF
	// FGB fin*/
	/*****************************************************************************/
	IF (estado_presu != 4) THEN
		IF (cli_tipo == CLIMED) THEN
			CALL CDSes_ConvSesionV
			IF (RETVAL >= 0) THEN
				//es ConvenioSesionV
				CALL post:MISCVerif_TxConf
				IF (RETVAL < 0) THEN
					CALL post:CDSDelete_99300
				END IF
			END IF
			/*IF (ConsumoAnticipo) THEN
				CALL CDSdel_99450
			END IF*/
		END IF
		// FGB 09.05.03: agrego el borrado del registro de intereses por financiacion
		IF ((post:pago_diferido == "S") && (cli_tipo == CLIUP || cli_tipo == CLIMED)) THEN
			IF (consulta_excepcionCM == "S") THEN
				CALL post:MISCchqMultCount
			ELSE
				CALL post:CDSborrarIntPagoDif
			END IF
		END IF
	ELSE
		//tratamiento para caidas de rt en tx multiples de control en sesion
		//Verifico si existe caida y si existen tx sin journalizar.
		//de ser así, termino con las journalizaciones faltantes 
		CALL post:MISCfin_TxCtrol
	END IF

END SUB

/*******/
