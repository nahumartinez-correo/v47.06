/****o* Pago en Destino/OFB:post:MISCupdEstPzaPed
* NOMBRE
*   OFB:post:MISCupdEstPzaPed
* DESCRIPCION
*   Actualiza el estado de la pieza en la tabla stockp o PEDpend segun corresponda
*		Realiza viaje al HOST para actualizar estado
* ENTRADAS
*   p_estado = "NTCR" Nota de Credito PED
*            = "FACT" Refacturacion PED
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:SVALimpre_fiscal
* DOCUMENTACION
*		NI50479
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCupdEstPzaPed(p_estado)
	LOCAL l_pieza LIKE post:track_trace
	LOCAL l_estado LIKE post:stockp_ped_estAct
	LOCAL l_intentos LIKE post:idx

	l_estado = p_estado
	l_pieza = post:pieza_ped
	l_intentos = 0

Inicio:	
;	CDS BEGINWORK
	//Si existe en la stockp,actualiza estado
	CALL post:CDSstockp_upd_estAct(l_estado,l_pieza)
	IF (RETVAL < 0) THEN
		post:Pieza = l_pieza
		//Si existe en la PEDpend,actualiza estado
		CALL post:CDSupd_PEDpend(l_estado)
	END IF
	IF (RETVAL < 0) THEN
		//fallo la actualizacion en la stockp o PEDpend
;		CDS ROLLBACKWORK
		GOTO Fin
	END IF
	CALL post:CDSupd_est_NCped(l_estado)
	IF (RETVAL < 0) THEN
		//fallo actualizacion en NCpedEnOrigen
;		CDS ROLLBACKWORK
		GOTO Fin
	END IF
;	CDS COMMITWORK  
	
  //Tratamiento Carina...Carina!!!
  
  
	RETURN 0
		
Fin:
	//realizo 3 intentos para actualizar las tablas stockp/PEDpend y NCpedEnOrigen
	IF (l_intentos < 3) THEN
		l_intentos = l_intentos + 1
		GOTO Inicio
	END IF
	RETURN -2
	
END SUB

/*******/
