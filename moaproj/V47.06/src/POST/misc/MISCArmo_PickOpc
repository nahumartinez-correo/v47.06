/****o* Pendientes de agrupación/OFB:post:MISCArmo_PickOpc
* NOMBRE
*   OFB:post:MISCArmo_PickOpc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCArmo_PickOpc
	local aux_serv like post:adt_tarif_serv
	local l_valor like post:adt_opcserv_valor
	local varl_picstr like common:csr_string
	CALL csr:f_sadroppl dsc:pic_combo3
	call csr:f_sanewpl dsc:post:pic_combo3, PIC:post:PICcombo3
	if (retval < 0) then
    	errmsg common:errmsg_list,"Error de Ejecucion"
    	return (-2)
	end if

    post:adt_opcserv_serv = adt_promo_serv
	l_valor = post:adt_opcserv_valor
    CDS ENDSELECT DSC:post:adt_opcserv_ctx_pl
    IF (post:adt_opcserv_serv.numchars == 0) THEN
        CDS JOIN FROM DSC:post:adt_opcserv_table as "Opcional" DSC:post:adt_serv_table as "Servicio" \
        BECOMES DSC:post:adt_opcserv_ctx_pl WHERE \
        "Opcional".adt_opcserv_serv == "Servicio".post:adt_serv_serv
    	let siaf:last_key = LASTKEY
    	;CDS MULTIDISPLAY DSC:adt_opcserv_ctx_pl LISTadt_opcserv
    ELSE
        /*CDS JOIN FROM DSC:post:adt_opcserv_table as "Opcional" DSC:post:adt_serv_table as "Servicio" \
        BECOMES DSC:post:adt_opcserv_ctx_pl WHERE \
        "Opcional".post:adt_opcserv_serv == "Servicio".post:adt_serv_serv && \
    	"Opcional".post:adt_opcserv_serv == post:adt_opcserv_serv */
    	
    	CDS SELECT FROM DSC:post:adt_serv_table BECOMES DSC:post:adt_opcserv_ctx_pl WHERE \
    	post:adt_serv_serv == post:adt_opcserv_serv
    	cds findfirst dsc:adt_opcserv_ctx_pl nolock
    	if (CDSRETVAL != -801)
    		CDS ENDSELECT dsc:adt_opcserv_ctx_pl
    		CDS SELECT FROM DSC:post:adt_opcserv_table BECOMES DSC:post:adt_opcserv_ctx_pl WHERE \
    		post:adt_opcserv_serv == post:adt_opcserv_serv
    		cds findfirst dsc:adt_opcserv_ctx_pl nolock
    	else
    		CDS ENDSELECT dsc:adt_opcserv_ctx_pl
    		return -2
    	end if
    	let siaf:last_key = LASTKEY
    	;CDS MULTIDISPLAY DSC:adt_opcserv_ctx_pl LISTadt_opcserv
    END IF


    ;tes:adt_tarif_serv = SELECCION_TODOS_TSERV
    adt_opcserv_opci = SELECCION_TODOS_OPCIONALES

	if (cdsretval == 0) then
		fprint varl_picstr, "%-4.4s" adt_opcserv_opci
		call csr:f_saaddpl dsc:pic_combo3 varl_picstr
	    do
			if (cdsretval < 0) then
				break
			end if
	
			cds extract dsc:adt_opcserv_ctx_pl post:adt_opcserv_opci,post:adt_opcserv_valor,post:adt_opcserv_tipo,post:adt_opcserv_habil
	    	fprint varl_picstr, "%-4.4s %15.15e %-1.1s %-1.1s" post:adt_opcserv_opci,post:adt_opcserv_valor,post:adt_opcserv_tipo,post:adt_opcserv_habil
	
	    	call csr:f_saaddpl dsc:pic_combo3 varl_picstr
		    cds findnext dsc:adt_opcserv_ctx_pl nolock
		loop
		post:adt_opcserv_valor = l_valor
	end if
	cds endselect dsc:adt_opcserv_ctx_pl

END SUB

/*******/
