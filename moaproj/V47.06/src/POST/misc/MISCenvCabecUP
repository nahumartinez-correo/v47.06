/****o* Mensajeria/OFB:post:MISCenvCabecUP
* NOMBRE
*   OFB:post:MISCenvCabecUP
* DESCRIPCION
*   
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:SENDgral_UP
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/
#include "postMISC.h"

SUB post:MISCenvCabecUP

	local l_byte like common:csr_string
	local l_retval like lib:err_retval
	local l_pos like siaf:i
	local l_posAnt like siaf:i
	local l_largo like siaf:i
	local l_cadena like common:csr_string
	local version          like common:csr_string
	local i                like siaf:importe_aux
	local xx	       like common:csr_string
	local num_version      like giros:adt_chk_op
	local l_byte_aux	like  siaf:doc_ptmo // fixed 15.0 (lo uso como entero largo)

	// Longitud de Codigo Correo
	common:csr_string = 0x12
	COMM PUT  common:csr_string msg type BINARY length 1
	// Voy verificando los bits del flag.
	l_pos = 0
	if (TESTFLAG(post:FlagsUP, b002PAN))
		l_byte = substr(strCabecera, l_pos, 3)
		l_pos = l_pos + 3
		COMM PUT l_byte msg type BINARY length 2
		l_byte = 0x0 //esto no tendria que ir afuera del if??
		COMM PUT l_byte msg type BINARY length 4
	endif
	if (TESTFLAG(post:FlagsUP, b003CodProc))
		l_byte = substr(strCabecera, l_pos, 6)
		l_pos = l_pos + 6
		COMM PUT l_byte msg type BCD length 3
	endif
	//Monto del cheque
	if (TESTFLAG(post:FlagsUP, b004montoChk))
		l_byte = substr(strCabecera, l_pos, 12)
		//FPRINT l_byte,"%012.12d",l_byte
		l_pos = l_pos + 12
		COMM PUT  l_byte msg type BCD length 6
	end if
	//Saldo disponible
	if (TESTFLAG(post:FlagsUP, b006saldoDisp))
		l_byte = substr(strCabecera, l_pos, 12)
		FPRINT l_byte,"%012.12d",l_byte
		l_pos = l_pos + 12
		COMM PUT  l_byte msg type BCD length 6
	end if	
	
	if (TESTFLAG(post:FlagsUP, b007FechaHora))
		l_byte = substr(strCabecera, l_pos, 10)
		l_pos = l_pos + 10
		COMM PUT l_byte msg type BCD length 5
	endif
	if (TESTFLAG(post:FlagsUP, b011STAN))
		//Call post:CDSobtiene_secuen("STAN")
		l_byte = substr(strCabecera, l_pos, 6)
		l_pos = l_pos + 6
		COMM PUT post:adt_codseq_nro msg type BCD length 3
	endif
	if (TESTFLAG(post:FlagsUP, b012LocalTime))
		l_byte = substr(strCabecera, l_pos, 6)
		l_pos = l_pos + 6
		COMM PUT  l_byte msg type BCD  length 3
	end if
	if (TESTFLAG(post:FlagsUP, b013LocalDate))
		l_byte = substr(strCabecera, l_pos, 4)
		l_pos = l_pos + 4		
		COMM PUT l_byte msg type BCD length 2
	end if	
	//% de Interes
	if (TESTFLAG(post:FlagsUP, b015interes))
      l_byte = SUBSTR(strCabecera,l_pos,12)
      FPRINT l_byte,"%012.12d",l_byte
      l_pos = l_pos + 12
      COMM  PUT l_byte TO MSG TYPE '2' LENGTH 6	
	end if

	if (TESTFLAG(post:FlagsUP, b024Adquiriente))
		l_byte = 3
		FPRINT l_byte,"%04.4d",l_byte
		COMM PUT l_byte msg type BCD length 2
	end if	
	
	//Provincia de sucursal
	if (TESTFLAG(post:FlagsUP, b025prov))
		l_byte = substr(strCabecera, l_pos, 1)
		l_pos = l_pos + 1
		COMM PUT l_byte msg type ASCII length 1 justleft fill ' '
	end if
	//Identificador de Excepcion
	if (TESTFLAG(post:FlagsUP, b026excepcion))
		l_byte = substr(strCabecera, l_pos, 10)
		FPRINT l_byte,"%010.10d",l_byte
		l_pos = l_pos + 10
		COMM PUT  l_byte msg type BCD length 5
	end if
	// % de IVA sobre el interes
	if (TESTFLAG(post:FlagsUP, b027ivaInteres))
		//l_byte = substr(strCabecera, l_pos, 4)
		l_byte = substr(strCabecera, l_pos, 12)
		FPRINT l_byte,"%012.12d",l_byte
      	l_pos = l_pos + 12
      	COMM  PUT l_byte TO MSG TYPE '2' LENGTH 6	
	end if
	//Nis que recibe un cheque rechazado
	if (TESTFLAG(post:FlagsUP, b028NISchkRech))
		l_byte = substr(strCabecera, l_pos, 5)
		l_pos = l_pos + 5
		COMM PUT l_byte msg type ASCII length 5 justleft fill ' '
	end if												
	
	
	if (TESTFLAG(post:FlagsUP, b029MarcaConsulta))
		l_byte = substr(strCabecera, l_pos, 1)
		l_pos = l_pos + 1
		COMM PUT l_byte msg type ASCII length 1 justleft fill ' '
	end if	
	
	if (TESTFLAG(post:FlagsUP, b031Cliente))
		l_byte = substr(strCabecera, l_pos, 12)
		l_pos = l_pos + 12
		COMM PUT l_byte msg type ASCII length 12 justleft fill ' '
	endif
	if (TESTFLAG(post:FlagsUP, b041Terminal))
		//Si es rt_batch usar siaf:jnl_window_node
		COMM PUT common:window_node msg type ASCII length 8 justleft fill ' '
	endif

	if (TESTFLAG(post:FlagsUP,b044CodAdicional))
		l_byte = substr(strCabecera, l_pos, 2)
		call dec_2_hex(l_byte,l_byte_aux)
		l_pos = l_pos + 2
		COMM PUT l_byte_aux msg type BINARY length 1 
	endif

	if (TESTFLAG(post:FlagsUP, b060NombreTerm))
		; agregar la version 4 byte ver pie en giros.
		fprint  version,"%s",DSC:lib:VersionCorreo
		while (i < version.NUMCHARS)
			xx = SUBSTR(version,i,1)
			if (xx >= "0" && xx <= "9") then
				fprint num_version,"%s%s",num_version,SUBSTR(version,i,1)
			endif
			i = i + 1
		end while
		COMM PUT "24" TO msg type BCD LENGTH 2
		fprint common:csr_string "%20.20s%4.4s", common:window_node, num_version
		COMM PUT common:window_node msg type ASCII length 20 justleft fill ' '
		COMM PUT num_version msg type ASCII length 4 justright fill '0'
	endif
	; la forma de mandar el 105, 106 y 107 es la siguiente:
	; antes de mandar cada uno de los campos hay que mandar en BCD
	; 2 bytes de longitud.
	; ademas solamente en el 105 hay que mandar COMO PARTE DEL DATO
	; 3 bytes en ascii de la CANTIDAD de registros que envio en los
	; tres campos.
    
	if (TESTFLAG(post:FlagsUP, b001Secondary))
		if (TESTFLAG(post:FlagsUP, b105DatosRepet))
		    giros:Longitud = BulkFld_105.NUMCHARS + 3  //obtengo longitud total
		    COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			COMM PUT cantRegBulk TO msg type ASCII LENGTH 3 justright fill '0'
			CALL SENDmandaBulk(BulkFld_105)
			CLEARFIELD BulkFld_105
		endif
		if (TESTFLAG(post:FlagsUP, b106DatosRepet))
            giros:Longitud = BulkFld_106.NUMCHARS           //obtengo longitud total
            COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			CALL SENDmandaBulk(BulkFld_106)
			CLEARFIELD BulkFld_106
		endif
		if (TESTFLAG(post:FlagsUP, b107DatosRepet))
            giros:Longitud = BulkFld_107.NUMCHARS           //obtengo longitud total
            COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			CALL SENDmandaBulk(BulkFld_107)
			CLEARFIELD BulkFld_107
		endif
		if (TESTFLAG(post:FlagsUP, b117Firma))
			l_byte = substr(strCabecera, l_pos, 32)
			giros:Longitud = l_byte.NUMCHARS //obtengo longitud total
			l_pos = l_pos + giros:Longitud      //32
			COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			COMM PUT l_byte msg type ASCII length 32				
		endif
		
		//Datos grales del cheque
		if (TESTFLAG(post:FlagsUP, b118datosChk))
			l_byte = substr(strCabecera, l_pos, 52)
			giros:Longitud = l_byte.NUMCHARS           //obtengo longitud total
            COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			l_pos = l_pos + giros:Longitud 
			COMM PUT l_byte msg type ASCII length 52
		end if
		//Datos del nuevo cheque
		if (TESTFLAG(post:FlagsUP, b119datosChkNuevo))
			l_byte = substr(strCabecera, l_pos, 73)
			giros:Longitud = l_byte.NUMCHARS           //obtengo longitud total
            COMM PUT giros:Longitud TO MSG TYPE BCD LENGTH 2
			l_pos = l_pos + giros:Longitud 
			COMM PUT l_byte msg type ASCII length 73
		end if
	endif
END SUB




/*******/
