/****o* Pago en Destino/OFB:post:MISCvalReg2PED
* NOMBRE
*   OFB:post:MISCvalReg2PED
* DESCRIPCION
*   Validacion de los datos del servicio ped del archivo a Importar
* ENTRADAS
*   P_registro_1 = Datos del servicio 
* SALIDAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*		post:MISCvalRegPED
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCvalReg2PED(P_registro_1)
	LOCAL l_registro_1 LIKE common:csr_string_4096
	LOCAL l_adt_serv_serv LIKE post:adt_serv_serv
	LOCAL l_adt_serv_tt LIKE post:adt_serv_tt
	LOCAL l_track_trace LIKE post:track_trace
	LOCAL l_tipo_caja LIKE post:tipo_caja
	LOCAL l_destino LIKE post:destino	
	LOCAL l_peso_en_kgs LIKE common:csr_string
	LOCAL l_peso_en_grs LIKE common:csr_string
	LOCAL l_aforo1 LIKE post:aforo1
	LOCAL l_aforo2 LIKE post:aforo2
	LOCAL l_aforo3 LIKE post:aforo3
	LOCAL l_vec_opc LIKE common:csr_string
	LOCAL l_CodSucBenef_fld LIKE giros:CodSucBenef_fld 

	LET l_registro_1 = P_registro_1

	/*********************************************************************************/
	/*Segundo Registro a "N" Registros (Datos del Servicio) - Longitud 170 caracteres*/
	/*********************************************************************************/

	//Inicio - Validacion Servicio
	LET l_adt_serv_serv = SUBSTR(l_registro_1,0,10)       //ASCII 10 
	LET l_adt_serv_tt = SUBSTR(l_registro_1,10,1)         //ASCII 1
	
	CALL post:MISCvalidaServPED(l_adt_serv_serv,l_adt_serv_tt)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF
	//Fin - Validacion Servicio
	
	//Inicio - Validacion Track and Trace
	LET l_track_trace = SUBSTR(l_registro_1,11,13)        //ASCII 13
	
	CALL MISCvalidaTTPED(l_track_trace)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	//Fin - Validacion Track and Trace
	
	//Inicio - Validacion Tipo de Caja
	LET l_tipo_caja = SUBSTR(l_registro_1,24,18)          //ASCII 18
	
	CALL post:MISCvalidaTCajaPED(l_tipo_caja)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	//Fin - Validacion Tipo de Caja
	
	//Inicio - Validacion Destino
	LET l_destino = SUBSTR(l_registro_1,42,18)				     //ASCII 18
	
	CALL post:MISCvalidaDestPED(l_destino)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF		
	//Fin - Validacion Destino
	
	//Inicio - Validacion Peso
	LET l_peso_en_kgs = SUBSTR(l_registro_1,60,9) 		     //FIXED 8.3
	LET l_peso_en_grs = SUBSTR(l_registro_1,69,9)         //NUMERIC 9
	
	CALL post:MISCvalidaPesoPED(l_peso_en_kgs,l_peso_en_grs)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	//Fin - Validacion Peso

	//Inicio - Validacion Aforo/Peso Volumetrico
	LET l_aforo1 = SUBSTR(l_registro_1,78,3) 				     //NUMERIC 3
	LET l_aforo2 = SUBSTR(l_registro_1,81,3) 				     //NUMERIC 3
	LET l_aforo3 = SUBSTR(l_registro_1,84,3) 				     //NUMERIC 3
	
	CALL post:MISCvalidaRelVolPED(l_aforo1,l_aforo2,l_aforo3)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	//Fin - Validacion Aforo/Peso Volumetrico
	
	//Inicio - Validacion Opcionales
	LET post:cod_opc[0] = SUBSTR(l_registro_1,87,4)       //ASCII 4  
	CALL post:MISCFtrim(post:cod_opc[0])
	LET l_vec_opc = SUBSTR(l_registro_1,91,9)             //FIXED 8.2 
	CALL post:MISCvalidaImpOpcPED(l_vec_opc,0)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
  	
	LET post:cod_opc[1] = SUBSTR(l_registro_1,100,4)      //ASCII 4  
	CALL post:MISCFtrim(post:cod_opc[1])
	LET l_vec_opc = SUBSTR(l_registro_1,104,9)            //FIXED 8.2  

	CALL post:MISCvalidaImpOpcPED(l_vec_opc,1)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF
	
	LET post:vec_opc2[2] = SUBSTR(l_registro_1,113,4)     //ASCII 4
	CALL post:MISCFtrim(post:cod_opc[2])
	LET l_vec_opc = SUBSTR(l_registro_1,117,9)            //FIXED 8.2   
	CALL post:MISCvalidaImpOpcPED(l_vec_opc,2)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF
	
	LET post:cod_opc[3] = SUBSTR(l_registro_1,126,4)      //ASCII 4 
	CALL post:MISCFtrim(post:cod_opc[3])
	LET l_vec_opc = SUBSTR(l_registro_1,130,9)            //FIXED 8.2   
	CALL post:MISCvalidaImpOpcPED(l_vec_opc,3)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF
			
	LET post:cod_opc[4] = SUBSTR(l_registro_1,139,4)      //ASCII 4 
	CALL post:MISCFtrim(post:cod_opc[4])
	LET l_vec_opc = SUBSTR(l_registro_1,143,9)            //FIXED 8.2       
	CALL post:MISCvalidaImpOpcPED(l_vec_opc,4)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	
	LET post:cod_opc[5] = SUBSTR(l_registro_1,152,4)      //ASCII 4  
	CALL post:MISCFtrim(post:cod_opc[5])
	LET l_vec_opc = SUBSTR(l_registro_1,156,9)            //FIXED 8.2       
	CALL post:MISCvalidaImpOpcPED(l_vec_opc,5)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF		

	CALL post:MISCvalidaOpcPED
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF	
	//Fin - Validacion Opcionales
	
	//Inicio - Validacion Sucursal Recibe PED
	LET l_CodSucBenef_fld = SUBSTR(l_registro_1,165,5)   //ASCII 5
	
	CALL post:MISCvalidaSucDestPED(l_CodSucBenef_fld)
	IF (RETVAL < 0) THEN
  	RETURN -2
  END IF		
	//Fin - Validacion Sucursal Recibe PED

	RETURN 0
END SUB

/*******/
