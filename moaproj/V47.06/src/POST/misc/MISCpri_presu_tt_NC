/****o* Anulación de Documentos/OFB:post:MISCpri_presu_tt_NC
* NOMBRE
*   OFB:post:MISCpri_presu_tt_NC
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCpri_presu_tt_NC
	local idx like siaf:i
	local l_siva like post:ImporteSinIva
	local l_iva like post:ImporteIva
	local l_siva_bis like post:ImporteSinIva_bis
	local l_iva_bis like post:ImporteIva_bis
	
	
	//SC 50170 resguardo campos
	l_siva = post:ImporteSinIva
	l_iva = post:ImporteIva
	l_siva_bis = post:ImporteSinIva_bis
	l_iva_bis = post:ImporteIva_bis
	
	/*Actualizo datos de la PresuDet por primera vez cuando es una transaccion que
	graba track_trace - Gabriel Falciola*/

	/*Saco de la NcTable los datos de la transaccion que necesito ir acumulando*/
	if (enSesion != "S" && estAnul == "D1_")
		cds findagain dsc:NC_CON nolock
		CDS EXTRACT dsc:NC_CON \
   		siaf:importe tarifa costo_opc imp_bloques cos_opc[0] \
   		cos_opc[1] cos_opc[2] cos_opc[3] cos_opc[4] \
   		cos_opc[5]  descuento fld_promo_imp \
		promo_imp_srv_tot promo_imp_blq_tot promo_imp_tot_opc promo_tot_Serv \
		promo_imp_opc_tot[0] promo_imp_opc_tot[1] promo_imp_opc_tot[2] \
		promo_imp_opc_tot[3] promo_imp_opc_tot[4] promo_imp_opc_tot[5] \
		ali_opc[0] ali_opc[1] ali_opc[2] ali_opc[3] ali_opc[4] ali_opc[5] \
		adt_serv_aliciva
		//SC 50170
		/*siniva_opc[0] siniva_opc[1] siniva_opc[2] \
		siniva_opc[3] siniva_opc[4] siniva_opc[5] \
		dif_opc[0] dif_opc[1] dif_opc[2] \
		dif_opc[3] dif_opc[4] dif_opc[5] */
		idx = 0
		do
			if (idx == 6)
				break
			end if	
			call post:MISCdesglosaIva(cos_opc[idx],ali_opc[idx],1,0)
			siniva_opc[idx] = post:ImporteSinIva
			siniva_opc4[idx] = post:ImporteSinIva_bis
			idx = idx + 1
		loop
		//desgloso el iva para bloques adicionales
		call post:MISCdesglosaIva(imp_bloques,adt_serv_aliciva,1,0)
		imp_bloques_siva = post:ImporteSinIva
		imp_bloques_siva4 = post:ImporteSinIva_bis
		/*fin sc 50170*/
	else
		cds findagain dsc:post:Jounarl_anul_Ctx nolock
		CDS EXTRACT dsc:post:Jounarl_anul_Ctx \
   		siaf:importe tarifa costo_opc imp_bloques cos_opc[0] \
   		cos_opc[1] cos_opc[2] cos_opc[3] cos_opc[4] \
   		cos_opc[5] siniva_opc[0] siniva_opc[1] siniva_opc[2] \
		siniva_opc[3] siniva_opc[4] siniva_opc[5] descuento fld_promo_imp \
		promo_imp_srv_tot promo_imp_blq_tot promo_imp_tot_opc promo_tot_Serv \
		promo_imp_opc_tot[0] promo_imp_opc_tot[1] promo_imp_opc_tot[2]\
		promo_imp_opc_tot[3] promo_imp_opc_tot[4] promo_imp_opc_tot[5] 

	end if

	cds findagain dsc:PRESU_DES_CON lock
	/*Borro del contexto los campos correspondientes para luego grabarlos
	con el nuevo valor*/
	Call csr:delete_field(dsc:PRESU_DES_CON, "siaf", "importe", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "tarifa", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "costo_opc", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "imp_bloques", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "cantidad", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "descuento", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "fld_promo_imp", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "promo_imp_srv_tot", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "promo_imp_blq_tot", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "promo_tot_Serv", 1)
	Call csr:delete_field(dsc:PRESU_DES_CON, "post", "promo_imp_tot_opc", 1)
	//SC 50170
	if (enSesion != "S" && estAnul == "D1_")
		if (post:jnl_flia_tran == "CST") then
			Call csr:delete_field(dsc:PRESU_DES_CON, "post", "imp_bloques_siva", 1)
			Call csr:delete_field(dsc:PRESU_DES_CON, "post", "imp_bloques_siva4", 1)
		endif
	endif
	idx = 0
	do
		if (idx == 6)
			break
		end if
		Call csr:delete_field(dsc:PRESU_DES_CON, "post", "cos_opc", 1)
		Call csr:delete_field(dsc:PRESU_DES_CON, "post", "siniva_opc", 1)
		Call csr:delete_field(dsc:PRESU_DES_CON, "post", "promo_imp_opc_tot", 1)
		//SC 50170
		if (enSesion != "S" && estAnul == "D1_")
			Call csr:delete_field(dsc:PRESU_DES_CON, "post", "siniva_opc4", 1)
		endif
		idx = idx + 1
	loop

	/*Hago el append necesario*/
//	siaf:importe = tarifa + costo_opc + imp_bloques - descuento - fld_promo_imp
	siaf:importe = tarifa + costo_opc + imp_bloques - descuento
	cantidad = 1
   	cds append dsc:PRESU_DES_CON \
  	siaf:importe tarifa costo_opc imp_bloques cantidad descuento fld_promo_imp \
  	promo_imp_srv_tot promo_imp_blq_tot promo_imp_tot_opc promo_tot_Serv \
   	cos_opc[0] cos_opc[1] cos_opc[2] cos_opc[3] \
   	cos_opc[4] cos_opc[5] siniva_opc[0] siniva_opc[1] \
	siniva_opc[2] siniva_opc[3] siniva_opc[4] siniva_opc[5] \
	promo_imp_opc_tot[0] promo_imp_opc_tot[1] promo_imp_opc_tot[2] \
	promo_imp_opc_tot[3] promo_imp_opc_tot[4] promo_imp_opc_tot[5] 
	
	//SC 50170
	if (enSesion != "S" && estAnul == "D1_")
		cds append dsc:PRESU_DES_CON \
		siniva_opc4[0] siniva_opc4[1] siniva_opc4[2] siniva_opc4[3] \
		siniva_opc4[4] siniva_opc4[5]
		if (post:jnl_flia_tran == "CST") then
			cds append dsc:PRESU_DES_CON \
			imp_bloques_siva imp_bloques_siva4
		endif
	endif
	
	//SC 50170 restauro campos
	post:ImporteSinIva = l_siva
	post:ImporteIva = l_iva 
	post:ImporteSinIva_bis = l_siva_bis
	post:ImporteIva_bis = l_iva_bis

END SUB

/*******/
