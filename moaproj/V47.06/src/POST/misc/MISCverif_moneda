/****o* Pendientes de agrupación/OFB:post:MISCverif_moneda
* NOMBRE
*   OFB:post:MISCverif_moneda
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCverif_moneda
/*	Esta rutina no se usa más - Gabriel Falciola
	LOCAL provincia LIKE admin:adt_br_siaf
	provincia = SUBSTR(common:sucursal_activa,0,1)*/
	/*Busco el primer registro en la tabla de motivos por template*/
	/*CALL CDSselect_tmpl_mot(post:template)
	WHILE (lib:err_retval != -801)
		CDS EXTRACT DSC:tmpl_mot_ctx ALL*/
		/*Selecciono la tabla de medios de pago para ver si todos los motivos del template
		admiten el medio de pago elegido. Esto se hace porque en el multidisplay
		aparecen todas las monedas posibles, tanto para ingresos como para egresos
		 independientemente de que para uno sea permitido y para el otro no*/
		/*CDS SELECT FROM MEDIOS_TAB BECOMES MEDIOS_CTX \
			WHERE MedPProv == provincia && \
					MedPTran == adt_tmpl_motsubmod && \
					MedPMon == siaf:moneda
		CDS FINDFIRST MEDIOS_CTX NOLOCK
		IF (CDSRETVAL == -801)*/
			/* 1/2  pago inexistente*/
			/*CDS ENDSELECT MEDIOS_CTX
			INIT 33,0
			RETURN (-2)
		END IF*/
		/*Selecciono la tabla de monedas por motivo para ver si todos los motivos del
		template admiten la moneda elegida*/
		/*CDS SELECT FROM Motmone_tbl BECOMES Motmone_ctx \
			WHERE adt_motmo_prov == provincia && \
					adt_motmo_motivo == adt_tmpl_motivo && \
					adt_motmo_modulo == adt_tmpl_motmod && \
					adt_motmo_submodulo == adt_tmpl_motsubmod && \
					adt_motmo_moneda == siaf:moneda
		CDS FINDFIRST Motmone_ctx NOLOCK
		IF (CDSRETVAL == -801)*/
			/* 1/2  pago inexistente*/
			/*CDS ENDSELECT Motmone_ctx
			INIT 33,0
			RETURN (-2)
		END IF
		CDS FINDNEXT tmpl_mot_ctx NOLOCK
		LET lib:err_retval = CDSRETVAL
	END WHILE
	CDS ENDSELECT MEDIOS_CTX
	CDS ENDSELECT Motmone_ctx
	CDS ENDSELECT tmpl_mot_ctx
	INIT 33,0*/
END SUB

/*******/
