/****o* Pendientes de agrupación/OFB:post:MISCclimed_id_excep
* NOMBRE
*   OFB:post:MISCclimed_id_excep
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCclimed_id_excep(datos,long)

local posicion         like post:cantidad
local longitud         like post:Longitud_105
local loc_retval       like lib:err_retval
local varl_descuento   like common:csr_string
local varl_distorsion  like common:csr_string
local varl_importe     like common:csr_string
local varl_imp_parcial like common:csr_string
local varl_desde       like common:csr_string

fprint longitud,"%s",long
posicion = 0
loc_retval = -2

select (post:excepCM_tipo)

	case EXCEP_PRODUCTO
	case EXCEP_PRODDIF
		post:ExcepProducto = TRUE
		if (post:excepCM_tipo == EXCEP_PRODDIF )
			post:ExcepDif = TRUE
		end if
		while ( posicion < longitud )

			post:excep_prd_codprod = substr(datos,posicion,5)
			posicion = posicion + 5
	
			post:excep_prd_desprod = substr(datos,posicion,30)
			posicion = posicion + 30

			post:excep_prd_cant_hasta = substr(datos,posicion,6)
			posicion = posicion + 6

			post:excep_prd_distorsion = substr(datos,posicion,6)
			posicion = posicion + 6

			varl_descuento = substr(datos,posicion,5)
			posicion = posicion + 5
			post:excep_prd_descuento = ( varl_descuento / 100 )

			post:excep_prd_opcional = substr(datos,posicion,4)
			posicion = posicion + 4
			
			if (post:excep_prd_opcional.numchars != 0 && post:excep_prd_opcional != "9999")

				;Si tiene Opcionales se desglosan los valores	
				;y se van grabando en la tabla de excepciones opcionales*/

				call post:CDSgrabarExcepProdOp
				if (retval < 0 )
					loc_retval = -2
					break
				else
					loc_retval = 0
				end if

			end if
			
			fprint climed_ult_item,"%09.9s%05.5s%06.6s",\
			post:excepCM_id,post:excep_prd_codprod,post:excep_prd_cant_hasta

			call post:CDSgrabar_excep_prod
			if ( retval < 0 )
				loc_retval = -2
				break
			else
				loc_retval = 0
			end if

		end while
	   	break

	case EXCEP_SESION
	case EXCEP_SESDIF
		post:ExcepSesion = TRUE
		if (post:excepCM_tipo == EXCEP_SESDIF)
			post:ExcepDif = TRUE
		end if
		while ( posicion < longitud )

			varl_importe = substr(datos,posicion,12)
			posicion = posicion + 12
			if ( varl_importe == "000000000000")
				post:excep_vta_hasta = 0.00
			else
				post:excep_vta_hasta = (varl_importe / 100 )
			end if

			varl_descuento  = substr(datos,posicion,5)
			posicion = posicion + 5
			post:excep_vta_descuento =  ( varl_descuento / 100 )

			varl_distorsion = substr(datos,posicion,12)
			posicion = posicion + 12
			if ( varl_importe == "000000000000")
				post:excep_vta_distorsion = 0.00
			else
				post:excep_vta_distorsion = ( varl_distorsion / 100 )
			end if
			
			call post:CDSgrabar_excep_vtas
			if ( retval < 0 )
				loc_retval = -2
				break
			else
				loc_retval = 0
			end if
			varl_importe = post:excep_vta_hasta * 100 
			fprint climed_ult_item,"%09.9s%012.12s",post:excepCM_id,varl_importe

		end while
		break
end select
	
return loc_retval

END SUB

/*******/
