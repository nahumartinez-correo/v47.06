/****o* Pago en destino/OFB:post:MISCobt_comp_detalle
* NOMBRE
*   OFB:post:MISCobt_comp_detalle
* DESCRIPCION
*   obtiene los datos del detalle de comprobante ped que vienen del host
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCcons_comp
* DOCUMENTACION
*   
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCobt_comp_detalle(datos,long)

	/****************************************************************/
	/* OBTENER LAS PIEZAS PED PENDIENTES DE LA SUCURSAL		    	    */
	/* BITS : 105,106,107 							                */
	/****************************************************************/

	local posicion          like post:cantidad
	local longitud          like post:Longitud_105
	local loc_retval        like lib:err_retval
	local l_importe 		like common:csr_string
	local l_peso 			like common:csr_string
	local l_dcto 			like common:csr_string
	local l_alicuota		like common:csr_string
	local l_nro				like common:csr_string
	local l_ali_opc			like common:csr_string
	local l_codigo			like common:csr_string
	local l_item_aforo like common:csr_string
		
	fprint longitud,"%s",long
	posicion = 0
	loc_retval = -2
	
	while ( posicion < longitud )
		
		//este dato no se usa para nada
		l_nro = substr(datos,posicion,8)
		posicion = posicion + 8
		
		post:id_pieza_ped = substr(datos,posicion,8)
		posicion = posicion + 8		
		
		l_importe = substr(datos,posicion,12)
		if (l_importe == "000000000000")
			post:item_importe = 0.00
		else
			post:item_importe = (l_importe / 100 )
		end if
		posicion = posicion + 12		
		
		//post:item_codigo_trx = substr(datos,posicion,10)
		l_codigo = substr(datos,posicion,10)
		post:item_codigo_trx = l_codigo * 1
		posicion = posicion + 10
		
		post:item_destino = substr(datos,posicion,20)
		posicion = posicion + 20
		
		//post:item_aforo1 = substr(datos,posicion,3)
		l_item_aforo = substr(datos,posicion,3)
		post:item_aforo1 = l_item_aforo * 1
		posicion = posicion + 3
		
		//post:item_aforo2 = substr(datos,posicion,3)
		l_item_aforo = substr(datos,posicion,3)
		post:item_aforo2 = l_item_aforo * 1
		posicion = posicion + 3
		
		//post:item_aforo3 = substr(datos,posicion,3)
		l_item_aforo = substr(datos,posicion,3)
		post:item_aforo3 = l_item_aforo * 1
		posicion = posicion + 3
	
		l_peso = substr(datos,posicion,8)
		post:item_peso_grs = l_peso / 1000
		posicion = posicion + 8

		l_peso = substr(datos,posicion,8)
		post:item_peso_kgs = l_peso / 1000
		posicion = posicion + 8

		l_peso = substr(datos,posicion,8)
		post:item_rel_vol = l_peso / 1000
		posicion = posicion + 8

		item_tipo_caja = substr(datos,posicion,18)
		call csr:trimfield(item_tipo_caja)
		posicion = posicion + 18
		
		item_prodvarios = substr(datos,posicion,10)
		item_prodvarios = item_prodvarios * 1
		if (item_prodvarios == 0) then
			clearfield item_prodvarios
		end if
		posicion = posicion + 10
		
		post:item_especie = substr(datos,posicion,20)
		posicion = posicion + 20

		post:item_subespecie = substr(datos,posicion,20)
		posicion = posicion + 20
		
		l_dcto = substr(datos,posicion,8)
		post:item_dcto = l_dcto / 100
		posicion = posicion + 8

		//se hace esta GRONCHADA porque definieron mal el campo en el centralizado.
		//En lugar de definirlo de 6 posiciones lo definieron de 8 grrrrrrrrrrrrrrrr!!!!!!!!!!
		//posicion = posicion + 2
		item_cantidad = substr(datos,posicion,8)
		posicion = posicion + 8

		l_alicuota = substr(datos,posicion,8)
		post:item_alicuota = l_alicuota / 100
		posicion = posicion + 8
		
		l_codigo = substr(datos,posicion,8)
		item_cant_caja_prev = l_codigo * 1
		posicion = posicion + 8
		
		idx = 0
		WHILE (idx < 5)
		
			item_opc_opci[idx] = substr(datos,posicion,4)
			posicion = posicion + 4
			
			l_importe = substr(datos,posicion,12)
			if (l_importe == "000000000000")
				post:item_opc_importe[idx] = 0.00
			else
				post:item_opc_importe[idx] = (l_importe / 100 )
			end if
			posicion = posicion + 12	
			
			l_ali_opc = substr(datos,posicion,8)
			if (l_ali_opc == "00000000")
				post:item_ali_opc[idx] = 0.00
			else
				post:item_ali_opc[idx] = (l_ali_opc / 100 )
			end if
			posicion = posicion + 8
			
			idx = idx + 1
		
		END WHILE

		CALL post:CDSDetNCpedEnOrigen
		if ( retval < 0 )
			loc_retval = -2
			break
		else
			loc_retval = 0
		end if
		
	end while
	
	
	return loc_retval

END SUB

/*******/
