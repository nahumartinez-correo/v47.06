/****o* Pendientes de agrupación/OFB:post:MISCSeteoTablasIND
* NOMBRE
*   OFB:post:MISCSeteoTablasIND
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCSeteoTablasIND(tabla)
	LOCAL l_INDcur_list LIKE drv:INDcur_list
	
	SELECT (tabla)
	case "CatIngBr"
		let tlr:INDdcol_scrn[0] = SCR:SCRNCatIngBr
		let FLD:tlr:INDjnl_append = OFB:JNLABMCatIngBr
		let FLD:drv:INDjnl_rtn = OFB:JNLABMCatIngBr
		let post:INDCamposTablas = LST:LISTScrCatIngBr
		let post:INDBackupTablas = LST:LISTbck_CatIngBr
		break
	case "TasCatIB"
		let tlr:INDdcol_scrn[0] = SCR:SCRNTasCatIB
		let FLD:tlr:INDjnl_append = OFB:post:JNLABMTasCatIB
		let FLD:drv:INDjnl_rtn = OFB:post:JNLABMTasCatIB
		let post:INDCamposTablas = LST:LISTScrTasCatIB
		let post:INDBackupTablas = LST:LISTbck_TasCatIB
		break
	case "grupoiva"
		let tlr:INDdcol_scrn[0] = SCR:SCRNgrucativa
		let FLD:tlr:INDjnl_append = OFB:JNLabm_grupoiva
		let FLD:drv:INDjnl_rtn = OFB:JNLabm_grupoiva
		let post:INDCamposTablas = LST:LISTScrgrupoiva
		let post:INDBackupTablas = LST:LISTbck_grupoiva
		break
	CASE "clearing"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNclearing
    	let FLD:tlr:INDjnl_append = OFB:tes:JNLAoMclearing
  		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoMclearing
   		let post:INDCamposTablas = LST:tes:LISTScrclearing
   		let post:INDBackupTablas = LST:tes:LISTbck_clearing
    	BREAK
	CASE "Procedencias"
		let tlr:INDdcol_scrn[0] = SCR:SCRNproc
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_proc
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_proc
		let post:INDCamposTablas = LST:LISTScrproc
		let post:INDBackupTablas = LST:LISTbck_proc_flds
		BREAK
	CASE "CtasBanco"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNctasbanco
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoMctasbanco
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoMctasbanco
		let post:INDCamposTablas = LST:tes:LISTScrctasbanco
		let post:INDBackupTablas = LST:tes:LISTbck_ctasbanco
		break
	CASE "TipoCta"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNtcta
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoMtcta
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoMtcta
		let post:INDCamposTablas = LST:tes:LISTScrtcta
		let post:INDBackupTablas = LST:tes:LISTbck_tcta
		break
	CASE "ProdTipo"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNtipo
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoMtipo
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoMtipo
		let post:INDCamposTablas = LST:tes:LISTScrtipo
		let post:INDBackupTablas = LST:tes:LISTbck_tipo
		break
	CASE "pla_gua"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNplazo
    	let FLD:tlr:INDjnl_append = OFB:post:JNLplazo
		let FLD:drv:INDjnl_rtn = OFB:post:JNLplazo
    	let post:INDCamposTablas = LST:post:LISTScrplazo
    	let post:INDBackupTablas = LST:post:LISTbck_plazo
    	BREAK
	case "cai"
		//gpb:NI50488
		l_INDcur_list = LST:admin:TRAN_cai_masivo
		if (l_INDcur_list == drv:INDcur_list) then
			let tlr:INDdcol_scrn[0] = SCR:admin:SCRNcai_masivo
			let FLD:tlr:INDjnl_append = OFB:admin:JNLABMCai_masivo
			let FLD:drv:INDjnl_rtn = OFB:admin:JNLABMCai_masivo
			let post:INDCamposTablas = LST:admin:LISTScrcai_masivo
			let post:INDBackupTablas = LST:admin:LISTbck_cai_masivo
		else
			let tlr:INDdcol_scrn[0] = SCR:admin:SCRNcai
			let FLD:tlr:INDjnl_append = OFB:admin:JNLABMCai
			let FLD:drv:INDjnl_rtn = OFB:admin:JNLABMCai
			let post:INDCamposTablas = LST:admin:LISTScrcai
			let post:INDBackupTablas = LST:admin:LISTbck_cai	
		end if
		break
	case "AutoSec"
		let tlr:INDdcol_scrn[0] = SCR:SCRNsecuen
		let FLD:tlr:INDjnl_append = OFB:post:JNLABMAutoSec
		let FLD:drv:INDjnl_rtn = OFB:post:JNLABMAutoSec
		let post:INDCamposTablas = LST:post:LISTScrAutoSec
		let post:INDBackupTablas = LST:post:LISTbck_AutoSec
		break
	case "LeyImp"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNLeyImp
		let FLD:tlr:INDjnl_append = OFB:post:JNLABMLeyImp
		let FLD:drv:INDjnl_rtn = OFB:post:JNLABMLeyImp
		let post:INDCamposTablas = LST:post:LISTScrLeyImp
		let post:INDBackupTablas = LST:post:LISTbck_LeyImp
		break
	case "ivaTipoDoc"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNivaTipoDoc
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ivaTipoDoc
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ivaTipoDoc
		let post:INDCamposTablas = LST:post:LISTivaTipoDoc_flds
		let post:INDBackupTablas = LST:post:LISTivaTipoDoc_bck
		break
	case "Impuprov"
		let tlr:INDdcol_scrn[0] = SCR:giros:SCRNabm_impuprov
		let FLD:tlr:INDjnl_append = OFB:giros:JNLAoM_ImpuProv
		let FLD:drv:INDjnl_rtn = OFB:giros:JNLAoM_ImpuProv
		let post:INDCamposTablas = LST:giros:LISTScrImpuProv
		let post:INDBackupTablas = LST:giros:LISTbck_ImpuProv
		break
	case "ImpuTramos"
		let tlr:INDdcol_scrn[0] = SCR:giros:SCRNabm_impu_tramos
		let FLD:tlr:INDjnl_append = OFB:giros:JNLAoM_ImpuTram
		let FLD:drv:INDjnl_rtn = OFB:giros:JNLAoM_ImpuTram
		let post:INDCamposTablas = LST:giros:LISTScrImpuTram
		let post:INDBackupTablas = LST:giros:LISTbck_ImpuTramos
		break
	/* Agregado por Bettina */
	case "Modelos"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNmodelos
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_modelo
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_modelo
		let post:INDCamposTablas = LST:post:LISTScrModelo
		let post:INDBackupTablas = LST:post:LISTbck_modelos
		break
	case "RelMod"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNrelMod
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_relMod
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_relMod
		let post:INDCamposTablas = LST:post:LISTScrRelMod
		let post:INDBackupTablas = LST:post:LISTbck_relMod
		break
	CASE "Grupos_Corte"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNgrucorte
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMgrucorte
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMgrucorte
		let post:INDCamposTablas = LST:post:LISTScrgrucorte
		let post:INDBackupTablas = LST:post:LISTbck_grucorte
		BREAK
	CASE "Saca_Grupo"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNsacagrupo
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMsacagrupo
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMsacagrupo
		let post:INDCamposTablas = LST:post:LISTScrsacagrupo
		let post:INDBackupTablas = LST:post:LISTbck_sacagrupo
		BREAK
	CASE "Saca_Tipo"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNsacatipo
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMsacatipo
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMsacatipo
		let post:INDCamposTablas = LST:post:LISTScrsacatipo
		let post:INDBackupTablas = LST:post:LISTbck_sacatipo
		BREAK
	CASE "Desp_Tipos"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdesptipos
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMdesptipos
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMdesptipos
		let post:INDCamposTablas = LST:post:LISTScrdesptipos
		let post:INDBackupTablas = LST:post:LISTbck_desptipos
		BREAK
	CASE "Despachos"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdespacho
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMdespacho
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMdespacho
		let post:INDCamposTablas = LST:post:LISTScrdespacho
		let post:INDBackupTablas = LST:post:LISTbck_despacho
		BREAK
	CASE "Apertura"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNapertura
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoMapertura
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMapertura
		let post:INDCamposTablas = LST:post:LISTScrapertura
		let post:INDBackupTablas = LST:post:LISTbck_apertura
		BREAK
	case "UEN"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNuen
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_uen
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_uen
		let post:INDCamposTablas = LST:post:LISTScrUEN
		let post:INDBackupTablas = LST:post:LISTbck_UEN
		break
	case "Empresa"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNempresa
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_empresas
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_empresas
		let post:INDCamposTablas = LST:post:LISTScrEmpresa
		let post:INDBackupTablas = LST:post:LISTbck_empresa
		break
	case "TerminalSf1"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNTerPagoFacil
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_TerPagoFa
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_TerPagoFa
		let post:INDCamposTablas = LST:post:LISTScrTerPagoFacil
		let post:INDBackupTablas = LST:post:LISTbck_TerPagoFa
		break
	case "UniNeg"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNunineg
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_unineg
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_unineg
		let post:INDCamposTablas = LST:post:LISTScrunineg
		let post:INDBackupTablas = LST:post:LISTbck_unineg
		break
	case "Mot_prov"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNadt_motmone
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_motmone
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_motmone
		let post:INDCamposTablas = LST:post:LISTScrmotmone
		let post:INDBackupTablas = LST:post:LISTbck_motmone
		break
	case "provincias"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNprovincias
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_provincias
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_provincias
		let post:INDCamposTablas = LST:post:LISTScrprovincias
		let post:INDBackupTablas = LST:post:LISTbck_provincias
		break
	case "CtasCont"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNctascont
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ctascont
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ctascont
		let post:INDCamposTablas = LST:post:LISTScrctascont
		let post:INDBackupTablas = LST:post:LISTbck_ctascont
		break
	case "CatIva"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNadt_cativa
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_cativa
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_cativa
		let post:INDCamposTablas = LST:post:LISTScrcativa
		let post:INDBackupTablas = LST:post:LISTbck_cativa
		break
	case "ProvUnNe"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNProvUnNe
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ProvUnNe
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ProvUnNe
		let post:INDCamposTablas = LST:post:LISTScrProvUnNe
		let post:INDBackupTablas = LST:post:LISTbck_ProvUnNe
		break
	case "ProvCatTas"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNProvCatTas
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_ProvCatTas
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ProvCatTas
		let post:INDCamposTablas = LST:post:LISTScrProvCatTas
		let post:INDBackupTablas = LST:post:LISTbck_ProvCatTas
		break
	case "Monedas"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNmoneda
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_monedas
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_monedas
		let post:INDCamposTablas = LST:post:LISTScrmoneda
		let post:INDBackupTablas = LST:post:LISTbck_monedas
		break
	case "Descuentos"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdescuento
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_descuento
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_descuento
		let post:INDCamposTablas = LST:post:LISTScrdescuento
		let post:INDBackupTablas = LST:post:LISTbck_descuento
		break
	case "UnNegMePag"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNUnNegMePag
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_UnNegMePag
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_UnNegMePag
		let post:INDCamposTablas = LST:post:LISTScrUnNegMePag
		let post:INDBackupTablas = LST:post:LISTbck_UnNegMePag
		break
	case "RProvin"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNRProvin
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_RProvin
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_RProvin
		let post:INDCamposTablas = LST:post:LISTScrRProvin
		let post:INDBackupTablas = LST:post:LISTbck_RProvin
		break
	case "RProduc"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNRProduc
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_RProduc
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_RProduc
		let post:INDCamposTablas = LST:post:LISTScrRProduc
		let post:INDBackupTablas = LST:post:LISTbck_RProduc
		break
	case "MedPago"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNMedPago
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_MedPago
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_MedPago
		let post:INDCamposTablas = LST:post:LISTScrMedPago
		let post:INDBackupTablas = LST:post:LISTbck_MedPago
		break
	case "MonedaSf1"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNMedPagoFacil
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_MedPagoFacil
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_MedPagoFacil
		let post:INDCamposTablas = LST:post:LISTScrMedPagoFacil
		let post:INDBackupTablas = LST:post:LISTbck_MedPagoFacil
		break
	case "CodSeq"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcodseq
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_codseq
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_codseq
		let post:INDCamposTablas = LST:post:LISTScrcodseq
		let post:INDBackupTablas = LST:post:LISTbck_codseq
		break
	case "Formu"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNformu
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_formu
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_formu
		let post:INDCamposTablas = LST:post:LISTScrformu
		let post:INDBackupTablas = LST:post:LISTbck_formu
		break
	case "ProdVs"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNprodvs
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_prodvs
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_prodvs
		//let post:INDCamposTablas = LST:post:LISTScrprodvs
		let post:INDCamposTablas = LST:post:LISTprodvs_flds
		let post:INDBackupTablas = LST:post:LISTbck_prodvs
		break
	case "DepStock"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdepstock
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_depstock
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_depstock
		let post:INDCamposTablas = LST:post:LISTScrdepstock
		let post:INDBackupTablas = LST:post:LISTbck_depstock
		break
	case "Stock"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNstock
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_stock
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_stock
		let post:INDCamposTablas = LST:post:LISTScrstock
		let post:INDBackupTablas = LST:post:LISTbck_stock
		break
	case "MotProdVs"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNmotpv
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_motpv
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_motpv
		let post:INDCamposTablas = LST:post:LISTScrmotpv
		let post:INDBackupTablas = LST:post:LISTbck_motpv
		break
	case "CorteOp"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcorteop
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_corteop
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_corteop
		let post:INDCamposTablas = LST:post:LISTScrcorteop
		let post:INDBackupTablas = LST:post:LISTbck_corteop
		break
	END SELECT

	SELECT (tabla)
	case "CTP"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNctp
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ctp
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ctp
		let post:INDCamposTablas = LST:post:LISTScrctp
		let post:INDBackupTablas = LST:post:LISTbck_ctp
		break
	case "CodPost"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcodpost
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_codpost
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_codpost
		let post:INDCamposTablas = LST:post:LISTScrcodpost
		let post:INDBackupTablas = LST:post:LISTbck_codpost
		break
	case "CorDest"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcordest
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_cordest
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_cordest
		let post:INDCamposTablas = LST:post:LISTScrcordest
		let post:INDBackupTablas = LST:post:LISTbck_cordest
		break
	case "CorSucCTP"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcorsucctp
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_corsucctp
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_corsucctp
		let post:INDCamposTablas = LST:post:LISTScrcorsucctp
		let post:INDBackupTablas = LST:post:LISTbck_corsucctp
		break
	case "CorOpAp"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcoropap
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_coropap
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_coropap
		let post:INDCamposTablas = LST:post:LISTScrcoropap
		let post:INDBackupTablas = LST:post:LISTbck_coropap
		break
	case "AperCO"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNaperco
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_aperco
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_aperco
		let post:INDCamposTablas = LST:post:LISTScraperco
		let post:INDBackupTablas = LST:post:LISTbck_aperco
		break
	case "CPCor"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcpcor
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_cpcor
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_cpcor
		let post:INDCamposTablas = LST:post:LISTScrcpcor
		let post:INDBackupTablas = LST:post:LISTbck_cpcor
		break
	case "Opcional"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNopcional
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_opcional
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_opcional
		let post:INDCamposTablas = LST:post:LISTScropcional
		let post:INDBackupTablas = LST:post:LISTbck_opcional
		break
	case "OpcServ"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNopcserv
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_opcserv
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_opcserv
		let post:INDCamposTablas = LST:post:LISTScropcserv
		let post:INDBackupTablas = LST:post:LISTbck_opcserv
		break
	case "Destinos"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdestinos
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_destinos
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_destinos
		let post:INDCamposTablas = LST:post:LISTScrdestinos
		let post:INDBackupTablas = LST:post:LISTbck_destinos
		break
	case "DesPost"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdespost
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_despost
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_despost
		let post:INDCamposTablas = LST:post:LISTScrdespost
		let post:INDBackupTablas = LST:post:LISTbck_despost
		break
	case "UniMed"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNunimed
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_unimed
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_unimed
		let post:INDCamposTablas = LST:post:LISTScrunimed
		let post:INDBackupTablas = LST:post:LISTbck_unimed
		break
	case "TipMed"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNtipmed
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_tipmed
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_tipmed
		let post:INDCamposTablas = LST:post:LISTScrtipmed
		let post:INDBackupTablas = LST:post:LISTbck_tipmed
		break
	case "Tarifas"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNtarifas
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_tarifas
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_tarifas
		let post:INDCamposTablas = LST:post:LISTScrtarifas
		let post:INDBackupTablas = LST:post:LISTbck_tarifas
		break
	case "Reembal"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNreembal
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_reembal
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_reembal
		let post:INDCamposTablas = LST:post:LISTScrreembal
		let post:INDBackupTablas = LST:post:LISTbck_reembal
		break
	case "Dimens"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdimens
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_dimens
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_dimens
		let post:INDCamposTablas = LST:post:LISTScrdimens
		let post:INDBackupTablas = LST:post:LISTbck_dimens
		break
	case "Servicio"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNservicios1
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_serv_tran
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_serv_tran
		let post:INDCamposTablas = LST:post:LISTScrservicios1
		let post:INDBackupTablas = LST:post:LISTbck_serv_tran
		break
	case "BR_adt_br"
		LET tlr:INDdcol_scrn[0] = SCR:admin:SCRNadt_br
		LET FLD:tlr:INDjnl_append = OFB:admin:JNLAoM_suc
		let FLD:drv:INDjnl_rtn = OFB:admin:JNLAoM_suc
		let post:INDCamposTablas = LST:post:LISTScradt_br
		let post:INDBackupTablas = LST:admin:LISTbck_suc
		break
	case "Suc_Gali"
 		let tlr:INDdcol_scrn[0] = SCR:gali:SCRNadt_suc_galicia
 		let FLD:tlr:INDjnl_append = OFB:gali:JNLAoM_suc_gali
 		let FLD:drv:INDjnl_rtn = OFB:gali:JNLAoM_suc_gali
    	let post:INDCamposTablas = LST:post:LISTScrsuc_gali
    	let post:INDBackupTablas = LST:gali:LISTbck_suc_gali
		break
	case "relac_suc"
    	let tlr:INDdcol_scrn[0] = SCR:gali:SCRNrelac_suc
    	let FLD:tlr:INDjnl_append = OFB:gali:JNLAoM_relac_suc
 		let FLD:drv:INDjnl_rtn = OFB:gali:JNLAoM_relac_suc
	    let post:INDCamposTablas = LST:post:LISTScrrelac_suc
	    let post:INDBackupTablas = LST:gali:LISTbck_relac_suc
 		break
	case "transac"
	    let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_transac
	 	let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_transac
    	let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_transac
    	//let post:INDCamposTablas = LST:post:LISTScrtransac
        //Correccion AUT-1580 - NAM
   	    let post:INDCamposTablas = LST:siaf:LISTtransac_flds
    	let post:INDBackupTablas = LST:siaf:LISTbck_transac
 		break
	case "motivos"
    	let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_motivos
 	  	let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_motivos
 	  	let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_motivos
    	//let post:INDCamposTablas = LST:post:LISTScrmotivos
    	let post:INDCamposTablas = LST:siaf:LISTmotivos_flds
    	let post:INDBackupTablas = LST:siaf:LISTbck_motivos
 		break
	case "monto_fl"
    	let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_mon_op_fl
    	let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_LimSuperv
	  	let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_LimSuperv
    	let post:INDCamposTablas = LST:post:LISTScrmon_op_fl
    	let post:INDBackupTablas = LST:siaf:LISTbck_LimSuperv
 		break
	case "feriados"
    	let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_bro_feri
	  	let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_feriados
	    let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_feriados
    	let post:INDCamposTablas = LST:post:LISTScrbro_feri
    	let post:INDBackupTablas = LST:siaf:LISTbck_feriados
 		break
	case "PCTAF46"
   		let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_banco
 		let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_bancos
		let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_bancos
   		let post:INDCamposTablas = LST:post:LISTScrbanco
   		let post:INDBackupTablas = LST:siaf:LISTbck_bancos
		break
	case "productos"
   		let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_prod
 		let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_productos
		let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_productos
		let post:INDCamposTablas = LST:post:LISTScrprod
   		let post:INDBackupTablas = LST:siaf:LISTbck_productos
		break
	case "Especie"
   		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNabm_Especie1
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_especies
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_especies
   		let post:INDCamposTablas = LST:post:LISTScrEspecie
   		let post:INDBackupTablas = LST:tes:LISTbck_especies
		break
	case "sucur_act"
    	let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNadt_sucur
 		let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_sucact
 		let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_sucact
    	let post:INDCamposTablas = LST:post:LISTScrSucact
    	let post:INDBackupTablas = LST:siaf:LISTbck_sucact
 		break
	case "MotVarios"
 		let tlr:INDdcol_scrn[0] = SCR:siaf:SCRNmot_varios
    	let FLD:tlr:INDjnl_append = OFB:siaf:JNLAoM_motvarios
 	 	let FLD:drv:INDjnl_rtn = OFB:siaf:JNLAoM_motvarios
    	let post:INDCamposTablas = LST:post:LISTScrMotvarios
    	let post:INDBackupTablas = LST:siaf:LISTbck_motvarios
    	break
	case "AcrePerc"
    	let tlr:INDdcol_scrn[0] = SCR:post:SCRN_AcrePerc
 		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_acreperc
 		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_acreperc
    	let post:INDCamposTablas = LST:post:LISTScrAcreperc
    	let post:INDBackupTablas = LST:post:LISTbck_acreperc
	 	break
	case "RG3337"
    	let tlr:INDdcol_scrn[0] = SCR:post:SCRN_PercRG3337
 		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_PercRG3337
 		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_PercRG3337
    	let post:INDCamposTablas = LST:post:LISTScrPercRG3337
    	let post:INDBackupTablas = LST:post:LISTbck_RG3337
	 	break
	case "TipoDoc"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNTipoDocu
  		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_tipodoc
  		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_tipodoc
     	let post:INDCamposTablas = LST:post:LISTScrTipodoc
    	let post:INDBackupTablas = LST:post:LISTbck_tipodoc
 		break
	case "den_mon"
  		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNden_mon
  		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_denmon
  		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_denmon
     	let post:INDCamposTablas = LST:post:LISTScrDenmon
     	let post:INDBackupTablas = LST:tes:LISTbck_denmon
		;CDS APPEND DSC:op:adt_temporal_ctx tes:bck_den_moneda \
  		;ARRAY tes:bck_den_texto \
  		;ARRAY tes:bck_den_valor \
  		;ARRAY tes:bck_den_caja_buzon
    	break
 	case "CajaBuzon"
 		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNhab_caja_buzon
 	 	let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_CajaBuzon
 	 	let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_CajaBuzon
 	 	let post:INDCamposTablas = LST:tes:LISTScrCajaBuzon
    	let post:INDBackupTablas = LST:tes:LISTbck_CajaBuzon
 		break
 	case "Suc_CeEmi"
    	let tlr:INDdcol_scrn[0] = SCR:admin:SCRNadt_br_cemi
 	 	let FLD:tlr:INDjnl_append = OFB:admin:JNLAoM_Suc_CeEmi
 	 	let FLD:drv:INDjnl_rtn = OFB:admin:JNLAoM_Suc_CeEmi
    	let post:INDCamposTablas = LST:admin:LISTScrSuc_CeEmi
    	let post:INDBackupTablas = LST:admin:LISTbck_Suc_CeEmi
 		break
 	case "Suc_ter"
 		let tlr:INDdcol_scrn[0] = SCR:admin:SCRNbr_ter
 		let FLD:tlr:INDjnl_append = OFB:admin:JNLAoM_Suc_ter
 		let FLD:drv:INDjnl_rtn = OFB:admin:JNLAoM_Suc_ter
    	let post:INDCamposTablas = LST:admin:LISTScrSuc_ter
    	let post:INDBackupTablas = LST:admin:LISTbck_Suc_ter
 		break
 	case "SucCe_Ter"
 		let tlr:INDdcol_scrn[0] = SCR:admin:SCRNbr_cemi_ter
 		let FLD:tlr:INDjnl_append = OFB:admin:JNLAoM_SucCe_Ter
 		let FLD:drv:INDjnl_rtn = OFB:admin:JNLAoM_SucCe_Ter
    	let post:INDCamposTablas = LST:admin:LISTScrSucCe_Ter
    	let post:INDBackupTablas = LST:admin:LISTbck_SucCe_Ter
 		break
 	case "DGralSuc"
    	let tlr:INDdcol_scrn[0] = SCR:giros:SCRNdatgrales
 	 	let FLD:tlr:INDjnl_append = OFB:giros:JNLAoM_SucGen
 	 	let FLD:drv:INDjnl_rtn = OFB:giros:JNLAoM_SucGen
    	let post:INDCamposTablas = LST:giros:LISTScrSucGen
    	let post:INDBackupTablas = LST:giros:LISTbck_SucGen
		break
	case "template"
 		let tlr:INDdcol_scrn[0] = SCR:SCRNadt_tmpl_mot
 		let FLD:tlr:INDjnl_append = OFB:JNLAoM_template
 		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_template
 		let post:INDCamposTablas = LST:LISTScrTemplate
 		let post:INDBackupTablas = LST:LISTbck_template
 		break
    CASE "bloques"
       	let tlr:INDdcol_scrn[0] = SCR:post:SCRNBloques
       	let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_Bloque
       	let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_Bloque
       	let post:INDCamposTablas = LST:post:LISTBloque_fld
	    let post:INDBackupTablas = LST:post:LISTbck_Bloque
       	break
    CASE "listados"
       	let tlr:INDdcol_scrn[0] = SCR:SCRNabm_listados
       	let FLD:tlr:INDjnl_append = OFB:JNLAoMlistados
       	let FLD:drv:INDjnl_rtn = OFB:JNLAoMlistados
       	let post:INDCamposTablas = LST:LISTlistados_fld
       	let post:INDBackupTablas = LST:LISTbck_listados
       	break
    CASE "MonPas"
        let tlr:INDdcol_scrn[0] = scr:giros:SCRNabm_MonPas
  	    let FLD:tlr:INDjnl_append = OFB:giros:JNLabm_monpas
   	    let FLD:drv:INDjnl_rtn = OFB:giros:JNLabm_monpas
        let post:INDCamposTablas = LST:giros:LSTscrnMonPais
        let post:INDBackupTablas = LST:giros:LISTbckABMmon_pas
		BREAK
    CASE "Paises"
 	    let tlr:INDdcol_scrn[0] = scr:giros:SCRNabm_paises
  	    let FLD:tlr:INDjnl_append = OFB:giros:JNLabm_pais
   	    let FLD:drv:INDjnl_rtn = OFB:giros:JNLabm_pais
        let post:INDCamposTablas = LST:giros:LSTscrnPais
        let post:INDBackupTablas = LST:giros:LISTBckABMpais
	  BREAK

    CASE "Tipo_Giro"
	    let tlr:INDdcol_scrn[0] = scr:giros:SCRNabm_giros
	    let FLD:tlr:INDjnl_append = ofb:giros:JNLabm_Tipo_Giro
	    let FLD:drv:INDjnl_rtn = ofb:giros:JNLabm_Tipo_Giro
	    let post:INDCamposTablas = lst:giros:LISTscrTipo_Giro
	    let post:INDBackupTablas = lst:giros:LISTbck_Tipo_Giro
		break
    CASE "tiposuc"
    	let tlr:INDdcol_scrn[0] = scr:giros:SCRNabm_TipoSuc
	    let FLD:tlr:INDjnl_append = ofb:giros:JNLabm_TipoSuc
	    let FLD:drv:INDjnl_rtn = ofb:giros:JNLabm_TipoSuc
	    let post:INDCamposTablas = lst:giros:LISTscrTipoSuc
	    let post:INDBackupTablas = lst:giros:LISTbck_TipoSuc
		break
	case "RelTrTGiro"
        let tlr:INDdcol_scrn[0] = SCR:giros:SCRNabm_rel_tran_gir
	    let FLD:tlr:INDjnl_append = OFB:giros:JNLAoM_RelTranTGiro
  	    let FLD:drv:INDjnl_rtn = OFB:giros:JNLAoM_RelTranTGiro
        let post:INDCamposTablas = LST:giros:LISTScrRelTranTGiro
        let post:INDBackupTablas = LST:giros:LISTbck_RelTranTGiro
		break
    CASE "Version"
        let tlr:INDdcol_scrn[0] = SCR:giros:SCRNVersion
        let tlr:INDjnl_append = OFB:giros:JNLAoM_Version
        let drv:INDjnl_rtn = OFB:giros:JNLAoM_Version
        let INDCamposTablas = LST:giros:LISTVersion_fld
        let INDBackupTablas = LST:giros:LISTbck_Version
		BREAK
    CASE "Est_Giros"
    	let tlr:INDdcol_scrn[0] = scr:giros:SCRNabm_estados
	    let FLD:tlr:INDjnl_append = ofb:giros:JNLabm_Estado_giros
	    let FLD:drv:INDjnl_rtn = ofb:giros:JNLabm_Estado_giros
	    let post:INDCamposTablas = lst:giros:LISTscrEst_Giros
	    let post:INDBackupTablas = lst:giros:LISTbck_Est_Giros
		break
    CASE "Mensaje"
        let tlr:INDdcol_scrn[0] = SCR:giros:SCRNMensaje
        let tlr:INDjnl_append = OFB:giros:JNLAoM_Mensaje
        let drv:INDjnl_rtn = OFB:giros:JNLAoM_Mensaje
        let INDCamposTablas = LST:giros:LISTMensaje_fld
        let INDBackupTablas = LST:giros:LISTbck_Mensaje
        BREAK
    CASE "semilla"
        let tlr:INDdcol_scrn[0] = SCR:giros:SCRNadt_semilla
        let FLD:tlr:INDjnl_append = OFB:giros:JNLsemilla
  	    let FLD:drv:INDjnl_rtn = OFB:giros:JNLsemilla
        let post:INDCamposTablas = LST:giros:LISTScrsemilla
        let post:INDBackupTablas = LST:giros:LISTbck_semilla
		BREAK
     CASE "cc_seq" // Tabla de Nros. de Secuencia Comprobantes de Ctas/Ctes.
         let tlr:INDdcol_scrn[0] = 0
         let FLD:tlr:INDjnl_append = OFB:post:JNLsecuen_cc
         let FLD:drv:INDjnl_rtn = OFB:post:JNLsecuen_cc
         let post:INDCamposTablas = LST:post:LISTcc_seq_flds
         let post:INDBackupTablas = LST:post:LISTbck_ccseq_flds
         break
	case "CotiMone"
		let tlr:INDdcol_scrn[0] = SCR:SCRNCotizaciones
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_Coti
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_Coti
		let post:INDCamposTablas = LST:LISTScrMoti
		let post:INDBackupTablas = LST:LISTbck_Coti
		break
    case "RMedPago"
		let tlr:INDdcol_scrn[0] = SCR:SCRNRMedPago
		let FLD:tlr:INDjnl_append = OFB:JNLAoM_RMedpago
		let FLD:drv:INDjnl_rtn = OFB:JNLAoM_RMedpago
		let post:INDCamposTablas = LST:LISTScrRMedpago
		let post:INDBackupTablas = LST:LISTbck_RMedpago
		break
	case "RestMod"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNRModalidad
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_RMod
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_RMod
		let post:INDCamposTablas = LST:post:LISTScrRModa
		let post:INDBackupTablas = LST:post:LISTbck_RModa
		break
	case "RestMot"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNRMotivos
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_RMotivos
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_RMotivos
		let post:INDCamposTablas = LST:post:LISTScrRMotivos
		let post:INDBackupTablas = LST:post:LISTbck_RMotivos
		break
	case "CodInt"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNCodInt
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_CodInt
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_CodInt
		let post:INDCamposTablas = LST:post:LISTSCRCodInt
		let post:INDBackupTablas = LST:post:LISTbck_CodInt
		break
    case "Fproceso"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNFproceso
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_Fproceso
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_Fproceso
		let post:INDCamposTablas = LST:post:LISTScrFproceso
		let post:INDBackupTablas = LST:post:LISTbck_Fproceso
		break
	case "Mot_suc"
		let tlr:INDdcol_scrn[0]   = SCR:post:SCRNadt_motsuc
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_motsuc
		let FLD:drv:INDjnl_rtn    = OFB:post:JNLAoM_motsuc
		let post:INDCamposTablas  = LST:post:LISTScrmotsuc
		let post:INDBackupTablas  = LST:post:LISTbck_motsuc
		break
	case "CajaProd"
		let tlr:INDdcol_scrn[0]   = SCR:post:SCRNCajaProd
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_CajaProd
		let FLD:drv:INDjnl_rtn    = OFB:post:JNLAoM_CajaProd
		let post:INDCamposTablas  = LST:post:LISTCajaProd
		let post:INDBackupTablas  = LST:post:LISTbck_CajaProd
		break
	case "TipoCaja"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNTipoCaja
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_TipoCaja
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_TipoCaja
		let post:INDCamposTablas = LST:post:LISTadt_TipoCaja
		let post:INDBackupTablas = LST:post:LISTbck_TipoCaja
		break
	case "ServCaja"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNServCaja
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ServCaja
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ServCaja
		let post:INDCamposTablas = LST:post:LISTadt_ServCaja
		let post:INDBackupTablas = LST:post:LISTbck_ServCaja
		break
	case "RestEspSuc"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNabm_restSuc
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_RestSuc
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_RestSuc
		let post:INDCamposTablas = LST:tes:LISTScrabm_restSuc
		let post:INDBackupTablas = LST:tes:LISTrestsuc_bck
		break
	case "RestEspCli"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNabm_restCli
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_RestCli
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_RestCli
		let post:INDCamposTablas = LST:tes:LISTScrabm_restCli
		let post:INDBackupTablas = LST:tes:LISTrestcli_bck
		break
	case "RestEspUp"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNabm_restUp
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_RestUp
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_RestUp
		let post:INDCamposTablas = LST:tes:LISTScrabm_restUp
		let post:INDBackupTablas = LST:tes:LISTrestup_bck
		break
	case "limihabi"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNlimi_habi
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_limihabi
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_limihabi
		let post:INDCamposTablas = LST:tes:LISTlimihabi_flds
		let post:INDBackupTablas = LST:tes:LISTbck_limihabi
		break
	case "catteleg"
		let tlr:INDdcol_scrn[0] = SCR:tele:SCRNcatteleg
		let FLD:tlr:INDjnl_append = OFB:tele:JNLAoM_catteleg
		let FLD:drv:INDjnl_rtn = OFB:tele:JNLAoM_catteleg
		let post:INDCamposTablas = LST:tele:LISTScrcatteleg
		let post:INDBackupTablas = LST:tele:LISTcatteleg_bck
		break
	case "RestEspProv"
		let tlr:INDdcol_scrn[0] = SCR:tes:SCRNabm_restProv
		let FLD:tlr:INDjnl_append = OFB:tes:JNLAoM_RestProv
		let FLD:drv:INDjnl_rtn = OFB:tes:JNLAoM_RestProv
		let post:INDCamposTablas = LST:tes:LISTScrabm_restProv
		let post:INDBackupTablas = LST:tes:LISTrestprov_bck
		break
	CASE "cuit2dig"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcuit2dig
    	let FLD:tlr:INDjnl_append = OFB:post:JNLAoMcuit2dig
  		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoMcuit2dig
   		;let post:INDCamposTablas = LST:post:LISTcrcuit2dig
   		let post:INDBackupTablas = LST:post:LISTbck_cuit2dig
    	BREAK
	case "browser"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNabm_browser
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_browser
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_browser
		let post:INDCamposTablas = LST:post:LISTbrowser_flds
		let post:INDBackupTablas = LST:post:LISTbck_browser
		break
	case "Combos"
   		let tlr:INDdcol_scrn[0] = SCR:post:SCRNabm_Combos1_jour
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_Combos
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_Combos
   		let post:INDCamposTablas = LST:post:LISTScrCombos
   		let post:INDBackupTablas = LST:post:LISTbck_Combos1
		break
	case "ContCombo"
   		let tlr:INDdcol_scrn[0] = SCR:post:SCRNContCombo_jour
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ContCombo
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ContCombo
   		let post:INDCamposTablas = LST:post:LISTScrContCombo
   		let post:INDBackupTablas = LST:post:LISTContCombo_bck
		break
	CASE "destinosP"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNdestinosP
    	let FLD:tlr:INDjnl_append = OFB:post:JNLdestinosP
		let FLD:drv:INDjnl_rtn = OFB:post:JNLdestinosP
    	let post:INDCamposTablas = LST:post:LISTdestinosP_scr
    	let post:INDBackupTablas = LST:post:LISTdestinosP_bck
    	BREAK
    case "RestProdu"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNrestProductos2
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_RestProdu
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_RestProdu
		let post:INDCamposTablas = LST:post:LIST_RestProdu_flds
		let post:INDBackupTablas = LST:post:LIST_RestProdu_bck
		break
	case "CargaMasiva"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNcargaMasivaJnl
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_cargaMasiva
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_cargaMasiva
		let post:INDCamposTablas = LST:post:LISTcargaMasiva_flds
		let post:INDBackupTablas = LST:post:LISTcargaMasiva_flds
		break
	case "FliaRep"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNFliaRep
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_FliaRep
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_FliaRep
		let post:INDCamposTablas = LST:post:LISTScrFliaRep
		let post:INDBackupTablas = LST:post:LISTbck_fliarep
		break
	case "GrupoRep"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNGrupoRep
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_GrupoRep
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_GrupoRep
		let post:INDCamposTablas = LST:post:LISTgruporep_flds
		let post:INDBackupTablas = LST:post:LISTbck_gruporep
		break
	case "GruFlia"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNGruFlia
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_GruFlia
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_GruFlia
		let post:INDCamposTablas = LST:post:LISTScrGruFlia
		let post:INDBackupTablas = LST:post:LISTbck_gruflia
		break
    case "UniCod"
		let tlr:INDdcol_scrn[0] = SCR:post:SCRNUniCod
		let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_UniCod
		let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_UniCod
		let post:INDCamposTablas = LST:post:LISTScrUniCod
		let post:INDBackupTablas = LST:post:LISTbck_unicod
		break
	CASE "emis_giroelec"
	    let tlr:INDdcol_scrn[0] = scr:giros:SCRNabmEmis_giroelec
	    let FLD:tlr:INDjnl_append = ofb:giros:JNLabm_emis_ge
	    let FLD:drv:INDjnl_rtn = ofb:giros:JNLabm_emis_ge
	    let post:INDCamposTablas = lst:giros:LISTscrEmis_giroelec
	    let post:INDBackupTablas = lst:giros:LISTbck_Emis_ge
		break
	CASE "Mensajes"
	    let tlr:INDdcol_scrn[0] = scr:siaf:SCRNMensajes
	    let FLD:tlr:INDjnl_append = ofb:siaf:JNLAoM_Mensajes
	    let FLD:drv:INDjnl_rtn = ofb:siaf:JNLAoM_Mensajes
	    let post:INDCamposTablas = lst:siaf:LISTMensajes_flds
	    let post:INDBackupTablas = lst:siaf:LISTbck_Mensajes
		break
    case "ipsPaisDestino"
        let tlr:INDdcol_scrn[0] = SCR:post:SCRNipsPaisDest
        let FLD:tlr:INDjnl_append = OFB:post:JNLAoM_ipsPaisDest
        let FLD:drv:INDjnl_rtn = OFB:post:JNLAoM_ipsPaisDest
        let post:INDCamposTablas = LST:post:LISTScripsPaisDest
        let post:INDBackupTablas = LST:post:LISTbck_ipsPaisDest
        break		
	END SELECT
END SUB

/*******/
