/****o* Expedición/OFB:post:MISCjnl_DetCCont
* NOMBRE
*   OFB:post:MISCjnl_DetCCont
* DESCRIPCION
*   Por cada grupo de corte y apertura cerrado se debe journalizar una cabecera y sus detalles
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:SVALllenCont
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-351
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCjnl_DetCCont
    /* Fuerzo la journalizacion del detalle       */
    /* Mzo. 2000 - B. Petrella -                    */
LOCAL lcorteop LIKE post:jnl_grucorte_cod
LOCAL lcorteop_ant LIKE post:jnl_grucorte_cod
LOCAL lapertura like post:jnl_apertura_cod
LOCAL lapertura_ant like post:jnl_apertura_cod
LOCAL l_err_retval LIKE lib:err_retval


    CDS SELECT FROM DSC:post:DetTmp BECOMES DSC:post:DetTmp_ctx2 WHERE \
    (op:op_operator_id == op:op_operator_id && \
     post:MarcaBorrado == "") SORT "GCorteAp"
    CDS FINDFIRST post:DetTmp_ctx2 LOCK
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
	        
	        CDS EXTRACT DSC:post:DetTmp_ctx2 ALL
	       	
			lcorteop = post:jnl_grucorte_cod
	    	lapertura = post:jnl_apertura_cod
  			lcorteop_ant = lcorteop
  			lapertura_ant = lapertura
  			
  			/*MFM - Se obtiene un numero de secuencia para journalizar la cabecera y
    		los detalles. Esto es util para la reversa*/
    		CLEARFIELD post:codseq_dev
	    	CALL CDSobtiene_secuen("CABEC")
    		post:codseq_dev = post:adt_codseq_nro
  			
  			//obtiene nro de guia de contenedor
  			let post:adt_formu_cod = "GUIAC"
    		call CDSbuscoCodSeq
    		
  			//GRABO EL HEADER!!	
  			UNGETKEY 0x0191 /* RT_SEND */
    		drv:INDscr = SCR:post:SCRNllenContHdr
    		siaf:adt_tran_codigo = siaf:codigo_siaf
		    call siaf:CDSadt_tran_load 
		    siaf:nombre_transac = siaf:adt_tran_desc
			tlr:tran_mnemonic = siaf:adt_tran_mnemonic
			siaf:afecta_efectivo = siaf:adt_tran_afec_efvo
			siaf:tiene_reverso = siaf:adt_tran_tiene_rev
    		siaf:posible_off = siaf:adt_tran_posoff
    		CALL tlr:JNLtran /* Journaliza el Header */
    		//init 33,0
			
	ELSE
		CDS UNLOCK DSC:post:DetTmp_ctx2
		CDS ENDSELECT DSC:post:DetTmp_ctx2
		RETURN -2
	ENDIF
	
	WHILE  (lib:err_retval == 0)
	
		IF (lcorteop_ant == lcorteop && lapertura_ant == lapertura) THEN
			//GRABO EL DETALLE
		    siaf:codigo_siaf = 99036
		    siaf:adt_tran_codigo = siaf:codigo_siaf
		    call siaf:CDSadt_tran_load 
			siaf:nombre_transac = siaf:adt_tran_desc
			tlr:tran_mnemonic = siaf:adt_tran_mnemonic
			siaf:afecta_efectivo = siaf:adt_tran_afec_efvo
			siaf:tiene_reverso = siaf:adt_tran_tiene_rev
    		siaf:posible_off = siaf:adt_tran_posoff
    		//siaf:imprime_comprobante = "N"
    	
    	    //cgw:NI50242 - No debería instanciarse. Se comenta porque al realizar la reversa,
    	    //              ejecutaba esta listtran, provocando una caida de RT.
    	    //              A continuación, ya se estan instanciando los campos indirectos necesarios.
    		//drv:INDcur_tran = LST:post:TRANpiezaXCont
    		
    		drv:INDscreen[0] = SCR:post:SCRNllenContDet
    		drv:INDscr = SCR:post:SCRNllenContDet
    		drv:flags = "00000000000000000000000000C00000000000000000000000000"
    		drv:INDpre_col_rtn = OFB:post:PRECtranPiezaCont
    		drv:INDsend_rtn = OFB:post:SVALpiezaXcont
    		drv:INDjnl_rtn = OFB:post:JNLllenContHdr
    		if (!testflag(tlr:tran_flags,correction))
        	move "0000000000000" to drv:data_collect
    		endif
    		CLEARFIELD drv:INDspc_rtn[2]
    		CLEARFIELD drv:INDspc_rtn[3]
    		CLEARFIELD drv:INDspc_rtn[4]
    		CLEARFIELD drv:INDspc_rtn[5]
    		CLEARFIELD drv:INDbut_list[0]
    		CLEARFIELD drv:INDpre_col_rtn
			
			//tengo que recuperar el contexto para que me actualice correctamente los
			//datos de la pieza en el journal y genere/actualice los scaneos correspondientes
			CDS FINDAGAIN DSC:post:DetTmp_ctx2 LOCK
			CDS EXTRACT DSC:post:DetTmp_ctx2 ALL
			
	    	CALL CDSmodifJNLCCont /* Modifica lel journal de la Tx. original */
			//Agrego German - Se graban los datos de la pieza en la tabla RepExp
			CALL post:CDSGrabaRepExp("CIERRECONTENEDOR", post:Pieza_id,tlr:jnl_sequence,tlr:jnl_date)
		
			UNGETKEY 0x0191 /* RT_SEND */
	    	CALL tlr:JNLtran /* Journaliza el detalle */
    	    //init 33,0
			
			CDS FINDAGAIN DSC:post:DetTmp_ctx2 LOCK
          	CDS FINDNEXT DSC:post:DetTmp_ctx2 LOCK
			//AUT-1718 AUT-1719
  			//se esta pisando el lib:err_retval en la impresion de la guia y arma quilombo!
			LET l_err_retval = CDSRETVAL
			//IF (lib:err_retval == 0) THEN
			IF (l_err_retval == 0) THEN
  		 	 	CDS EXTRACT DSC:post:DetTmp_ctx2 post:jnl_grucorte_cod INTO lcorteop \
  		 	 	post:jnl_apertura_cod INTO lapertura 
  		 	 	IF (lcorteop_ant != lcorteop || lapertura_ant != lapertura) THEN
	  		 	 	/* Impresion de Guia de Cont para el grupo de corte y apertura correspondiente*/
    			/* Según el contenedor, son distintas las impresiones */
		 		//GDLD-681-No imprimir GUIAS CONTENEDOR
				//call MISCimpCont
  			 	 ENDIF
  		 		 CDS FINDAGAIN DSC:post:DetTmp_ctx2 LOCK
  		 	 	CDS EXTRACT DSC:post:DetTmp_ctx2 ALL
  			ENDIF
  			//AUT-1718 AUT-1719
  			//se esta pisando el lib:err_retval en la impresion de la guia y arma quilombo!
  			LET lib:err_retval = l_err_retval
		ELSE
		  		
			/*MFM - Se obtiene un numero de secuencia para journalizar la cabecera y
    		los detalles. Esto es util para la reversa*/
    		CLEARFIELD post:codseq_dev
	    	CALL CDSobtiene_secuen("CABEC")
    		post:codseq_dev = post:adt_codseq_nro
  			
  			//obtiene nro de guia de contenedor
  			let post:adt_formu_cod = "GUIAC"
    		call CDSbuscoCodSeq
    		
			//GRABO EL HEADER!!	
   			UNGETKEY 0x0191 /* RT_SEND */
   			siaf:codigo_siaf = 99030
   			siaf:adt_tran_codigo = siaf:codigo_siaf
		    call siaf:CDSadt_tran_load 
   			siaf:nombre_transac = siaf:adt_tran_desc
			tlr:tran_mnemonic = siaf:adt_tran_mnemonic
			siaf:afecta_efectivo = siaf:adt_tran_afec_efvo
			siaf:tiene_reverso = siaf:adt_tran_tiene_rev
    		siaf:posible_off = siaf:adt_tran_posoff
   			drv:INDscr = SCR:post:SCRNllenContHdr
   			CALL tlr:JNLtran /* Journaliza el Header */
   			//init 33,0
			
			lcorteop_ant = lcorteop
  			lapertura_ant = lapertura
  		ENDIF
  		
   END WHILE	
       
    
    CDS UNLOCK DSC:post:DetTmp_ctx2
    CDS ENDSELECT DSC:post:DetTmp_ctx2

    /* Impresion de Guia de Cont*/
		 //GDLD-681-No imprimir GUIAS CONTENEDOR
		//call MISCimpCont

//50242 - esto se tiene que hacer cuando se terminan de imprimir todas las guias de contenedores
	IF (reimpresion != "S" && post:adt_corteop_ctrl != "N")
	    // Actualizo la tabla de transferencias (TranCont) con 
	    // MarcaBorrado = "2" que indica que la pieza ya fue  contenerizada por el operador al que 
	    //se le transfirio. 
	    // Siempre que sean piezas de control 
	    // tomada por otro Operador - Jul.´98 - B. Petrella    
	    call CDSmarcoTranCont
	END IF
    // Borro todos los registros asociados al Cte. Op. de la tabla DetTmp.      
    CALL CDSborroDetTmp
    CDS UNLOCK DSC:post:DetTmp_ctx
    CDS ENDSELECT DSC:post:DetTmp_ctx


    drv:INDpre_col_rtn = OFB:post:PRECllenadoCont
    CLEARFIELD drv:INDsend_rtn
    CLEARFIELD drv:INDjnl_rtn
    drv:INDscreen[0] = SCR:post:SCRNllenadoCont
    

END SUB

/*******/
