/****o* Pendientes de agrupación/OFB:post:MISCformula3_CREM
* NOMBRE
*   OFB:post:MISCformula3_CREM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"
SUB post:MISCformula3_CREM(p_impCremResultAcum,p_imp_giro)
local Evento like giros:adt_impp_modo
local SEL_FIJO_PROV_EMI like giros:adt_impp_montofijo
local SEL_FIJO_PROV_PAG like giros:adt_impp_montofijo
local MILAJE_SEL_PROV_EMI like giros:adt_impp_por_milaje
local MILAJE_SEL_PROV_PAG like giros:adt_impp_por_milaje
    ;Obtengo los sellados del emisor
    siaf:ProvImpuesto = SUBSTR(common:sucursal_activa,0,1)
    let Evento = "E"
    call giros:MISCtarifaSellados(siaf:ProvImpuesto,p_impCremResultAcum,Evento,post:adt_serv_serv,giros:SucSel2_fld,SEL_FIJO_PROV_EMI,MILAJE_SEL_PROV_EMI)
    
    ;Obtengo los sellados del pagador
    ;siaf:ProvImpuesto = SUBSTR(giros:CodSucBenef_fld,0,1)
    siaf:ProvImpuesto = giros:SucSel2_fld
    
    if (SEL_FIJO_PROV_EMI.numchars > 0 || MILAJE_SEL_PROV_EMI.numchars > 0)
        giros:Impuesto = 0
    else
        giros:Impuesto = 1
    end if
    let Evento = "A"
    call giros:MISCtarifaSellados(siaf:ProvImpuesto,p_impCremResultAcum,Evento,post:adt_serv_serv,giros:SucSel2_fld,SEL_FIJO_PROV_PAG,MILAJE_SEL_PROV_PAG)
    clearfield giros:Impuesto
    ;Obtengo el importe y cantidad de giros
    INIT 22,1
    p_imp_giro = ((p_impCremResultAcum - SEL_FIJO_PROV_EMI - SEL_FIJO_PROV_PAG) * 1000) / (1000 + MILAJE_SEL_PROV_EMI + MILAJE_SEL_PROV_PAG)
    INIT 22,0
END SUB
/*******/
