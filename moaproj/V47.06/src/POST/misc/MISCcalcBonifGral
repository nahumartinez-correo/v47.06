/****o* Pendientes de agrupación/OFB:post:MISCcalcBonifGral
* NOMBRE
*   OFB:post:MISCcalcBonifGral
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcalcBonifGral(pTipoBon, pTipo_promo)
LOCAL x like post:cant_opc
LOCAL j like post:cant_opc
LOCAL l_tarifa_opc LIKE fld_promo_imp
LOCAL l_cant_ant LIKE post:cantidad
	INIT 22,1
	l_cant_ant = post:cantidad
	SELECT (pTipoBon)
		CASE "P"
			SELECT (pTipo_promo)
				CASE TIPO_SERVICIO
					promo_imp_srv_ind = post:adt_tarif_precio * promo_srv_bon / 100
					promo_imp_srv = promo_imp_srv_ind
					promo_imp_srv_tot = promo_imp_srv_ind * post:cantidad
					BREAK
				CASE TIPO_BLOQUE
					promo_imp_blq_ind = adt_bloque_precio * adt_promo_bon / 100
					promo_imp_blq = promo_imp_blq_ind
					promo_imp_blq_tot = promo_imp_blq * cant_bloq * cantidad
					promo_blq_bon = adt_promo_bon
					BREAK
				CASE TIPO_OPCIONAL
					IF (siaf:codigo_siaf != "13100") THEN
						x = post:cant_opc - 1
						l_tarifa_opc = post:cos_opc[x]
						aux_tot_opc	= l_tarifa_opc
					ELSE
						j = tele:indice
						;x = post:cant_opc - 1
						x = post:cant_opc_bonif - 1
						l_tarifa_opc = tele:OpcInd_vec[j][1]
						cod_opc_tele[x] = tele:OpcInd_vec[j][0]
						aux_tot_opc	= l_tarifa_opc * post:cantidad
						promoOpcTipoBon[x] = pTipoBon
					END IF
					
					IF (post:cantidad > 1)
                        CALL post:MISCopcCantPart(post:cod_opc[x], post:tipo_produc, post:cantidad)
                    END IF
					promo_imp_opc[x] = (aux_tot_opc / post:cantidad) * adt_promo_bon /100
					promo_imp_opc_ind[x] = promo_imp_opc[x]
					promo_imp_opc_tot[x] = promo_imp_opc[x] * post:cantidad
					promo_imp_tot_opc = promo_imp_tot_opc + promo_imp_opc_tot[x]
					promo_opc_bon[x] = adt_promo_bon
					
					BREAK
				CASE TIPO_PRODUCTOS_VS
					promo_bon = adt_promo_bon
 					promo_imp = adt_prodvs_tarifa * promo_bon / 100
 					promo_tot_ProdVs = promo_imp * cantidad2
  					BREAK
				CASE TIPO_ESPECIES_VS
					promo_bon = adt_promo_bon
 					promo_imp = tes:adt_espv_valor * promo_bon / 100
 					promo_tot_EspVdas = promo_imp * tes:adt_evaux_cantidad
					BREAK
				CASE TIPO_ENTREGA_DE_PZA
					promo_bon = adt_promo_bon
					promo_imp_srv_ind = post:adt_tarif_precio * promo_srv_bon / 100
					INIT 22,0
					RETURN 0
					BREAK
				CASE ELSE
					BREAK
			END SELECT
			BREAK
		CASE "V"
			SELECT (pTipo_promo)
				CASE TIPO_SERVICIO
					promo_imp_srv_ind = promo_srv_bon
					promo_imp_srv = promo_imp_srv_ind
					promo_imp_srv_tot = promo_imp_srv_ind * post:cantidad
					BREAK
				CASE TIPO_BLOQUE
					promo_imp_blq_ind = adt_promo_bon
					promo_imp_blq = promo_imp_blq_ind
					promo_imp_blq_tot = promo_imp_blq * cant_bloq * cantidad
					promo_blq_bon = adt_promo_bon
					BREAK
				CASE TIPO_OPCIONAL
					IF (siaf:codigo_siaf != "13100") THEN
						x = post:cant_opc - 1
						l_tarifa_opc = post:cos_opc[x]
						aux_tot_opc	= l_tarifa_opc
					ELSE
						j = tele:indice
						;x = post:cant_opc - 1
						x = post:cant_opc_bonif - 1
						l_tarifa_opc = tele:OpcInd_vec[j][1]
						cod_opc_tele[x] = tele:OpcInd_vec[j][0]
						aux_tot_opc	= l_tarifa_opc * post:cantidad
						promoOpcTipoBon[x] = pTipoBon
					END IF
					IF (post:cantidad > 1)
                        CALL post:MISCopcCantPart(post:cod_opc[x], post:tipo_produc, post:cantidad)
                    END IF
					promo_imp_opc[x] = adt_promo_bon
					promo_imp_opc_ind[x] = promo_imp_opc[x]
					promo_imp_opc_tot[x] = promo_imp_opc[x] * post:cantidad
					promo_imp_tot_opc = promo_imp_tot_opc + promo_imp_opc_tot[x]
					promo_opc_bon[x] = adt_promo_bon
					BREAK
				CASE TIPO_PRODUCTOS_VS
					promo_bon = adt_promo_bon
 					promo_imp = promo_bon
 					promo_tot_ProdVs = promo_imp * cantidad2
  					BREAK
				CASE TIPO_ESPECIES_VS
					promo_bon = adt_promo_bon
 					promo_imp = promo_bon
 					promo_tot_EspVdas = promo_imp * tes:adt_evaux_cantidad
					BREAK
				CASE TIPO_ENTREGA_DE_PZA
					promo_bon = promo_srv_bon
					promo_imp_srv_ind = promo_srv_bon
					INIT 22,0
					RETURN 0
					BREAK
				CASE ELSE
					BREAK
			END SELECT
			
			BREAK
		CASE ELSE
			ERRMSG LST:common:errmsg_list,"ERROR DE PARAMETRIA !!!"
			BREAK
	END SELECT
	CLEARFIELD promo_imp_tot_ind
	x = 0
	WHILE (x < post:cant_opc)
		promo_imp_tot_ind = promo_imp_tot_ind + promo_imp_opc_ind[x]
		x = x + 1
	END WHILE
	promo_imp_tot_ind = promo_imp_tot_ind + promo_imp_blq_ind + promo_imp_srv_ind
	promo_tot_Serv = promo_imp_blq_tot + promo_imp_tot_opc + promo_imp_srv_tot
	fld_promo_imp = promo_tot_Serv + promo_tot_ProdVs + promo_tot_EspVdas
	INIT 22,0
	REFRESH fld_promo_imp
	post:cantidad = l_cant_ant
END SUB

/*******/
