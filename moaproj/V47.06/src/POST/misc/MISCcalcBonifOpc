/****o* Pendientes de agrupación/OFB:post:MISCcalcBonifOpc
* NOMBRE
*   OFB:post:MISCcalcBonifOpc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCcalcBonifOpc()
LOCAL l_CodServ like siaf:codigo_siaf
LOCAL l_opcional like post:adt_opcserv_opci
LOCAL l_opcional_aux like post:adt_opcserv_opci
LOCAL l_cont like post:cant_opc
LOCAL l_importe like post:adt_opcserv_valor
LOCAL l_tieneBoni like siaf:i
LOCAL x like post:cant_opc
	CDS EXTRACT DSC:post:promoDetalleCli_ctx ALL
	l_CodServ = (SUBSTR(post:adt_promo_elemento,0,10))
	IF ((post:adt_promo_cliente == post:cli_tipo || \
		post:adt_promo_cliente == TODOS_LOS_CLIENTES) && \
		(l_CodServ == siaf:codigo_siaf || l_CodServ == post:tipo_produc2)) THEN
		l_opcional = (SUBSTR(adt_promo_elemento,13,4))
		IF (l_CodServ == siaf:codigo_siaf) THEN
			x = cant_opc - 1
			LET l_opcional_aux = post:cod_opc[x]
		ELSE
			x = tele:indice
			LET l_opcional_aux = (SUBSTR(tele:OpcInd_vec[x][0],0,4))
			;x = cant_opc - 1
		END IF
		IF (l_opcional == SELECCION_TODOS_OPCIONALES) THEN
			l_tieneBoni = true
		ELSE
			IF (l_opcional == l_opcional_aux) THEN
				l_tieneBoni = true
			END IF
		END IF
		IF (l_tieneBoni == true) THEN
			IF (siaf:codigo_siaf != "13100") THEN
				l_importe = post:cos_opc[x] / post:cantidad
			ELSE
				post:cant_opc_bonif = post:cant_opc_bonif + 1
				x = post:cant_opc_bonif - 1				
				l_importe = tele:OpcInd_vec[x][1]
			END IF
			if (post:adt_promo_tipoBon == TIPO_BONIF_VALOR && adt_promo_bon > l_importe )
				return 0
			end if
			CALL post:MISCLimpioPromo(l_opcional_aux)
			LET promoOpcTipoBon[x] = adt_promo_tipoBon
			post:promo_cant_opc = post:cant_opc
			CALL post:MISCcalcBonifGral(promoOpcTipoBon[x], TIPO_OPCIONAL)
			if (post:adt_promo_tipoBon == TIPO_BONIF_VALOR)
				CALL post:MISCdetalleBonifGral(adt_promo_desc,aux_tot_opc,"----",promo_imp_opc_tot[x],TIPO_OPCIONAL,l_opcional_aux)
			else
				CALL post:MISCdetalleBonifGral(adt_promo_desc,aux_tot_opc,adt_promo_bon,promo_imp_opc_tot[x],TIPO_OPCIONAL,l_opcional_aux)
			end if
			promo_desc = adt_promo_desc
			promo_cod = adt_promo_cod
			promo_inhibeUpServ = adt_promo_permiteUP
		END IF
		REFRESH fld_promo_imp
	END IF
END SUB

/*******/
