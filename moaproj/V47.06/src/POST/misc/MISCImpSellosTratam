/****o* Pendientes de agrupación/OFB:post:MISCImpSellosTratam
* NOMBRE
*   OFB:post:MISCImpSellosTratam
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCImpSellosTratam(TipoTransac)
/*Esta rutina sirve para realizar el tratamiento de Impuesto de Sellos. Debe ser llamda desde la
SVAL de la transacción y pasar como parámetro el tipo de transacción que es. La rutina acumula
los impuestos calculados por Provincia - Gabriel Falciola*/

local ProvEmi like siaf:ProvImpuesto

	clearfield post:ImpSello_anterior
	clearfield post:ImpSello_Abon_ant
	clearfield post:Nis_Destino_ant

	select (TipoTransac)
	case "ING/EGR" /*Ingresos y Egresos*/
		/*Voy a buscar el valor anterior de los Impuestos, ya que estoy modificando*/
		if (post:estado_presu == 3) then
			call post:CDSBuscoImpSell_ant("ING/EGR")
		end if

		if (post:estado_presu != 4)
			/*Totaliza el importe del sellado Emitido*/
			if (giros:Impuesto > 0 || post:ImpSello_anterior > 0) then
				ProvEmi = SUBSTR(common:sucursal_activa,0,1)
				call post:CDSUpdate_AuxImpp(ProvEmi,giros:Impp_pdesc_emi,giros:Impp_impdesc_emi,giros:Impuesto,post:ImpSello_anterior,"E",PresNro)
				if (retval < 0) then
					return (-2)
				end if
			end if

			/*Totaliza el importe del sellado Abonado*/
			if (giros:Impuesto_abonado > 0 || post:ImpSello_Abon_ant > 0) then
				call post:CDSUpdate_AuxImpp(siaf:ProvImpuesto,giros:Impp_pdesc_pag,giros:Impp_impdesc_pag,giros:Impuesto_abonado,post:ImpSello_Abon_ant,"A",PresNro)
				if (retval < 0) then
					return (-2)
				end if
				if (post:Nis_Destino_ant.numchars > 0 && siaf:ProvImpuesto != SUBSTR(post:Nis_Destino_ant,0,1) && \
				post:ImpSello_Abon_ant > 0)
					ProvEmi = SUBSTR(post:Nis_Destino_ant,0,1)
					call post:CDSUpdate_AuxImpp(ProvEmi,giros:Impp_pdesc_pag,giros:Impp_impdesc_pag,0,post:ImpSello_Abon_ant,"E",PresNro)
					if (retval < 0) then
						return (-2)
					end if
				end if
			end if
		end if
		break
	case "TEMPLATE"
		/*Voy a buscar el valor anterior de los Impuestos, ya que estoy modificando*/
		IF (ingr_datos != "S")
			call CDSBuscoImpSell_ant("TEMPLATE")
		end if

		if (post:estado_presu != 4)
			/*Totaliza el importe del sellado Emitido*/
			if (giros:Impuesto > 0 || ImpSello_anterior > 0) then
				ProvEmi = SUBSTR(common:sucursal_activa,0,1)
				call post:CDSUpdate_AuxImpp(ProvEmi,giros:Impp_pdesc_emi,giros:Impp_impdesc_emi,giros:Impuesto,ImpSello_anterior,"E",PresNro)
				if (retval < 0) then
					return (-2)
				end if
			end if

			/*Totaliza el importe del sellado Abonado*/
			if (giros:Impuesto_abonado > 0 || ImpSello_Abon_ant > 0) then
				call post:CDSUpdate_AuxImpp(siaf:ProvImpuesto,giros:Impp_pdesc_pag,giros:Impp_impdesc_pag,giros:Impuesto_abonado,ImpSello_Abon_ant,"A",PresNro)
				if (retval < 0) then
					return (-2)
				end if
				if (Nis_Destino_ant.numchars > 0 && siaf:ProvImpuesto != SUBSTR(Nis_Destino_ant,0,1) && \
				ImpSello_Abon_ant > 0)
					ProvEmi = SUBSTR(Nis_Destino_ant,0,1)
					call post:CDSUpdate_AuxImpp(ProvEmi,giros:Impp_pdesc_pag,giros:Impp_impdesc_pag,0,ImpSello_Abon_ant,"E",PresNro)
					if (retval < 0) then
						return (-2)
					end if
				end if
			end if
		end if
		break
	end select

	if (giros:Impuesto <= 0 && giros:Impuesto_abonado <= 0 && post:estado_presu == 4)
	/*para que no journalice los campos si no cobra sellado*/
		clearfield siaf:ProvImpuesto
		clearfield giros:adt_impp_impdesc
		clearfield siaf:adt_mot_serv
		clearfield giros:adt_impp_pdesc
		clearfield giros:Impp_pdesc_emi
		clearfield giros:Impp_impdesc_emi
		clearfield giros:Impp_pdesc_pag
		clearfield giros:Impp_impdesc_pag
	end if
END SUB

/*******/
