/****o* Pendientes de agrupación/OFB:post:MISClst_RepMismaSuc
* NOMBRE
*   OFB:post:MISClst_RepMismaSuc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:MISCRepPzasMismaSuc
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISClst_RepMismaSuc(link_num) 

LOCAL l_pieza LIKE  post:track_trace 
LOCAL l_fecha LIKE post:fecha 
LOCAL l_operador LIKE post:operador_tt
LOCAL l_print LIKE common:csr_string


	 CDS SELECT FROM DSC:TT_TAB BECOMES DSC:TT_CTX \
     WHERE (post:operador_tt == op:op_operator_id &&  \
    post:ent_misma_suc == "S")
      
	 CDS FINDFIRST DSC:TT_CTX NOLOCK
	
	 do 
			if (CDSRETVAL == -801) Then
	   	  	CDS ENDSELECT DSC:TT_CTX
    	  	break
			else
			
			 CDS EXTRACT DSC:TT_CTX post:track_trace INTO l_pieza \
			 post:fecha INTO l_fecha \
			 post:operador_tt INTO l_operador
			 
	  	 //busco si la pieza fue recibida, si existe en la tabla stockp
	  	  CDS SELECT FROM "stockp" BECOMES "stockp_ctx1" \
           WHERE (post:adt_stockp_pieza == l_pieza)
        CDS FINDFIRST "stockp_ctx1" NOLOCK   
        if (CDSRETVAL == -801)
          	CDS ENDSELECT "stockp_ctx1" 
         	
						FPRINT l_print " %-13.13e %-10.10e %-5.5e", \
						l_pieza,l_fecha,l_operador
			
						CALL post:MISCwrite_RepCGP(link_num,l_print)
	   	    	
	   	    	CDS FINDNEXT DSC:TT_CTX NOLOCK

        else
	        CDS ENDSELECT "stockp_ctx1"
	        CDS FINDNEXT DSC:TT_CTX NOLOCK
        endif
 	 	 ENDIF
	LOOP

END SUB

/*******/
