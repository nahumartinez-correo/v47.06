/****o* Pendientes de agrupación/OFB:post:MISCuncheck_tx_sel
* NOMBRE
*   OFB:post:MISCuncheck_tx_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCuncheck_tx_sel(item)
LOCAL l_codigo LIKE common:csr_string
LOCAL l_codigo2 LIKE common:csr_string
LOCAL l_esCombo LIKE common:csr_string
LOCAL l_combo_nro LIKE post:combo_nro
LOCAL idx LIKE siaf:i

/*Averiguo si la tx pertenece a un combo de productos*/
call post:CDSload_PresuDet_ses 
CDS EXTRACT DSC:post:CONPresuDeta post:combo_nro INTO l_combo_nro  
IF (l_combo_nro > 0)
    l_esCombo = "S"
ELSE    
    l_esCombo = "N"
ENDIF

	//Borro del Picklist la tx seleccionada, que se desmarca.
	
	idx = PL_GETITEM
	DO
	    /*Extrae en el formato  xxxxxxxxxxS donde x es un blanco o nro y S es "S" o "N"*/
		CALL csr:myPickcontrol("Tx_ses_selected",common:csr_string,idx)
		
		IF (RETVAL < 0)
           RETURN (-2)
		ENDIF	

        /*Armo el item en el formato en que estan en la lista*/
        FPRINT l_codigo, "%10.10e%s",post:est_ses_vec[item][5],l_esCombo
			
		IF ( l_codigo == common:csr_string  )

            /*Elimino el item de la lista de seleccionados*/
            l_codigo2 = post:est_ses_vec[item][5]
            CALL post:MISCsacoTxEli(idx,l_combo_nro)
			
			/*idx = idx - PL_GETITEM
			CALL CSR:myPickdelete("Tx_ses_selected",common:csr_string,idx)*/
			IF (RETVAL < 0 )
			    MSGBOX "Error al tratar de eliminar la tx de la lista de eliminados",0x00,"Error"
			    RETURN (-2)
			ENDIF
			RETURN (0)

		ELSE
			idx = idx + 1
		END IF

	LOOP
END SUB

/*******/
