/****o* Pendientes de agrupación/OFB:post:MISCenv_stockpHist
* NOMBRE
*   OFB:post:MISCenv_stockpHist
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postmisc.h"

SUB post:MISCenv_stockpHist(Proceso)
LOCAL Proyecto Like common:csr_string
LOCAL Parametros Like common:csr_string
	FYIMSG LST:common:fyimsg_list,"ENVIANDO STOCKP HISTORICO. POR FAVOR AGUARDE UN MOMENTO..."
	; Los scripts se ejecután ahora en forma remota a traves de un segundo host (host2)
    ; y será encargado este servidor de ejecutar los mismos. *** MDG
	CLEARFIELD common:csr_string_4096
	;CALL csr:get_profile_string("project","description",Proyecto) //Nombre del Proyecto
	CALL csr:moacurproj(Proyecto)
	fprint Parametros "%s;%s", Proyecto,Proceso
	CALL post:MISCmsgProcessHost2 ("STOCKP", Parametros, common:csr_string_4096)
	CALL post:MISCmsgScriptHost2 ("false", common:csr_string_4096)
	hcomm:INDhost_sndrt = OFB:post:MISCputMsgBufferhst2
    hcomm:INDhost_rcvrt = OFB:post:MISCgetresponseHost2
    call hcomm:COMM_send_HOST2
    IF (retval != 0) THEN
    	call post:MISCresponseMsgHost2("false")
    	call post:MISCerrorMsgHost2(retval,"ENVIO DE STOCKP HISTORICO")
    	if (retval == -2) then
    		return -2
    	end if
	else
		call post:MISCerrorMsgHost2(SIN_RESPUESTA_DEL_HOST,"")
		return -2
	END IF
    FYIMSG CLEAR
    /*
    LOCAL MosaicServer LIKE common:ExecString
    LOCAL DumpFileName LIKE common:ExecString
    LOCAL DumpName LIKE common:ExecString
    LOCAL NTServer LIKE common:ExecString
    LOCAL AuxFileName LIKE common:ExecString
    LOCAL Proyecto Like common:csr_string
    LOCAL Indice like post:tipo_produc

    LOCAL ServerIP LIKE common:ExecString
    LOCAL Account LIKE common:csr_string
    LOCAL Password LIKE common:csr_string
    LOCAL Dominio LIKE common:ExecString
    LOCAL DominioID LIKE common:ExecString
    LOCAL ComandoStockp LIKE common:ExecString
    LOCAL LineaComando LIKE common:ExecString
    LOCAL Testing Like common:csr_string
	LOCAL Archivo_Lockeo LIKE common:csr_string

    ;Obtengo informacion del archivo DDPROJ.INI
    CALL csr:get_profile_string("project","description",Proyecto) //Nombre del Proyecto
    CALL csr:get_profile_string("cdsmain","CDS_PRIMARY_NP",MosaicServer) //Nombre del SERVIDOR
    CALL CSR:get_profile_string("cdsmain","SERVER_IP",ServerIP) //Direccion IP del Servidor
    CALL csr:get_profile_string("project","Dominio",Dominio) //Nombre del Dominio para la conexión rclient
    CALL csr:get_profile_string("project","Account",Account) //Cuenta para la conexión rclient
    CALL csr:get_profile_string("project","Password",Password) //Password para la conexión rclient
    CALL csr:get_profile_string("project","ScriptStockp",ComandoStockp) //Comando a Ejecutar con el rclient
    CALL csr:variable_environment("DESARROLLO",Testing) //Variable de testeo

    if (ComandoStockp.numchars == 0) then
   		errmsg common:errmsg_list,"FALTA PARAMETRIA PARA EL ENVIO DE STOCKP HISTORICO\n( ITEM ScriptStockp DEL ARCHIVO DDPROJ.INI )\n"
        return -2
    endif

    call  csr:str_search (Proyecto, " ", Indice)
    Proyecto = substr(Proyecto,0,Indice)

	//Obtengo el path para buscar el archivo del Lockeo
    Archivo_Lockeo = ComandoStockp
    CALL CSR:fld_to_upper(Archivo_Lockeo)
    CALL CSR:str_search(Archivo_Lockeo,"STOCKP.PL",Indice)
    Archivo_Lockeo = SUBSTR(Archivo_Lockeo,0,Indice)
    FPRINT Archivo_Lockeo,"%sstockp_lock.log",Archivo_Lockeo

    if (Testing == "JNL") then

       CALL csr:file_open(1,FLD:ComandoStockp,"r")
       if (RetVal < 0) then
            fprint FLD:DumpName "NO SE PUEDE ABRIR EL ARCHIVO PARA ENVIO DE STOCKP HISTORICO\n(%s)\n" ComandoStockp
       		errmsg common:errmsg_list,FLD:DumpName
            return -2
       endif
       CALL csr:file_close(1)

       fprint NTServer "\\\\%s" FLD:MosaicServer

       ;Linea de comando a Ejecutar
       fprint LineaComando "perl %s %s %s",FLD:ComandoStockp,FLD:Proyecto,Proceso

    else

       if (Dominio == "") then
           fprint FLD:DominioID "%s %s" FLD:Account, FLD:Password
       else
           fprint FLD:DominioID "%s\\%s %s" FLD:Dominio, FLD:Account, FLD:Password
       end if

       ;Linea de comando a Ejecutar
       FPRINT LineaComando,"rclient %s /logon:%s /r \"%s %s %s\"", \
           FLD:ServerIP,\
           FLD:DominioID,\
           FLD:ComandoStockp,\
           FLD:Proyecto,\
           FLD:Proceso
    end if

    FYIMSG LST:common:fyimsg_list,"ENVIANDO STOCKP HISTORICO. POR FAVOR AGUARDE UN MOMENTO..."
    CALL csr:create_process LineaComando,SW_HIDE ,CSR_NOWAIT
		
	//Espero para que alcance a generar el LOG si está lockeado el proceso
	NAP 5000
	CALL CSR:file_open(2,Archivo_Lockeo,"r")
	IF (RETVAL == 0) THEN
		ERRMSG LST:common:errmsg_list,"YA EXISTE UN PROCESO STOCKP CORRIENDO EN ESTE MOMENTO"
		CALL CSR:file_close(2)
		RETURN (-2)
	END IF 
	CALL CSR:file_close(2)

	if (Testing.numchars > 0) then
        fprint AuxFileName "%s\\temp\\stockpHist.log",NTServer
        CALL csr:file_open(1,AuxFileName,"w")
        CALL csr:file_write(1,LineaComando)
        CALL csr:file_close(1)
    endif

    FYIMSG CLEAR
	*/

END SUB

/*******/
