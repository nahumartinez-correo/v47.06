/****o* Pendientes de agrupación/OFB:post:JNL_DP3_det
* NOMBRE
*   OFB:post:JNL_DP3_det
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postjnl.h"

SUB post:JNL_DP3_det
    /* B. Petrella - nov. 1999 	*/
LOCAL guia_esp_aux LIKE jnl_guia_especial
LET track_trace = substr(Pieza,0,13)
    CDS APPEND DSC:tlr:CONjnl_write \
		post:CaratulaSaca \
		post:PresNroSaca \
    	post:adt_codseq_nro \
		post:Pieza \
		post:track_trace \
		post:peso_en_kgs \
		post:codseq_dev
		
	/*Si el detalle de saca que estoy journalizando es simple especial
	debo jounalizar el codigo de la guia en caso contrario lo journalizo
	en blanco*/
	IF (jnl_simp_esp == "S")
		guia_esp_aux = jnl_guia_especial
	END IF
    CDS APPEND DSC:tlr:CONjnl_write \
        guia_esp_aux AS jnl_guia_especial \
        jnl_simp_esp        		
    
    /*MFM - Se agrega el campo del operador al que se le transfiere la pieza*/
    jnl_op_transf = ""
    CDS APPEND DSC:tlr:CONjnl_write \
    FLD:jnl_op_transf
    
    /*MFM*/
	CDS APPEND DSC:tlr:CONjnl_write \
		post:adt_stockp_pie_obs AS post:jnl_stockp_pie_obs \
		post:adt_stockp_reenc  AS post:jnl_stockp_reenc\
		post:adt_stockp_reenc_cul AS post:jnl_stockp_reenc_cul

	if (testflag(tlr:tran_flags,correction)) then
        /* Si se esta reversando hay que limpiar */
        /* los campos de stockp: adt_stockp_Baja = N, adt_stockp_devol_op = "", */
	  /* adt_stockp_devol_fe == "", adt_stockp_devol_hor = "" */
	  /* Y se actualizan: adt_stockp_ult_modfe, adt_stockp_ult_modho, adt_stockp_ult_modop */
		call CDSrevStockp_DP3
		/*MFM - Borro los Scaneos correspondientes a dicha devolución*/
		CALL CDSBorro_Scaneos("D")
	else
		/*MFM - Grabo los Scaneos correspondientes a dicha devolución*/
		CALL MISCes_TT(Pieza)
      	IF (RETVAL == 0) THEN
        	CALL MISCGrabo_Scaneos_DP
      	END IF 
	endif

END SUB

/*******/
