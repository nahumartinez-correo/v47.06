/****o* Pendientes de agrupación/OFB:post:JNLPagoCliente
* NOMBRE
*   OFB:post:JNLPagoCliente
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postjnl.h"

SUB post:JNLPagoCliente
    local varl_idx	like siaf:i

    call giros:JNLfirma_clave
    CDS APPEND DSC:tlr:CONjnl_write \
						giros:codigo_procesamiento \
						giros:cancelacion \
						post:climed_tipo \
						post:climed_numero \
						post:datos_msg105 \
						post:datos_msg106 \
						post:datos_msg107

    Cds Append DSC:tlr:CONjnl_write  \
					    CliCod         \
					    CliRaz         \
					    CliCuit	       \
					    IvaCod	       \
					    CliCatFisDsc   \
					    CliDom	       \
					    CliLoc	       \
					    CliCP	       \
					    CliProvDsc	   \
					    nro_recibo	   \
					    ctacte_recibo_id

    // se journalizan solo la cantidad de comprobantes ingresados 
    // (no todos los elementos del vector)
    let varl_idx = 0
    cds append DSC:tlr:CONjnl_write cant_comprob
    while (varl_idx < cant_comprob) 
        Cds Append DSC:tlr:CONjnl_write  \
        TipoComprobante[varl_idx] \
        NumComprobante[varl_idx]  \
        ImpComprobante[varl_idx]  \
        SignoComprob[varl_idx]
        let varl_idx = varl_idx + 1
    end while

    // se journalizan solo la cantidad de valores ingresados 
    // (no todos los elementos del vector)
    let varl_idx = 0
    cds append DSC:tlr:CONjnl_write cant_valores
    while (varl_idx < cant_valores) 
        Cds Append DSC:tlr:CONjnl_write  \
        ValorPago[varl_idx]     \
        BancoPago[varl_idx]     \
        Bco_Cuenta[varl_idx]    \
        NumCuenta[varl_idx]     \
        ImporteBanco[varl_idx]  \
        ImporteBase[varl_idx]   \
        Emision_Fecha[varl_idx] \
        Valor_Fecha[varl_idx]   \
        Cod_Interno[varl_idx]   \
        chq_clearing[varl_idx]
         
        let varl_idx = varl_idx + 1
    end while

    // FGB 23.3.2001: - Pedido como extension del PS 2425 - Se agrega campo con 
    // estado de conexion con SAP para la realizacion de la transaccion
    let post:jnl_sap_status = post:estado_conexion_sap

    Cds Append DSC:tlr:CONjnl_write  \
    siaf:importe       \
    siaf:importe2      \
    tes:es_tesoro      \
    post:jnl_sap_status  \
    post:cobranza_manual 

    /*VER!!!!!!!!!! */
    call post:MISCcampos_reporte(0,1,siaf:importe,NO_TARIFA)
    CALL csr:proc_list(F_APPEND,DSC:tlr:CONjnl_write,LST:LISTreporte,0)   

END SUB

/*******/
