/****o* Pendientes de agrupación/OFB:post:JNLafip
* NOMBRE
*   OFB:post:JNLafip
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postjnl.h"

SUB post:JNLafip
  local local_var like	siaf:idx

  let FLD:sf1_serv_desc = FLD:siaf:adt_mot_desc_tmp

  IF (!TESTFLAG(tlr:tran_flags,correction)) then
      move tlr:jnl_time to substr(siaf:afip_interfaze,19,6)
  endif
   CDS APPEND DSC:tlr:CONjnl_write  FLD:siaf:importe  \
                                    FLD:sf1_serv_desc \
                                    FLD:post:sf1_codbarras \
                                    FLD:sf1_secuencia  \
                                    FLD:sf1_id_terminal \
                                    FLD:sf1_id_paycode \
                                    FLD:sf1_cta_nro \
                                    FLD:sf1_firma \
                                    FLD:sf1_fec_vto \
                                    FLD:sf1_med_pago \
                                    FLD:sf1_moneda \
                                    FLD:sf1_tipo_vto \
                                    FLD:sf1_nro_lote \
                                    FLD:sf1_nro_secuencia \
                                    FLD:sf1_tipo_ingreso  \
                                    FLD:sf1_id_banco      \
                                    FLD:sf1_nro_asociado  \
                                    FLD:sf1_nro_autoriza  \
                                    FLD:sf1_clearing      \
                                    FLD:sf1_reimpresion
   
   //Agregado para saber si este registro debe ser procesado o no por la interfaz	
  if (!(testflag(tlr:tran_flags,correction))) then
  		post:HoraSF1 = tlr:jnl_time
  end if
  CDS APPEND DSC:tlr:CONjnl_write \
        							post:ProcesaInterfaz   \
        							post:HoraSF1

// MLD Se agregan campos

  let post:sf1_version_plataf = dsc:post:VersionPlataf
  CDS APPEND DSC:tlr:CONjnl_write \
    post:sf1_version_bobs \
    post:sf1_version_plataf \
	post:sf1_tipo_transac \
	post:sf1_cantidad
	
// MLD agrego arrays de medios de pago
   local_var = 0
   do
      if (local_var >= sf1_cantidad) then
         break
      end if
      CDS APPEND DSC:tlr:CONjnl_write \
      sf1_med_pago_vec[local_var] \
      sf1_moneda_vec[local_var] \
      sf1_importe_vec[local_var]
            
      local_var = local_var + 1
   loop	
   
   CDS APPEND DSC:tlr:CONjnl_write  FLD:siaf:adt_formulario \
                                    FLD:siaf:cuit_empresa  \
                                    FLD:siaf:per_fis_afipmmaaaa \
                                    FLD:siaf:nro_comprobante \
                                    FLD:siaf:form_grupo \
                                    FLD:siaf:form_impuesto \
                                    FLD:siaf:form_version \
                                    FLD:siaf:form_concepto \
                                    FLD:siaf:afip_reg_proc

   ;SMC Campos necesarios para NotaDeCredito (1088)
   Cds Append DSC:tlr:CONjnl_write  tes:es_tesoro \
   post:NroCompPago post:NroCompPago2
   Call JNLcamp_nota_credito

   CDS APPEND DSC:tlr:CONjnl_write  FLD:siaf:afip_interfaze
   CDS APPEND DSC:tlr:CONjnl_write  FLD:sf1_comprobante, FLD:siaf:afip_ticket
   CDS APPEND DSC:tlr:CONjnl_write  FLD:siaf:NroSecuenciaAFIP

   call post:MISCcampos_reporte(0,1,siaf:importe,NO_TARIFA)
   CALL csr:proc_list(F_APPEND,DSC:tlr:CONjnl_write,LST:LISTreporte,0)	    

	
END SUB

/*******/
