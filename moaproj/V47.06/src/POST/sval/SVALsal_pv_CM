/****o* Pendientes de agrupación/OFB:post:SVALsal_pv_CM
* NOMBRE
*   OFB:post:SVALsal_pv_CM
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postsval.h"

SUB post:SVALsal_pv_CM
    LOCAL LineaError  LIKE common:csr_string
    LOCAL Lpos        LIKE post:idx

    IF (!testflag(tlr:tran_flags,correction)) THEN
        IF (post:CliRaz.NUMCHARS == 0) THEN
    	    MSGBOX "DEBE SELECCIONAR UN CLIENTE.",OFB_OK,"ERROR"
    	    RETURN (-2)
    	END IF
        //valida que existan productos en el picklit.
        CALL post:MISChayPicksal_pv_CM
	    IF (RETVAL < 0) THEN	      
            MSGBOX "NO SE HAN SELECCIONADO PRODUCTOS.",0x00,"AVISO"
	        RETURN (-2)
	    END IF
    	CALL hcomm:COMM_stat_init
	END IF

    CALL siaf:SVALnivel_sup
    IF (RETVAL < 0) THEN
    	IF (testflag(tlr:tran_flags,correction)) THEN
    	    UNGETKEY RT_ESC //el supervisor no aprueba reversa,va al final del journal y sale.
    	END IF
        RETURN (-2)
    END IF

    IF (!testflag(tlr:tran_flags,correction)) THEN
    	    	
    	//Obtengo el secuenciador REMIT
		CALL post:MISCobtSecREMITO
		if (retval < 0)
			return -2
		else
			Fprint NroRemito "%04.4s%08.8s",common:br_CEC,adt_codseq_nro_final
		end if

		//Obtengo CAI del Remito
		CALL post:CDSobtCaiRemito
		//aunque el retval sea < 0 sigo con la tx.
    	    	    
      	//cgw:recorro el picklist con las salidas de prod.vs CM.
        Lpos = PL_GETITEM
        DO
	      CALL csr:myPickcontrol(DSC:Picksal_pv_CM,post:linea_spvCM,Lpos)
	      IF (RETVAL < 0) THEN
		      BREAK
	      END IF
          post:adt_prodvs_cod = SUBSTR(post:linea_spvCM,0,10)
          post:adt_prodvs_desc = SUBSTR(post:linea_spvCM,13,40)
          siaf:cantidad = SUBSTR(post:linea_spvCM,54,7)
          CALL post:CDSprodvs_load
          IF (RETVAL == 0) THEN
          	  IF (post:adt_prodvs_tarifa.numchars == 0 || post:adt_prodvs_tarifa == 0) THEN
    	  	      tes:es_tesoro = "S"
                  fld:adt_stock_codprod = adt_prodvs_cod
                  fld:adt_stock_coddep = 00		
		          CALL post:CDSreserva_stock(adt_stock_codprod,00,siaf:cantidad)
		          IF (RETVAL == 0) THEN
			          ;CALL CDSstock_load            
                      adt_stock_stock = adt_stock_stock - siaf:cantidad		
		              ;siaf:importe = post:adt_prodvs_tarifa * post:cantidad2
		              IF (post:adt_prodvs_tarifa.numchars == 0) THEN
		          	      CLEARFIELD post:adt_prodvs_tarifa
		              END IF
		              siaf:importe = post:adt_prodvs_tarifa * siaf:cantidad
                  
                      //cgw:Para que journalice la salida de c/producto.
		              siaf:imprime_comprobante = "N" //para que no ejecute impresion.
		              tes:es_tesoro = "S"
	                  UNGETKEY 0x190
	                  FLD:drv:INDjnl_rtn = OFB:post:JNLsal_pv_CM
			          CALL tlr:JNLtran
			          siaf:imprime_comprobante = "D" //vuelve al estado para impresion.
		          END IF
		      ELSE
		      	  FPRINT LineaError "INCONSISTENCIA - El PRODUCTO %-10.10s TIENE TARIFA CON VALOR MAYOR A CERO." post:adt_prodvs_cod
		      	  MSGBOX LineaError,0x00,"ERROR"
		      END IF	    
		  ELSE
		  	  FPRINT LineaError "INCONSISTENCIA - PRODUCTO INEXISTENTE: %-10.10s" post:adt_prodvs_cod
    	      MSGBOX LineaError,0x00,"ERROR"
          END IF
        Lpos = Lpos + 1
        LOOP
        CLEARFIELD drv:INDjnl_rtn

        /* cgw:cambie de lugar y se coloco antes de recorrer picklist
		//Obtengo el secuenciador REMIT
		CALL post:MISCobtSecREMITO
		if (retval < 0)
			return -2
		else
			Fprint NroRemito "%04.4s%08.8s",common:br_CEC,adt_codseq_nro_final
		end if

		//Obtengo CAI del Remito
		CALL post:CDSobtCaiRemito
		//aunque el retval sea < 0 sigo con la tx.
		*/

	ELSE
	    fld:adt_stock_coddep = 0
	    fld:adt_stock_codprod = adt_prodvs_cod
	    ; Se pisa este valor, al hacer un extract de la PresuAct, por eso lo recupero 
	    ;post:cantidad2 = siaf:cantidad
	    CALL post:CDSstock_load
	    ;Destruyo PickList que pudiera haber quedado
        CALL post:MISCdesPicksal_pv_CM
    END IF
END SUB

/*******/
