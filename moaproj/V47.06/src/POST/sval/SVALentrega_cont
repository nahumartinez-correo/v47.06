/****o* Contra Reembolso/OFB:post:SVALentrega_cont
* NOMBRE
*   OFB:post:SVALentrega_cont
* DESCRIPCION
*   Rutina que se ejecuta al confirmar la TX de Entrega de Piezas en contingencia.
*   Verifica que existan piezas ingresadas.
*   Journaliza el encabezado con otra pantalla
*   Llama a la rutina que actualiza los datos de las piezas en la stockp y las journaliza
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:post:TRANentrega_cont
* DOCUMENTACION
* SOURCE
*/
#include "postsval.h"

SUB post:SVALentrega_cont

LOCAL indice     LIKE siaf:i

	indice = PL_GETITEM
	call csr:myPickcontrol(dsc:aux_pic_total,common:csr_string,indice)
    if (retval < 0) then
    	msgbox "No hay piezas ingresadas",0x00,"Error"
    	drv:button = drv:last_button
    	CALL drv:but_up_enable
    	return -2
    end if

	MOVE "S" TO siaf:continua_transaccion
    POPUP siaf:SCRNcontinua
	IF (siaf:continua_transaccion == "N" || LASTKEY == 0x0190 ) THEN
    	call csr:restore_currentfield
		INIT 33,0
     	return -2
    END IF
    
	CLEARFIELD totalPiezasActivas
	REFRESH totalPiezasActivas
	
	/* Journaliza el encabezado con otra pantalla */
    drv:INDscr = SCR:post:SCRNentr_cont_hdr
    drv:INDjnl_rtn = OFB:post:JNLnada

    UNGETKEY RT_SEND
	CALL tlr:JNLtran
    UNGETKEY RT_SEND
	  	
	/*Actualizo las piezas seleccionadas y las journalizo*/ 
	indice = 0 + PL_GETITEM
	DO
		clearfield common:csr_string
		call csr:myPickcontrol(dsc:aux_pic_total,common:csr_string,indice)
		If (retval < 0) then //no encontró ninguna pieza más.
			BREAK
		End IF
		
		clearfield Pieza
		clearfield CRimp_cobrado
		clearfield entregaCont_date
		clearfield stockp_ctaOM

		Pieza = substr(common:csr_string,0,32)
	    CRimp_cobrado = substr(common:csr_string,33,12)
		entregaCont_date = substr(common:csr_string,68,8)
		stockp_ctaOM = substr(common:csr_string,77,10)
		call csr:trimfield(stockp_ctaOM)
		
		//Actualizo los datos de las piezas ingresadas en el picklist
		CALL CDSupd_entr_cont
		
		tlr:jnl_amount_1 = post:CRimp_cobrado
		siaf:importe = post:CRimp_cobrado
		
		 /* Journalizo el detalle*/
		siaf:adt_tran_codigo = 95006
       	siaf:codigo_siaf = 95006
		tlr:tran_mnemonic = "ENTCOND"
   		siaf:nombre_transac = "DETALLE DE PIEZAS ENTREGADAS EN CONTINGENCIA"
		drv:INDscr = SCR:post:SCRNentrega_cont
       	drv:INDjnl_rtn = OFB:post:JNLentrega_cont
       	CALL tlr:JNLtran
       	UNGETKEY RT_SEND   
		indice = indice + 1
		
	LOOP
	
	
 	CLEARFIELD drv:INDsend_rtn
    CLEARFIELD drv:INDscr
    CLEARFIELD drv:INDjnl_rtn
    CLEARFIELD drv:INDspc_rtn[0]
    CLEARFIELD drv:INDspc_rtn[2]
    
END SUB

/*******/
