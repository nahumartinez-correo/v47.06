/****o* Pendientes de agrupación/OFB:post:SVALsecuen_cc
* NOMBRE
*   OFB:post:SVALsecuen_cc
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postsval.h"

SUB post:SVALsecuen_cc
local varl_convertir like common:csr_string
local varl_secuen_tmp like adt_ccseq_numero

    //Convierto el nro. de secuencia a ASCII para encriptar
    fprint varl_convertir "%08.8s",nro_impre_tmp // adt_ccseq_numero
    // FGB 23.2.2001 - Req. 2386 -
    // Por problemas en la encriptacion/desencriptacion de la secuencia
    // se comenta dicho proceso.
    // call BlowFishEnc(varl_convertir,adt_ccseq_numero)
    move varl_convertir to adt_ccseq_numero
    // FGB fin

    // Guardo los valores en los campos de Backup
    call csr:proc_list F_COPY LST:post:LISTcc_seq_flds, \
                              LST:post:LISTbck_ccseq_flds

    // Autoriza modificacion de tablas (administracion de Tablas)
    call post:MISCAutorizoModif("cc_seq")
    if (retval < 0)
        resetflag admin:mode_flags,update
        resetflag admin:mode_flags,delete

	call CSR:proc_list(F_CLEAR,LST:LISTcc_seq_flds)
        call CSR:proc_list(F_REFRESH,LST:LISTcc_seq_flds)
        clearfield admin:adt_br_CEC
        refresh admin:adt_br_CEC
	return (-2)
    end if

    drv:save_button = drv:last_button
    if (testflag(admin:mode_flags,update)) then
        call CDSccseq_save

   	;fprint varl_convertir "%s",bck_ccseq_numero
        ;clearfield common:csr_string
    	;call BlowFishEnc(varl_convertir,common:csr_string)
    	;bck_ccseq_numero = common:csr_string

        call post:MISCJournalTablas
        call drv:side_bar_disable
        resetflag admin:mode_flags,update
    else
        if (testflag(admin:mode_flags,delete)) then
            resetflag admin:mode_flags,delete
            call lib:adt_report_verify
            if (retval == 0) then
                //call MISCind_secuen
                call siaf:TRANreport_driver
            else
                if (retval == -2) then
                    return (-2)
                end if
            end if
            call lib:adt_delete_verify
            if (retval == 0) then
                call CDSccseq_del 
                
	        ;fprint varl_convertir "%s",bck_ccseq_numero
                ;clearfield common:csr_string
    		;call BlowFishEnc (varl_convertir,common:csr_string)
    		;bck_ccseq_numero = common:csr_string

                call post:MISCJournalTablas
                call drv:side_bar_disable
                if (retval != 0) then
                    drv:button = drv:save_button
                    call drv:but_up_enable
                    return (-1)
                end if
            end if
        else
            if (testflag(admin:mode_flags,imprimir)) then
                resetflag admin:mode_flags,imprimir
                printdoc OFB:PRTsecuen_cc,laser, \
                         "Imprimiendo Documento, un momento por favor..."
            end if
        end if
    end if
    call CSR:proc_list(F_CLEAR,LST:LISTcc_seq_flds)
    call CSR:proc_list(F_REFRESH,LST:LISTcc_seq_flds)
    clearfield admin:adt_br_CEC
    refresh admin:adt_br_CEC
    return (-1)
END SUB

/*******/
