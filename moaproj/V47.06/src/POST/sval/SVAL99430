/****o* Adelantos/OFB:post:SVAL99430
* NOMBRE
*   OFB:post:SVAL99430
* DESCRIPCION
*   Rutina de Confirmacion de la TX De Adelanto CM (99430)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   OFB:post:MISCarmo_viaje_UP
* REFERENCIADO POR
*   LST:post:TRAN99430
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
*	http://jira.sibs.net/jira/browse/AUT-1265
* SOURCE
*/
#include "postsval.h"

SUB post:SVAL99430

 	local varl_marca	like post:nro_factura
	local varl_importe      like common:csr_string
	LOCAL l_nro_recibo LIKE post:adt_adelcm_id
	local varl_tipo_adel     like common:csr_string
	
	
	//Consulto si paga con cheque diferido
	if (post:estado_presu != 4 && post:climed_financiacion > 0) then
		if (post:pago_diferido == "S") then
			//no hago la pregunta porque sino le estaria preguntando dos veces
			//(una en el inicio y otra aca)
		else
			MSGBOX "Paga con Cheque Diferido?",OFB_YESNO2,""
			If (RETVAL == 6) Then
				post:pago_diferido = "S"
			Else
				post:pago_diferido = "N"
			End If
			call post:CDSUP_PagoDif_save
		endif
	end if
	
	//Seteo valores de campos y guardo en la Presu
	post:ModalidadAT = TRUE
	saldoAnticipo_CM = 0
	call CDSpresu_modalidadCM
	
	if (post:estado_presu == 4)
		
		call post:CDSpresu_climed_load
		
		if (siaf:motivo == "ADEMO") then
			CALL post:MISCacredito_adel
			varl_importe = imp_adel_mon * 100
		else
			varl_importe = post:anticipo_CM * 100
		endif
		//fprint post:consumo_operacion,"%s",CLIMED_SUMA
		//50295
		fprint post:consumo_operacion,"%s","A" //ALTA

		giros:codigo_procesamiento = 997032
		giros:hora_viaje = common:time_of_day
		giros:dia_viaje  = common:system_date
		call post:CDSobtiene_secuen("STAN")

		call post:CDSclimed_cheques
		if (retval == 0 )
			clearfield drv:INDhcomm_rtn
			clearfield drv:INDspc_rtn[1]
			clearfield giros:hora_viaje
			clearfield giros:dia_viaje	
			clearfield post:adt_codseq_nro
			clearfield post:consumo_operacion
		end if
	else
   		call post:PBadel_mon_lg
   		siaf:importe = anticipo_CM
		call post:CDSpresu_imp_consumo
	end if

   	siaf:importe = anticipo_CM
	
	post:PreDForFis = "RECIB"
	
	/*Se acumula el Importe Total con y sin IVA en la tabla AuxIngBr - Gabriel Falciola*/
	call MISCTotalTransac(siaf:codigo_siaf) 
	call post:MISCAcumTotalesSes
	
	post:INDPresuD_Dat = OFB:CDSappend_99430
    
    	//Controlar si admite cheque diferido
    	call post:MISCRestFlia
    
    	if (post:estado_presu != 4 )
    		Call post:MISCGrabaDetalleTrn 
	end if

  	if (estado_presu == 4) //ante ultima transaccion de presupuesto
     	;let PresEst = 2
     	;CALL CDSadt_presu_estado //marca el presupuesto como finalizado
     	
     	 
     	 // Obtengo el numero de recibo...
         clearfield nro_recibo
         call CDSccseq_get_num("REC",nro_recibo)
         if (retval < 0) then
             errmsg common:errmsg_list,"ERROR EN NUMERACION DE RECIBO.\nIMPOSIBLE CONTINUAR"
             call ESC99430
             return (-3) // Sale de la Trx!!
          end if
            
          fprint nro_recibo "%4.4d%8.8d" common:br_CEC,nro_recibo
          fprint l_nro_recibo "%015.15s", nro_recibo
          
          CALL post:CDSabmAdelCM("B", 0, 0, "")
	 	 
	 	
	 	 if (siaf:motivo == "ADEMO")
	 	 	  //aunque no se acredite en el momento se tiene que dar de alta en cero
	 	 	  // if (post:imp_adel_mon > 0) then
	 	 	   		CALL post:CDSabmAdelCM("A", imp_adel_mon, l_nro_recibo, CM_ADEL)
	 	 	   //end if
	 	 	   varl_tipo_adel = "M" //monetario
	 	 else
	 	 	CALL post:CDSabmAdelCM("A", siaf:importe, l_nro_recibo, CM_ADEL)
	 	 	   varl_tipo_adel = "A"
	 	 
	 	 endif
    	  
          //Grabar el nro de recibo en la presu para poder journalizarlo en el fin de sesion
          call post:CDSgrabo_recibo
         
          // obtengo la firma para el recibo
          fprint common:csr_string "%e%e%5.5d%5.5s%8.8d%12.12e" siaf:fecha,\
          siaf:hora,op:op_operator_id,common:br_CEC,nro_recibo,siaf:importe
            
          call csr:MD5checksum(common:csr_string,0,climed_recibo_id,1)
          if (retval != 0) then
              // si no anduvo el MD5 aunque sea sumo los valores y uso eso 
              // de marca
              let varl_marca = siaf:hora  + siaf:fecha + op:op_operator_id
              let varl_marca = varl_marca + substr(common:br_CEC,1,4) + nro_recibo
              let varl_marca = varl_marca + (siaf:importe * 100)
              // pongo un par de caracteres mas... (naf=no anduvo firma:) 
               fprint climed_recibo_id "naf%14.14d%1" varl_marca,substr(tlr:jnl_branch,0,1)
          end if
      //PS10218:Aunque el cheque no se acredite en el momento el importe del comprobante no puede quedar en cero.
	  varl_importe = siaf:importe * 100
	  fprint post:datos_msg108,"%-3.3s%1.1s%015.15s%012.12s",\
	    substr(post:PreDForFis,0,3),"",post:nro_recibo,varl_importe
      
     call post:MISCcm_armar_consumo(varl_tipo_adel)    	
	 if ( retval < 0 )
		return -2
	 end if
	  	
	 
      siaf:imprime_comprobante = "D"

	endif

  	RETURN (RETVAL)
	
END SUB

/*******/
