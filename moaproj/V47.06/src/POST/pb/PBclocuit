/****o* Pendientes de agrupación/OFB:post:PBclocuit
* NOMBRE
*   OFB:post:PBclocuit
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBclocuit
    LOCAL loc_tipodoc_tipo LIKE post:adt_TipoDoc_tipo
    LOCAL loc_tipodoc_desc LIKE post:adt_TipoDoc_desc

    loc_tipodoc_tipo = post:adt_TipoDoc_tipo
    loc_tipodoc_desc = post:adt_TipoDoc_desc
    drv:button = drv:last_button
    CALL drv:but_down_disable
    call drv:all_but_disable
    call post:MISCident_cli_clear
    post:adt_TipoDoc_tipo = loc_tipodoc_tipo
    post:adt_TipoDoc_desc = loc_tipodoc_desc
    call post:MISCidentif_cli_refr

    CALL CDSadt_clocuit_sel
    IF (RETVAL == 0) THEN

       adt_TipoDoc_tipo = CloTipDoc
       CALL FVALTipoDoc

       call MISCCliOca_existe
       enablecontrol drv:PBcb0
       
   	   if (CloInscripto != "N")
    	    call CDSCheq_CoefPart_IB
       	    if (retval != 0)
       	        call drv:back_but_status
       	        drv:button = drv:last_button
			    CALL drv:but_up_enable
       	  	    return (-2)
       	    end if
       end if
       CALL post:MISCidentif_cli_refr
       SETVALDONE CloCuit
       SETVALDONE CliRaz
    else
       call MISCCliOca_noexiste
       //limpia campos auxiliares del tipo de cliente
       clearfield post:bck_cli_tipo
       clearfield post:bck_TipoDoc
       clearfield post:bck_CloCuit
    END IF

    clearfield CliFranqueo
    clearfield CloSSFranq
    protfield  CliFranqueo
    protfield  CloSSFranq
    if (cli_tipo == 1)
       unprotfield CliFranqueo
       CloSSFranq = "N"
    else
        if (IvaCod != "CF")
            CloSSFranq = "N"
			if (cli_tipo != CLIUP) /*no UP!! - debe estar todo protegido!*/
      	        unprotfield CloSSFranq
			endif
            CliFranqueo = "N"
        end if
    end if
    refresh  CliFranqueo
    refresh  CloSSFranq

	if (adt_cativa_exeingbr == "N")
		CloInscripto = "N"
		refresh CloInscripto
		protfield CloInscripto
	else
	    if (cli_tipo != CLIUP) /*no UP!! - debe estar todo protegido!*/
		    unprotfield CloInscripto
	    endif
	end if

    /* No puede combinarse pago con tarjeta para estos clientes minoristas */
    /* cgw: No puede combinarse pago con cheque,cheque dif. para estos clientes minoristas */
    if ((TESTFLAG (MPtarjeta, MPpago_tarjeta) || TESTFLAG (MPcheque, MPpago_cheque) || \
        TESTFLAG (cheque_dif, UPpago_dif)) && post:cli_tipo == 2 && \
        (post:CloCuit == 99999999999 || post:CloCuit == 99999999995)) then
       	MSGBOX "No puede pagarse con tarjeta o cheque para este cliente generico",OFB_OK,"AVISO"
        clearfield post:CliRaz
        clearfield post:IvaCod
        clearfield post:adt_TipoDoc_tipo
        clearfield post:adt_TipoDoc_desc
        clearfield post:CloCuit
        refresh post:CliRaz
        refresh post:IvaCod
        refresh post:adt_TipoDoc_tipo
        refresh post:adt_TipoDoc_desc
        refresh post:CloCuit        
        unprotfield post:IvaCod
	    enablecontrol drv:PBcb4
	    unprotfield post:adt_TipoDoc_tipo
	    enablecontrol drv:PBcb13                
    end if
    call drv:back_but_status    
    drv:button = drv:last_button
    CALL drv:but_up_enable
    nextfield CloCuit
    IF (CloCuit.NUMCHARS == 0) THEN
        RETURN (-1)
    END IF
        
END SUB

/*******/
