/****o* Pendientes de agrupación/OFB:post:PBexcepCM_rango
* NOMBRE
*   OFB:post:PBexcepCM_rango
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBexcepCM_rango
	
/*MFM - Muestra los rangos de volumen/importe segun corresponda*/
	
	IF (post:excepCM_producto.NUMCHARS != 0) THEN
		
		CDS SELECT FROM DSC:TABexcep_productos BECOMES DSC:CONexcep_productos \
		WHERE post:op_operator_id == op:op_operator_id && \
		post:excep_prd_excepcion  == post:excepCM_id   && \
		post:excep_prd_codprod    == post:excepCM_producto
		
		/*CDS SELECT FROM DSC:TABconv_productos BECOMES DSC:CONconv_productos \
		WHERE post:op_operator_id == op:op_operator_id && \
		post:excep_prd_excepcion  == post:excepCM_id   && \
		post:excep_prd_codprod    == post:excepCM_producto*/
		
		let siaf:last_key = LASTKEY
		CDS MULTIDISPLAY DSC:CONexcep_productos LISTexcepCM_rango1
		//CDS MULTIDISPLAY DSC:CONconv_productos LISTexcepCM_rango1
	
	ELSE
		
		CDS SELECT FROM DSC:TABexcep_ventas BECOMES DSC:CONexcep_ventas \
		WHERE post:op_operator_id == op:op_operator_id && \
		post:excep_vta_excepcion  == post:excepCM_id
		
		/*CDS SELECT FROM DSC:TABconv_ventas BECOMES DSC:CONconv_ventas \
		WHERE post:op_operator_id == op:op_operator_id && \
		post:excep_vta_excepcion  == post:excepCM_id*/
		
		let siaf:last_key = LASTKEY
		CDS MULTIDISPLAY DSC:CONexcep_ventas LISTexcepCM_rango2
		//CDS MULTIDISPLAY DSC:CONconv_ventas LISTexcepCM_rango2
		
	END IF
		
	LET lib:err_retval = CDSRETVAL
    IF (CDSRETVAL == 0) THEN /* Esc */
		drv:button = 3
   		CALL drv:but_up_enable
		RETURN (-2)
    ENDIF
    CALL lib:MISCcds_find_err
    IF (RETVAL != 0)
    	drv:button = 3
   		CALL drv:but_up_enable
		RETURN (-1)
    ENDIF
    
    
    IF (post:excepCM_producto.NUMCHARS != 0) THEN
  		CDS EXTRACT DSC:post:CONexcep_productos  ALL
  		//CDS EXTRACT DSC:post:CONconv_productos  ALL
		excepCM_rango      = excep_prd_cant_hasta
		//excepCM_rango      = conv_prd_cant_hasta
		excepCM_descuento  = excep_prd_descuento
		//excepCM_descuento  = conv_prd_descuento
		
		excepCM_distorsion = excep_prd_distorsion
   		CDS ENDSELECT DSC:post:CONexcep_productos
   		//CDS ENDSELECT DSC:post:CONconv_productos
    ELSE
    	CDS EXTRACT DSC:post:CONexcep_ventas  ALL
    	//CDS EXTRACT DSC:post:CONconv_ventas  ALL
		excepCM_rango      = excep_vta_hasta
		//excepCM_rango      = conv_vta_hasta
		excepCM_descuento  = excep_vta_descuento
		//excepCM_descuento  = conv_vta_descuento
		
		excepCM_distorsion = excep_vta_distorsion
   		CDS ENDSELECT DSC:post:CONexcep_ventas
   		//CDS ENDSELECT DSC:post:CONconv_ventas
    END IF
    
    REFRESH excepCM_rango
    REFRESH excepCM_descuento
    REFRESH	excepCM_distorsion
    
    drv:button = 3
   	CALL drv:but_up_enable

END SUB

/*******/
