/****o* Pendientes de agrupación/OFB:post:PBrestBonifAgregar
* NOMBRE
*   OFB:post:PBrestBonifAgregar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBrestBonifAgregar
	local l_strAGrabar like common:csr_string
	local l_strTmp like common:csr_string
	drv:last_button = drv:button
    call drv:but_down_disable
	call drv:all_but_disable
	select (adt_rest_tituloRest)
		case REST_PRD
    		if (post:adt_promo_prodVsCod.numchars > 0)
    			call CSR:set_currentfield post:adt_promo_prodVsCod
    			CALL post:FVALpromoProdVs
    			if (retval == -2)
    				call drv:back_but_status
    				drv:button = drv:last_button
    				CALL drv:but_up_enable
    				NEXTFIELD post:adt_promo_prodVsCod
    				MSGBOX "DEBE INGRESAR UN PRODUCTO EXISTENTE",0x00,"Agregar Restriccion"
    				return 0
    			end if
    			if (opc_promo_prodVs == ELIGE_TODOS_PROD)
					fprint common:csr_string, "%-10.10s %40.40s" SELECCION_TODOS_COD, SELECCION_TODOS_PROD
				else
					fprint common:csr_string, "%-10s", adt_promo_prodVsCod
				endif
				; Me fijo si el item que no está cargando ya fue cargado y en ese caso muestro
				; un mensaje de error.
	    		call csr:PickOp PICKOP_SEARCH dsc:pic_promo_ProdVs common:csr_string //Buscar en el picklist
				if (retval < 0)
					call drv:back_but_status
    				drv:button = drv:last_button
    				CALL drv:but_up_enable
    				NEXTFIELD post:adt_promo_prodVsCod
					MSGBOX "DEBE CARGAR PRIMERO LA BONIFICACION DEL PRODUCTO",0x00,"Agregar Restriccion"
    				return 0
    			end if
    		else
    			call drv:back_but_status
    			drv:button = drv:last_button
    			CALL drv:but_up_enable
    			NEXTFIELD post:adt_promo_prodVsCod
    			MSGBOX "DEBE INGRESAR UN PRODUCTO",0x00,"Agregar Restriccion"
    			return 0
    		end if
    		break
    	case REST_ESP
			if (post:adt_promo_esp.numchars > 0)
				call CSR:set_currentfield post:adt_promo_esp
    			CALL post:FVALpromoEsp
    			if (retval == -2)
    				call drv:back_but_status
    				drv:button = drv:last_button
    				CALL drv:but_up_enable
    				NEXTFIELD post:adt_promo_esp
    				MSGBOX "DEBE INGRESAR UNA ESPECIE EXISTENTE",0x00,"Agregar Restriccion"
    				return 0
    			end if
    		else
    			call drv:back_but_status
    			drv:button = drv:last_button
    			CALL drv:but_up_enable
    			NEXTFIELD post:adt_promo_esp
    			MSGBOX "DEBE INGRESAR UNA ESPECIE",0x00,"Agregar Restriccion"
    			return 0
    		end if
    		if (post:adt_promo_subesp.numchars > 0)
				call CSR:set_currentfield post:adt_promo_subesp
    			CALL post:FVALpromoSubEsp
    			if (retval == -2)
    				call drv:back_but_status
    				drv:button = drv:last_button
    				CALL drv:but_up_enable
    				NEXTFIELD post:adt_promo_subesp
    				MSGBOX "DEBE INGRESAR UNA SUBESPECIE EXISTENTE",0x00,"Agregar Restriccion"
    				return 0
    			end if
    		else
    			call drv:back_but_status
    			drv:button = drv:last_button
    			CALL drv:but_up_enable
    			NEXTFIELD post:adt_promo_subesp
    			MSGBOX "DEBE INGRESAR UNA SUBESPECIE",0x00,"Agregar Restriccion"
    			return 0
    		end if
    		select (opc_promo_especies)
				case ELIGE_TODAS_ESP
					fprint l_strAGrabar, "%-20s - %-20s - %1s - %7s - %1s - %1s", SELECCION_TODAS_ESP, SELECCION_TODAS_DEN, adt_promo_EspTipoBon, adt_promo_EspecieBon, post:adt_promo_RestHab, adt_promo_Rest_I_E
					break
				case ELIGE_TODAS_DEN
					fprint l_strAGrabar, "%-20s - %-20s - %1s - %7s - %1s - %1s", adt_promo_esp, SELECCION_TODAS_DEN, adt_promo_EspTipoBon, adt_promo_EspecieBon, post:adt_promo_RestHab, adt_promo_Rest_I_E
					break
				case ELIGE_UNA_DEN
					fprint l_strAGrabar, "%-20s - %-20s - %1s - %7s - %1s - %1s", adt_promo_esp, adt_promo_subesp, adt_promo_EspTipoBon, adt_promo_EspecieBon, post:adt_promo_RestHab, adt_promo_Rest_I_E
					break
			end select
    		
			; Me fijo si el item que está cargando NO fue cargado y en ese caso muestro
			; un mensaje de error.
			l_strTmp =  substr(l_strAGrabar,0,43)
			call post:MISCexisteCargado(dsc:pic_promo_especies, l_strTmp)
			if (retval == false)
				call drv:back_but_status
    			drv:button = drv:last_button
    			CALL drv:but_up_enable
    			NEXTFIELD post:adt_promo_esp
				MSGBOX "DEBE CARGAR PRIMERO LA BONIFICACION DE LA ESPECIE",0x00,"Agregar Restriccion"
    			return 0
			END IF
    		break
    end select
    
    if (post:adt_restBon_elemento.numchars > 0)
	    CALL CSR:set_currentfield post:adt_restBon_elemento
	    call post:FVAL_restBon_element
	    ;falta validar el producto
	    if (retval == 0)
	    	post:adt_promo_tipoRest = "SRV"
	    	select (adt_rest_tituloRest)
				case REST_PRD
			    	fprint common:csr_string, "%10.10s %3.3s %5.5s", adt_promo_prodVsCod, \
	    				post:adt_promo_tipoRest, adt_restBon_elemento
					break
				case REST_ESP
			    	fprint common:csr_string, "%20.20s %20.20s %3.3s %5.5s", adt_promo_esp, adt_promo_subesp, \
	    				post:adt_promo_tipoRest, adt_restBon_elemento
					break
			end select
		    call csr:PickOp PICKOP_SEARCH fld:adt_rest_tituloRest common:csr_string //Buscar en el picklist
			if (retval < 0)
		    	CALL csr:f_saaddpl fld:adt_rest_tituloRest common:csr_string
				select (adt_rest_tituloRest)
					case REST_PRD
			    		adt_restPrv_cantSel = adt_restPrv_cantSel + 1
			    		call csr:PickOp PICKOP_SORT fld:adt_rest_tituloRest "0,10"
						break
					case REST_ESP
			    		adt_restEsp_cantSel = adt_restEsp_cantSel + 1
			    		call csr:PickOp PICKOP_SORT fld:adt_rest_tituloRest "0,41"
						break
				end select
			else
				errmsg LST:common:errmsg_list,"ESE VALOR YA FUE INGRESADO!!!"
		    endif
	    	clearfield post:adt_restBon_elemento
	    	refresh post:adt_restBon_elemento
	    endif
	endif
	NEXTFIELD post:adt_restBon_elemento
    call drv:back_but_status
    drv:button = drv:last_button
    call drv:but_up_enable
END SUB

/*******/
