/****o* Pendientes de agrupación/OFB:post:PBcanc_recep_reemp
* NOMBRE
*   OFB:post:PBcanc_recep_reemp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBcanc_recep_reemp
	/*Selecciona los registros con cheques habilitados para cancelar la recepcion*/
	drv:button = drv:last_button
	CALL drv:but_down_disable
	CDS SELECT FROM DSC:CheqRech_tbl BECOMES DSC:CheqRech_ctx1 where \
	post:fecha_reemp == "99999999"
	CDS MULTIDISPLAY DSC:CheqRech_ctx1 LST:post:LISTcancCheqRech
	IF (CDSRETVAL == -801) THEN
		MSGBOX "NO EXISTEN CHEQUES RECEPCIONADOS PARA CANCELAR",0x0190,"AVISO"
	ELSE
		IF (CDSRETVAL > 0) THEN 
			CDS EXTRACT DSC:CheqRech_ctx1 ALL
			cod_banco = tes:banco_codigo
			cuenta = siaf:cheqcuenta
			nro_cheque = siaf:nro_cheque
			fec_e = siaf:f_emision
			fec_d =  siaf:f_vencimiento
			monto_chk_dif = post:imp_aux
			CALL csr:proc_list(F_REFRESH,LST:LISTrecep_chqrech_up)
			call post:CDSclimed_load
			if (retval < 0 )
				msgbox \
				"Error al Obtener el Tipo y Nro de Cliente Medio.",OFB_OK,"Atencion"
			return -2
	end if
		END IF
	END IF
	CDS ENDSELECT DSC:CheqRech_ctx1
	drv:button = drv:last_button
	CALL drv:but_up_enable
END SUB

/*******/
