/****o* Pendientes de agrupación/OFB:post:PBcancReempRob
* NOMBRE
*   OFB:post:PBcancReempRob
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postPB.h"

SUB post:PBcancReempRob
    Local lidx like siaf:cantidad
    Local varl_picstr like common:csr_string

    LET drv:button = 0
    CALL drv:but_disable
    CALL drv:but_redraw

    //Selecciono los cheques a cancelar desde el journal
    CALL CDSselCancReemRob
    IF (RETVAL < 0)
	IF (RETVAL == -1)
	    call csr:proc_list (F_CLEAR,LST:LISTreemp_chqrech_up)
	    call csr:proc_list (F_REFRESH,LST:LISTreemp_chqrech_up)
	    LET drv:button = 0
	    CALL drv:but_enable
	    CALL drv:but_redraw
	    RETURN 0 //SALIO CON ESC
	ELSE
	    MSGBOX "NO EXISTEN CHEQUES REEMPLAZADOS PARA CANCELAR",0X00,"Atención"
	    LET drv:button = 0
	    CALL drv:but_enable
	    CALL drv:but_redraw
	    RETURN (-2)
	END IF
    ELSE
	//o_codigo = cod_banco
	//siaf:cheqcuenta = cuenta
	//siaf:nro_cheque = nro_cheque
	REFRESH NisUP
        REFRESH CliUP
        REFRESH cod_banco //tes:banco_codigo
        REFRESH cuenta //siaf:cheqcuenta
        REFRESH nro_cheque //siaf:nro_cheque
        REFRESH imp_aux
        REFRESH siaf:f_vencimiento
        REFRESH siaf:f_emision
        REFRESH siaf:moneda
        REFRESH medio_pago_desc
        REFRESH desc_moneda
        REFRESH tipo_mpago
   	REFRESH siaf:importe_chq
        REFRESH siaf:importe2
        REFRESH cod_banco
        REFRESH cuenta
        REFRESH nro_cheque
        REFRESH fec_e
        REFRESH fec_d
        REFRESH post:comision_rechazo
	CALL post:CDSclimed_load
	IF (RETVAL < 0) THEN
	    MSGBOX "Error al Obtener el Tipo y Nro de Cliente Medio.",OFB_OK,"Atencion"
	    RETURN -2
	END IF
    END IF

    //cargo los medios de pago que componen el reemplazo
    call csr:f_sadroppl "mediospagos"
    call csr:f_sanewpl "mediospagos" PIC:post:ctacte_mpag
    if (retval < 0) then
    	errmsg common:errmsg_list,"Error de Ejecucion"
    	return (-2)
    end if
    lidx = 0
    /* Lleno el picklist*/
    clearfield siaf:importe
    do 
       if (lidx == cant_valores ) then
	   break
       end if

       //cgw:limpio las variables de fecha si estan en 0.
       if (Emision_Fecha[lidx] == 0) then
           clearfield Emision_Fecha[lidx]
       end if
       if (Valor_Fecha[lidx] == 0) then
           clearfield Valor_Fecha[lidx]
       end if

       fprint varl_picstr "%2.2s %3.3s %20.20s %12.12s %16.16e  %10.10e %10.10e %3.3s" \
       ValorPago[lidx],BancoPago[lidx],Bco_Cuenta[lidx],NumCuenta[lidx],\
       ImporteBanco[lidx],Emision_Fecha[lidx],Valor_Fecha[lidx],chq_clearing[lidx]

       siaf:importe = siaf:importe + ImporteBase[lidx]
       call csr:f_saaddpl "mediospagos" varl_picstr
       lidx = lidx + 1
    loop

    //cgw:deshabilita el tipo de cliente.
    PROTFIELD post:Recep_CliTipo
    DISABLECONTROL drv:PBcb1

    LET drv:button = 0
    CALL drv:but_enable
    CALL drv:but_redraw
    UNGETKEY RT_TAB //cgw:para que no me quede el cursor en post:Recep_CliTipo.
END SUB

/*******/
