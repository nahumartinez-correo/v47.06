/****o* Pendientes de agrupación/OFB:post:PBclimed_ver_remi
* NOMBRE
*   OFB:post:PBclimed_ver_remi
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBclimed_ver_remi
	local error like tes:rend_marca_cierre

	drv:button = drv:last_button
    CALL drv:but_down_disable
	
    /*Seteo de flags a modo picklist, para que el foco este en el picklist*/
	SETFLAG drv:mode_flags,picklist_mode

	call csr:f_sadroppl(DSC:remitos_cliente)
	call csr:f_sanewpl(DSC:remitos_cliente,PIC:climed_remitos)

	CDS SELECT FROM DSC:post:TABremitos BECOMES DSC:post:CONremitos WHERE \
	post:op_operator_id == op:op_operator_id
    CDS FINDFIRST DSC:post:CONremitos NOLOCK
	DO
		IF (CDSRETVAL != 0) THEN
			BREAK
		END IF
    	CDS EXTRACT DSC:post:CONremitos ALL
    	if (post:ErrorPresu) then
    		error = "E"
    	else
    		error = ""
    	end if
    	FPRINT common:csr_string,"%-15.15s   %1.1s",post:remito_nro,error
   		call csr:f_saaddpl(DSC:remitos_cliente,common:csr_string)

		CDS FINDNEXT DSC:post:CONremitos NOLOCK
	LOOP
    CDS ENDSELECT DSC:post:CONremitos

    /*Mediante esta rutina csr se muestra el picklist*/
	CALL csr:f_sadopl DSC:remitos_cliente common:csr_string  
    /*Si el usuario selecciona una opciòn del picklist entonces queda en la linea */
    /*para que se pueda marcar/desmarcar*/
	If (RETVAL < 0) then
		clearfield PicDescrip2
	else	
		let PicDescrip2 = common:csr_string
		remito_nro = substr(PicDescrip2,0,15)
	End If
	refresh PicDescrip2
	
    /*Reseteo de flags de modo picklist*/
	RESETFLAG drv:mode_flags,picklist_mode

	drv:button = drv:last_button
    CALL drv:but_up_enable

END SUB

/*******/
