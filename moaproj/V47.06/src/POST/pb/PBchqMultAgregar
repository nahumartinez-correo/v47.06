/****o* Pendientes de agrupación/OFB:post:PBchqMultAgregar
* NOMBRE
*   OFB:post:PBchqMultAgregar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBchqMultAgregar
		
    local l_ret like lib:err_retval

    CALL post:FVALint_dif
    if (retval == -2)
	return -2
    endif

    CALL post:FVALimp_intereses
    if (retval == -2)
	return -2
    endif

    //cgw:valida cuenta.
    CALL CSR:set_currentfield post:cuenta
    CALL post:FVALcuenta
    if (retval == -2)
	return -2
    endif

    //cgw:valida nro.cheque.
    CALL CSR:set_currentfield post:nro_cheque
    CALL post:FVALnro_cheque
    if (retval == -2)
	return -2
    endif

    CALL CSR:set_currentfield post:fec_e
    call post:FVALfecha_emision
    if (retval == -2)
	return -2
    endif
    call post:FVALfecha_venc
    if (retval == -2)
	return -2
    endif
    /* cgw:se elimina el clearing
    if (tes:clearing.NUMCHARS == 0) then
        errmsg common:errmsg_list,"Clearing Incompleto."
        nextfield fec_e
        return (-2)
    else
    	call FVALclearing_cheq
        if (retval < 0)
            return (retval)
        end if	    	
    end if
    */
    call post:MISCvalida_AltaModif
    l_ret = retval

    // El importe debe ser del mismo signo que el total.
    if (l_ret == 0)
	if (giros:Giros_fld * importeChqMult < 0)
	    MSGBOX "El signo del importe ingresado es invalido!" OFB_OK "ERROR"
	    retval = -2
	endif
	if ((importeChqMult + 0) == 0)
	     MSGBOX "El importe ingresado es invalido!" OFB_OK "ERROR"
	     retval = -2
	endif
    endif

    if (l_ret == 0 && retval == 0)
	//viaje de consulta de intereses
	post:monto_chk_dif = importeChqMult - imp_intereses
	call MISCchqMultViaje
	if (retval == 0) then
	    call post:CDSchqMultsave
   	    if (retval == 0) then
   		//Marcar el cheque como usado en la tabla excep_diferido
   		CALL CDSMarcaChqUsado("S")
   	    endif
   	    clearfield post:excep_dif_codseq
   	    call MISCdisplayChqMult
   	    call ABMchqMultClear
    	    call ABMchqMultRefresh
	end if
        drv:button = 8
        call drv:but_enable
        drv:button = 9
        call drv:but_enable
        drv:button = 10
        call drv:but_disable
        drv:button = 11
        call drv:but_disable
	nextfield post:cod_banco
	setvaldone post:fec_e
	ungetkey RT_TAB
	REFRESH  WINDOW
        return (0)
    endif

    drv:button = drv:last_button
    call drv:but_up_enable
END SUB

/*******/
