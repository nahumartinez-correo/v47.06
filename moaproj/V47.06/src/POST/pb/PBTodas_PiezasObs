/****o* Pendientes de agrupación/OFB:post:PBTodas_PiezasObs
* NOMBRE
*   OFB:post:PBTodas_PiezasObs
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBTodas_PiezasObs

	call csr:save_currentfield
	let drv:button = 1
	call drv:but_disable
	
	CLEARFIELD common:csr_string
	/*Marco todas las piezas*/
	CDS SELECT FROM DSC:PiezaObs_tbl BECOMES DSC:PiezaObs_ctx \
	WHERE post:adt_pieza_op == op:op_operator_id && \
	post:MarcaIncluye == "--"
	
	
	CDS FINDFIRST DSC:PiezaObs_ctx LOCK
	
	DO
		IF (CDSRETVAL == 0) THEN
			CLEARFIELD adt_stockp_pieza
			CLEARFIELD MarcaIncluye
			
			CDS EXTRACT DSC:PiezaObs_ctx post:adt_stockp_pieza MarcaIncluye
			CALL CDSMarcar_Pieza(adt_stockp_pieza,"PiezasObs_ctx")
			CDS FINDNEXT DSC:PiezaObs_ctx LOCK
			FPRINT  common:csr_string,"%-32.32e %2.2e", adt_stockp_pieza, MarcaIncluye
			post:total_piezas_observ = common:csr_string
			post:Pieza = post:total_piezas_observ
			REFRESH post:total_piezas_observ
    		REFRESH post:Pieza
			
		ELSE
			CDS UNLOCK DSC:PiezaObs_ctx 
			CDS ENDSELECT DSC:PiezaObs_ctx
			BREAK
		END IF
		
	LOOP
	/*post:total_piezas_observ = common:csr_string
	post:Pieza = post:total_piezas_observ
	REFRESH post:total_piezas_observ
    REFRESH post:Pieza*/
	let drv:button = 1
	call drv:but_up_enable
	call csr:restore_currentfield
   	INIT 33,0
    SETVALDONE Pieza
END SUB

/*******/
