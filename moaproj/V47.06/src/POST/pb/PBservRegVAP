/****o* Registro VAP/OFB:post:PBservRegVAP
* NOMBRE
*   OFB:post:PBservRegVAP
* DESCRIPCION
*   Muestra los productos del tipo VAP de la tabla de Servicios
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:post:BUTregistroVAP
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBservRegVAP
	LOCAL l_indice_total LIKE post:indice_total
	
	//gpb:resguardo el valor del campo
	LET l_indice_total = post:indice_total

	drv:button = 1
	call drv:but_down_disable
	call drv:all_but_disable
	nextfield adt_serv_serv	
	CALL CDSservVAP_sel
	IF (retval < 0) THEN
		call drv:back_but_status
		drv:button = 1
		call drv:but_up_enable
		return (-2)
	ELSE
		//gpb:valido que exista el codigo en la tabla indiceVAP para que pueda totalizar
		//sino da error
		CALL  post:MISCcargoIndiceVAP(post:adt_serv_serv)
		//gpb:recupero el valor de campo
		LET post:indice_total = l_indice_total 
		IF (RETVAL < 0)
			call drv:back_but_status
			drv:button = 1
			call drv:but_up_enable
			return (-2)
		END IF
	END IF

	//resetvaldone adt_serv_serv	
	ungetkey RT_TAB
	call drv:back_but_status
	drv:button = 1
	CALL drv:but_up_enable
END SUB    
   
/*******/
