/****o* Pendientes de agrupación/OFB:post:PBrestAgregar
* NOMBRE
*   OFB:post:PBrestAgregar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBrestAgregar
    drv:last_button = drv:button
    CALL drv:but_down_disable
    if (post:adt_rest_elemento.numchars > 0)
	    CALL CSR:set_currentfield post:adt_rest_elemento
	    call post:FVALrestElemento
	    if (retval == 0)
			fprint common:csr_string, "%s - %s", adt_rest_elemento, common:csr_string
		    call csr:PickOp PICKOP_SEARCH fld:adt_rest_tituloRest common:csr_string //Buscar en el picklist
			if (retval < 0)
		    	CALL csr:f_saaddpl fld:adt_rest_tituloRest common:csr_string

				select (adt_rest_tituloRest)
					case REST_REG
			    		adt_rest_cantRegSel = adt_rest_cantRegSel + 1
						break
					case REST_PRV
			    		adt_rest_cantPrvSel = adt_rest_cantPrvSel + 1
						break
					case REST_SUC
					    adt_rest_cantSucSel = adt_rest_cantSucSel + 1
						break
					case REST_CLI
					    adt_rest_cantCliSel = adt_rest_cantCliSel + 1
						break
					case REST_UP
					    adt_rest_cantUpSel = adt_rest_cantUpSel + 1
						break
				end select

				call csr:PickOp PICKOP_SORT fld:adt_rest_tituloRest "0,40"
			else
				errmsg LST:common:errmsg_list,"ESE VALOR YA FUE INGRESADO!!!"
		    endif
	    	clearfield post:adt_rest_elemento
	    	refresh post:adt_rest_elemento
	    endif
	endif
	NEXTFIELD post:adt_rest_elemento
    drv:button = drv:last_button
    CALL drv:but_up_enable
END SUB

/*******/
