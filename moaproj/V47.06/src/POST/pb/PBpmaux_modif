/****o* Pendientes de agrupación/OFB:post:PBpmaux_modif
* NOMBRE
*   OFB:post:PBpmaux_modif
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBpmaux_modif
    local loc_cant like post:adt_pmaux_cant
    
    loc_cant = adt_pmaux_cant
    /* Modifica registros de la tabla AuxEspV */
    if (adt_pmaux_codmat.numchars == 0 || adt_pmaux_cant == 0 || \
    adt_pmaux_descmat.numchars == 0) then
	    errmsg lst:common:errmsg_list,"Falta ingresar algún campo"
	    drv:button = drv:last_button
        call drv:but_up_enable
        return (-1)
    endif 
    
    call post:MISChabilito_pm
    if (retval < 0)
	    errmsg lst:common:errmsg_list,"Primero debe Agregarlo, no se puede Modificar "
	    drv:button = drv:last_button
        call drv:but_up_enable
        call drv:but_disable        
        return (-2)
    end if
    Call csr:set_currentfield fld:post:adt_pmaux_codmat
    call FVALpm_material
    if (retval < 0) then
        drv:button = drv:last_button
        call drv:but_up_enable
        return (-2)
    end if

    Call csr:set_currentfield fld:post:adt_pmaux_cant
    call siaf:FVALcampo_no_cero
    if (retval < 0) then
        drv:button = drv:last_button
        call drv:but_up_enable
        return (-2)
    end if
    
        
    drv:button = drv:last_button
    call drv:but_disable

    // Por tesoro
    if (drv:dt_app == 4) then
        let adt_pmaux_op = op:op_tesoro_id
    else
    	let adt_pmaux_op = op:op_operator_id
    endif
    let adt_pmaux_fecha = common:system_date
    let adt_pmaux_suc   = op:op_branch_id    
    if (post:estado_presu == 3) then
        adt_pmaux_presu = 0
        refresh adt_pmaux_presu
    end if
    
    adt_pmaux_cant = loc_cant
    call post:CDSpmaux_save
    ;let siaf:cantidad = siaf:cantidad - post:cantidad  + adt_pmaux_cant    
    CALL MISCdisplay_prodmay
    CALL CSR:proc_list(F_CLEAR,LST:LISTprodmay_flds)
    CALL CSR:proc_list(F_REFRESH,LST:LISTprodmay_flds)

    ;NEXTFIELD adt_pmaux_codmat
    nextfield prodmay_desc
    drv:button = drv:last_button
    call drv:but_up_enable
    call drv:but_disable
    drv:button = 2
    call drv:but_enable
    drv:button = 4
    call drv:but_disable
    setvaldone adt_pmaux_codmat
    setvaldone adt_pmaux_cant
    clearfield post:flag_pm
    resetvaldone post:adt_pmaux_codmat
    
END SUB

/*******/
