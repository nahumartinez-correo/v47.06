/****o* Pendientes de agrupación/OFB:post:PBsecuen_cc_cod
* NOMBRE
*   OFB:post:PBsecuen_cc_cod
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBsecuen_cc_cod

local varl_button	like drv:button

    let varl_button = drv:last_button

    // para validar, necesito saber la sucursal...
    if (adt_ccseq_suc.NUMCHARS == 0) then
        errmsg common:errmsg_list,"DEBE SELECCIONAR UNA SUCURSAL"
    	CALL drv:but_up_enable
        nextfield adt_ccseq_suc
        return (-1)
    end if

    // selecciono los codigos para esa sucursal...
    CDS SELECT FROM DSC:post:TABccseq BECOMES DSC:post:CONccseq \
        WHERE adt_ccseq_suc == adt_ccseq_suc 
    if (cdsretval == 0) then
        // verifico que exista al menos un registro
        CDS MULTIDISPLAY DSC:post:CONccseq LST:post:LISTmdsp_ccseq_cod
        if (cdsretval > 0) then
            CDS EXTRACT DSC:post:CONccseq ALL
            if (cdsretval == 0) then
		// FGB 24.2.2001: - Req. 2386 - Ahora el numero de secuencia 
		// no esta encriptado
		move post:adt_ccseq_numero to nro_impre_tmp
                call csr:proc_list F_REFRESH LST:post:LISTcc_seq_flds
                nextfield adt_ccseq_codigo
                drv:button = varl_button
                CALL drv:but_up_enable
                return (0)
            end if
        elseif (cdsretval == -801) then
            errmsg common:errmsg_list "NO HAY SECUENCIADORES PARA ESTA SUCURSAL"
            clearfield adt_ccseq_codigo
            drv:button = varl_button
            CALL drv:but_up_enable
            return (-2)
        end if
    end if
    // si llego hasta aca, es porque salio del multidisplay con esc y otro
    // tipo de error...
    drv:button = varl_button
    CALL drv:but_up_enable
    return (-2)
END SUB

/*******/
