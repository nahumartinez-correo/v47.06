/****o* Pendientes de agrupación/OFB:post:PBUtilityRubro
* NOMBRE
*   OFB:post:PBUtilityRubro
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBUtilityRubro
   CLEARFIELD codigo_cliente
   CLEARFIELD apellido_cliente
   CLEARFIELD sf1_codbarras_tmp
   clearfield identif_secun
   REFRESH codigo_cliente
   REFRESH apellido_cliente
   REFRESH sf1_codbarras_tmp
   refresh identif_secun

   if (post:utility_desc_prod.numchars == 0)
      ;SMC Selecciono todos los registros
      CDS SELECT FROM UTILITY_TAB BECOMES UTILITY_CTX where \
          post:utility_cod_prod == "IPLAN" sort "DscOrder"
   else
      ;SMC Selecciono solo los registros pedidos
      CDS SELECT FROM UTILITY_TAB BECOMES UTILITY_CTX where \
	      post:utility_cod_prod == "IPLAN" && \
	      post:utility_rubro == post:utility_desc_prod sort "DscOrder"
   endif
	
   CDS MULTIDISPLAY UTILITY_CTX post:LISTutilitiesRubro
   IF (CDSRETVAL > 0) THEN
      ;MOVE SUBSTR(common:csr_string,0,8) TO post:sf1_codbarras_tmp
      CDS extract DSC:UTILITY_CTX post:utility_codbarras
      move post:utility_codbarras to post:sf1_codbarras_tmp
   ELSE
      CDS ENDSELECT UTILITY_CTX
      INIT 33,0
   RETURN (-2)
   END IF
   CDS ENDSELECT UTILITY_CTX
   INIT 33,0
   REFRESH post:sf1_codbarras_tmp
   
   move post:sf1_codbarras_tmp to post:sf1_codbarras1
   REFRESH post:sf1_codbarras1
   setvaldone post:utility_desc_prod
   setvaldone sf1_codbarras_tmp
   UNGETKEY RT_SEND

END SUB

/*******/
