/****o* Pendientes de agrupación/OFB:post:PBreq_factura
* NOMBRE
*   OFB:post:PBreq_factura
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBreq_factura
    IF (post:IvaCod == "CF" && post:Modo != "R" && post:enAnulacion != "S" && \
		post:NotaCredito != "S" && post:NotaCreditoRev != "S" && \
		post:sistCaido != "S" && post:recienCaido != "S" && \
		post:sistCaidoGlobal != "S" && plataf:current_state != RECOVERY) THEN
                
        Clearfield post:Tipo_Formulario        
        /* Cambia Tipo Fomulario Consumidor Final */
	    call post:MISCCambiaFormulario
	    IF (RETVAL < 0) THEN
	    	Call post:MISCclear_FinSesion
			Call post:MISCdeshab1_reqfactu // cgw:deshabilita req_factura, setea segun corresponda
	    END IF	    
	    Refresh DocInic
	    Refresh DocFin
	    Refresh DocFiscal

	    /*Se agrega que si el importe total de la Sesion es 0, no se realicen las validaciones e
	    ingresos de los campos DocInic y DocFin - Gabriel Falciola*/
	    if (post:importe_sesion <= 0)
		    protfield DocInic
		    protfield DocFin
		    protfield cant
	    end if
	    if (sistCaido == "S")
		    setvaldone DocInic
		    setvaldone DocFin
		    ungetkey RT_SEND
	    else		
		   ; para marcar que ya empezo el manejo de caidas.
		   ; primero grabo el importe para que lo levante en caso de caida.
		   call post:CDSpresu_imp_save
		   call CDSgrbEstado("OK_")		
	    endif
	    if (DocFiscal == "TICKET")
		    revTicket = "S"
	    else
		    clearfield revTicket
	    end if	    
	END IF    	
END SUB

/*******/
