/****o* Pendientes de agrupación/OFB:post:PBTarif_arriba
* NOMBRE
*   OFB:post:PBTarif_arriba
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBTarif_arriba
    local col       like siaf:i
    local elem      like siaf:i
    local lcod      like Tarif_idx
    local indice    like Tarif_idx
    local idx       like Tarif_idx
    local pos       like common:local_int
    local lprec_ant like post:adt_tarif_precio
    local lstring   like common:csr_string

    call csr:getrowcol post:tarif_mult_prec
    col = retval   
    pos = (Tarif_idx + col)
    
    /****Si se modifico el precio, antes de moverme lo grabo en el picklist****/
    idx  = Tarif_idx + col + PL_GETITEM   
    call csr:myPickcontrol(dsc:aux_pic_medios,common:csr_string,idx)
    lcod = substr(common:csr_string,0,5)    
    If (lcod == 99999)
        clearfield tarif_mult_prec[col]
        refresh tarif_mult_prec[col]
    else          
        /*si es distinto al anterior, modificar el precio en el picklist*/
        lprec_ant = substr(common:csr_string,67,13)
        if (lprec_ant != tarif_mult_prec[col])        
            FPRINT lstring "  %-48.48e %-13.13e M %13.13e",common:csr_string,tarif_mult_prec[col],lprec_ant
        else
            FPRINT lstring "  %-48.48e %-13.13e O %13.13e",common:csr_string,tarif_mult_prec[col],lprec_ant            
        end if
        call csr:f_samodpl dsc:aux_pic_medios,lstring,common:csr_string,0,pos            
    end if    

    
    /****Simula el scroll****/
	if (testflag(lib:state_flags,scan_mode))
		return (0)
	end if
	if (Tarif_idx > 0)
		Tarif_idx = Tarif_idx - 1
		call MISCproc_tarif
		enablecontrol PBTarif_abajo //boton abajo
		keydef f32,PBTarif_abajo		
		/*		
    	if (Tarif_idx == 0)
		    nextfield tarif_mult_prec[]		    
		end if
		*/
    else     
	    indice = Tarif_idx + col + PL_GETITEM
	    call csr:myPickcontrol(dsc:aux_pic_medios,common:csr_string,indice)
	    lcod = substr(common:csr_string,0,5)
	    If (lcod != 99999 && col != 0)
	        ungetkey RT_BACKTAB /*arriba*/
	    end if        
	end if
                                          
           	    
    pos = (Tarif_idx + col)   
    if (pos != 0) //no estoy en el primer item del picklist    
        idx = Tarif_idx + col + PL_GETITEM
        call csr:myPickcontrol(dsc:aux_pic_medios,common:csr_string,idx)
        lcod = substr(common:csr_string,0,5)
        If (lcod == 99999)            
            Tarif_idx = Tarif_idx - 1
		    call MISCproc_tarif
        end if   
    else
        ungetkey RT_TAB /*abajo*/      
    end if
END SUB

/*******/
