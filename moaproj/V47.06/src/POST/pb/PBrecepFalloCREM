/****o* Contra Reembolso/OFB:post:PBrecepFalloCREM
* NOMBRE
*   OFB:post:PBrecepFalloCREM
* DESCRIPCION
*   Boton de seleccion de Fallo en pantalla de Recepcion de Fallos CREM.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:BUTRecepFalloCREM
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBrecepFalloCREM
    LOCAL oper      LIKE post:asign_falloCR_opdes
    LOCAL login     LIKE post:asign_falloCR_lopdes
    LOCAL l_importe LIKE post:FalloCrem_imp

    //cgw:Muestra los Fallos CREM a recibir.
    
	drv:button = drv:last_button
	CALL drv:but_down_disable

    IF (post:recep_falloCR_motivo.numchars == 0) THEN
        errmsg lst:common:errmsg_list,"Antes debe seleccionar un motivo"
        drv:button = drv:last_button
        CALL drv:but_up_enable
        CLEARFIELD post:recep_falloCR_select
        RESETVALDONE post:recep_falloCR_motivo
        RETURN (-2)
    END IF

	CALL post:CDSRecepFalloCR_sel
    IF (RETVAL < 0)
	  	drv:button = drv:last_button
	    CALL drv:but_up_enable
	    CLEARFIELD post:recep_falloCR_select
		CALL post:MISClimp_RecefalloCR  //cgw:limpia datos de la pantalla
		RESETVALDONE post:recep_falloCR_motivo
    	RETURN (-2)
	END IF

    //Mueve los campos de la tabla FallosCrem a la pantalla
    post:recep_falloCR_select = "S"
    post:recep_falloCR_imp = post:FalloCrem_imp
    IF (post:FalloCrem_imp < 0) THEN
        l_importe = post:FalloCrem_imp * -1
        post:recep_falloCR_imp = l_importe
    ELSE
        post:recep_falloCR_imp = post:FalloCrem_imp
    END IF

    siaf:importe = post:recep_falloCR_imp
    post:importe_origen = post:recep_falloCR_imp
    REFRESH post:recep_falloCR_imp
    
    //cgw:Esto es para el caso que anteriormente acepte la trx, sin haber aceptado el fallo, donde
    //    la sval me indicara que debo seleccionar un fallo CREM.
    //    De esta manera no vuelve a validar el motivo al aceptar la trx.
    SETVALDONE post:recep_falloCR_motivo

    NEXTFIELD post:recep_falloCR_observ
   
    drv:button = drv:last_button
    CALL drv:but_up_enable

END SUB

/*******/
