/****o* Pendientes de agrupación/OFB:post:PBpromoBlqAgregar
* NOMBRE
*   OFB:post:PBpromoBlqAgregar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBpromoBlqAgregar
	local l_strAGrabar like common:csr_string
	local l_strTmp like common:csr_string
	local bContinuar like siaf:i
	local b_existeTodosBlq like siaf:i
	drv:last_button = drv:button
    call drv:but_down_disable

	call post:MISCvalidarCargaBlq
    if (retval == 0)
		fprint common:csr_string, "%3s - %-10s - %-35s", TIPO_BLOQUE, adt_promo_serv, SELECCION_TODOS_BLOQUES
		call post:MISCexisteCargado(dsc:pic_promo_servicios, common:csr_string)
		b_existeTodosBlq = retval

    	select (opc_promo_bloques)
	    	case ELIGE_TODOS_BLOQUES
				fprint l_strAGrabar, "%3s - %-10s - %-35s - %1s - %7s", TIPO_BLOQUE, adt_promo_serv, SELECCION_TODOS_BLOQUES, adt_promo_BlqTipoBon, adt_promo_BloquesBon
				break
	    	case ELIGE_UN_BLOQUE
				fprint l_strAGrabar, "%3s - %-10s - %-31s - %1s - %1s - %7s", TIPO_BLOQUE, adt_promo_serv, adt_promo_destBloque, adt_promo_urgente,adt_promo_BlqTipoBon, adt_promo_BloquesBon

				break
		end select

		; Me fijo si el item que está cargando ya fue cargado y en ese caso muestro
		; un mensaje de error.
		l_strTmp =  substr(l_strAGrabar,0,54)
		call post:MISCexisteCargado(dsc:pic_promo_servicios, l_strTmp)
		if (retval)
			errmsg LST:common:errmsg_list,"ESE VALOR YA FUE INGRESADO!!!"
		else
			; Me fijo si está cargando un item particular y ya tiene una carga para
			; todos los items, en ese caso muestro un mensaje de error.
			bContinuar = true
			if (opc_promo_bloques == ELIGE_UN_BLOQUE && b_existeTodosBlq)
				errmsg LST:common:errmsg_list,"YA FUE CARGADA LA BONIFICACION PARA TODOS LOS BLOQUES !!!"
				bContinuar = false
			endif

			if (bContinuar)
		    	select (opc_promo_bloques)
			    	case ELIGE_TODOS_BLOQUES
						fprint common:csr_string, "%3s - %-10s", TIPO_BLOQUE, adt_promo_serv
						call post:MISCexisteCargado(dsc:pic_promo_servicios, common:csr_string)
						if (retval)
						    MSGBOX "YA EXISTEN BONIFICACIONES INGRESADAS, DESEA ELIMINARLAS Y AGREGAR LA BONIFICACION ACTUAL PARA TODOS LOS BLOQUES?",OFB_YESNO,"Agregar Bonificacion"
						    IF (RETVAL == OFB_IDYES) THEN
								fprint common:csr_string, "%3s - %-10s", TIPO_BLOQUE, adt_promo_serv
								; borro todas las que cumplen con common:csr_string
								call csr:PickOp PICKOP_SEARCH dsc:pic_promo_servicios common:csr_string
								idx = RETVAL
								while (idx >= 0)
									CALL CSR:myPickdelete(DSC:pic_promo_servicios ,common:csr_string,idx)
									adt_promo_cantBlqSel = adt_promo_cantBlqSel - 1
									fprint common:csr_string, "%3s - %-10s", TIPO_BLOQUE, adt_promo_serv
									call csr:PickOp PICKOP_SEARCH dsc:pic_promo_servicios common:csr_string idx
									idx = RETVAL
								end while
						    	CALL csr:f_saaddpl dsc:post:pic_promo_servicios l_strAGrabar
							    adt_promo_cantBlqSel = 1
							    call post:ABMpromoBlqClear
							    nextfield adt_promo_serv
						    END IF
						else
					    	CALL csr:f_saaddpl dsc:post:pic_promo_servicios l_strAGrabar
						    adt_promo_cantBlqSel = adt_promo_cantBlqSel + 1
						    call post:ABMpromoBlqClear
						    nextfield adt_promo_serv
						endif
						break
			    	case ELIGE_UN_BLOQUE
				    	CALL csr:f_saaddpl dsc:post:pic_promo_servicios l_strAGrabar
					    adt_promo_cantBlqSel = adt_promo_cantBlqSel + 1
					    call post:ABMpromoBlqClear
					    nextfield adt_promo_serv
						break
				end select
				call csr:PickOp PICKOP_SORT DSC:post:pic_promo_servicios "0,69"
			endif
	    endif
		nextfield adt_promo_serv
		;call post:ABMpromoBlqClear
		call post:ABMpromoBlqRefresh
    endif

    drv:button = drv:last_button
    call drv:but_up_enable
END SUB

/*******/
