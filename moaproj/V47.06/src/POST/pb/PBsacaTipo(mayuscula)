/****o* Expedicion/OFB:post:PBsacaTipo
* NOMBRE
*   OFB:post:PBsacaTipo
* DESCRIPCION
*   Campo tipo de Saca de la TX de Cierre de Saca. 
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   post:FVALsacaTipoDesc
* DOCUMENTACION
*   INICIATIVA 50571 (2019)
* SOURCE
*/
#include "postpb.h"

SUB post:PBsacaTipo
	/* Muestra los Tipos de Sacas	*/
	/* Jul. 1999 - B. Petrella -                	*/
	call csr:save_currentfield

      let drv:button = 1 /* Combo asoc al cpo. Tipo Saca */
	call drv:but_disable

	CALL CDSsacaTipo
	/*MFM - Req 3152 
	//50571 - permitir que dos operadores realicen el cierre del mismo tipo de saca.
	IF (RETVAL == -3) THEN
		MSGBOX "ESTA SACA ESTA SIENDO SELECCIONADA POR OTRO OPERADOR",0X00,"ERROR"
		let drv:button = 1 // Combo asoc al cpo. Tipo Saca
		call drv:but_up_enable
		call csr:restore_currentfield
    	INIT 33,0
		RETURN -2
	END IF*/
	let lib:err_retval = RETVAL /*ESC*/

	CALL MISCrefLlenSaca

      let drv:button = 1 /* Combo asoc al cpo. Tipo Saca */
	call drv:but_up_enable

	call csr:restore_currentfield
    	INIT 33,0
    /*MFM - Agosto 2000 - Se agrega esta pregunta porque sino jamás devolvía un -2 
    cuando se le daba ESC al picklist!*/
    if (lib:err_retval < 0) then
    	return -2
    else
    	/*MFM - Agosto 2000 - Protejo este campo luego de que se hizo una seleccion válida*/
    	protfield SacaTipoDesc
    	nextfield post:CaratulaSaca
    	return 0
    end if
END SUB

/*******/
