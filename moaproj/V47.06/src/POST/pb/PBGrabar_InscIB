/****o* Pendientes de agrupación/OFB:post:PBGrabar_InscIB
* NOMBRE
*   OFB:post:PBGrabar_InscIB
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

/*Agrega un item en el Picklist de la Inscripción de Ingresos Brutos - Gabriel Falciola*/
SUB post:PBGrabar_InscIB
local aux_coef like CloCoefPartProv
	if (CloProvin.numchars == 0 || \
	CloCoefPartProv.numchars == 0 || CloExento.numchars == 0)
		msgbox "Falta completar datos",OFB_OK,"ERROR"
		return (-2)
	end if
	if (!CloProvin.valdone)
		call csr:set_currentfield CloProvin
		call FVALProvInscIB
		if (retval != 0)
			nextfield CloProvin
			return (-2)
		end if
	end if
	if (!IngBCod.valdone)
		call csr:set_currentfield IngBCod
		call FVALCatTasInscIB
		if (retval != 0)
			nextfield IngBCod
			return (-2)
		end if
	end if
	if (!CloCoefPartProv.valdone)
		call csr:set_currentfield CloCoefPartProv
		call FVALCoefPartProv
		if (retval != 0)
			nextfield CloCoefPartProv
			return (-2)
		end if
	end if
	if (!CloExento.valdone)
		call csr:set_currentfield CloExento
		call FVALCloExentoIB
		if (retval != 0)
			nextfield CloExento
			return (-2)
		end if
	end if
/*	adt_prvta_tasa_cod = CloCatCodIB
	call post:CDSProvCatTas_load
	if (retval == 0 && IngBCod.numchars == 0)
		msgbox "Falta completar datos",OFB_OK,"ERROR"
		return (-2)
	end if
	if (CloCoefPartProv > 1)
		msgbox "El Coeficiente de Participación no puede ser mayor que 1",OFB_OK,"ERROR"
		return (-2)
	end if*/
	if (ModInscIngBr == "S")
		idx = idx + PL_GETITEM
		call csr:myPickcontrol(dsc:PICInscIngBr,common:csr_string,idx)
		aux_coef = substr(common:csr_string,6,9)
		TotPartIngBr = TotPartIngBr - aux_coef
		idx = idx - PL_GETITEM
		CALL CSR:myPickdelete(dsc:PICInscIngBr,common:csr_string,post:idx)
		itemcheck = itemcheck - 1
		clearfield ModInscIngBr
	end if
	/*Cheque si ya existe el registro*/
	call MISCcheq_save_InscIB
	if (retval != 0)
		return (-2)
	end if
	fprint InscIngBr_string "%s %-3.3s %9.9e %s" CloProvin IngBCod CloCoefPartProv CloExento
	CALL CSR:f_saaddpl dsc:PICInscIngBr InscIngBr_string
	itemcheck = itemcheck + 1
	TotPartIngBr = TotPartIngBr + CloCoefPartProv
	clearfield CloProvin
	clearfield IngBCod
	if (adt_CatIngBr_reqpart != "N")
		clearfield CloCoefPartProv
	end if
	clearfield CloExento
	refresh CloProvin
	refresh IngBCod
	refresh CloCoefPartProv
	refresh CloExento
	refresh InscIngBr_string
	setvaldone CloProvin
	setvaldone IngBCod
	setvaldone CloCoefPartProv
	setvaldone CloExento
	setvaldone InscIngBr_string
	enablecontrol drv:PBcb5
	disablecontrol drv:PBcb4
	nextfield CloProvin
	ungetkey RT_TAB
END SUB

/*******/
