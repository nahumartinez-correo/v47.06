/****o* Pendientes de agrupación/OFB:post:PBrecTmp
* NOMBRE
*   OFB:post:PBrecTmp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBrecTmp
    /* T&T: Recep. Pieza        */
    /* May. 1998 - B. Petrella -    */

    let Destino_aux = DestinoPieza
    let Pieza = Pieza_aux
    let idx = orden
    let SiNo_aux = SiNo
    let ContraReem_aux = ContraReembolso
    let CodSeqNro = adt_codseq_nro
    swapdup SiNoTT
    swapdup EnvioGdesCltes
    swapdup SiNoVD
    swapdup ImporteVD

    call csr:save_currentfield

    CALL MISCdeshabRecep

    CALL CDSsel_RecTmp
    IF (RETVAL == 0) THEN
        /* Resguardo el valor del campo Pieza en el area dup    */
        /* Para saber si modifica el T&T, y no permitir dar     */
        /* de alta uno ya existente.-                   */
        swapdup Pieza_aux
        dupfield Pieza_aux

        IF (SiNo == "S" || SiNoVD == "S")
            if (SiNo == "S")
            unprotfield ContraReembolso
        else
            protfield ContraReembolso
        end if
        if (SiNoVD == "S")
            unprotfield ImporteVD
        else
            protfield ImporteVD
        end if
        ELSE
            protfield ContraReembolso
        protfield ImporteVD
        END IF
      if (SiNoTT == "S")
        clearfield EnvioGdesCltes
            protfield EnvioGdesCltes
        else
        clearfield Pieza_aux
            protfield Pieza_aux
      end if

        call MISChabModBor
    ELSE

        let DestinoPieza = Destino_aux
        let Pieza_aux = Pieza
        let orden = idx
        let adt_codseq_nro = CodSeqNro
        let SiNo = SiNo_aux
        let ContraReembolso = ContraReem_aux

          swapdup SiNoTT
        swapdup EnvioGdesCltes
        swapdup SiNoVD
      swapdup ImporteVD

        IF (Estado_Bot == 1)
            call MISChabNuevoAgr
        ELSE
            CALL MISChabModBor
        END IF
    END IF
    call MISCrefRecep

    call csr:restore_currentfield
    NEXTFIELD post:SiNoTT
    INIT 33,0
END SUB

/*******/
