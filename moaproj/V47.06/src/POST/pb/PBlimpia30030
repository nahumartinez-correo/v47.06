/****o* Pago en Destino/OFB:post:PBlimpia30030
* NOMBRE
*   OFB:post:PBlimpia30030
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta  
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales  
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual  
* REFERENCIADO POR
*		post:BUT30030
* DOCUMENTACION
*   NI50479
* SOURCE
*/
#include "postPB.h"

SUB post:PBlimpia30030
	LOCAL l_last_button LIKE drv:last_button
	LOCAL l_estado LIKE post:stockp_ped_estAct
	
	l_last_button = drv:last_button 
	drv:button = drv:last_button    
	CALL drv:but_down_disable
	CALL drv:all_but_disable
	
	IF (post:track_trace.NUMCHARS > 0) THEN
		//dejo la pieza disponible para que pueda ser usada por otro operador
		l_estado = "RECI"
		//Si existe en la stockp,actualiza estado
		CALL post:CDSstockp_upd_estAct(l_estado,post:track_trace)
		IF (RETVAL < 0) THEN
			post:Pieza = post:track_trace
			//Si existe en la PEDpend,actualiza estado
			l_estado = "PEND"
			CALL post:CDSupd_PEDpend(l_estado)
			CLEARFIELD post:Pieza
		END IF		
	END IF
	
	//Elimino el picklist de memoria
 	CALL csr:f_sadroppl DSC:post:PickPiezasPED
 	
	//Creo el picklist
	CALL CSR:f_sanewpl DSC:post:PickPiezasPED PIC:post:PICpiezasPED 115 85
 	
 	//cargo el picklist con las piezas de la tabla "stockp" cuyos campos contengan 
 	//post:stockp_ped_estAct = "RECI" y post:adt_stockp_en_devol = "S" y post:stockp_ped_estAct = "PEND"
 	CALL post:MISCstockp_pzas_ped
 	//cargo el picklist con las piezas de la tabla "PEDpend" cuyos campos contengan
 	//(post:estado_pieza_ped = "RHD" o post:estado_pieza_ped = "RHO") y post:estado_local = "PEND"
	CALL post:MISCpedpend_pzas_ped
	
	CALL post:PCOL30030

;	CALL drv:back_but_status
;	drv:button = l_last_button
;	CALL drv:but_up_enable
END SUB

/*******/
