/****o* Pendientes de agrupación/OFB:post:PBsesion_anul_sel
* NOMBRE
*   OFB:post:PBsesion_anul_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBsesion_anul_sel
	LOCAL sesion_aux LIKE sesion_anul_string
	
	CALL MISCflecha_restore
	sesion_aux = sesion_anul_string
	
	CALL CDSsesion_anul_sel
	IF (RETVAL == 0) THEN
		//Verifico si no hay una entrega de pieza informada
		CALL post:CDSver_EntrScanOL
		IF (RETVAL < 0) THEN
			CALL MISClimpio_tran
			CLEARFIELD sesion_anul_string
			REFRESH sesion_anul_string
			CALL MISCflecha_restore
			CALL csr:cleararray(TranAnul_vec)
			CALL csr:proc_list(F_CLEAR,LST:LISTlimpio_flds_NC)
			CUTSCREEN SCR:post:SCRNanulacion,NOCURSOR
			JOINSCREEN SCR:post:SCRNanulacion,NOCURSOR
			CALL PCOLanulacion
			RETURN -2
		END IF
	
		FPRINT sesion_anul_string "%-20.20s %-10.10s %e %e %e" CliRaz DocFiscal DocInic DocFin importe_sesion
		REFRESH sesion_anul_string
		
		/*Seteo el modo de las Sesion - Gabriel Falciola*/
		Modo = adt_Modo
		//Creo el picklist que muestra las Transacciones disponibles para anular - Gabriel Falciola
		CALL csr:f_sadroppl DSC:PICanulacion_tran
		CALL CSR:f_sanewpl DSC:PICanulacion_tran PIC:PICanulacion_tran 605,332
		CALL CDSsel_anul_tran
		IF (RETVAL == 0) THEN
			ENABLECONTROL drv:PBcb1
			ENABLECONTROL drv:PBcb2
			CALL MISClimpio_tran
		ELSE
			CALL MISCflecha_restore
			CALL csr:cleararray(TranAnul_vec)
			CALL csr:proc_list(F_CLEAR,LST:LISTlimpio_flds_NC)
			CUTSCREEN SCR:post:SCRNanulacion,NOCURSOR
			JOINSCREEN SCR:post:SCRNanulacion,NOCURSOR
			CALL PCOLanulacion
		END IF
	ELSE
		CALL MISClimpio_tran
;		sesion_anul_string = sesion_aux
/*-----------------------------------------------------*/
		CLEARFIELD sesion_anul_string
		REFRESH sesion_anul_string
		CALL MISCflecha_restore
		CALL csr:cleararray(TranAnul_vec)
		CALL csr:proc_list(F_CLEAR,LST:LISTlimpio_flds_NC)
		CUTSCREEN SCR:post:SCRNanulacion,NOCURSOR
		JOINSCREEN SCR:post:SCRNanulacion,NOCURSOR
		CALL PCOLanulacion
/*-----------------------------------------------------*/
	END IF
	CALL MISCflecha_define
 
	IF (SUBSTR(common:csr_string_171,0,5) == "70610") THEN
		 SETFLAG giros:giros_masivos,proc_anul_masivos
		 DISABLECONTROL check_tran_0
		 drv:button = 2
		 CALL drv:but_disable
		 drv:button = 1
		 CALL drv:but_disable
	ELSE
		 RESETFLAG giros:giros_masivos,proc_anul_masivos
	END IF

END SUB

/*******/
