/****o* Pendientes de agrupación/OFB:post:PB_tt_CREM_eliminar
* NOMBRE
*   OFB:post:PB_tt_CREM_eliminar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"
SUB post:PB_tt_CREM_eliminar
local x like siaf:i
local z like siaf:i
local indice like siaf:i
local hayItemSeleccionado like siaf:i
    clearfield track_trace
    call csr:f_sadroppl "list_crem_a_eliminar"
    call csr:f_sanewpl "list_crem_a_eliminar" pic:giros:PICcargados_gm
    hayItemSeleccionado = 0
    IF (TESTFLAG (TranAnul_check,item_0)) then
        fprint common:csr_string "%s" track[0]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_0
        altercontrolset check_tran_0
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_1)) then
        fprint common:csr_string "%s" track[1]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_1
        altercontrolset check_tran_1
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_2)) then
        fprint common:csr_string "%s" track[2]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_2
        altercontrolset check_tran_2
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_3)) then
        fprint common:csr_string "%s" track[3]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_3
        altercontrolset check_tran_3
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_4)) then
        fprint common:csr_string "%s" track[4]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_4
        altercontrolset check_tran_4
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_5)) then
        fprint common:csr_string "%s" track[5]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_5
        altercontrolset check_tran_5
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_6)) then
        fprint common:csr_string "%s" track[6]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_6
        altercontrolset check_tran_6
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_7)) then
        fprint common:csr_string "%s" track[7]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_7
        altercontrolset check_tran_7
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_8)) then
        fprint common:csr_string "%s" track[8]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_8
        altercontrolset check_tran_8
        hayItemSeleccionado = 1
    end if
    
    IF (TESTFLAG (TranAnul_check,item_9)) then
        fprint common:csr_string "%s" track[9]
        call csr:f_saaddpl "list_crem_a_eliminar" common:csr_string
        resetflag TranAnul_check,item_9
        altercontrolset check_tran_9
        hayItemSeleccionado = 1
    end if
    if (hayItemSeleccionado) then
	    indice = PL_GETITEM
	    do
	    	call csr:myPickcontrol("list_crem_a_eliminar",common:csr_string,indice)
	    	if (retval < 0)
	    		break
	    	end if
            x = 0
            WHILE (x < 10)
                IF (track[x] == common:csr_string) then
                    WHILE (x < 10)
                	    z = x + 1
                	    IF (z != 10) THEN
	    			    	track[x] = track[z]
                	    	importe_crem[x] = importe_crem[z]
                	    	importe_crem_orig[x] = importe_crem_orig[z]
                	    	giros:formuCalc[x] = giros:formuCalc[z]
                	    	stockp_fecha_entrega[x] = stockp_fecha_entrega[z]
                	    ELSE
                	    	CLEARFIELD track[x]
                	    	CLEARFIELD importe_crem[x]
                	    	CLEARFIELD importe_crem_orig[x]
                	    	CLEARFIELD giros:formuCalc[x]
                	    	CLEARFIELD stockp_fecha_entrega[x]
                	    	RESETVALDONE importe_crem[x]
                	    END IF
                	    REFRESH track[x]
                	    REFRESH importe_crem[x]
                	    REFRESH stockp_fecha_entrega[x]
                	    x = x + 1
            		END WHILE
                    break
                end if
                x = x + 1
            END WHILE
            indice = indice + 1
        loop
        call csr:f_sadroppl "list_crem_a_eliminar"
        IF (siaf:codigo_siaf != 95010) then
            call post:MISCprot_tt_crem
            call post:MISCcalcGral_tt_CREM
        end if
        nextfield track_trace
        ungetkey RT_TAB
    else
        MSGBOX "No hay items seleccionados para eliminar",0x00,"Aviso"
    end if
END SUB
/*******/
