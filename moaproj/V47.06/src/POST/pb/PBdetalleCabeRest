/****o* Pendientes de agrupación/OFB:post:PBdetalleCabeRest
* NOMBRE
*   OFB:post:PBdetalleCabeRest
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBdetalleCabeRest
	local l_retval like lib:err_retval
	local l_cadena like common:csr_string
	drv:button = 10
    CALL drv:but_down_disable
	drv:button = 0
    CALL drv:but_disable
    drv:button = 1
    CALL drv:but_disable
    drv:button = 2
    CALL drv:but_disable
    drv:button = 3
    CALL drv:but_disable
    drv:button = 7
    CALL drv:but_disable
    call post:MISCArmo_PickCabe
	IF (post:adt_rest_cantRest > 0)
	    SETFLAG drv:mode_flags,picklist_mode
		CALL CSR:f_sadopl(DSC:post:pic_restCabe,common:csr_string)
		IF (retval == -1) THEN
			errmsg LST:common:errmsg_list,"NO HAY VALORES INGRESADOS!!!"
		ELSE
			IF (retval > -1 ) THEN
				l_cadena = common:csr_string
				adt_rest_tipoProd = (SUBSTR(l_cadena,0,3))
				select (adt_rest_tipoProd)
					case "SRV"
					case "PRD"
						CALL MISClongCadena (l_cadena,6,10)
						l_retval = retval
						adt_rest_clave1 = (SUBSTR(l_cadena,6,l_retval))
						break
					case "ESP"
						adt_rest_clave3 = (SUBSTR(l_cadena,6,20))
						adt_rest_clave2 = (SUBSTR(l_cadena,27,20))
						break
					case "MOT"
						adt_rest_clave4 = (SUBSTR(l_cadena,6,5))
						adt_rest_clave5 = (SUBSTR(l_cadena,12,2))
						adt_rest_clave6 = (SUBSTR(l_cadena,15,5))
						break
				end select
				if (aux_rest_tipoProd != adt_rest_tipoProd) then
					adt_rest_screen = 1
				end if
				aux_rest_tipoProd = adt_rest_tipoProd
				CALL CSR:set_currentfield post:adt_rest_tipoProd
				CALL post:FVALrest_tipoProd
				select (adt_rest_tipoProd)
					case "SRV"
					case "PRD"
						CALL CSR:set_currentfield post:adt_rest_clave1
						CALL post:FVALadt_rest_clave1
						break
					case "ESP"
						CALL CSR:set_currentfield post:adt_rest_clave3
						CALL post:FVALadt_rest_clave1
						CALL CSR:set_currentfield post:adt_rest_clave2
						CALL post:FVALadt_rest_clave2
						break
					case "MOT"
						CALL CSR:set_currentfield post:adt_rest_clave6
						CALL post:FVALadt_rest_clave1
						break
				end select
				aux_rest_tipoProd = adt_rest_tipoProd
				adt_rest_regHab = (SUBSTR(l_cadena,49,1))
				adt_rest_regTipo = (SUBSTR(l_cadena,51,1))
				if (adt_rest_regTipo != "I" && adt_rest_regTipo != "E") then
					CLEARFIELD adt_rest_regTipo
				end if
				adt_rest_prvHab = (SUBSTR(l_cadena,55,1))
				adt_rest_prvTipo = (SUBSTR(l_cadena,57,1))
				if (adt_rest_prvTipo != "I" && adt_rest_prvTipo != "E") then
					CLEARFIELD adt_rest_prvTipo
				end if
				adt_rest_sucHab = (SUBSTR(l_cadena,61,1))
				adt_rest_sucTipo = (SUBSTR(l_cadena,63,1))
				if (adt_rest_sucTipo != "I" && adt_rest_sucTipo != "E") then
					CLEARFIELD adt_rest_sucTipo
				end if
				adt_rest_cliHab = (SUBSTR(l_cadena,67,1))
				adt_rest_cliTipo = (SUBSTR(l_cadena,69,1))
				if (adt_rest_cliTipo != "I" && adt_rest_cliTipo != "E") then
					CLEARFIELD adt_rest_cliTipo
				end if
				adt_rest_upHab = (SUBSTR(l_cadena,73,1))
				adt_rest_upTipo = (SUBSTR(l_cadena,75,1))
				if (adt_rest_upTipo != "I" && adt_rest_upTipo != "E") then
					CLEARFIELD adt_rest_upTipo
				end if
				call post:ABMrestRefresh
				CALL post:MISCllenaSelPickDeta
			ELSE
				CALL post:ABMrestEnable
				CALL CSR:set_currentfield post:adt_rest_tipoProd
				CALL post:FVALrest_tipoProd
			END IF
		END IF
		nextfield adt_rest_tipoProd
	    RESETFLAG drv:mode_flags,picklist_mode
	ELSE
		fprint common:csr_string "NO HAY RESTRICCIONES CARGADAS PARA %s!", post:adt_rest_tipoProd
		MSGBOX common:csr_string,OFB_OK,"Aviso"
	END IF
    CALL post:ABMrestEnable
    call post:ABMrestTituloRefresh
    call post:ABMrestClavesRefresh
END SUB

/*******/
