/****o* Pendientes de agrupación/OFB:post:PBtipo_piezaUP
* NOMBRE
*   OFB:post:PBtipo_piezaUP
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

Sub post:PBtipo_piezaUP

	//Verificar que la NisUP este cargada
	IF (post:NisUP.numchars == 0)
		MSGBOX "Debe seleccionar una UP",0x00,"Error"
		drv:button = drv:last_button
		CALL drv:but_up_enable
		return -2
	END IF
	
	IF (apertura.numchars == 0 && TieneApertura >= 1)
		MSGBOX "Debe seleccionar una Apertura",0x00,,"Error"
		drv:button = drv:last_button
		CALL drv:but_up_enable
		return -2		
	END IF
	
	IF (clasifica_tt_UP == "S" && post:tipo_piezaUP.numchars > 0) then
		CALL CDSload_apertUP
		IF (retval < 0)
			msgbox "La Apertura seleccionada no se corresponde con el modelo de sucursal",0x00,"Error"
			clearfield tipo_piezaUP
			refresh tipo_piezaUP
			nextfield apertura
			drv:button = drv:last_button
			CALL drv:but_up_enable
			return -2		
		end if
	end if

	
	disablecontrol drv:PBcb6
	
	
	drv:button = drv:last_button
	CALL drv:but_down_disable
	SETFLAG drv:mode_flags, picklist_mode
	COMBOPICK drv:PBcb1
	RESETFLAG drv:mode_flags,picklist_mode
	If (RETVAL >= 0) Then
		
		PROTFIELD cant_piezasUP
		CLEARFIELD cant_piezasUP
		REFRESH cant_piezasUP
		CLEARFIELD corte_op
		REFRESH corte_op
		PROTFIELD corte_op
		DISABLECONTROL drv:PBcb3
		DISABLECONTROL drv:PBcb11
		CLEARFIELD piezaUP
		REFRESH piezaUP
		DISABLECONTROL drv:PBcb9
		CLEARFIELD totalPiezasActivas
		REFRESH totalPiezasActivas	
		disablecontrol drv:PBcb4
		disablecontrol drv:PBcb5
		MOVE common:csr_string TO tipo_piezaUP
		REFRESH tipo_piezaUP
		
		protfield apertura

		
		//De acuerdo al tipo de pieza sigo con la accion correspondiente
		CALL MISCtipo_piezaUP
		IF (RETVAL < 0)
			drv:button = drv:last_button
			CALL drv:but_up_enable		
			enablecontrol drv:PBcb6
			RETURN (-2)
		END IF
	
	
	
	End If
	//IF (tipo_piezaUP == "CONTROL SIN AR" || tipo_piezaUP == "CONTROL CON AR")
		enablecontrol drv:PBcb6
	//END IF
	INIT 33,0
	drv:button = drv:last_button
	CALL drv:but_up_enable
End Sub

/*******/
