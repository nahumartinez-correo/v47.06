/****o* Pendientes de agrupación/OFB:post:PBalta_cli_ident
* NOMBRE
*   OFB:post:PBalta_cli_ident
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBalta_cli_ident
	local prov_aux like post:CloProvin
	
	LET drv:button = drv:last_button
	CALL OFB:drv:but_up_enable
		
	post:adt_climay_nrodoc  = post:CloCuit
	post:adt_climay_tipodoc = post:adt_TipoDoc_tipo        
	call CDSExiste_CliMay
	
	if (retval < 0) then
		msgbox "El cliente que quiere dar de alta ya existe como mayorista",OFB_OK,"ERROR"
		return -2
	end if
	
	call csr:set_currentfield post:CloCuit
	
	call csr:set_currentfield post:CloCuit
	IF (post:CloCuit.numchars == 0)
		msgbox "Debe Ingresar Nro. de Documento",OFB_OK,""
		nextfield post:CloCuit
		RETURN (-2)
	END IF
	
	IF (post:IvaCod.numchars == 0)
		msgbox "Debe Ingresar Categoria IVA",OFB_OK,""
		nextfield post:IvaCod
		RETURN (-2)
	END IF
	
	IF (post:adt_TipoDoc_tipo.numchars == 0)
		msgbox "Debe Ingresar Tipo de Documento",OFB_OK,""
		nextfield post:adt_TipoDoc_tipo
		RETURN (-2)
	END IF
	
	CALL siaf:FVALcampo_no_cero
	
	IF (RETVAL < 0) THEN
		RETURN (-2)
	END IF

	call post:MISCverifico_clioca //cgw:verifica si cargo ingresos brutos
	IF (RETVAL < 0) THEN
		RETURN (-2)
	END IF

	call csr:set_currentfield post:CliRazBusq	/*	20000810 RSE */
	
	CALL post:FVALbusca_cliente			/*	20000810 RSE para que chequee si el campo razon social esta vacio*/
	IF (RETVAL < 0) THEN
		RETURN (-2)
	END IF

	CloTipDoc = adt_TipoDoc_tipo
	call csr:set_currentfield post:adt_TipoDoc_tipo
	IF (post:adt_TipoDoc_tipo.NUMCHARS == 0) THEN
		msgbox "    Campo Requerido    ",OFB_OK,""
		nextfield adt_TipoDoc_tipo
		RETURN (-2)
	END IF

	call post:CDSTipoDocu_load
	if (post:adt_TipoDoc_ver2dig == "S")
		post:CloTipDoc = post:adt_TipoDoc_tipo
		CALL post:CDSTipoDocu_existe
		lib:err_retval = retval
		if (lib:err_retval != 0)
			CALL post:FVALcuit2dig(post:CloCuit)
			IF (RETVAL < 0) THEN
				clearfield post:CloCuit
				refresh post:CloCuit
				NEXTFIELD post:CloCuit
				RETURN (-1)
			END IF
		end if
		NEXTFIELD post:CloCuit
	end if

	call post:CDSTipoDocu_load
	if (post:adt_TipoDoc_digver == "S")
		call csr:set_currentfield post:CloCuit
		CALL post:FVALcuit_digi_veri
		IF (RETVAL < 0) THEN
			RETURN (-2)
		END IF
	end if

	if (es_juridica == "S") then
		call csr:trimfield(CliRazon)
		if (CliRazon.numchars == 0) then
			nextfield CliRazon
			MsgBox "La Razon Social es obligatoria",OFB_OK,"ERROR"
			return -2
		end if
	else
		call csr:trimfield(CliNombre)
		if (CliNombre.numchars == 0) then
			nextfield CliNombre
			MsgBox "El nombre es obligatorio",OFB_OK,"ERROR"
			return -2
		end if 
		call csr:trimfield(CliApellido)
		if (CliApellido.numchars == 0) then
			nextfield CliApellido
			MsgBox "El apellido es obligatorio",OFB_OK,"ERROR"
			return -2
		end if   
	end if

	call csr:set_currentfield post:IvaCod
	IF (post:IvaCod.NUMCHARS == 0) THEN
		msgbox "    Campo Requerido    ",OFB_OK,""
		nextfield IvaCod
		RETURN (-2)
	else
		Call FVALIvaCod
	END IF

	call csr:set_currentfield post:CloInscripto
	IF (post:CloInscripto.NUMCHARS == 0) THEN
		msgbox "    Campo Requerido    ",OFB_OK,""
		NEXTFIELD post:CloInscripto
		RETURN (-2)
	END IF

	//SC 50260
	//gpb:AUT-518 
	CALL post:MISCvalidaCliMinor(siaf:codigo_siaf)

	IF (RETVAL < 0) THEN
		RETURN (-2)
	END IF

#ifdef COMPILA_SAP
  // Para evitar un pantalleo innecesario y molesto hago que solo llame a
  // cambiar de pantalla cuando se lo requiera
  if (CloCalle.numchars == 0 && IvaCod != "CF") then
#endif
		CALL post:MISCchequea_scr
		if (retval != 0)
			return (-2)
		end if
#ifdef COMPILA_SAP
   end if
#endif

	//RG3337
	call CDSExiste_CliOca
	if (retval == 0) then
		CALL CDS_RG3337_load
		IF (RETVAL == 0) THEN
			POPUP post:SCRNrg3337,-,PCOLrg3337,SVALrg3337
			if (lastkey == RT_ESC) then
				Return -2
			endif
		ELSE
			PROTFIELD esExentoRG3337
			LET esExentoRG3337 = "N"
			CLEARFIELD porcExentoRG3337
		END IF
	endif
	
	if (post:cli_tipo == OCASIONAL && CloCalle.numchars == 0 && IvaCod == "CF" && \
		(TESTFLAG (MPcheque, MPpago_cheque) || TESTFLAG (cheque_dif, UPpago_dif) || TESTFLAG (MPtarjeta, MPpago_tarjeta)))  then
		MsgBox "Debe cargar los datos del domicilio del cliente.",OFB_OK,"ERROR"
		return (-2)
	endif
    
	CALL CDSadt_clioca_save
	let lib:err_retval = retval
	if (lib:err_retval < 0)
		if (es_juridica == "S") then
			if (CloRazon != CliRazon) then
				MsgBox "Cliente Minorista Existente. La Razon Social no corresponde a este cliente",OFB_OK,"ERROR"
			else
				msgbox "Cliente Minorista Existente",OFB_OK,"ERROR"
			end if
			return (-2)
		else
			if (CloNombre == CliNombre && CloApellido == CliApellido) then
				msgbox "  Cliente Minorista Existente  ",OFB_OK,"ERROR"
			else
				MsgBox "Cliente Minorista Existente. El nombre y/o el apellido no se corresponde con lo registrado",OFB_OK,"ERROR"
			end if
			return (-2)    
		end if
		
		protfield CloInscripto
	else
		if (CloInscripto == "S")
			prov_aux = CloProvin
			idx = PL_GETITEM
			do
				call csr:myPickcontrol(dsc:PICInscIngBr,common:csr_string,idx)
				if (retval < 0)
					break
				end if
				
				CloProvin = substr(common:csr_string,0,1)
				call csr:trimfield CloProvin
				IngBCod = substr(common:csr_string,2,3)
				call csr:trimfield IngBCod
				CloCoefPartProv = substr(common:csr_string,6,9)
				call csr:trimfield CloCoefPartProv
				CloExento = substr(common:csr_string,16,1)
				call csr:trimfield CloExento
				CALL CDSadt_CliIngBr_save   /*por provincia*/
				if (retval < 0)             /* cliente existente en CliOca */
					msgbox "  Cliente Minorista Existente  ",OFB_OK,"ERROR"
				end if
				clearfield CloProvin
				clearfield IngBCod
				clearfield CloCoefPartProv
				clearfield CloExento
				idx = idx + 1
			loop
			call csr:f_sadroppl dsc:PICInscIngBr
			call CSR:f_sanewpl dsc:PICInscIngBr PIC:PICInscIngBr
			itemcheck = 0
			TotPartIngBr = 0
			CloInscripto = "S"
			clearfield CloCoefPartProv
			clearfield InscIngBr_string
			CloProvin = prov_aux
		end if
		
		refresh CloInscripto
		setvaldone CloInscripto
		protfield CloInscripto
	end if

END SUB

/*******/
