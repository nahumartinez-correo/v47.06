/****o* Pendientes de agrupación/OFB:post:PBagregarRecTmp
* NOMBRE
*   OFB:post:PBagregarRecTmp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "postpb.h"

SUB post:PBagregarRecTmp
    /* T&T: Recepcion Pieza     */
    /* May. 1998 - B. Petrella -    */
	let post:control = 1
    if (SiNoTT != "S" && SiNoTT != "N") then
        let common:csr_string = "Error: Debe ingresar S o N"
        errmsg common:errmsg_list,FLD:common:csr_string

        let drv:button = 4 /* Agregar */
        call drv:but_up_enable

      NEXTFIELD post:SiNoTT
        INIT 33,0
        return (-1)
    end if
    if (SiNoTT == "S")
        call FVALpiezaRecep
    	  NEXTFIELD post:Pieza_aux
    else
        call FVALenvioGCltes
        NEXTFIELD post:EnvioGdesCltes
    end if
    if (retval < 0)
        let drv:button = 4 /* Agregar */
        call drv:but_up_enable
        INIT 33,0
	  let post:control = 0
        return (-1)
    end if

    call FVALdestinoRec
    if (retval < 0)
        let drv:button = 4 /* Agregar */
        call drv:but_up_enable
        NEXTFIELD post:DestinoPieza
        INIT 33,0
	  let post:control = 0
        return (-1)
    else
	if (post:DestinoPieza == "SERV. ABONADOS")
		call FVALdep_DomPostal_2
		if (retval < 0)
			let drv:button = 4 /* Agregar */
        		call drv:but_up_enable
        		NEXTFIELD post:DestinoPieza
        		INIT 33,0
			let post:control = 0
        		return (-1)
		end if
	end if
    end if

    /* Verifica si SiNo (Contrareeembolso S/N) es Si */
    /* Obliga el importe (ContraReembolso) - Idem VD.*/
    IF (SiNo == "S" || SiNoVD == "S")
        IF (SiNo == "S")
        IF (ContraReembolso == 0)
                let common:csr_string = "Debe Ingresar el Importe del ContraReembolso."
                errmsg common:errmsg_list,FLD:common:csr_string
                call MISChabNuevoAgr
                NEXTFIELD post:ContraReembolso
                INIT 33,0
		    let post:control = 0
                return (-1)
            END IF
      END IF
        IF (SiNoVD == "S")
        IF (ImporteVD == 0)
                let common:csr_string = "Debe Ingresar el Importe del Valor Declarado."
                errmsg common:errmsg_list,FLD:common:csr_string
                call MISChabNuevoAgr
                NEXTFIELD post:ImporteVD
                INIT 33,0
		    let post:control = 0
                return (-1)
            END IF
      END IF

    END IF

    /* Verifica que no se haya dado de alta     */
    /* la misma pieza anteriormente.        */
    call MISCverifPieza
    if (retval < 0)
        let common:csr_string = "Pieza Existente."
        errmsg common:errmsg_list,FLD:common:csr_string
        call MISChabNuevoAgr
      NEXTFIELD post:SiNoTT
        INIT 33,0
	  let post:control = 0
        return (-1)
    else
        /* Asigna el Nro. de secuencia siempre que sea  */
        /* con ContraReembolso - B. Petrella - May. 1998*/
        IF ((SiNo == "S" || SiNoVD == "S" ) && \
             adt_codseq_nro == 0) then
            call post:CDSobtiene_secuen("CONTR")
            refresh adt_codseq_nro
        END IF

        let orden = orden_max + 1
        /* Graba en la tabla RecepTmp */
        call CDSgrabaRecTmp
        let orden_max = orden

        call MISCclearRecep
        call MISCrefRecep
        call MISChabNuevoAgr

        NEXTFIELD post:SiNoTT
        INIT 33,0
    end if
	let control = 0
END SUB

/*******/
