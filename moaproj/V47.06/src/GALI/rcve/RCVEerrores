/****o* Pendientes de agrupación/OFB:gali:RCVEerrores
* NOMBRE
*   OFB:gali:RCVEerrores
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galircve.h"

SUB gali:RCVEerrores

	call csr:cleararray gali:RCVEdesc_corta
	call csr:cleararray gali:RCVEdesc_larga
	
	comm get gali:RCVEjerarquia		from msg type EBCDIC length 1
	comm get gali:RCVEcant_errores	from msg type BINARY length 2
	
	let gali:indice = 0
	do
		/* Cantidad maxima de errores = 4 */
		if (gali:indice > 3) || (gali:indice >= gali:RCVEcant_errores) then
			break
		end if
		comm get gali:RCVEdesc_corta[ indice ]		from msg type EBCDIC length 6
		comm get gali:RCVEdesc_larga[ indice ]		from msg type EBCDIC length 40
		let gali:indice = gali:indice + 1
	loop
	
	if (gali:indice > 0) then
		protfield gali:RCVEdesc_larga[0]
		protfield gali:RCVEdesc_larga[1]
		protfield gali:RCVEdesc_larga[2]
		protfield gali:RCVEdesc_larga[3]
		protfield gali:RCVEdesc_larga[4]
		joinscreen gali:SCRNrcve_general,NOCURSOR
		FYIMSG drv:fyimsg_list,	"Presione una Tecla para Continuar"
		getkey
		
		/*  Si presiona culaquier tecla distinta del ENTER, simula que fue
			un ENTER para salir de los notecards - Laura 				*/
		if (lastkey != RT_SEND) then
			init 33,0
			ungetkey RT_SEND
		end if
		
		cutscreen gali:SCRNrcve_general,NOCURSOR
	end if
	
	if (RCVEjerarquia == "Z") then
		/* Si viene 'Z' la condicion de error es insalvable. Se cancela */
		return (-2)
	endif
	
	return (0)
	
END SUB

/*******/
