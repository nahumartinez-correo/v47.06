/****o* Pendientes de agrupación/OFB:gali:SENDcta_mon_comp_icn
* NOMBRE
*   OFB:gali:SENDcta_mon_comp_icn
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galisend.h"

SUB gali:SENDcta_mon_comp_icn
    /* Tran 0700 Extraccion efectivo */
    call gali:SENDheader

    /* si es reversa busco descripciones */
    if (!testflag(tlr:tran_flags,correction)) then
        /* cuenta */
        comm put gali:cuenta        to msg type BINARY length 4 justright fill '0'

        /* Digito Verificador */
            comm put gali:digito_verif  to msg type EBCDIC length 1 justright fill '0'

        /* Importe a imputar */
        let gali:importe_aux2 = gali:importe * 100
        fprint gali:string_info "%d" gali:importe_aux2
        comm put gali:string_info   to msg type ZPD length 7 justright fill '0'

        /* tipo de moneda */
        comm put gali:moneda_host   to msg type BINARY length 2 justright fill '0'

        /* Importe recibido por cajero */
        let gali:importe_aux3 = gali:importe * 100
        fprint gali:string_info "%d" gali:importe_aux3
        comm put gali:string_info   to msg type ZPD length 7 justright fill '0'

        /* Numnero de P.I.N. */
        comm put gali:clave         to msg type BINARY length 2 justright fill '0'

        /* Indicador control P.I.N. */
        comm put  indicador_pin to msg type EBCDIC length 1 justright fill '0'

    else
        call gali:SENDreversa
    end if

END SUB

/*******/
