/****o* Pendientes de agrupación/OFB:gali:SENDheader
* NOMBRE
*   OFB:gali:SENDheader
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galisend.h"

SUB gali:SENDheader
    /* Area de Encabezamiento del Director.dll */

    /* Fijo, binario de longitud 4 */
    let gali:fd = 35
    comm put fd  to msg type BINARY pattern "4321" length 4 justleft

    call csr:trimfield gali:tipo_doc
    if (gali:tipo_doc.numchars == 0) then
        fprint gali:string_info "ANON"
        clearfield gali:nro_doc
    else
        fprint gali:string_info gali:tipo_doc
    end if

    /* Tipo de Cliente binario de longitud 4 */
    comm put gali:string_info to msg type ASCII length 4 justleft fill ' '

    /* Identificacion del Cliente Ascii de longitud 15 */
    comm put gali:nro_doc to msg type ASCII length 15 justleft fill ' '

    /* Identificacion del Canal, valor Fijo de longitud 4 */
    comm put dsc:gali:canal_director to msg type ASCII length 4 justleft

    /* sucursal binario de 8 */
    fprint gali:string_info gali:sucursal
    comm put gali:string_info to msg type ASCII length 8 justleft fill ' '

    /* Operador que realiza la transaccion */
    comm put dsc:gali:operador_director to msg type ASCII length 8 justleft

    /* Password del Operador */
    comm put dsc:gali:mensaje_director to msg type ASCII length 8 justleft

    /* Nombre del Servicio */
    comm put dsc:gali:id_servicio to msg type ASCII length 8 justleft

    /*Carga el nombre del mensaje segun la transaccion*/
    call MISCcargo_msg_send

    /* Nombre del Mensaje */
    comm put msg_director to msg type ASCII length 8 justleft


    /*                          */
    /* Area de Encabezamiento de Entrada del HOST (AEE)         */
    /*                          */

    /* Identificacion host fijo en HSRE , longitud 4 */
    comm put dsc:gali:id_host   to msg type EBCDIC length 4 justright fill '0'

    /* casa emisora binario de 2 */
    comm put common:suc_gali      to msg type BINARY length 2 justright fill '0'

    /* numero de terminal */
    comm put op:op_operator_siaf_id     to msg type BINARY length 2 justright fill '0'

    /* numero de secuencia */
    comm put tlr:sequence   to msg type BINARY length 4 justright fill '0'

    /* casa receptora (EJ: sucursal de la cuenta) */
    comm put gali:sucursal  to msg type BINARY length 2 justright fill '0'

    /* codigo de transaccion (Si es reversa se agrega 5000 al codigo) */
    if (testflag(tlr:tran_flags,correction)) then
        codigo_galicia = codigo_galicia + 5000
    endif
    comm put gali:codigo_galicia    to msg type BINARY length 2 justright fill '0'

    /* jerarquia del supervisor */
    comm put gali:jerarquia to msg type EBCDIC length 1 justright fill '0'

    /* Sigla del generador de la transaccion */
    comm put dsc:gali:generador_trx to msg type EBCDIC length 2 justright fill '0'

    /* Numero de cajero */
    comm put op:op_operator_id  to msg type BINARY length 2 justright fill '0'

    /* Tipo de proceso */
    if (!testflag(tlr:tran_flags,supovr_granted)) then
        gali:tipo_proceso = 0 /* Operacion Normal */
    else
        gali:tipo_proceso = 2 /* Operacion Autorizada por Supervis.*/
    end if
    comm put gali:tipo_proceso  to msg type EBCDIC length 1

    /* Estado del proceso */
    comm put gali:estado_consulta   to msg type BINARY length 2 justright fill '0'

END SUB

/*******/
