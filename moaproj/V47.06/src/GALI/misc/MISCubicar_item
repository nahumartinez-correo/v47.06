/****o* Pendientes de agrupación/OFB:gali:MISCubicar_item
* NOMBRE
*   OFB:gali:MISCubicar_item
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galimisc.h"

SUB gali:MISCubicar_item
	/* Encuentra el item que contiene la cuenta de la transaccion que se
	esta' reversando */
	local CTA_PIC like gali:cuenta /* para guardar la cta. del picklist */

	let NRO_ITEM = 0 + PL_GETITEM /* empiezo a recorrer desde 0 */
	
	do
		/* Obtengo un elemento del picklist */
		call csr:myPickcontrol "cuentas" gali:item_picklist NRO_ITEM
		if (retval < 0 ) then
			return (-2)
		end if 
		
		/* Paso el nro de cuenta a un campo que sea comparable con el 
		   de gali:cuenta */
		fprint CTA_PIC "%9.9d" substr(gali:item_picklist,6,9)
					    

		/* Pregunto si la sucursal es la misma Y la cuenta es la misma
		   Y el tipo de moneda es el mismo, entonces es la cuenta 
		   que busco */
					/* 0000000000111111111122222222223333333333 */
					/* 01234 678901234-6789-1 34567890123456789 */	
		if (substr(gali:item_picklist,16,4) == gali:sucursal) then
		    if (CTA_PIC == gali:cuenta) then
			if (substr(gali:item_picklist,2,3) == LIT_DOLAR && \
				gali:moneda == 02 ) then
				break
			else
			 if (substr(gali:item_picklist,2,3) == LIT_PESOS && \
				gali:moneda == 00 ) then 
				break
		   	 end if 
			end if 
		    end if
		end if

		let NRO_ITEM = NRO_ITEM + 1
	loop

	let NRO_ITEM = NRO_ITEM - PL_GETITEM 
END SUB

/*******/
