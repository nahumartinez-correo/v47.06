/****o* Pendientes de agrupación/OFB:gali:MISCproceso_producto
* NOMBRE
*   OFB:gali:MISCproceso_producto
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galimisc.h"

SUB gali:MISCproceso_producto

	/* la moneda (mon_prod) se llena en el RCVE */
	let cod_prod = fld:gali:RCVEsubsistema[ indice ]
	let cta_prod = fld:gali:RCVEcuenta[ indice ]
	let suc_prod = fld:gali:RCVEsucursal[ indice ]
	let dig_prod = fld:gali:RCVEdigito_verif[ indice ]
	let saldo_disp = fld:gali:RCVEsaldo[ indice ]
	
	move "0" to est_prod /* estado de la cuenta */
	

	select (siaf:codigo_siaf)
		case 710 
		case 711
		case 700
		case 701
			let siaf:ind_calcu = gali:indice + 1
			break
		case else
			let siaf:ind_calcu = gali:indice
		   	break
	end select
	
	/* Clasifico el tipo de producto para poder contabilizarlos y 
	asi en el caso de que exista uno solo, ese ira por default */
	fprint common:csr_string "%2.2d %9.9s-%04.4s-%01.1s %3.3d",\
				mon_prod,\
				cta_prod, suc_prod,dig_prod,\
				siaf:ind_calcu
	select (cod_prod)
		  case COD_CA /* CAJA DE AHORRO */
			let cant_CA = cant_CA + 1
			move common:csr_string to datos_prod_CA
			break
		  case COD_CC /* Cuenta corrientes */
			let cant_CC = cant_CC + 1
			move common:csr_string to datos_prod_CC
			break
		  case COD_PR /* Prestamos */
			let cant_PR = cant_PR + 1
			move common:csr_string to datos_prod_PR
			break
	end select

	/* Arma linea del producto en el picklist */
	let siaf:ind_calcu = gali:indice + 1
	call gali:MISCaccount_to_pic
END SUB

/*******/
