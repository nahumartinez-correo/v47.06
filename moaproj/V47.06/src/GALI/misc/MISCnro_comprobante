/****o* Pendientes de agrupación/OFB:gali:MISCnro_comprobante
* NOMBRE
*   OFB:gali:MISCnro_comprobante
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "galimisc.h"

SUB gali:MISCnro_comprobante
	local fecha2 like tlr:bus_date
	local hora2 like siaf:hora
	local sumando1 like importe_aux2
	local sumando2 like importe_aux2

	/******************** ********************************************
	Realiza el calculo del numero de comprobante para las impresiones
	de las transacciones 0700/0710/0800/0810/0830/0860/0870
	*****************************************************************/

	/* Armo una fecha sin los digitos de milenio y centuria */
	fprint fecha2 "%2.2d%2.2d%2.2d" substr(tlr:bus_date,6,2) \
		      substr(tlr:bus_date,4,2),substr(tlr:bus_date,2,2)

	/* Armo una hora invertida (ssmmhh) */
	fprint hora2 "%2.2d%2.2d%2.2d" substr(siaf:hora,4,2) \
		      substr(siaf:hora,2,2),substr(siaf:hora,0,2)

	/* Armo el primer sumando como la union de la hora (ssmmhh) y 
	   la fecha (ddmmaa) */
	fprint sumando1 "%06.6d%06.6d" hora2,fecha2

	select (siaf:codigo_siaf)
	  case 700
	  case 710
             /* Armo el segundo sumando como la union de nro. sucursal, el nro.
	     de cajero (de cinco digitos) y el numero de operacion */
             fprint sumando2 "%03.3d%05.5d%04.4d" \
		op:op_branch_id,\
		op:op_nro_legajo,\
		siaf:secuencia_aux
	     break
	  case else
             /* Armo el segundo sumando como la union de nro. sucursal, el nro.
	     de cajero (de cinco digitos) y el numero de operacion */
   	     fprint sumando2 "%03.3d%05.5d%04.4d" \
		op:op_branch_id,\
		op:op_nro_legajo,\
		tlr:jnl_sequence
	     break
	end select

	/* Armo el importe como si fuera todo un entero 
           (corro los decimales dos lugares a la izquierda) */
	let importe_aux2 = gali:importe * 100.00

	/* Realizo la suma de sumando1,sumando2 y el importe 
           de la operacion tomado como entero */
	let importe_aux3 = (sumando1 + sumando2 + importe_aux2) 

	/* Saco el resto de sumatoria dividido 9987654321 para que el numero
	   no supere los 10 digitos obteniendo asi el nro. de comprobante */
	let gali:nro_comprobante = importe_aux3 % "9987654321"

	refresh gali:nro_comprobante

	/***************************************
         creo que para nosotros va protegido
	
	unprotfield nro_comprobante
	****************************************/
	
END SUB

/*******/
