/****o* Pendientes de agrupación/OFB:winhelp:wh_readpicklist
* NOMBRE
*   OFB:winhelp:wh_readpicklist
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "winhelpOFB.OFB.h"

SUB winhelp:wh_readpicklist
	CALL  startread
	IF (RETVAL != 0)
		RETURN
	END IF

	/* create the pick list	*/
	CALL  CSR:f_sanewpl dsc:wh_pickname PIC:wh_readpick

	/* get the current environment	*/
	CALL  CSR:winhelp WH_GETENV
	LET wh_retval = RETVAL

	/* always add the table of contents	*/
;	CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_contents

	/* current screen and field	*/
	IF (wh_retval & WH_SCRFLD)
		CALL  CSR:winhelp WH_INQKEY WH_SCRFLD
		IF (retval == 0)	/* retval 0 when inquiry is successful	*/
			CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_fieldandscreen
		END IF
	END IF

	/* current field	*/
	IF (wh_retval & WH_FLD)
		CALL  CSR:winhelp WH_INQKEY WH_FLD
		IF (retval == 0)	/* retval 0 when inquiry is successful	*/
			CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_field
		END IF
	END IF

	/* current screen */
	IF (wh_retval & WH_SCR)
		CALL  CSR:winhelp WH_INQKEY WH_SCR
		IF (retval == 0)	/* retval 0 when inquiry is successful	*/
			CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_screen
		END IF
	END IF

	/* current transaction */
	IF (wh_retval & WH_PCL)
		CALL  CSR:winhelp WH_INQKEY WH_PCL
		IF (retval == 0)	/* retval 0 when inquiry is successful	*/
			CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_tran
		END IF
	END IF

	/* current menu */
	IF (wh_retval & WH_MNU)
		CALL  CSR:winhelp WH_INQKEY WH_MNU
		IF (retval == 0)	/* retval 0 when inquiry is successful	*/
			CALL  CSR:f_saaddpl dsc:wh_pickname DSC:wh_menu
		END IF
	END IF

	/* collect from the pick list	*/
	CLEARFIELD winhelp:wh_string

/* Martin Maria Vicente */
/*	CALL  pickkeys
	CALL drv:popup_init
	display winhelp:help_pic_back
	CALL  CSR:f_sadopl dsc:wh_pickname FLD:wh_string
	lib:err_retval = RETVAL
	LET wh_retval = RETVAL
        CALL  CSR:f_sadroppl dsc:wh_pickname
	undisplay winhelp:help_pic_back
	CALL drv:popup_exit
	KEYDEF POP */
/* Martin Maria Vicente */
let wh_string = dsc:wh_contents

	IF (lib:err_retval < 0)
		CLEARFIELD common:csr_string
		return
	END IF
	IF (wh_string.numchars > 0)
		if (wh_string == dsc:wh_contents)
			let wh_opcode = 0
		END IF
		IF (wh_string == DSC:wh_fieldandscreen)
			LET wh_opcode = WH_SCRFLD
		END IF
		IF (wh_string == DSC:wh_field)
			LET wh_opcode = WH_FLD
		END IF
		IF (wh_string == DSC:wh_screen)
			LET wh_opcode = WH_SCR
		END IF
		IF (wh_string == DSC:wh_tran)
			LET wh_opcode = WH_PCL
		END IF
		IF (wh_string == DSC:wh_menu)
			LET wh_opcode = WH_MNU
		END IF
		CALL  CSR:winhelp WH_SELKEY wh_opcode
		let wh_retval = RETVAL
		IF (wh_retval < 0)
			CALL  wh_errmsg
			RETURN
		END IF
	END IF
;	UNGETKEY DC_FUNC2
END SUB

/*******/
