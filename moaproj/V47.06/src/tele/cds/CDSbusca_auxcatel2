/****o* Pendientes de agrupación/OFB:tele:CDSbusca_auxcatel2
* NOMBRE
*   OFB:tele:CDSbusca_auxcatel2
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "telecds.h"

SUB tele:CDSbusca_auxcatel2
	//Busco si encuentra por Categoria de Telegrama y Categoria de Iva y que sea distinto Servicio
	//ya que si existe alguno, no puede volver a cargar otro.
	CDS SELECT FROM DSC:adt_auxcatel_table BECOMES DSC:adt_auxcatel_ctx \
	WHERE adt_cattel_cod == fld:adt_cattel_cod && \
		  adt_cattel_cativa == fld:adt_cattel_cativa && \
		  adt_cattel_serv != fld:adt_cattel_serv
	CDS FINDFIRST DSC:adt_auxcatel_ctx NOLOCK
    LET lib:err_retval = CDSRETVAL
	CDS ENDSELECT DSC:adt_auxcatel_ctx
    IF (lib:err_retval == 0) THEN
		RETURN (-2)
	ELSE
		//Busco si existe en la catteleg con distinto servicio
		CDS SELECT FROM DSC:adt_catteleg_table BECOMES DSC:adt_catteleg_context \
		WHERE adt_cattel_cod == fld:adt_cattel_cod && \
		  	  adt_cattel_serv != fld:adt_cattel_serv && \
		  	  adt_cattel_cativa == fld:adt_cattel_cativa
		CDS FINDFIRST DSC:adt_catteleg_context NOLOCK
	    LET lib:err_retval = CDSRETVAL
	    CDS ENDSELECT DSC:adt_catteleg_context
	    IF (lib:err_retval == 0) THEN
			RETURN (-2)
		END IF	
	END IF
END SUB

/*******/
