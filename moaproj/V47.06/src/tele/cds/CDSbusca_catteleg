/****o* Pendientes de agrupación/OFB:tele:CDSbusca_catteleg
* NOMBRE
*   OFB:tele:CDSbusca_catteleg
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "telecds.h"

SUB tele:CDSbusca_catteleg
	CDS SELECT FROM DSC:adt_catteleg_table BECOMES DSC:adt_catteleg_context \
	WHERE tele:adt_cattel_cod == FLD:tele:adt_cattel_cod && \
	      tele:adt_cattel_serv == FLD:tele:adt_cattel_serv && \
	      tele:adt_cattel_cativa == FLD:tele:adt_cattel_cativa
	CDS FINDFIRST DSC:adt_catteleg_context NOLOCK
    LET lib:err_retval = CDSRETVAL
    IF (lib:err_retval != 0) THEN
		CDS ENDSELECT DSC:adt_catteleg_context
		//Si no lo encuentra, busco si encuentra por Categoria de Telegrama y Categoria de Iva
		//ya que si existe alguno, no puede volver a cargar otro con un servicio diferente
		CDS SELECT FROM DSC:adt_catteleg_table BECOMES DSC:adt_catteleg_context \
		WHERE tele:adt_cattel_cod == FLD:tele:adt_cattel_cod && \
			  tele:adt_cattel_cativa == FLD:tele:adt_cattel_cativa
		CDS FINDFIRST DSC:adt_catteleg_context NOLOCK
	    LET lib:err_retval = CDSRETVAL
	    IF (lib:err_retval == 0) THEN
	    	CDS ENDSELECT DSC:adt_catteleg_context
			MSGBOX "YA EXISTE UN SERVICIO ASOCIADO A ESTA CATEGORIA DE TELEGRAMA Y CATEGORIA DE IVA",0x00,"Error"		
			RETURN (-2)
		END IF
	END IF
	CDS ENDSELECT DSC:adt_catteleg_context
END SUB

/*******/
