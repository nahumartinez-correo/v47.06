/****o* Pendientes de agrupación/OFB:tele:CDSbusca_auxcatel
* NOMBRE
*   OFB:tele:CDSbusca_auxcatel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "telecds.h"

SUB tele:CDSbusca_auxcatel
	CDS SELECT FROM DSC:adt_auxcatel_table BECOMES DSC:adt_auxcatel_ctx \
	WHERE adt_cattel_cod == fld:adt_cattel_cod && \
		  adt_cattel_serv == fld:adt_cattel_serv && \
		  adt_cattel_cativa == fld:adt_cattel_cativa
	CDS FINDFIRST DSC:adt_auxcatel_ctx NOLOCK
	LET lib:err_retval = CDSRETVAL
	CDS ENDSELECT DSC:adt_auxcatel_ctx
	IF (lib:err_retval == 0) THEN
		CDS ENDSELECT DSC:adt_auxcatel_ctx
		RETURN (-2)
	ELSE
		//Si no lo encuentra, busco si encuentra por Categoria de Telegrama y Categoria de Iva
		//ya que si existe alguno, no puede volver a cargar otro con un servicio diferente
		CDS ENDSELECT DSC:adt_auxcatel_ctx
		CDS SELECT FROM DSC:adt_auxcatel_table BECOMES DSC:adt_auxcatel_ctx \
		WHERE adt_cattel_cod == fld:adt_cattel_cod && \
			  adt_cattel_cativa == fld:adt_cattel_cativa
		CDS FINDFIRST DSC:adt_auxcatel_ctx NOLOCK
		LET lib:err_retval = CDSRETVAL
		CDS ENDSELECT DSC:adt_auxcatel_ctx
		IF (lib:err_retval == 0) THEN
			RETURN (-2)
		ELSE	
			//Busco si existe en la catteleg con distinto servicio
			CDS SELECT FROM DSC:adt_catteleg_table BECOMES DSC:adt_catteleg_context \
			WHERE adt_cattel_cod == fld:adt_cattel_cod && \
			  	  adt_cattel_serv != fld:adt_cattel_serv && \
			  	  adt_cattel_cativa == fld:adt_cattel_cativa
			CDS FINDFIRST DSC:adt_catteleg_context NOLOCK
		    LET lib:err_retval = CDSRETVAL
		    CDS ENDSELECT DSC:adt_catteleg_context
		    IF (lib:err_retval == 0) THEN
				RETURN (-2)
			END IF
		END IF
	END IF
END SUB

/*******/
