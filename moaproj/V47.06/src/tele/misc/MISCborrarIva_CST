/****o* Pendientes de agrupación/OFB:tele:MISCborrarIva_CST
* NOMBRE
*   OFB:tele:MISCborrarIva_CST
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "telemisc.h"

SUB tele:MISCborrarIva_CST
   LOCAL loc_cuenta    LIKE post:cantidad
   LOCAL loc_impSinIva LIKE siaf:importe
   LOCAL loc_importe   LIKE siaf:importe
   LOCAL loc_tasa      LIKE post:adt_serv_aliciva
   LOCAL loc_cantidad  LIKE post:cantidad
   LOCAL NRO_ITEM      LIKE post:cantidad
   local ind like siaf:i

            loc_importe  = post:tarifa
            loc_tasa     = post:adt_serv_aliciva
            loc_cantidad = post:cantidad
            //SC 50170
            CALL post:MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
            //SC 50170 - FACTURACION
            /*post:ImporteSinIva = post:ImporteSinIva * -1
            post:ImporteIva = post:ImporteIva * -1
			Call post:CDSUpdate_ImpreIva(loc_tasa,post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)*/
	    post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
            post:ImporteIva_bis = post:ImporteIva_bis * -1
			Call post:CDSUpdate_ImpreIva(loc_tasa,post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
			loc_importe  = post:imp_bloques
            //SC 50170
            CALL post:MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
             //SC 50170 - FACTURACION
            /*post:ImporteSinIva = post:ImporteSinIva * -1
            post:ImporteIva = post:ImporteIva * -1
			Call post:CDSUpdate_ImpreIva(loc_tasa,post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)*/
	    post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
            post:ImporteIva_bis = post:ImporteIva_bis * -1
			Call post:CDSUpdate_ImpreIva(loc_tasa,post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
			if (post:promo_imp_srv_tot > 0 )
               loc_importe  = post:promo_imp_srv_tot
               //SC 50170
               CALL post:MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
   			    //SC 50170 - FACTURACION
   			   //Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
   			   Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
            end if

			if (post:promo_imp_blq_tot > 0 )
               loc_importe  = post:promo_imp_blq_tot
               //SC 50170
               CALL post:MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
   		//SC 50170 - FACTURACION
   			   //Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
   			   Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
            end if
             if (post:descuento > 0)
               loc_importe  = post:descuento
			   // Si la Tasa del Servicio Pedido por Nina PJM 22-02-1998
               loc_cantidad = 1
               //SC 50170
               CALL post:MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad,0)
			   //SC 50170 - FACTURACION
			   //Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
			   Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
            end if

            /*MFM Req 3159*/
            loc_cantidad = post:cantidad
            if (post:cant_opc > 0)
               loc_cuenta = 0
               
               DO
			      // FGB -Ps 9318 error de redondeo con opcional CDFA
			      ;PS9490
                  CALL post:MISCopcCantPart(post:cod_opc[loc_cuenta], post:tipo_produc, loc_cantidad)
       			  if (retval == 1) then
	                  loc_importe  = post:cos_opc[loc_cuenta]
	                  loc_tasa     = post:ali_opc[loc_cuenta]
        	          //SC 50170
        	          CALL post:MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
            	      	  //SC 50170 - FACTURACION
            	      	  /*post:ImporteSinIva = post:ImporteSinIva * -1
                	  post:ImporteIva = post:ImporteIva * -1
	                  Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva ,post:SobreTasaIva)*/
	                  post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
                	  post:ImporteIva_bis = post:ImporteIva_bis * -1
	                  Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis ,post:SobreTasaIva)
	                  if (post:promo_imp_opc_tot[loc_cuenta] > 0)
               			loc_importe  = post:promo_imp_opc_tot[loc_cuenta]
               			//SC 50170
               			CALL post:MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
   			  	 		//SC 50170 - FACTURACION
   			  	 		//Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
   			  	 		Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
            		  end if
            	  else
	                  /*MFM Req 3159 - Calculo el importe sin iva de cada carta por separado,
	                  en el caso de que sean multiples T&T*/
	                  WHILE (loc_cantidad >= 1)
	                  	/*loc_importe  = cos_opc[loc_cuenta]*/
		                  loc_importe  = post:cos_opc[loc_cuenta] / post:cantidad
		                  loc_tasa     = post:ali_opc[loc_cuenta]
	    	              /*loc_cantidad = 1*/
	        	          /*CALL MISCdesglosaIva(loc_importe, loc_tasa, loc_cantidad)*/
	        	          //SC 50170
	        	          CALL post:MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
	            	      //SC 50170 - FACTURACION
	            	      /*post:ImporteSinIva = post:ImporteSinIva * -1
	                	  post:ImporteIva = post:ImporteIva * -1
		                  Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva ,post:SobreTasaIva)*/
		                  post:ImporteSinIva_bis = post:ImporteSinIva_bis * -1
	                	  post:ImporteIva_bis = post:ImporteIva_bis * -1
		                  Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis ,post:SobreTasaIva)
		                  if (post:promo_imp_opc_tot[loc_cuenta] > 0)
	               			loc_importe  = post:promo_imp_opc_tot[loc_cuenta] / post:cantidad
	               			//SC 50170
	               			CALL post:MISCdesglosaIva(loc_importe, loc_tasa, 1,0)
	   			  	 		//SC 50170 - FACTURACION
	   			  	 		//Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
	   			  	 		Call post:CDSUpdate_ImpreIva(loc_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
	            		  end if
	    	              loc_cantidad = loc_cantidad - 1
					  END WHILE
				  end if
				  /*FIN Req 3159*/
    	          loc_cuenta = loc_cuenta + 1
        	      IF (loc_cuenta == post:cant_opc)
            	      BREAK
                  ELSE
                  	 /*MFM - Restauro la cantidad para que vuelva a entrar al while y
                  	 calcule el importe sin iva del siguiente opcional*/
                  	 loc_cantidad = post:cantidad
                  END IF

               LOOP
            end if

END SUB

/*******/
