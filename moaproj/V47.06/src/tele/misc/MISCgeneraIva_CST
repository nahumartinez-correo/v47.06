/****o* Pendientes de agrupación/OFB:tele:MISCgeneraIva_CST
* NOMBRE
*   OFB:tele:MISCgeneraIva_CST
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "telemisc.h"

SUB tele:MISCgeneraIva_CST
	LOCAL l_tasa	LIKE post:adt_serv_aliciva
	LOCAL l_cantidad	LIKE post:cantidad
	LOCAL l_cuenta	LIKE post:cantidad
	//LOCAL l_importe LIKE post:importe
	//LOCAL l_ajd_Neto LIKE post:importe
	//LOCAL l_ajd_Iva	LIKE post:importe
	//LOCAL l_ajd_Total LIKE post:importe
	//LOCAL l_ajuste_dec LIKE post:importe

	//cgw:SC 50170
	LOCAL l_importe LIKE post:importe_sesion
	LOCAL l_ajd_Neto LIKE post:importe_sesion
	LOCAL l_ajd_Iva	LIKE post:importe_sesion
	LOCAL l_ajd_Total	LIKE post:importe_sesion
	LOCAL l_ajuste_dec LIKE post:importe_sesion
	
	DPRINT "\n\n *********************************************************** \n\n"
	
	//gpb:PS10618 Recuperacion del valor del campo post:cantidad de la PresuDet
	IF (post:cantidad != post:recup_cantidad) THEN
		post:cantidad = post:recup_cantidad
	END IF
	
	//gpb:PS10618 Recuperacion del valor del campo post:tarifa de la PresuDet
	IF (post:tarifa != post:recup_tarifa) THEN
		post:tarifa = post:recup_tarifa
	END IF
	
	l_importe = post:tarifa
	l_tasa = post:adt_serv_aliciva
	l_cantidad = post:cantidad
	//SC 50170
	CALL post:MISCdesglosaIva(l_importe, l_tasa, l_cantidad,0)
	l_ajd_Neto = post:ImporteSinIva
	l_ajd_Iva = post:ImporteIva
	DPRINT "Servicio Sin IVA: %s \n" post:ImporteSinIva
	DPRINT "IVA del Servicio: %s \n" post:ImporteIva
	//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
	//SC 50170-FACTURACION
	CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)

	l_importe = post:imp_bloques
	l_tasa = post:adt_serv_aliciva
	l_cantidad = post:cantidad
	//SC 50170
	CALL post:MISCdesglosaIva(l_importe, l_tasa, l_cantidad,0)
	l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
	l_ajd_Iva = l_ajd_Iva + post:ImporteIva
	DPRINT "Bloques Sin IVA: %s \n" post:ImporteSinIva
	DPRINT "IVA de Bloques : %s \n" post:ImporteIva
	//SC 50170-FACTURACION
	//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)
	CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)

	IF (post:promo_imp_srv_tot > 0 ) THEN
		l_importe  = post:promo_imp_srv_tot
		//SC 50170
		CALL post:MISCdesglosaIva(l_importe, l_tasa, l_cantidad,0)
		//SC 50170 - FACTURACION
		/*post:ImporteSinIva = post:ImporteSinIva * (-1)
		post:ImporteIva = post:ImporteIva * (-1)*/
		l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
		l_ajd_Iva = l_ajd_Iva + post:ImporteIva
		DPRINT "Bonif. Servicio Sin IVA: %s \n" post:ImporteSinIva
		DPRINT "IVA Bonif. del Servicio: %s \n" post:ImporteIva
		//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)*/
		post:ImporteSinIva_bis = post:ImporteSinIva_bis * (-1)
		post:ImporteIva_bis = post:ImporteIva_bis * (-1)
		CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
	END IF

	IF (post:promo_imp_blq_tot > 0 ) THEN
		l_importe  = post:promo_imp_blq_tot
		//SC 50170
		CALL post:MISCdesglosaIva(l_importe, l_tasa, l_cantidad,0)
		//SC 50170 - FACTURACION
		/*post:ImporteSinIva = post:ImporteSinIva * (-1)
		post:ImporteIva = post:ImporteIva * (-1)*/
		l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
		l_ajd_Iva = l_ajd_Iva + post:ImporteIva
		DPRINT "Bonif. Bloques Sin IVA: %s \n" post:ImporteSinIva
		DPRINT "IVA Bonif. de Bloques : %s \n" post:ImporteIva
		//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)*/
		post:ImporteSinIva_bis = post:ImporteSinIva_bis * (-1)
		post:ImporteIva_bis = post:ImporteIva_bis * (-1)
		CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
	END IF

	//gpb:PS10618 Recuperacion del valor del campo post:descuento de la PresuDet
	IF (post:descuento != post:recup_descuento) THEN
		post:descuento = post:recup_descuento
	END IF 

	IF (post:descuento > 0) THEN
		l_importe  = post:descuento
		l_cantidad = 1
		//SC 50170
		CALL post:MISCdesglosaIva(l_importe, l_tasa, l_cantidad,0)
		//SC 50170 - FACTURACION
		/*post:ImporteSinIva = post:ImporteSinIva * (-1)
		post:ImporteIva = post:ImporteIva * (-1)*/
		l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
		l_ajd_Iva = l_ajd_Iva + post:ImporteIva
		DPRINT "Descuentos Sin IVA: %s \n" post:ImporteSinIva
		DPRINT "IVA de Descuentos : %s \n" post:ImporteIva
		//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva, post:ImporteIva, post:SobreTasaIva)*/
		post:ImporteSinIva_bis = post:ImporteSinIva_bis * (-1)
		post:ImporteIva_bis = post:ImporteIva_bis * (-1)
		CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis, post:ImporteIva_bis, post:SobreTasaIva)
	END IF
	
	//gpb:PS10618 Recuperacion del valor del campo post:cantidad de la PresuDet
	IF (post:cantidad != post:recup_cantidad) THEN
		post:cantidad = post:recup_cantidad
	END IF

	/*MFM*/
	l_cantidad = post:cantidad  
	IF (post:cant_opc > 0) THEN
		l_cuenta = 0
		DO
			/*ACP- Ps9318 error de redondeo, telegrama multiple con opcional CDFA*/
			;PS9490
			CALL post:MISCopcCantPart(post:cod_opc[l_cuenta], post:tipo_produc, l_cantidad)
			IF (RETVAL == 1) THEN
				l_importe = post:cos_opc[l_cuenta] 
				l_tasa = post:ali_opc[l_cuenta]
				//SC 50170
				CALL post:MISCdesglosaIva(l_importe, l_tasa, 1,0)
				l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
				l_ajd_Iva = l_ajd_Iva + post:ImporteIva
				DPRINT "Opcional %s Sin IVA: %s \n" post:cod_opc[l_cuenta],post:ImporteSinIva
				DPRINT "IVA de Opcional %s : %s \n" post:cod_opc[l_cuenta],post:ImporteIva
				//SC 50170 - FACTURACION
				/*CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva,post:ImporteIva,post:SobreTasaIva)*/
				CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis,post:ImporteIva_bis,post:SobreTasaIva)
				IF (post:promo_imp_opc_tot[l_cuenta] > 0) THEN
					l_importe  = post:promo_imp_opc_tot[l_cuenta]
					//SC 50170
					CALL post:MISCdesglosaIva(l_importe, l_tasa, 1,0)
					//SC 50170 - FACTURACION
					/*post:ImporteSinIva = post:ImporteSinIva * (-1)
					post:ImporteIva = post:ImporteIva * (-1)*/
					l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
					l_ajd_Iva = l_ajd_Iva + post:ImporteIva
					DPRINT "Bonif. Opcional %s Sin IVA: %s \n" post:cod_opc[l_cuenta],post:ImporteSinIva
					DPRINT "IVA de Bonif. Opcional %s : %s \n" post:cod_opc[l_cuenta],post:ImporteIva
					//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva,post:ImporteIva,post:SobreTasaIva)*/
					post:ImporteSinIva_bis = post:ImporteSinIva_bis * (-1)
					post:ImporteIva_bis = post:ImporteIva_bis * (-1)
					CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis,post:ImporteIva_bis,post:SobreTasaIva)
				END IF
			ELSE
				WHILE (l_cantidad >= 1)        
					//gpb:PS10618 Recuperacion del valor del campo post:cantidad de la PresuDet
					//si se llega a pisar post:cantidad ,entonces se pruduce el error
					IF (post:cantidad != post:recup_cantidad) THEN
						post:cantidad = post:recup_cantidad
					END IF
				
					l_importe  = post:cos_opc[l_cuenta] / post:cantidad
					l_tasa     = post:ali_opc[l_cuenta]
					//SC 50170
					CALL post:MISCdesglosaIva(l_importe, l_tasa, 1,0)
					
					l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
					l_ajd_Iva = l_ajd_Iva + post:ImporteIva
					DPRINT "Opcional %s Sin IVA: %s \n" post:cod_opc[l_cuenta],post:ImporteSinIva
					DPRINT "IVA de Opcional %s : %s \n" post:cod_opc[l_cuenta],post:ImporteIva
					//SC 50170 - FACTURACION
					//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva,post:ImporteIva,post:SobreTasaIva)*/
					CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis,post:ImporteIva_bis,post:SobreTasaIva)
					IF (post:promo_imp_opc_tot[l_cuenta] > 0) THEN
						l_importe  = post:promo_imp_opc_tot[l_cuenta] / post:cantidad
						//SC 50170
						CALL post:MISCdesglosaIva(l_importe, l_tasa, 1,0)
						//SC 50170 - FACTURACION
						/*post:ImporteSinIva = post:ImporteSinIva * (-1)
						post:ImporteIva = post:ImporteIva * (-1)*/
						l_ajd_Neto = l_ajd_Neto + post:ImporteSinIva
						l_ajd_Iva = l_ajd_Iva + post:ImporteIva
						DPRINT "Bonif. Opcional %s Sin IVA: %s \n" post:cod_opc[l_cuenta],post:ImporteSinIva
						DPRINT "IVA de Bonif. Opcional %s : %s \n" post:cod_opc[l_cuenta],post:ImporteIva
						
						//CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva,post:ImporteIva,post:SobreTasaIva)*/
						post:ImporteSinIva_bis = post:ImporteSinIva_bis * (-1)
						post:ImporteIva_bis = post:ImporteIva_bis * (-1)
						CALL post:CDSUpdate_ImpreIva(l_tasa, post:ImporteSinIva_bis,post:ImporteIva_bis,post:SobreTasaIva)
					END IF
					l_cantidad = l_cantidad - 1
				END WHILE
			END IF
			/*FIN MFM*/
			l_cuenta = l_cuenta + 1
			IF (l_cuenta == post:cant_opc)
				BREAK
			ELSE
				//gpb:PS10618 Recuperacion del valor del campo post:cantidad de la PresuDet
				IF (post:cantidad != post:recup_cantidad) THEN
					post:cantidad = post:recup_cantidad
				END IF
							
				/*MFM - Restauro la cantidad para que vuelva a entrar al while y
				calcule el importe sin iva del siguiente opcional*/
				l_cantidad = post:cantidad
			END IF
		LOOP
	END IF

	//Ajuste por Redondeo... 
	l_ajd_Total = l_ajd_Neto + l_ajd_Iva
	/*IF (l_ajd_Total < tele:importe_tot_serv_tel) THEN
		l_ajuste_dec = tele:importe_tot_serv_tel - l_ajd_Total
		CALL post:CDSUpdate_ImpreIva(post:adt_serv_aliciva, 0,l_ajuste_dec,0)
		ELSE
		IF (l_ajd_Total > tele:importe_tot_serv_tel) THEN
			l_ajuste_dec = l_ajd_Total - tele:importe_tot_serv_tel
			l_ajuste_dec = l_ajuste_dec * (-1)
			CALL post:CDSUpdate_ImpreIva(post:adt_serv_aliciva, 0,l_ajuste_dec,0)
		END IF
	END IF*/
	DPRINT "\n\n *********************************************************** \n\n"

END SUB

/*******/
