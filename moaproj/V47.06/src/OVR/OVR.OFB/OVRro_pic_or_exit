/****o* Pendientes de agrupación/OFB:ovr:OVRro_pic_or_exit
* NOMBRE
*   OFB:ovr:OVRro_pic_or_exit
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "ovrOVR.OFB.h"

	SUB ovr:OVRro_pic_or_exit
	/* This routine deletes the currently processed override and  */
	/* determines whether to return back to the picklist of       */
	/* overrides or exit remote override processing.              */
	/* If all overrides have been processed, clear out the        */
	/* override request indicator on the status line.             */
	/*                                                            */
	/* This routine expects:                                      */
	/*    - ro_seq_num of the override currently being            */
	/*         processed.                                         */
	/*    - ro_ovr_count to contain orginal count of              */
	/*         pending override requests on entry into remote     */
	/*         override processing.  The count was used in        */
	/*         determining if a picklist of overrides were        */
	/*         displayed or not.                                  */
	/*                                                            */
	CALL  CSR:saovreq_delete ro_seq_num
	if (retval == -2)
		/* No override found to delete */
		errmsg common:errmsg_list,DSC:ERRno_ovr_exists
	END IF

		/* Clearing ovr_request flag before call to saovreq_count */
		/* routine allows you to determine if an override request */
		/* arrived before indicator is cleared.                   */
	resetflag ovr:event_flags,ovr_request
	CALL  CSR:saovreq_count
	if (retval > 0)
		/* if never saw picklist */
		if (ro_ovr_count == 1)
			CALL  OFB::OVRro_clr_ovr_pend
			/* exit out by faking send key */
			ungetkey RT_SEND
		else
			CALL  OFB:OVRro_cleanup
			/* go back to picklist by faking prev key */
			ungetkey RT_PAGEUP
		END IF
	else
		CALL  OFB::OVRro_clr_ovr_pend
		/* exit out by faking send key */
		ungetkey RT_SEND
	END IF
	END SUB

/*******/
