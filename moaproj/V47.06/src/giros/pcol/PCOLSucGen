/****o* ABM´s/OFB:giros:PCOLSucGen
* NOMBRE
*   OFB:giros:PCOLSucGen
* DESCRIPCION
*   Rutina PCOL del ABM Datos Generales de la Sucursal.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   giros:TRANdatgrales
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospcol.h"

SUB giros:PCOLSucGen
   /*Desactiva el Highlit de los campos antes de mostrarlos en pantalla*/
   CALL CSR:proc_list(F_NOHIGHLITE,LST:giros:LISTSucGen_fld)
   CALL CSR:proc_list(F_REFRESH,LST:giros:LISTSucGen_fld)
   protfield adt_dgralsuc_TPdesc   
	   IF (op:Flag_temp == 1) THEN//la transaccion se esta ejecutando desde modif. pendientes
		   CALL post:CDSsel_temporal
	       		IF (RETVAL == 0) THEN
				   IF (TESTFLAG(op:adt_temp_flag,update)) THEN
			           CALL SetCam(1,0,0,0)
			           /*Sebastian- no ejecutan las Fval cuando los datos se extraen de la tabla temporal*/
			    	   CALL CSR:proc_list(F_SETVALDONE,LST:giros:LISTSucGen_fld)
			    	   /*Sebastian- llama a una rutina que resalta los campos modificados*/
			    	   CALL post:MISCResaltarCampos ("DGralSuc")
			           CALL CSR:proc_list(F_REFRESH,LST:giros:LISTSucGen_fld)
			       END IF
			       IF (TESTFLAG(op:adt_temp_flag,delete)) THEN
			           CALL SetCam(0,1,0,0)
			           /*Sebastian- no ejecutan las Fval cuando los datos se extraen de la tabla temporal*/
			    	   CALL CSR:proc_list(F_SETVALDONE,LST:giros:LISTSucGen_fld)
			    	   /*Sebastian- llama a una rutina que resalta los campos modificados*/
			    	   CALL post:MISCResaltarCampos ("DGralSuc")
			           CALL CSR:proc_list(F_REFRESH,LST:giros:LISTSucGen_fld)
			       END IF
	       		END IF
	    ELSE  
	        IF (giros:adt_dgralsuc_cod.NUMCHARS == 0) THEN
	            CALL SetCam(0,0,0,0)
	        END IF
	    END IF
	    //Segun pantalla protege y habilita botones correspondientes.
	    SELECT (drv:screen_active)
	    	CASE 2
	    		IF (giros:tipo_opc == "ULTI") THEN
	    			PROTFIELD adt_dgralsuc_PFact
	    		ELSE
	    		    UNPROTFIELD adt_dgralsuc_PFact
	    		END IF
	    	    BREAK
	    	CASE 1
	    		PROTFIELD adt_dgralsuc_desc    		
	    		IF (giros:adt_dgralsuc_pase == "N") THEN
	    			PROTFIELD adt_dgralsuc_Tpase
	   	            DISABLECONTROL drv:PBcb2
	            ELSE
	                UNPROTFIELD adt_dgralsuc_Tpase
	   	            ENABLECONTROL drv:PBcb2
	            ENDIF
	            IF (op:Flag_temp == 1) THEN
	            	//La transaccion se esta ejecutando desde modif. pendientes
	                //Protege campo Codigo de Sucursal.
	                PROTFIELD giros:adt_dgralsuc_cod
	                DISABLECONTROL drv:PBcb0                
	            ELSE
	    		    drv:button = 0
	    		    CALL drv:but_up_enable
	    		END IF
	    		drv:button = 1
	    		CALL drv:but_up_enable
	    	    BREAK
		END SELECT
		IF (drv:screen_active == 2) THEN
			IF (testflag(admin:mode_flags,update) || \
			    testflag(admin:mode_flags,delete) || testflag(admin:mode_flags,imprimir)) THEN
				//Se ejecuta todas las rutinas de validacion FVAL, y confirma la actualizacion.
				UNGETKEY RT_SEND
			END IF
		END IF
END SUB
 

/*******/
