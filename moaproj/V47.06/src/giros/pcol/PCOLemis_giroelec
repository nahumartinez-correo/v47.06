/****o* Pendientes de agrupación/OFB:giros:PCOLemis_giroelec
* NOMBRE
*   OFB:giros:PCOLemis_giroelec
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospcol.h"

SUB giros:PCOLemis_giroelec

/*Desactiva el Highlit de los campos antes de mostrarlos en pantalla*/
   CALL CSR:proc_list(F_NOHIGHLITE,LST:giros:LISTEmis_ge_flds)
   CALL CSR:proc_list(F_REFRESH,LST:giros:LISTEmis_ge_flds)
   CALL CSR:proc_list(F_REFRESH,LST:giros:LISTbck_Emis_ge)
   
/* ABM de Emisores de giros electronicos */
  IF (op:Flag_temp == 1) THEN
  	CALL post:CDSsel_temporal
	  	IF (retval == 0) then
		  	IF (TESTFLAG(op:adt_temp_flag,update)) THEN
		  		call admin:adt_br_refresh
		  		call post:MISCset_sidebar(1,0,0,0)
		  		call CSR:proc_list(F_SETVALDONE,lst:LISTEmis_ge_flds)
		  		call post:MISCResaltarCampos("emis_giroelec")
		  		call CSR:proc_list(F_REFRESH,lst:LISTEmis_ge_flds)
		  		call CSR:proc_list(F_REFRESH,lst:LISTEmis_giroelec)
		  	END IF
		  	IF (TESTFLAG(op:adt_temp_flag,delete)) THEN
		  		call admin:adt_br_refresh
		  		call post:MISCset_sidebar(0,1,0,0)
		  		call CSR:proc_list(F_SETVALDONE,lst:LISTEmis_ge_flds)
		  		call post:MISCResaltarCampos("emis_giroelec")
		  		call CSR:proc_list(F_REFRESH,lst:LISTEmis_ge_flds)
		  		call CSR:proc_list(F_REFRESH,lst:LISTEmis_giroelec)
		  	END IF
	  	END IF
  ELSE
	  IF (EmisNomb_ge_fld.numchars == 0) then
		    CALL post:MISCset_sidebar(0,0,0,1)
	  END IF
  END IF
END SUB
/* Fin ABM Emisores */

/*******/
