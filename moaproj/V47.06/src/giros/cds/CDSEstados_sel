/****o* Pendientes de agrupación/OFB:giros:CDSEstados_sel
* NOMBRE
*   OFB:giros:CDSEstados_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

sub giros:CDSEstados_sel
offset_0000:
	/*move adt_est_cod to tmp_est_cod*/
	CDS SELECT FROM DSC:Estados_tab_dsc BECOMES DSC:tipo_giro_ctx_dsc
	siaf:last_key = lastkey
	cds multidisplay DSC:tipo_giro_ctx_dsc LISTestados
	if (cdsretval == 0x01FD) then
		goto offset_0000
	end if
	lib:err_retval = cdsretval
	if (lib:err_retval == 0) then
		/*move tmp_est_cod to adt_est_cod*/
		call CDSEstados_load
		return (-2)
	end if
	let lib:err_retval = cdsretval
	call lib:MISCcds_find_err
	if (retval != 0) then
		cds endselect DSC:tipo_giro_ctx_dsc
		return (-1)
	end if
	cds extract DSC:tipo_giro_ctx_dsc all
	CodiEstado_fld = adt_est_cod
	DescriEstado_fld = adt_est_desc
	cds unlock DSC:tipo_giro_ctx_dsc
	cds endselect DSC:tipo_giro_ctx_dsc
	call CSR:proc_list(F_COPY,lst:LISTEstados_flds,lst:LISTbck_Est_Giros)
end sub

/*******/
