/****o* Giros Masivos/OFB:giros:CDScantGir_a_fact
* NOMBRE
*   OFB:giros:CDScantGir_a_fact
* DESCRIPCION
*   Esta rutina busca en la tabla sesion_gm (sesiones de giros masivos) la cantidad de giros y 
*	los importes totales de los giros emitidos y pendientes de emitir (por si hubo alguna caida 
*	en vuelo) para restaurar los valores reales
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Retorna un valor que define la seleccion del operador, si acepta o no restaurar la sesion:
*	0 = No restaura o no encuentra sesion, 1 = restaura sesion encontrada
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:giros:PRESident_clie_lote; OFB:giros:ESCident_clie_lote
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"


SUB giros:CDScantGir_a_fact(nro_sesion)
    CDS SELECT FROM DSC:TBLSesion_GM BECOMES DSC:CTXSesion_GM WHERE \
    	post:op_operator_id == op:op_operator_id && \
    	giros:nro_sesion_gm == nro_sesion && \
    	(giros:estado_gm == "I" || giros:estado_gm == "E") && \
    	giros:gm_status < 100
    Cds FINDFIRST DSC:CTXSesion_GM NOLOCK
	Let lib:err_retval = CDSRETVAL
	if (lib:err_retval == 0)
		CDS AGGREGATE DSC:CTXSesion_GM count cant_giros \
			sum ImporteNeto as SumaImpGiros_I \
			sum ImporteTotal_fld as ImpTotGiros_I RESET
		CDS EXTRACT DSC:CTXSesion_GM cant_giros SumaImpGiros_I ImpTotGiros_I
	end if
	CDS ENDSELECT DSC:CTXSesion_GM
	cantidad_chk_emi = cant_giros
	SumaImpGiros = SumaImpGiros_I
	ImpTotGiros = ImpTotGiros_I
	refresh cantidad_chk_emi 
	refresh SumaImpGiros
	refresh ImpTotGiros	
	Return lib:err_retval
END SUB

/*******/
