/****o* Pendientes de agrupación/OFB:giros:CDSpais_sel
* NOMBRE
*   OFB:giros:CDSpais_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSpais_sel

offset_0000:

move adt_pais_fechB to tmp_pais_fechB  
move adt_pais_cod to tmp_pais_cod
move adt_pais_desc to tmp_pais_desc 

	CDS SELECT FROM DSC:Paises_tab_dsc BECOMES DSC:sucur_ctx 
	
	let siaf:last_key = LASTKEY
	
	CDS MULTIDISPLAY DSC:sucur_ctx LISTpaises 
	
	IF (CDSRETVAL == 0x01FD) THEN
	  GOTO offset_0000
	END IF
	
	LET lib:err_retval = CDSRETVAL
	IF (lib:err_retval == 0) THEN
		move  tmp_pais_fechB to adt_pais_fechB
		move  tmp_pais_cod to adt_pais_cod 
		move  tmp_pais_desc to adt_pais_desc  
		call CDSpais_load
    	CDS ENDSELECT dsc:sucur_ctx   
		RETURN (-2)
	END IF
	LET lib:err_retval = CDSRETVAL
	CALL lib:MISCcds_find_err
	IF (RETVAL != 0) THEN
    	CDS ENDSELECT dsc:sucur_ctx   
		RETURN (-1)
	END IF
	CDS EXTRACT DSC:sucur_ctx ALL
	CDS UNLOCK DSC:sucur_ctx
   CDS ENDSELECT dsc:sucur_ctx   
	setvaldone adt_pais_cod
	call csr:proc_list(F_COPY,lst:giros:LISTABMpais,lst:giros:LISTBckABMpais)
	
END SUB

/*******/
