/****o* Pendientes de agrupación/OFB:giros:CDSappendChequera
* NOMBRE
*   OFB:giros:CDSappendChequera
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSappendChequera

    LOCAL ind LIKE siaf:i
	
    CDS SELECT FROM DSC:RecepChk_tab BECOMES DSC:RecepChk_ctx
    LET lib:err_retval = CDSRETVAL
    CDS CLEARBUFFER DSC:RecepChk_ctx
    LET	adt_chk_suc = op:op_branch_id
    LET adt_chk_op = op:op_operator_id
    LET adt_chk_fecha = fecha_recep_fld
    LET adt_chk_hora = common:time_of_day
    LET adt_chk_serie = Serie_fld
    LET adt_chk_nrogiro = NroGiro_fld
    LET adt_chk_cantid = Cantid_fld
    LET adt_chk_nrofin = NroGiro_fld + Cantid_fld - 1
    LET adt_chk_remito = remito_fld
    LET adt_chk_observ = observaciones_fld
    LET adt_chk_tesoro = op:op_tesoro
    LET adt_chk_tesoro_id = op:op_tesoro_id
    LET adt_chk_usado = 0
    LET adt_chk_estado = 9

    CLEARFIELD giros:adt_chk_habilitador
    CALL csr:cleararray(adt_chk_cheque)

    CDS APPEND DSC:RecepChk_ctx \
            adt_chk_suc \
            adt_chk_op \
            adt_chk_fecha \
            adt_chk_hora \
            adt_chk_serie \
            adt_chk_nrogiro \
            adt_chk_cantid \
            adt_chk_nrofin \
            adt_chk_remito \
            adt_chk_observ \
            adt_chk_tesoro \
            adt_chk_tesoro_id \
	    adt_chk_habilitador \
            adt_chk_estado \
            adt_chk_usado \
      giros:chequera_fld as giros:adt_chk_chequera
	ind = 0            
	WHILE (ind < Cantid_fld)
	    CDS APPEND DSC:RecepChk_ctx	adt_chk_cheque[ind]
		ind = ind + 1			    	
	END WHILE	    	
    CDS INSERT DSC:RecepChk_ctx LOCK
    CDS UNLOCK DSC:RecepChk_ctx
    CDS ENDSELECT DSC:RecepChk_ctx
END SUB



/*******/
