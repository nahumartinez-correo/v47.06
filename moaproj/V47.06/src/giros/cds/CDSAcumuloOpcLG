/****o* Facturación Giros/OFB:giros:CDSAcumuloOpcLG
* NOMBRE
*   OFB:giros:CDSAcumuloOpcLG
* DESCRIPCION
*   Rutina que acumula en la tabla ServFact los opcionales pertenecientes a servicios de igual rango.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:post:MISCActua_Opcional,OFB:post:MISCActua_OpcInter
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-1290
* SOURCE
*/
#include "giroscds.h"

sub giros:CDSAcumuloOpcLG(l_imp_opc)
local item like post:cantidad
local l_retval like lib:err_retval
local l_impgiros4 like giros:ImporteGiros4_fld
local l_totgiros4 like giros:ImpTotalGiros4_fld
local l_impfld	like giros:Importe_fld
local l_impiva  like giros:ImporteIva_fld
local l_cant like giros:cantidad
	
	
	call csr:cleararray(giros:vec_opc_gir_cod)
	call csr:cleararray(giros:vec_opc_gir_imp)
	call csr:cleararray(giros:vec_opc_gir_iva)
	call csr:cleararray(giros:vec_opc_gir_cant)
	
	cds select from ServFact_tab becomes ServFact_ctx \
	where (post:op_operator_id == op:op_operator_id && \
	post:adt_serv_serv == post:adt_serv_serv && \
	post:adt_tarif_desde == post:adt_tarif_desde && \
	post:adt_tarif_hasta == post:adt_tarif_hasta)
	
	cds findfirst ServFact_ctx lock

	l_retval = CDSRETVAL
	
	IF (l_retval == -801) THEN
		//grabarlos vacios, luego se acumulan en la MISCacumulo_serv
		l_impgiros4 = 0
		l_totgiros4 = 0
		l_impfld = 0
		l_cant = 0
	ELSE
		//recordar grabar los nuevos vectores vacios la primera vez que se ingresa el registro en la ServFact
		//para que no pinche en este extract!!
		cds extract ServFact_ctx \
		array giros:vec_opc_gir_cod \
		array giros:vec_opc_gir_imp \
		array giros:vec_opc_gir_iva \
		array giros:vec_opc_gir_cant
	ENDIF
	
	item = 0
    do 
		if (item == 8) then
			break
		endif
		if (vec_opc_gir_cod[item].numchars > 0 && giros:vec_opc_gir_cod[item] == post:codigo_impre) then
			//acumular cantidad e importe
			giros:vec_opc_gir_cant[item] = giros:vec_opc_gir_cant[item] + 1
			init 22,1
			giros:vec_opc_gir_imp[item] = giros:vec_opc_gir_imp[item] + giros:ImporteGiros4_fld//l_imp_opc
			//Actualizo los valores con la diferencia calculada por rendondeo
			giros:vec_opc_gir_imp[item] = giros:vec_opc_gir_imp[item] - post:dif_opc[item]
			init 22,0
			giros:vec_opc_gir_iva[item] = giros:vec_opc_gir_iva[item] + l_imp_opc//giros:ImporteGiros4_fld
			//Actualizo los valores con la diferencia calculada por rendondeo
			giros:vec_opc_gir_iva[item] = giros:vec_opc_gir_iva[item] - post:dif_opc[item]
			IF (l_retval == 0) THEN
				cds clearbuffer ServFact_ctx
				cds append ServFact_ctx \
				array giros:vec_opc_gir_imp \
				array giros:vec_opc_gir_cant \
				array giros:vec_opc_gir_iva
				cds update ServFact_ctx lock
			ENDIF
			break
		else
			if (vec_opc_gir_cod[item].numchars == 0) then
				//agregar el opcional
				giros:vec_opc_gir_cod[item] = post:codigo_impre
				giros:vec_opc_gir_cant[item] = 1
				init 22,1
				//AUT-1402
				giros:vec_opc_gir_imp[item] = giros:ImporteGiros4_fld //l_imp_opc
				//Actualizo los valores con la diferencia calculada por rendondeo
				giros:vec_opc_gir_imp[item] = giros:vec_opc_gir_imp[item] - post:dif_opc[item]
				init 22,0
				//AUT-1402
				giros:vec_opc_gir_iva[item] = l_imp_opc//giros:ImporteGiros4_fld
				//Actualizo los valores con la diferencia calculada por rendondeo
				giros:vec_opc_gir_iva[item] = giros:vec_opc_gir_iva[item] - post:dif_opc[item]
				//en este momento la descripcion es incorrecta, hay que actualizarla mas adelante
				//giros:vec_opc_gir_desc[item] = post:adt_opc_desc//post:desc_impre
				IF (l_retval == 0) THEN
					cds clearbuffer ServFact_ctx
					cds append ServFact_ctx array giros:vec_opc_gir_cod \
					array giros:vec_opc_gir_imp \
					array giros:vec_opc_gir_cant \
					array giros:vec_opc_gir_iva \
					array giros:vec_opc_gir_desc
					cds update ServFact_ctx lock
				ENDIF
				break
			else
				item = item + 1
			endif
		endif
	loop
	
	IF (l_retval == -801) THEN
		cds clearbuffer ServFact_ctx
		cds append ServFact_ctx \
		l_impfld as giros:Importe_fld \
		l_impiva as giros:ImporteIva_fld \
		l_cant as giros:cantidad \
        post:adt_serv_serv post:adt_tarif_desde \
	    post:adt_tarif_hasta post:op_operator_id \
		l_impgiros4 as giros:ImporteGiros4_fld \
		l_totgiros4 as giros:ImpTotalGiros4_fld \
		array giros:vec_opc_gir_cod \
		array giros:vec_opc_gir_imp \
		array giros:vec_opc_gir_iva \
		array giros:vec_opc_gir_cant \
		array giros:vec_opc_gir_desc
	
		cds insert ServFact_ctx lock
	
	ENDIF
	cds endselect ServFact_ctx
	
end sub

/*******/
