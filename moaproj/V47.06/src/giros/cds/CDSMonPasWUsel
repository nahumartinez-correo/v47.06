/****o* Pendientes de agrupación/OFB:giros:CDSMonPasWUsel
* NOMBRE
*   OFB:giros:CDSMonPasWUsel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSMonPasWUsel
	if (adt_monpas_codmon.numchars == 0 || adt_monpas_codpaiswu.numchars == 0)
		msgbox "DEBE INGRESAR PAIS Y MONEDA", OFB_OK ,"ERROR"
		return -2
	end if
	
	offset_0000:
	
	//setvaldone adt_monpas_codmonwu   
	move adt_monpas_codmon to tmp_monpas_codmon
	move adt_monpas_desmon to tmp_monpas_desmon
	move adt_monpas_codmonwu to tmp_monpas_codmonwu 
	move adt_monpas_codpaiswu to tmp_monpas_codpaiswu 
	move adt_monpas_desmonwu to tmp_monpas_desmonwu
	move adt_monpas_fechB to tmp_monpas_fechB 
	move adt_monpas_montomax to tmp_monpas_montomax 
	
	cds select from DSC:giros:MonPas_ctx becomes DSC:giros:tipo_giro_ctx_dsc \
	where adt_monpas_codpaiswu == adt_monpas_codpaiswu && \
	adt_monpas_codmon == adt_monpas_codmon 
	
	let siaf:last_key = LASTKEY
	
	CDS MULTIDISPLAY giros:tipo_giro_ctx_dsc giros:LISTmon_pas
	
	IF (siaf:last_key == 0x01FD) THEN
	  GOTO offset_0000
	END IF
	
	LET lib:err_retval = CDSRETVAL
	IF (lib:err_retval <= 0) THEN
	    move tmp_monpas_codmon to adt_monpas_codmon 
		move tmp_monpas_desmon to adt_monpas_desmon 
		move tmp_monpas_codmonwu to adt_monpas_codmonwu   
		move tmp_monpas_codpaiswu to adt_monpas_codpaiswu   
		move tmp_monpas_desmonwu to adt_monpas_desmonwu  
		move tmp_monpas_fechB to adt_monpas_fechB   
		move tmp_monpas_montomax to adt_monpas_montomax          
   END IF
    
	LET lib:err_retval = CDSRETVAL
	CALL lib:MISCcds_find_err
	IF (RETVAL != 0) THEN
		cds endselect DSC:giros:tipo_giro_ctx_dsc
		RETURN (-1)
	END IF
	CDS EXTRACT DSC:giros:tipo_giro_ctx_dsc ALL
	cds endselect DSC:giros:tipo_giro_ctx_dsc
	refresh adt_monpas_desmonwu
	refresh adt_monpas_fechB
	refresh adt_monpas_codmon 
    refresh adt_monpas_desmon 
    refresh adt_monpas_codmonwu   
    refresh adt_monpas_codpaiswu   
    refresh adt_monpas_desmonwu  
    refresh adt_monpas_fechB 
    refresh adt_monpas_montomax 
	/*MODIFICAR*/
	drv:button = 25
	CALL drv:but_enable
	drv:button = 26
	CALL drv:but_enable
	/*BORRAR*/
	drv:button = 27
	CALL drv:but_disable
	drv:button = 28
	CALL drv:but_disable
	call csr:proc_list(F_COPY,lst:giros:LISTABMmon_pas,lst:giros:LISTbckABMmon_pas)
	call csr:proc_list(F_SETVALDONE,lst:giros:LISTABMmon_pas)
			
	Return 0
END SUB

/*******/
