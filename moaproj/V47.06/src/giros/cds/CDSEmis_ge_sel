/****o* Pendientes de agrupación/OFB:giros:CDSEmis_ge_sel
* NOMBRE
*   OFB:giros:CDSEmis_ge_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

sub giros:CDSEmis_ge_sel
offset_0000:
	/*move adt_est_cod to tmp_est_cod*/
	CDS SELECT FROM DSC:emis_giroelec_TAB BECOMES DSC:emis_giroelec_CTX
	siaf:last_key = lastkey
	cds multidisplay DSC:emis_giroelec_CTX giros:LISTEmis_giroelec
	if (cdsretval == 0x01FD) then
		goto offset_0000
	end if
	lib:err_retval = cdsretval
	if (lib:err_retval == 0) then
		Call CDSEmis_ge_load
		cds endselect DSC:emis_giroelec_CTX
		return (-2)
	end if
	let lib:err_retval = cdsretval
	call lib:MISCcds_find_err
	if (retval != 0) then
		cds endselect DSC:emis_giroelec_CTX
		return (-1)
	end if
	cds extract DSC:emis_giroelec_CTX all
	EmisNomb_ge_fld = EmisNomb_giroelec
  EmisApel_ge_fld = EmisApel_giroelec
  Codigo_ge_fld = Codigo_giroelec
 
	cds unlock DSC:emis_giroelec_CTX
	cds endselect DSC:emis_giroelec_CTX
	CALL CSR:proc_list(120,LST:LISTEmis_ge_flds,LST:LISTbck_Emis_ge)
end sub

/*******/
