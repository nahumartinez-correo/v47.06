/****o* Lista de Giros/OFB:giros:CDSsaveCaidasChq
* NOMBRE
*   OFB:giros:CDSsaveCaidasChq
* DESCRIPCION
*   genera un registro en la tabla de caidasChq
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   giros:MISCImpLG_Emitidos
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/
#include "giroscds.h"


SUB giros:CDSsaveCaidasChq(p_nro_sesion_lg,p_nro_trx_lg,p_F_Serie_fld,p_F_NroGiro_fld,p_F_digito_fld,p_anulado,p_ImporteNeto,p_CodSucBenef_fld,p_NombreBenef_fld,p_ApellidoBenef_fld)
    LOCAL l_nro_sesion_lg LIKE giros:nro_sesion_lg
    LOCAL l_nro_trx_lg LIKE giros:nro_trx_lg
	LOCAL l_F_Serie_fld LIKE giros:F_Serie_fld
    LOCAL l_F_NroGiro_fld LIKE giros:F_NroGiro_fld
    LOCAL l_F_digito_fld LIKE giros:F_digito_fld
    LOCAL l_anulado LIKE common:csr_string
    LOCAL l_lg_cheq LIKE giros:lg_cheque
    LOCAL l_ImporteNeto LIKE giros:ImporteNeto
    LOCAL l_CodSucBenef_fld LIKE giros:CodSucBenef_fld
    LOCAL l_NombreBenef_fld LIKE giros:NombreBenef_fld
    LOCAL l_ApellidoBenef_fld LIKE giros:ApellidoBenef_fld
    
    l_nro_sesion_lg = p_nro_sesion_lg
    l_nro_trx_lg = p_nro_trx_lg
    CALL post:MISCFtrim(l_nro_trx_lg)
    
    l_F_Serie_fld = p_F_Serie_fld
    l_F_NroGiro_fld = p_F_NroGiro_fld
    CALL post:MISCpadNmb(l_F_NroGiro_fld,6,"0")
    
    l_F_digito_fld = p_F_digito_fld
    l_lg_cheq = ""
    
    l_anulado = p_anulado
    IF (l_anulado == "ANULADO") THEN
        l_lg_cheq = "AN"
    END IF 

    l_ImporteNeto = p_ImporteNeto
    CALL post:MISCFtrim(l_ImporteNeto)
    
    l_CodSucBenef_fld = p_CodSucBenef_fld
    CALL post:MISCFtrim(l_CodSucBenef_fld)
    
    l_NombreBenef_fld = p_NombreBenef_fld
    CALL post:MISCFtrim(l_NombreBenef_fld)
    
    l_ApellidoBenef_fld = p_ApellidoBenef_fld
    CALL post:MISCFtrim(l_ApellidoBenef_fld)


    CDS SELECT FROM DSC:giros:CaidasChq_tbl BECOMES DSC:giros:CaidasChq_ctx WHERE \
    	post:op_operator_id == op:op_operator_id && \
    	post:fecha == common:system_date && \
    	giros:nro_sesion_lg == l_nro_sesion_lg && \
    	giros:Serie_fld == l_F_Serie_fld && \
    	giros:NroGiro_fld == l_F_NroGiro_fld
    
    CDS FINDFIRST DSC:giros:CaidasChq_ctx LOCK
    lib:err_retval = CDSRETVAL
    
    CDS CLEARBUFFER DSC:giros:CaidasChq_ctx
    
    IF (lib:err_retval == -801)
        CDS APPEND DSC:giros:CaidasChq_ctx \
            op:op_operator_id AS post:op_operator_id\
            common:system_date AS post:fecha  \
            l_nro_sesion_lg AS giros:nro_sesion_lg \
            l_nro_trx_lg AS giros:nro_trx_lg \
            l_F_Serie_fld AS giros:Serie_fld \
            l_F_NroGiro_fld AS giros:NroGiro_fld \
            l_F_digito_fld AS giros:digito_fld \
            l_lg_cheq AS giros:lg_cheque \
            l_ImporteNeto AS giros:ImporteNeto \
            l_CodSucBenef_fld AS giros:CodSucBenef_fld \
            l_NombreBenef_fld AS giros:NombreBenef_fld \
            l_ApellidoBenef_fld AS giros:ApellidoBenef_fld   
        
    	CDS INSERT DSC:giros:CaidasChq_ctx LOCK
	ELSE
	    CDS APPEND DSC:giros:CaidasChq_ctx \
	        l_lg_cheq AS giros:lg_cheque
	    
		CDS UPDATE DSC:giros:CaidasChq_ctx LOCK
	END IF
	CDS UNLOCK DSC:giros:CaidasChq_ctx
	CDS ENDSELECT DSC:giros:CaidasChq_ctx

END SUB


/*******/
