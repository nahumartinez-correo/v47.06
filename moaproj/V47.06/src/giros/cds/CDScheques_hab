/****o* Pendientes de agrupación/OFB:giros:CDScheques_hab
* NOMBRE
*   OFB:giros:CDScheques_hab
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"


SUB giros:CDScheques_hab

	local item       like siaf:i
	local loc_retval like lib:err_retval

	clearfield giros:Serie_fld
	clearfield giros:NroGiro_fld
	clearfield giros:digito_fld

    	CDS SELECT FROM RecepChk_tab BECOMES RecepChk_ctx WHERE \
	adt_chk_suc == FLD:common:sucursal_activa && \
	adt_chk_op  == FLD:op:op_operator_id && \
	adt_chk_estado == 2 && giros:adt_chk_chequera == "S"

    	CDS FINDFIRST RecepChk_ctx NOLOCK
	if ( CDSRETVAL != 0 )
	    	Cds EndSelect RecepChk_ctx
		return -1

	end if

	loc_retval = -1

	DO
		CDS EXTRACT RecepChk_ctx ALL
		item = 0
		do
			if (item > giros:adt_chk_cantid )
				break
			end if
			if (giros:adt_chk_cheque[item] == "HA")
				giros:Serie_fld = giros:adt_chk_serie
				giros:NroGiro_fld = giros:adt_chk_nrogiro + item
				loc_retval = 0
				break
			end if
			item = item + 1
		loop

	    	CDS FINDNEXT RecepChk_ctx NOLOCK
	    	if ( CDSRETVAL != 0 )
			break
		end if
	LOOP
    	CDS ENDSELECT RecepChk_ctx

	if (giros:Serie_fld.numchars == 0 && giros:NroGiro_fld .numchars == 0 )
		return -1
	end if


END SUB

/*******/
