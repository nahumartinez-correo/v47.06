/****o* Giros/OFB:giros:CDShabilitadas_cheq
* NOMBRE
*   OFB:giros:CDShabilitadas_cheq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
	giros:MISCvalida_giros
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDShabilitadas_cheq
	local item LIKE siaf:i
	
	IF (siaf:codigo_siaf == 70300) THEN
	    CDS SELECT FROM RecepChk_tab BECOMES RecepChk_ctx WHERE \
	 adt_chk_suc == FLD:common:sucursal_activa &&  \
     adt_chk_serie == Serie_fld && \
    (adt_chk_nrogiro <= NroGiro_fld && adt_chk_nrofin >= NroGiro_fld)
	ELSE   
        CDS SELECT FROM RecepChk_tab BECOMES RecepChk_ctx WHERE \
	      adt_chk_suc == FLD:common:sucursal_activa && giros:adt_chk_chequera == "S" && \
          adt_chk_serie == Serie_fld && \
         (adt_chk_nrogiro <= NroGiro_fld && adt_chk_nrofin >= NroGiro_fld)
    END IF     
    CDS FINDFIRST RecepChk_ctx NOLOCK
    If ( CDSRETVAL == 0 )
    	Cds Extract   RecepChk_ctx all
    	item = NroGiro_fld - adt_chk_nrogiro
        select (adt_chk_cheque[item])
        	case "EM"
        		lib:err_retval = 1
        		break
        	case "AN"
        		lib:err_retval = 2
        		break
        	case "NP"
        		lib:err_retval = 3
        		break
        	case else
        		lib:err_retval = 0
        		break
        End Select
	Else
		lib:err_retval = -1
    End If
    Cds EndSelect RecepChk_ctx
    Return lib:err_retval
END SUB

/*******/
