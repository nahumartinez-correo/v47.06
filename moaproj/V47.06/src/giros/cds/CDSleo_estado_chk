/****o* Pendientes de agrupación/OFB:giros:CDSleo_estado_chk
* NOMBRE
*   OFB:giros:CDSleo_estado_chk
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSleo_estado_chk
	local item LIKE siaf:i
    CDS SELECT FROM RecepChk_tab BECOMES RecepChk_ctx WHERE \
	 adt_chk_suc == FLD:common:sucursal_activa && \
     adt_chk_serie == Serie_fld && \
    (adt_chk_nrogiro <= NroGiro_fld && adt_chk_nrofin >= NroGiro_fld)
    CDS FINDFIRST RecepChk_ctx NOLOCK
    LET lib:err_retval = CDSRETVAL
    If (lib:err_retval == 0 )
    	Cds Extract   RecepChk_ctx all
    	item = NroGiro_fld - adt_chk_nrogiro
        select (adt_chk_cheque[item])
        	case "HA"
        		lib:err_retval = 0
        		break
        	case "EM"
        		lib:err_retval = 1
        		break
        	case "AN"
        		lib:err_retval = 2
        		break
        	case "NP"
        		lib:err_retval = 3
        		break
        	case "CA"
        	    lib:err_retval = 5
        		break
        	case "PG"
        	    lib:err_retval = 6
        		break        		
        End Select
	Else
		lib:err_retval = -1
    End If
    Cds EndSelect RecepChk_ctx
    Return lib:err_retval
END SUB

/*******/
