/****o* Pendientes de agrupación/OFB:giros:CDSpais_sel_mpas
* NOMBRE
*   OFB:giros:CDSpais_sel_mpas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSpais_sel_mpas

offset_0000:
    
    CDS SELECT FROM Paises_tab_dsc BECOMES DSC:sucur_ctx 
    siaf:last_key = LASTKEY
    
    CDS MULTIDISPLAY DSC:sucur_ctx LISTpaises 
 
    IF (CDSRETVAL == 0x01FD) THEN
      GOTO offset_0000
    END IF 
    
    lib:err_retval = CDSRETVAL
    IF (lib:err_retval > 0) THEN
    	cds extract DSC:sucur_ctx all 
    	adt_monpas_codpaiswu = adt_pais_cod
    	move adt_pais_desc to DescriPais_fld
    	CLEARFIELD adt_monpas_codmonwu
    	REFRESH adt_monpas_codmonwu
    	CLEARFIELD adt_monpas_desmonwu
		CLEARFIELD adt_monpas_fechB
		CLEARFIELD adt_monpas_montomax
		refresh adt_monpas_desmonwu
		refresh adt_monpas_fechB
		REFRESH adt_monpas_montomax
    	refresh window
    	// call csr:proc_list(F_SETVALDONE,lst:giros:LISTABMmon_pas)

		cds endselect DSC:sucur_ctx
	
    	return 0
    else
		let lib:err_retval = cdsretval
		call lib:MISCcds_find_err
		cds endselect DSC:sucur_ctx
		return (-1)
    
    END IF 
END SUB

/*******/
