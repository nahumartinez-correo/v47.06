/****o* Pendientes de agrupación/OFB:giros:CDScantPagChq
* NOMBRE
*   OFB:giros:CDScantPagChq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDScantPagChq()

   /********************************************************************************************************/
   /*                                                                                                      */
   /* [PAW - 03/03/99]      Esta rutina se encarga de devolver la cantidad de paginas de recibo necesarias */
   /*                       para que quepan los cheques ingresados en la transacción.                      */
   /*                                                                                                      */
   /* Salidas:                                                                                             */
   /* - retval   :   Devuelve el número de páginas necesarias.                                             */
   /* - importe  :   Devuelve el total del importe neto de todos los cheques ingresados.                   */
   /*   (siaf)                                                                                             */
   /*                                                                                                      */
   /********************************************************************************************************/

	local cantCheques like post:cantidad
	local cantPagChq like post:cantidad
	local impTotChq like siaf:importe
	cantCheques = 0
	impTotChq = 0
	CDS SELECT FROM DSC:girosChqTmpTAB BECOMES DSC:girosChqTmpCON \
	WHERE adt_girChqtmp_op == op:op_operator_id && adt_girChqtmp_rem == adt_girChqtmp_rem
	CDS FINDFIRST DSC:girosChqTmpCON NOLOCK
	let lib:err_retval = CDSRETVAL
	while (lib:err_retval == 0)
			CDS EXTRACT DSC:girosChqTmpCON siaf:importe
			impTotChq = impTotChq + siaf:importe
			CDS FINDNEXT DSC:girosChqTmpCON NOLOCK
			let lib:err_retval = CDSRETVAL
			cantCheques = cantCheques + 1
    end while
	cantPagChq = cantCheques / 10
	if (cantCheques % 10)
		cantPagChq = cantPagChq + 1
	endif
	siaf:importe = impTotChq
	return (cantPagChq)
END SUB

/*******/
