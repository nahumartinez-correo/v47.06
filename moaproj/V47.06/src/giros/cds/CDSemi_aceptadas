/****o* Pendientes de agrupación/OFB:giros:CDSemi_aceptadas
* NOMBRE
*   OFB:giros:CDSemi_aceptadas
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

/////////////////////////////////////////////////////////////////////////
// Este OFB verifica, antes de querer borrar una sesion sin finalizar, //
// si existe alguna emision que ya haya viajado al switch. En tal caso //
// la sesion no podra ser cancelada                                    //
//////////////////////////////////////////// FGB 13.6.2001  /////////////
SUB giros:CDSemi_aceptadas
local l_checkpoint	like giros:checkpoint_emision

	CDS SELECT FROM DSC:post:TABPresuDeta BECOMES DSC:post:CONPresuDeta \
		WHERE	post:fecha == post:fecha && post:op_operator_id == post:op_operator_id && \
				post:PresNro ==	post:PresNro && siaf:adt_tran_fliatran == "CSM" && \
				(giros:es_envio_WU == "S" || giros:es_emision_postal == "S" || giros:es_emision_tele == "S" || giros:es_emision_correohoy == "S" )
	if (cdsretval == 0) then
			CDS FINDFIRST DSC:post:CONPresuDeta NOLOCK
			while (cdsretval == 0) then
				CDS EXTRACT DSC:post:CONPresuDeta giros:checkpoint_emision INTO l_checkpoint
				if (cdsretval == 0) then
					call giros:MISCverif_checkpoint(l_checkpoint)
					if (retval < 0) then
						// si llego hasta aca, es porque al menos hay una trx. confirmada
						return (-2)
					end if
				end if 
				CDS FINDNEXT DSC:post:CONPresuDeta NOLOCK
			end while
	end if
	// si llego hasta aca, es porque no encontro nada...
	return (0)
END SUB

/*******/
