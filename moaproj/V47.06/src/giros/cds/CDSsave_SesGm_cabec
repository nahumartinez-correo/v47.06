/****o* Giros Masivos/OFB:giros:CDSsave_SesGm_cabec
* NOMBRE
*   OFB:giros:CDSsave_SesGm_cabec
* DESCRIPCION
*   Esta rutina graba un registro en la tabla SesionGm_cabec (cabecera de sesiones pendientes de
*	Giros Masivos) o actualiza uno ya existente
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Retorna un valor que define la seleccion del operador, si acepta o no restaurar la sesion:
*	0 = No restaura o no encuentra sesion, 1 = restaura sesion encontrada
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:giros:ESCident_clie_lote
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroscds.h"

SUB giros:CDSsave_SesGm_cabec
	
    CDS SELECT FROM DSC:SesionGm_cab_tlb BECOMES DSC:SesionGM_cab_ctx WHERE \
    	post:op_operator_id == op:op_operator_id && \
    	giros:nro_ses_cabec == giros:nro_sesion_gm 
    CDS FINDFIRST DSC:SesionGM_cab_ctx LOCK
	lib:err_retval = CDSRETVAL
	CDS CLEARBUFFER DSC:SesionGM_cab_ctx
	CDS APPEND DSC:SesionGM_cab_ctx \
	post:op_operator_id \
	giros:nro_sesion_gm as giros:nro_ses_cabec \
	post:CloTipDoc \
	post:CloCuit \
	giros:cant_giros \
	giros:SumaImpGiros_I \
	giros:ImpTotGiros_I
	IF (lib:err_retval == -801)
		CDS APPEND DSC:SesionGM_cab_ctx common:system_date as fecha_cabec
		CDS INSERT DSC:SesionGM_cab_ctx LOCK
	ELSEIF (lib:err_retval == 0)
		CDS UPDATE DSC:SesionGM_cab_ctx LOCK
	END IF
	CDS UNLOCK DSC:SesionGM_cab_ctx
	CDS ENDSELECT DSC:SesionGM_cab_ctx
END SUB

/*******/
