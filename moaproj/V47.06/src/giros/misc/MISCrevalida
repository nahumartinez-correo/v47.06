/****o* Pendientes de agrupación/OFB:giros:MISCrevalida
* NOMBRE
*   OFB:giros:MISCrevalida
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

sub giros:MISCrevalida(send,rcve,tran_name,scrn,jnl,tots,cod_siaf,ind_presu,ind_lote)
	local send_rtn like hcomm:INDhost_sndrt
	local rcve_rtn like hcomm:INDhost_rcvrt
	local nombre_tran like tlr:INDtran_name
	local jnl_rtn like tlr:INDjnl_append
	local pantalla like common:local_indirect
	local totales like tlr:INDtots_append
	local codigo like siaf:codigo_siaf
	local presu like post:INDPresuD_Dat
	local lote like giros:INDlote_append
	local varlFormFis like post:PreDForFis // FGB 16.5.2001
		
	/*salvando...*/
	send_rtn = drv:INDhcomm_rtn//hcomm:INDhost_sndrt
	rcve_rtn = drv:INDspc_rtn[1]//hcomm:INDhost_rcvrt
	nombre_tran = drv:INDcur_tran//tlr:INDtran_name
	jnl_rtn = drv:INDjnl_rtn//tlr:INDjnl_append
	pantalla = drv:INDscr//tlr:INDdcol_scrn
	totales = drv:INDspc_rtn[0]//tlr:INDtots_append
	codigo = siaf:codigo_siaf
	presu = post:INDPresuD_Dat
	lote = INDlote_append
	swapdup imp_servicio_fld
	swapdup imp_serv_siniva
	swapdup imp_serv_iva
	swapdup siaf:importe
	swapdup post:ImpServUP
	swapdup post:AliServUP

	/*asignación para transacción de revalida*/
	drv:INDhcomm_rtn = send
	drv:INDspc_rtn[1] = rcve
	drv:INDcur_tran = tran_name
	drv:INDjnl_rtn = jnl
	drv:INDscr = scrn
	drv:INDspc_rtn[0] = tots
	siaf:jnl_codigo_siaf = cod_siaf
	post:INDPresuD_Dat = ind_presu
	INDlote_append = ind_lote
	//
	Call post:CDSobtiene_secuen("CABEC")
	post:cod_agrupacion = post:adt_codseq_nro
	// 
	clave_hdr_giros  = 0
    codigo_procesamiento = 992006
	giros:hora_viaje = common:time_of_day
	giros:dia_viaje  = common:system_date
	Call post:CDSobtiene_secuen("STAN")
	//
	imp_servicio_fld = imp_revalida_fld
	imp_serv_siniva  = imp_sin_iva_rev
	imp_serv_iva	 = iva_rev
	//
	post:ImpServUP = imp_servicio_fld
	post:AliServUP = serv_aliciva_rev
	//
	post:ver_anulacion = "N"
	post:ImporteConIva = imp_servicio_fld
	post:ImporteSinIva = imp_sin_iva_rev
	//
	siaf:importe = post:ImporteConIva
	//
	/*para que no se llame a la rutina que verifica que sea la ultima transaccion del presupuesto, pues lee la PresuDet */
	post:ctrol_ult_tt = "S"
	call tlr:JNLtran
	post:ctrol_ult_tt = ""
	//
	jnl_sequence = tlr:aux_sequence
	//
	if (hcomm:tran_status == HOST_ACCEPTED) then
		 /*Acumulo el importe de la revalida. Hernan 22/12/2000*/

		// FGB 16.5.2001: La revalida tiene comprobante fiscal
		let varlFormFis = post:PreDForFis
		let post:PreDForFis = "FACTU"
		call post:MISCTotalTransac(siaf:codigo_siaf)
		let post:PreDForFis = varlFormFis
	endif
	//	
	call post:CDSpresudet_upd_viaj
	//
	dupfield imp_servicio_fld
	dupfield imp_serv_siniva
	dupfield imp_serv_iva
	dupfield post:ImpServUP
	dupfield post:AliServUP
	dupfield siaf:importe
	drv:INDhcomm_rtn = send_rtn
   drv:INDspc_rtn[1] = rcve_rtn
   drv:INDcur_tran = nombre_tran
   drv:INDjnl_rtn = jnl_rtn
   drv:INDscr = pantalla
   drv:INDspc_rtn[0] = totales
   siaf:codigo_siaf = codigo
   post:INDPresuD_Dat = presu
   giros:INDlote_append = lote
	post:ver_anulacion = "S"
end sub

/*******/
