/****o* Pendientes de agrupación/OFB:giros:MISCBusca_Emisores
* NOMBRE
*   OFB:giros:MISCBusca_Emisores
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

SUB giros:MISCBusca_Emisores(codTran) 
    LOCAL nom_emisor like giros:EmisNomb_giroelec
    LOCAL apel_emisor like giros:EmisApel_giroelec
    LOCAL nom_emi_comm like giros:EmisNomb_giroelec
    LOCAL apel_emi_comm like giros:EmisApel_giroelec
   	local loc_nom_long	like siaf:idx
   	local loc_ape_long	like siaf:idx
   	
   /*ACP- Valifa que el emisor se encuentre dentro de la tabla de emisores
    si trata de la transaccion 70120(pago giro electronico) */
    clearfield nom_emisor
    clearfield apel_emisor
    let nom_emi_comm = EmisorNombre_comm
    let apel_emi_comm = Emisor_Apell_comm
    Call csr:trimfield(nom_emi_comm)   
    Call csr:trimfield(apel_emi_comm)
    let loc_nom_long = nom_emi_comm.NUMCHARS
    let loc_ape_long = apel_emi_comm.NUMCHARS  
 
    CDS SELECT FROM DSC:emis_giroelec_TAB BECOMES DSC:emis_giroelec_CTX /* \
		WHERE (EmisNomb_giroelec == nom_emisor) && (EmisApel_giroelec == apel_emisor)*/
    CDS FINDFIRST DSC:emis_giroelec_CTX nolock
    LET lib:err_retval = -801
    
    // FGB (25.08.2005) - PS9295 - Los campos Nombre y Apellido de la consulta múltiple tienen 17 caracteres, mientras
    //							   que en la tabla emis_giroelec y en el switch, los campos son de 20.
    while (cdsretval == 0)
    	cds extract dsc:emis_giroelec_CTX giros:EmisNomb_giroelec into nom_emisor giros:EmisApel_giroelec into apel_emisor
    	call csr:trimfield (nom_emisor)
    	call csr:trimfield (apel_emisor)
    	if (nom_emi_comm == substr(nom_emisor,0,loc_nom_long) && \
    		apel_emi_comm == substr(apel_emisor,0,loc_ape_long))
    		let lib:err_retval = 0
    	endif
    	cds findnext dsc:emis_giroelec_CTX nolock
	end while
    // fgb fin
    
    IF (lib:err_retval == -801) THEN
    	 IF (codTran == 70120) THEN /*ACP-Solo para el giro electronico*/
    		  RETURN (-2)
       END IF  
    ELSE
      IF (codTran == 70110 || codTran == 70090 || codTran == 70382) THEN 
    		  RETURN (-2)
       END IF  
    END IF
    
    CDS UNLOCK DSC:emis_giroelec_CTX 
    CDS ENDSELECT DSC:emis_giroelec_CTX 

END SUB

/*******/
