/****o* Pendientes de agrupación/OFB:giros:MISCprot_gral_wu
* NOMBRE
*   OFB:giros:MISCprot_gral_wu
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

/* rutinas para W.U */
SUB giros:MISCprot_gral_wu
/*PROTEGE LA VENTANA GRAL COMO PARA QUE SE ACTUALICE EL IMPORTE*/
	/*DESACTIVO BOTONES DE PAISES Y OPCIONALES SEGUN LA LISTA ASOCIADA*/
   	let drv:button = 0
	call drv:but_disable
	let drv:button = 1
	call drv:but_disable
	let drv:button = 2
	call drv:but_disable
	call csr:proc_list(F_PROTECT,LST:giros:LISTprot_dinero_wu)

/*ACTUALIZO LOS IMPORTES*/			
/*	
    IF (drv:dt_app == 6) THEN
      common:csr_string = SUBSTR(CodSucPag_fld,0,1)
    ELSE 
      common:csr_string = SUBSTR(common:sucursal_activa,0,1)
    END IF 
    CALL MISCcalculo_impuesto(common:csr_string,ImporteNeto,Serie_fld)
    CLEARFIELD Serie_fld 
    ImporteSelloEmis = Impuesto
    if (ImporteSelloEmis == 0) then
    	common:csr_string = "E"
    	CALL MISCcalculo_impuesto(SucSel_fld,ImporteNeto,common:csr_string)
    	ImporteSelloPag = Impuesto
    end if

    if (post:adt_tarif_fijo > 0) then
    	refresh post:adt_tarif_fijo
    	giros:Comision_fld = Comision_fld - post:adt_tarif_fijo
    	refresh Comision_fld
    end if
*/
	
	
END SUB

/*******/
