/****o* Lista de Giros/OFB:giros:MISCprocTranAnulLG
* NOMBRE
*   OFB:giros:MISCprocTranAnulLG
* DESCRIPCION
*   Esta rutina carga en un vector que simula un picklist el cual se va a ir moviendo segun el boton presionado 
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   giros:MISClimpio_tran_LG
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/
#include "girosmisc.h"

SUB giros:MISCprocTranAnulLG

/************************************************************/
/* Esta rutina carga en un vector que simula un picklist    */
/* el cual se va a ir moviendo segun el boton presionado    */
/*              Gabriel Falciola                            */
/************************************************************/
    LOCAL idx LIKE siaf:i
    LOCAL idx2 LIKE siaf:i
    LOCAL l_linea LIKE common:csr_string
    
    idx = post:TranAnul_idx + PL_GETITEM
    idx2 = 0

    CALL csr:PickOp 4  DSC:post:PICanulacion_tran "1,10"
          
    //Recorro el picklist y proceso la informacion de cada item
    DO
        LET post:TranAnul_vec[idx2][0] = ""
        LET post:TranAnul_vec[idx2][1] = ""
        REFRESH post:TranAnul_vec[idx2][0] 
        REFRESH post:TranAnul_vec[idx2][1] 
    
    
        CALL csr:myPickcontrol(dsc:post:PICanulacion_tran,common:csr_string_171,idx)
        
        IF (RETVAL < 0) THEN
            //Deshabilito todas las flechas
            DISABLECONTROL post:PBTranAnul_abajo
            KEYDEF f32,RT_DOWN   
            
            DISABLECONTROL post:PBTranAnul_arriba
            
            //DESMARCO LOS CHECKBOX RESTANTES
            WHILE (idx2 < 12)
                CALL post:MISCdesmarca_tran(idx2)
                CALL giros:MISCactSelCheq (idx2,"DISABLECONTROL")
                idx2 = idx2 + 1
            END WHILE
            
            BREAK
        END IF
        
       
        IF (SUBSTR(common:csr_string_171,24,7) == "ANULADO") THEN
            CALL giros:MISCactSelCheq (idx2,"DISABLECONTROL")
        ELSE
            CALL giros:MISCactSelCheq (idx2,"ENABLECONTROL")
        END IF
        
        post:TranAnul_vec[idx2][0] = SUBSTR(common:csr_string_171,0,60)
        post:TranAnul_vec[idx2][1] = SUBSTR(common:csr_string_171,1,10)
        
        REFRESH post:TranAnul_vec[idx2][0]
        
        //Busco si el item se encuentra seleccionado o no y en base a eso
        //lo reflejo en el checkbox
        CALL giros:MISCverifSelCheq(idx2)
        
        IF (RETVAL == 0) THEN
            CALL post:MISCmarca_tran(idx2)
        ELSE
            CALL post:MISCdesmarca_tran(idx2)
        END IF
            
        IF (idx2 == 11) THEN
            BREAK
        ELSE
            IF ((idx - PL_GETITEM) == post:TranAnul_cant - 1) THEN
                //Se limpian los items que sobran para simular el scroll
                CALL post:MISCsobra_tran(idx2)
                BREAK
            ELSE
                idx = idx + 1
                idx2 = idx2 + 1
            END IF
        END IF

    LOOP
        
    CALL post:MISCrefresh_items
    
    //Deshabilito todas las flechas
    IF (post:TranAnul_cant <= 12) THEN
        DISABLECONTROL post:PBTranAnul_abajo
        DISABLECONTROL post:PBTranAnul_arriba
        CALL post:MISCflecha_restore
    ELSE
        //Para deshabilitar la flecha para bajar me fijo si llegue hasta el ultimo
        idx = (post:TranAnul_cant - 1) + PL_GETITEM
        CALL csr:myPickcontrol(dsc:post:PICanulacion_tran,common:csr_string_171,idx)
    
        IF (substr(common:csr_string_171,1,10) == post:TranAnul_vec[idx2][1]) THEN
            DISABLECONTROL post:PBTranAnul_abajo
            KEYDEF f32,RT_DOWN
        END IF
        
        //Para deshabilitar la flecha para subir me fijo si estoy parado en el primero
        IF (post:TranAnul_idx == 0) THEN
            DISABLECONTROL post:PBTranAnul_arriba
        END IF
    END IF
       
END SUB

/*******/
