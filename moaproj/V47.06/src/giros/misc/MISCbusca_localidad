/****o* Pendientes de agrupación/OFB:giros:MISCbusca_localidad
* NOMBRE
*   OFB:giros:MISCbusca_localidad
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

SUB giros:MISCbusca_localidad(l_locali,provincia)   ///siaf:CDSbusca_mot_desc
    local ret        like lib:err_retval
    local cant_ch    like siaf:cant
    local cant_ch2   like siaf:cant
    local prov       like tele:tele_prov
    local desc       like siaf:adt_mot_desc
    local encontro   like siaf:idx
    local item       like siaf:idx
    local cont       like siaf:idx
    local locali     like giros:LocBenef_WU
    local locali_tmp like giros:LocBenef_WU
    
    locali = l_locali
    let encontro = 0
    
    CALL CSR:f_sadroppl(DSC:localidad)
    CALL CSR:f_sanewpl(DSC:localidad ,PIC:locali_sel)

    LET cont = 0
    LET item = PL_GETITEM + 0
	LET common:csr_string = ""
	LET common:csr_string_130 = ""
    
    DO
        /*Tengo que recorrer el picklist que tiene todas las localidades*/
        CALL csr:myPickcontrol "LOCALIDADES" common:csr_string_130 item 
        IF (RETVAL < 0) THEN
            BREAK
        END IF
        
        prov = substr(common:csr_string_130,0,1)        
        desc = substr(common:csr_string_130,2,50)
        locali_tmp = substr(locali,0,2)
        
        /*Se pidio buscar por los 2 primeros caracteres como maximo*/
        if (locali_tmp.numchars == 1)
            let cant_ch = 1
        else
            let cant_ch = 2
        end if
        
        

        let cant_ch2 = desc.numchars
        call siaf:busca_chars(locali_tmp,desc,cant_ch,cant_ch2)
        if (retval == 0) then            
            /*Como todas las letras estan siendo utilizadas, entonces "0" significa: todas las provincias*/
            if (provincia == "0" || (provincia != "0" && provincia == prov))
                CALL CSR:f_saaddpl(DSC:localidad,common:csr_string_130)
                let encontro = 1
            end if            
        END IF
        LET cont = cont + 1
        LET item = PL_GETITEM + cont      
    LOOP
    
    if (encontro == 0) then
	    errmsg lst:common:errmsg_list, "Descripción no encontrada"
        return (-2)
    endif
    CALL CSR:f_sadopl(DSC:localidad,common:csr_string)
    ret = RETVAL
    CALL CSR:f_sadroppl(DSC:localidad)
    if (ret >= 0) then
    	let giros:localidad = substr(common:csr_string,2,50)
        call csr:trimfield(giros:localidad)
        let giros:provin = substr(common:csr_string,0,1)
    endif
    RETURN (ret)
END SUB

/*******/
