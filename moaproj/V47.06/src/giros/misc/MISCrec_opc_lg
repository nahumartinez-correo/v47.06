/****o* Lista de Giros/OFB:giros:MISCrec_opc_lg
* NOMBRE
*   OFB:giros:giros:MISCrec_opc_lg
* DESCRIPCION
* 	Tratamiento de recalculo de opcionales (Lista de Giros)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   RETURN (-2):No existe el opcional en la parametria.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   giros:MISCcalc_Importes_lg
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/


#include "girosmisc.h"

SUB giros:MISCrec_opc_lg
	LOCAL cont LIKE post:cant_opc
	LOCAL desc_temp LIKE post:adt_opc_desc
	LOCAL desc_corta_temp LIKE post:adt_opc_opci

    WHILE (cont < post:cant_opc)
         IF (post:cod_opc[cont].numchars == 0) THEN
             BREAK
         END IF
        post:sel_opc = post:cod_opc[cont]

        //Obtiene datos necesarios de tabla Opcional.
        CDS SELECT FROM DSC:post:OPC_TAB BECOMES DSC:post:OPC_CTX WHERE \
            post:adt_opc_opci == post:sel_opc
        CDS FINDFIRST DSC:post:OPC_CTX NOLOCK
        IF (CDSRETVAL == 0) THEN
        CDS EXTRACT DSC:post:OPC_CTX \
            post:adt_opc_desc INTO desc_temp  \
            post:adt_opc_opci INTO desc_corta_temp \
            post:adt_opc_cortepropio \
            post:adt_opc_disccp \
            post:adt_opc_combina
        ELSE
            CLEARFIELD post:sel_opc
            MSGBOX "NO EXISTE EL OPCIONAL EN LA PARAMETRIA",0x00,"Error"
            CDS ENDSELECT DSC:post:OPC_CTX
            RETURN (-2)
        END IF
        CDS ENDSELECT DSC:post:OPC_CTX
        CLEARFIELD post:valor_dec

        //Obtiene tarifa del opcional asociado al producto (Lista de Giro).
        CALL giros:CDSobtiene_opc_lg
        IF (RETVAL < 0) THEN
			RETURN (-2)
	 	END IF
	 	post:cod_opc[cont] = post:adt_opclg_codopc     //codigo opcional
        post:ali_opc[cont] = post:adt_opclg_ivaopc     //alicuota  	
        post:val_opc[cont] = post:adt_opclg_impopc     //valor
        //En otro modo de cálculo, se lo fija en modo "S" para Opcionales (Lista de Giros).
        //Se calcula el importe del opcional en modo "S" - Suma Directamente.
        IF (post:adt_opclg_mod_calc.numchars == 0 || post:adt_opclg_mod_calc != "S") THEN
        	post:adt_opclg_mod_calc = "S"
        END IF
        post:cal_opc[cont] = post:adt_opclg_mod_calc   //modo calculo (siempre "S")
        post:flia_opc[cont] = post:adt_opcserv_uneg //familia (obtenida de OpcServ)
        post:comb_opc[post:cant_opc] = post:adt_opc_combina  //si el opcional combina con el servicio (Obtenido de tabla Opcional)
	    post:inf_opc[cont] = "S"
	    post:vec_opc2[cont] = post:valor_dec //instanciado con valor vacio.

		IF (!TESTFLAG(post:uso_int_flag,uso_interno)) THEN
        	/*************************************************/
            /* Actualizo el Costo Total de los Opcionales    */
    	    /*************************************************/
        	CALL giros:MISCactualizo_opc_lg
        	/****************************************************************/
            /* Actualizo el costo de cada uno de los opcionales             */
            /* por separado. Quizás parezca sin sentido hacer esto          */
            /* para cada opcional pero si el valor declarado actual         */
            /* es mayor al anterior, cambia el costo de algunos de          */
            /* los opcionales que ya estaban seleccionados.                 */
            /****************************************************************/
    	    CALL giros:MISCactualiz_1opc_lg
    	END IF
        cont = cont + 1
    END WHILE
    CLEARFIELD post:sel_opc
END SUB

/*******/
