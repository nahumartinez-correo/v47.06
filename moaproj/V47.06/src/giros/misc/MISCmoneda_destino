/****o* Pendientes de agrupación/OFB:giros:MISCmoneda_destino
* NOMBRE
*   OFB:giros:MISCmoneda_destino
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

SUB giros:MISCmoneda_destino

	// Crear el Picklist de MonedaPais de Western.

	call CSR:f_sadroppl(DSC:moneda_paisesw)
	call CSR:f_sanewpl(DSC:moneda_paisesw,PIC:giros:moneda_paisesw)
	if  (retval < 0) 
      		MSGBOX "ERROR AL CREAR PICKLIST",OFB_OK,"Error"
      		return -2
	end if
	
	// Buscar en la tabla de MonPasW los registros por pais y 
	// asignarlos a un picklist dinamico.

	cds select from dsc:MonPasW_tbl becomes dsc:MonPasW_ctx where \
   	adt_monpasw_codpais == CodPaisBenef_fld

	cds findfirst dsc:MonPasW_ctx nolock
	if ( cdsretval == -CDS_RECORD_NOT_FOUND )
		msgbox "NO EXISTEN REGISTROS EN MONPASW.",OFB_OK,"Error"
		return -2
	else
		if ( cdsretval != 0 )
			lib:err_retval = cdsretval
			call lib:MISCcds_find_err
			return retval
		end if
	end if

	do
		cds extract dsc:MonPasW_ctx all

		fprint siaf:nota_1,"%-3.3s    %-25.25s",\
		giros:adt_monpasw_codmon,giros:adt_monpasw_descmon

    		call CSR:f_saaddpl(DSC:giros:moneda_paisesw,siaf:nota_1)

		cds findnext DSC:MonPasW_ctx nolock
		let lib:err_retval = CDSRETVAL
		if  (lib:err_retval == -CDS_RECORD_NOT_FOUND )
			break
		end if
	loop

	cds endselect dsc:MonPasW_ctx

        call  CSR:f_sadopl DSC:moneda_paisesw siaf:nota_1

	move substr(siaf:nota_1,0,3)  to monpas_codmonpag
	move substr(siaf:nota_1,7,25) to monpas_desmonpag

	refresh monpas_codmonpag
	refresh monpas_desmonpag

END SUB 

/*******/
