/****o* Pendientes de agrupación/OFB:giros:MISCjournalChq
* NOMBRE
*   OFB:giros:MISCjournalChq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosmisc.h"

SUB giros:MISCjournalChq

   /********************************************************************************************************/
   /*                                                                                                      */
   /* [PAW - 15/03/99]      Esta rutina se encarga de journalizar los cheques de la transacción 70320.     */
   /*                                                                                                      */
   /********************************************************************************************************/

	local loc_nombre_transac like siaf:nombre_transac
	// [PAW] ---> Journalización. (CHEQUES)

	post:Tipo_Adm = "I"

	let siaf:codigo_siaf = 99099
	let siaf:nombre_transac = "CAPTURA COBRAR"

		CDS SELECT FROM DSC:girosChqTmpTAB BECOMES DSC:girosChqTmpCON WHERE \
		adt_girChqtmp_op  == op:op_operator_id && \
		adt_girChqtmp_rem == 0

		CDS FINDFIRST DSC:girosChqTmpCON LOCK
		let lib:err_retval = CDSRETVAL

	    let drv:INDspc_rtn[0] = LST:TOTS70320chq
		let tlr:INDtots_append = LST:TOTS70320chq
		DO
			IF (lib:err_retval != 0) THEN
				BREAK
			END IF

			// [PAW] --> Flag para que entre a la captura de cheque

			tes:es_tesoro = "S"

			CDS EXTRACT DSC:girosChqTmpCON                  \
			    adt_girChqtmp_sec, adt_girChqtmp_op 	    \
				adt_girChqtmp_banco   into post:cod_banco	\
				adt_girChqtmp_sucu    into post:sucursal	\
				adt_girChqtmp_plaza   into post:plaza		\
				adt_girChqtmp_cheque  into post:nro_cheque	\
				adt_girChqtmp_cuenta  into post:cuenta		\
				adt_girChqtmp_moneda  into siaf:moneda		\
				siaf:importe          into siaf:importe 	\
				adt_girChqtmp_fec_d   into post:fec_d       \
				adt_girChqtmp_fec_e   into post:fec_e		\
				adt_girChqtmp_clr	  into tes:clearing

			post:adt_mp_cod = siaf:moneda
			call post:CDSadt_MedPago_load
			post:medio_pago_desc = post:adt_mp_desc

			post:codigo_medio_pago = siaf:moneda
			post:DescripMedPag = post:medio_pago_desc
			//post:fec_d = post:fecha
			siaf:afecta_efectivo = "+"

			siaf:importe2 = siaf:importe
			call giros:ABMgirosChq_refresh

			let drv:INDscr = SCR:post:SCRNcaptura_adiciona
			let drv:INDjnl_rtn = OFB:giros:JNL70320chq

			UNGETKEY RT_ESC
			/* Cheques sin acreditacion automatica */
			let tes:teso_cheq_auto = "N"
			
			call post:CDSobtiene_secuen("STAN")
			giros:codigo_procesamiento = 998000
			giros:hora_viaje = common:time_of_day
			giros:dia_viaje  = common:system_date
			post:NisIngresoChq_comm = common:sucursal_activa
			call post:MISCarmar_cheq_adic

			drv:INDhcomm_rtn  = OFB:post:SENDingreso_cheque
			drv:INDspc_rtn[1] = OFB:post:RCVEingreso_cheque
			call hcomm:COMM_stat_init

			CALL tlr:JNLtran
			
			if ( hcomm:tran_status != HOST_ACCEPTED )
				break
			end if

			CDS UNLOCK DSC:girosChqTmpCON
			CDS FINDNEXT DSC:girosChqTmpCON LOCK
			let lib:err_retval = CDSRETVAL
		LOOP

		// [PAW] --> Flag para que entre a la captura de cheque
		clearfield tes:es_tesoro

		CDS UNLOCK DSC:girosChqTmpCON
		CDS ENDSELECT DSC:girosChqTmpCON
		clearfield tlr:INDtots_append
		clearfield drv:INDspc_rtn[0]
		
		clearfield drv:INDhcomm_rtn
		clearfield drv:INDspc_rtn[1]
		
END SUB

/*******/
