/****o* Pendientes de agrupación/OFB:giros:PRES70041
* NOMBRE
*   OFB:giros:PRES70041
* DESCRIPCION
*   Rutina Pre Display de la transaccion de Giros Contrareembolso. Setea el codigo_siaf de la tx, el codigo de 
*	procesamiento para enviar el mensaje al switch y los datos necesarios para poder ejecutar la tx. Ademas valida
*	que la tx 70041 (giros contrareembolso) sea la unica tx del presupuesto
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:giros:TRAN70041
* DOCUMENTACION
* SC50186.doc:http://livelink.intranet.siemens-itron.com.ar/livelink/livelink.exe?func=doc.ViewDoc&nodeId=620074&
* SOURCE
*/
#include "girospres.h"

SUB giros:PRES70041
    siaf:codigo_siaf = 70041
    siaf:codigo_proc = 992001
    es_emision_postal = "S"

    enablecontrol op:chk8
    enablecontrol op:chk9
    giros:orden_nispagadora = "orden_des"
    altercontrolset op:chk8
    altercontrolset op:chk9

    call giros:PRESgeneralEmis
    IF (RETVAL < 0)
        RETURN retval
    END IF  
    
    if (post:CloTipDoc == "96" && post:CloCuit == "99999999999") then
    	MSGBOX "No se puede hacer una liquidacción de contrareembolso con el cliente 'CONSUMIDOR FINAL'",0x30,"Aviso"
        ungetkey RT_ESC
        return -2
    end if
	// PS-7692 - TT obligatorio para Contrareembolso
	setflag giros:env_post_flag,envia_postal
	CALL MISCImpAbonadoCheq
	call giros:CDSdatgralsuc_load
    
    ;Leo alicuota de acrecentamiento
    clearfield post:adt_acreperc_aliacre
    post:adt_acreperc_aliciva = post:adt_serv_aliciva
    post:adt_acreperc_cativa = post:IvaCod
    call post:CDS_AcrePerc_load
    
	if (post:estado_presu == 2) then
	    if (giros:imp_max_crem > 0) then
            ;INIT 56 1
            INIT 71 1
            call post:CDSselALiqStockpCDD("P",post:track[0],post:importe_crem[0],giros:CodSucBenef_fld)
            if (retval == -2) then
                protfield giros:SucSel2_fld
                protfield giros:CodSucBenef_fld
                giros:SucSel2_fld = substr(giros:CodSucBenef_fld,0,1)
                
            else    
                DESPLIEGO:
                call drv:MISCpopup(scr:post:SCRN_tt_CREM,ofb:post:PDIS_tt_CREM,ofb:post:PCOL_tt_CREM,ofb:post:SVAL_tt_CREM,LST:post:BUT_tt_crem)
                
                if (lastkey == RT_ESC) then
                    ungetkey RT_ESC
                    return -2
                end if
            end if
            call post:FVALimporte_crem
            
            if (retval == -2) then
                GOTO DESPLIEGO
            END IF
            if (giros:ImporteNeto.numchars == 0) then
                MSGBOX "El importe a girar debe ser mayor que cero, ¿Desea salir de la transacción?",0x21,"Aviso"
                IF (RETVAL == 1) THEN  
                    ungetkey RT_ESC
                    return -2
                else
                    GOTO DESPLIEGO
                end if
            end if
            
            ;INIT 56 0
            INIT 71 0
        else
            MSGBOX "El importe límite de giros es cero, consulte con el administrador de tablas.",0x30,"Aviso"
            ungetkey RT_ESC
            return -2
        end if
    end if
    
    protfield ImporteCremAcumulado
    protfield ImporteNeto
END SUB 

/*******/
