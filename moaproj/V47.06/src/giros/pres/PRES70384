/****o* Pendientes de agrupación/OFB:giros:PRES70384
* NOMBRE
*   OFB:giros:PRES70384
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospres.h"

SUB giros:PRES70384

	siaf:codigo_siaf = 70384
	call giros:MISCValidoCliMed
	IF (RETVAL < 0) THEN
		/* No puedo continuar */
		return (-1)
    END IF
	call siaf:PRESfecha_hora
	if (retval < 0 )
		return -1
	end if

	// FGB 25.6.2002 - PS 5940 : no puede haber transacciones monetarias
	// dentro de una sesion de cuentas corrientes...
	if (post:cli_tipo == CTACTE) then
		msgbox "PRODUCTO NO DISPONIBLE PARA MAYORISTAS",OFB_OK,"Error"
		return (-1)
	endif

	call giros:MISCBusca_flia(siaf:codigo_siaf)
	if (retval < 0)
	    msgbox "FALTA TIPO DE GIRO EN TABLAS",OFB_OK,"Error"
	    return -1
	endif

	call giros:MISCbuscar_oblig
	if ( retval <  0 )
		return -1
	end if

	let post:INDPresuD_Dat = OFB:CDSappend70384

	call giros:MISCTranPresD(0) // ---> Agrego a la PresuDet

	if (post:estado_presu < 3) then
		call csr:cleararray(post:fliatran_vec)
		call csr:cleararray(post:impciva_vec)
		call csr:cleararray(post:impsiva_vec)
	    	es_emision_postal = "N"
		es_envio_WU = "N"
		es_emision_tele = "N"
		es_emision_inte = "N"
		es_emision_correohoy = "N"
		opcionales_inter = 0
	endif

    IF ((post:estado_presu == "1") || (post:estado_presu == "2")) THEN
    	CALL MISCconsulta_multi
	   	IF (RETVAL < 0) THEN
			if ( retval == -3 )
	       		msgbox "No se puede realizar la transacción",OFB_OK,"Error"
    			ungetkey RT_ESC
       			RETURN (-2)
			else
    			ungetkey RT_ESC
       			RETURN (-2)
			end if
		END IF

		new_mtcn_WI = new_mtcn_WI_comm
		giros:codigo_procesamiento = 442040
	    cons_nro_ctrol = ClaveMTC_comm
		MoneyTKey_fld  = MoneyTKey_comm
		CodSucEmis_fld = SucursalEmi_comm
	    // Token 67 : Importe de Emision en pais Emisor
	    siaf:importe2 = Importe_comm
	    ImporteEmis_fld = siaf:importe2 / 100
	
	    // Token 117 : Importe Pago en pais de pago (AR)
	    siaf:importe2 = ImportePagar_comm
	    siaf:importe = siaf:importe2 / 100
	    giros:ImporteNeto = siaf:importe
	
	    CodPaisBenef_fld = PaisDestino_comm
	    CALL MISCpais(CodPaisBenef_fld,LST:LISTpaisBenef)
	
	    CodPaisEmis_fld = PaisEmis_comm
		CALL MISCpais(CodPaisEmis_fld,LST:LISTpaisEmis)

	    clearfield giros:monpas_desmonpag
	    clearfield giros:monpas_desmonwu
	    giros:monpas_codmonpag = giros:CodMoneda_comm
	    call MISCbusco_mon_inter(giros:CodMoneda_comm,PaisDestino_comm)
	    IF (RETVAL < 0) THEN
	   		RETURN -1
	    END IF
	    move giros:adt_monpas_desmonwu to giros:monpas_desmonpag
	
	    giros:monpas_codmonwu = giros:CodMonedaEmis_comm
	    MOVE NombreInter_comm    TO NombreBenef_inter
	    MOVE ApellidoInter_comm  TO ApellidoBenef_inter
	    MOVE EmiTelefInter_comm  TO TelEmis_inter
		MOVE TipoDoc_comm		TO TipoDocBenef_fld
	    MOVE NroDoc_comm TO NroDocBenefWI
		MOVE EmiNombreInter_comm TO NombreEmi_inter
	    MOVE EmiApellInter_comm  TO ApellidoEmis_inter
	    MOVE EmiTelefInter_comm  TO TelEmis_inter
		MOVE FExpBenInter_comm   TO FExpiracionBene_WI
	    MOVE CCCBenInter_comm    TO CuitCuilCdiBene_WI
	    MOVE NroCuitBenef_comm  TO NroCuitBenef_fld	

		MOVE FecNacBenef_WI_comm	TO FecNacBenef_inter
		MOVE PaisEmiDNI_WI_comm		TO PaisEmisionDNI_WI
		MOVE DNIconVto_WI_comm		TO DNIconFecVto_WI
		MOVE LugNacBenef_WI_comm	TO LugNacimBenef_inter
		MOVE NacionBenef_WI_comm	TO NacionBenef_inter
		MOVE SexoBenef_WI_comm		TO SexoBenef_inter
		MOVE EstCivBenef_WI_comm	TO EstCivilBenef_inter
		MOVE ProvInter_comm			TO ProvSucBenef_fld
		MOVE CiudadInter_comm		TO CiudadBenef_inter
		
		
		//Ver si hay que calcular algo
		MOVE TipoDocTrib_WI_comm	TO TipoDocTribut_WI
		
		MOVE MotivoEnvio_WI_comm	TO MotivoEnvio_WI
		MOVE CliPepBenef_WI_comm	TO CliPepBenef_inter
		
		//domicilio Beneficiario
		MOVE CalleInter_comm		TO CalleBenef_inter
		MOVE FecEmiDNI_WI_comm		TO FecEmisDNI_WI

		MOVE EmiProvInter_comm 		TO ProvSucEmis_fld
		MOVE EmiCiudadInter_comm	TO CiudadEmis_inter

		MOVE EmiCalleInter_comm		TO CalleEmis_inter


		/*if (OcupacionBenef_comm.NUMCHARS > 0) then
			// Verifico si la Ocupacion esta en la tabla o es Otra Actividad
			// Le paso la B de Beneficiario para saber a que campo asignar los valores
			call CDSverif_ocupacion(OcupacionBenef_comm,"B")
	    end if*/
	    MOVE Ocupacion_WI_comm TO Ocupacion_WI
	    MOVE CodPostInter_comm   TO CodPostBenef_inter
	    MOVE TelefonoInter_comm  TO TelBenef_inter
	    resetflag giros:CuitInter_flag,NoCuitBenef_inter
		    
	  	resetflag giros:opcionales_inter,opc_desc_fisica
		resetflag giros:opcionales_inter,opc_preg_verif
		resetflag giros:opcionales_inter,opc_avis_msg
		resetflag giros:opcionales_inter,opc_pag_sver
	
		RESETFLAG opcionales_inter,chk_desc_fisica
		RESETFLAG opcionales_inter,chk_preg_verif
		RESETFLAG opcionales_inter,chk_avis_msg
	
		inter_desc_fisica = descrip_fis_comm
		if (inter_desc_fisica.NUMCHARS != 0) then
			setflag giros:opcionales_inter,opc_desc_fisica
			PROTFIELD inter_desc_fisica
			REFRESH inter_desc_fisica
		else
			resetflag giros:opcionales_inter,opc_desc_fisica
		endif
		altercontrolset op:CHK8
	
		inter_preg_verif = pregunta_comm
		inter_resp_verif = respuesta_comm
	
		if (inter_preg_verif.NUMCHARS != 0) then
			setflag opcionales_inter,opc_preg_verif
			PROTFIELD inter_preg_verif
			PROTFIELD inter_resp_verif
			REFRESH inter_preg_verif
			REFRESH inter_resp_verif
		else
			resetflag opcionales_inter,opc_preg_verif
		endif
		altercontrolset op:CHK9
	
		//inter_avis_msg = tipo_aviso_pago_comm
		inter_avis_msg = mensaje_inter_comm
	
		if (inter_avis_msg.NUMCHARS != 0) then
			setflag opcionales_inter,opc_avis_msg
			PROTFIELD inter_avis_msg
			REFRESH inter_avis_msg
		else
			resetflag opcionales_inter,opc_avis_msg
		endif
		altercontrolset op:CHK10

		inter_pag_sver = pag_sverif_comm
		if (inter_pag_sver == "Y" ) then
			setflag opcionales_inter,opc_pag_sver
		else
			resetflag opcionales_inter,opc_pag_sver
		endif
		altercontrolset op:CHK11
	
	    TasaConversion_fld = tasa_conver_comm
	    CodPaisResidBenef = CodPaisBenef_comm
		IF (CodPaisResidBenef.NUMCHARS != 0) THEN
		    CALL MISCpais(CodPaisResidBenef,LST:LISTfldPaisResidB)
	    END IF

	    CodPaisResidEmis = CodPaisEmis_comm
	    IF (CodPaisResidEmis.NUMCHARS != 0) THEN
	      CALL MISCpais(CodPaisResidEmis,LST:LISTfldPaisResidE)
	    END IF

	    REFRESH CodSucEmis_fld
	    REFRESH cons_nro_ctrol
	    REFRESH ImporteNeto
	    REFRESH siaf:importe
	    REFRESH CodPaisBenef_fld
	    REFRESH CodPaisEmis_fld
	    REFRESH TasaConversion_fld
	    REFRESH TelEmis_inter
	    REFRESH ImporteEmis_fld


	    imp_servicio_fld = 0
	    refresh imp_servicio_fld
	    clearfield imp_revalida_fld
    END IF

	/*Para giros siempre tiene que estar en N - Pedido por Pablo Massera*/
	post:captura_mp = "N"
END SUB

/*******/
