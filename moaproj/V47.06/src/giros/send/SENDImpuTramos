/****o* Pendientes de agrupación/OFB:giros:SENDImpuTramos
* NOMBRE
*   OFB:giros:SENDImpuTramos
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   giros:TRAN_IMPU_TRAMOS
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girossend.h"

SUB giros:SENDImpuTramos
	LOCAL l_tabla LIKE admin:tabla 
	LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

	call SVALImpuTramos
	if (retval != 0)
		return (-2)
	end if
	    
	call post:MISCAutorizoModif("ImpuTramos")
	if (retval < 0) then
		CALL CSR:proc_list(170,LST:LISTImpuTramos_fld)
		adt_impp_desde = 0000000000.0
		CALL MISCImpuTramos_init
		CALL CSR:proc_list(190,LST:LISTImpuTramos_fld)
		return (-2)
	end if    
	drv:save_button = drv:last_button
	IF (TESTFLAG(admin:mode_flags,update)) THEN
		CALL CDSImpuTramos_save        
		;SMC journalizo Modificacion
		call post:MISCJournalTablas        
		CALL drv:side_bar_disable
		RESETFLAG admin:mode_flags,update
	ELSE
		IF (TESTFLAG(admin:mode_flags,delete)) THEN
			RESETFLAG admin:mode_flags,delete
			CALL lib:adt_delete_verify
			IF (RETVAL == 0) THEN
				CALL CDSImpuTramos_del                
				;SMC journalizo Modificacion  
				call post:MISCJournalTablas 
				CALL drv:side_bar_disable
				IF (RETVAL != 0) THEN
					drv:button = drv:save_button
					CALL drv:but_up_enable
					RETURN (-1)
				ELSE
					CALL CSR:proc_list(170,LST:LISTImpuTramos_fld)
					adt_impp_desde = 0000000000.0
					CALL MISCImpuTramos_init
					CALL CSR:proc_list(190,LST:LISTImpuTramos_fld)
					RETURN (-1)
				END IF
			END IF
    ELSE
			IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
				clearfield adt_impp_desde
				RESETFLAG admin:mode_flags,imprimir
				/*  CALL giros:MISCPr_rep_tramos*/
				
		    //Inicio gpb:AUT-2415 
		    /*CALL MISCdumptable 
		     CALL CDSdumptable*/  
				//resguardo los valores originales
				LET l_tabla = admin:tabla 
				LET l_INDCamposTablas = post:INDCamposTablas		     
		    CALL post:MISCdumptableNew 
				admin:tabla = "ImpuTramos"
				post:INDCamposTablas = LST:LISTImpuTramos_abm
		    CALL post:CDSdumptableNew  
		    //recupero los valores originales
				LET admin:tabla = l_tabla
				LET post:INDCamposTablas = l_INDCamposTablas
				CALL CSR:proc_list(170,LST:LISTImpuTramos_abm)
				CALL CSR:proc_list(190,LST:LISTImpuTramos_abm)				
		    //Fin gpb:AUT-2415 
				
				CALL CSR:proc_list(170,LST:LISTImpuTramos_fld)
				/*  adt_impp_desde = 0000000000.0
				CALL MISCImpuTramos_init*/
				CALL CSR:proc_list(190,LST:LISTImpuTramos_fld)
				RETURN (-1)
			END IF
		END IF
		RETURN (-1)
	END IF
  CALL CSR:proc_list(170,LST:LISTImpuTramos_fld)
  adt_impp_desde = 0000000000.0
  CALL MISCImpuTramos_init
  CALL CSR:proc_list(190,LST:LISTImpuTramos_fld)
  refresh window
  RETURN (-1)
END SUB

/*******/
