/****o* Pendientes de agrupación/OFB:giros:SENDcancel_anula
* NOMBRE
*   OFB:giros:SENDcancel_anula
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girossend.h"

SUB giros:SENDcancel_anula
	//Esta rutina se usa para mandar las 400
	if (giros:cod_tran_canc == 70140 || giros:cod_tran_canc == 70141 )
		// Emision de Giro con Gestion de Duplicado.
		Call giros:SENDput_fld("23",vieja_serie_fld)
		Call giros:SENDput_fld("21",viejo_num_giro_fld)
		Call giros:SENDput_fld("34",viejo_dig_fld)
	else
		call SENDput_fld("21",NroGiro_fld)
		call SENDput_fld("23",Serie_fld)
		call SENDput_fld("34",digito_fld)
		//Para cancelaciones de chequeras.. necesito tambien el número hasta
		if ( giros:nuevo_num_giro_fld.numchars != 0 )
			Call SENDput_fld("22",nuevo_num_giro_fld)
			Call SENDput_fld("25",nuevo_dig_fld)
		end if
	end if
	call SENDput_fld("113",cod_proc_tran)
END SUB

/*******/
