/****o* Pendientes de agrupación/OFB:giros:PBordeno_camara
* NOMBRE
*   OFB:giros:PBordeno_camara
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospb.h"

sub giros:PBordeno_camara

	local len      like common:local_int
	local item     like siaf:i
	local strsql   like common:local_ascii
	local ceros    like common:local_int
	local xx       like common:local_int
	local contador like giros:cont


	select (gir_rta_cod)
		case 1
			/* Ordeno el picklist por Banco */
			call csr:PickOp 4 "PLBCamara" "0,3"	
			break
		case 2
			/* Ordeno el picklist por Serie-Numero */
			call csr:PickOp 4 "PLBCamara" "4,8"	
			break
		case 3
			/* Ordeno el picklist por Importe */
			call csr:PickOp 4 "PLBCamara" "15,8"	
			break
		case 4
			/* Ordeno el picklist por Marca */
			call csr:PickOp 4 "PLBCamara" "24,3"	
			break
	end select
	
	cont = 0
	item = PL_GETITEM
	
	contador = 0
	WHILE (contador <= 6)
		call csr:myPickcontrol("PLBCamara",PicDisplay_fld[cont],item)
		if (PicDisplay_fld[cont] == "") then
			break
		end if
		;len = PicDisplay_fld[cont].numchars - 3
		len = PicDisplay_fld[cont].numchars - 4
		if (substr(PicDisplay_fld[cont],len,3) == "R06" || \
		substr(PicDisplay_fld[cont],len,3) == "R08" || \
		substr(PicDisplay_fld[cont],len,3) == "M01" || \
		substr(PicDisplay_fld[cont],len,3) == "M02" || \
		substr(PicDisplay_fld[cont],len,3) == "M03" || \
		substr(PicDisplay_fld[cont],len,3) == "M04" || \
		substr(PicDisplay_fld[cont],len,3) == "M05" || \
		substr(PicDisplay_fld[cont],len,3) == "M06" || \
		substr(PicDisplay_fld[cont],len,3) == "M07" || \
		substr(PicDisplay_fld[cont],len,3) == "M08" || \
		substr(PicDisplay_fld[cont],len,3) == "M09" || \
		substr(PicDisplay_fld[cont],len,3) == "M10") then
			PicError_fld[cont] = substr(PicDisplay_fld[cont],len,3)
			PicDisplay_fld[cont] = substr(PicDisplay_fld[cont],0,len)
			select (cont)
				case 0
					setflag camara_flags,0
					altercontrolset giros:PBcb0
					break
				case 1
					setflag camara_flags,1
					altercontrolset giros:PBcb1
					break
				case 2
					setflag camara_flags,2
					altercontrolset giros:PBcb2
					break
				case 3
					setflag camara_flags,3
					altercontrolset giros:PBcb3
					break
				case 4
					setflag camara_flags,4
					altercontrolset giros:PBcb4
					break
				case 5
					setflag camara_flags,5
					altercontrolset giros:PBcb5
					break
				case 6
					setflag camara_flags,6
					altercontrolset giros:PBcb6
					break
			end select
		else
			if (substr(PicDisplay_fld[cont],len,3) == "R00") then
				PicDisplay_fld[cont] = substr(PicDisplay_fld[cont],0,len)
				PicError_fld[cont] = ""
			end if
			select (cont)
				case 0
					resetflag camara_flags,0
					altercontrolset giros:PBcb0
					break
				case 1
					resetflag camara_flags,1
					altercontrolset giros:PBcb1
					break
				case 2
					resetflag camara_flags,2
					altercontrolset giros:PBcb2
					break
				case 3
					resetflag camara_flags,3
					altercontrolset giros:PBcb3
					break
				case 4
					resetflag camara_flags,4
					altercontrolset giros:PBcb4
					break
				case 5
					resetflag camara_flags,5
					altercontrolset giros:PBcb5
					break
				case 6
					resetflag camara_flags,6
					altercontrolset giros:PBcb6
					break
			end select
		end if
		/*
		if (PicDisplay_fld[cont] == "fin") then
			clearfield PicDisplay_fld[cont]
			refresh PicDisplay_fld[cont]
			return (-2)
		end if */
		refresh PicDisplay_fld[cont]
		refresh PicError_fld[cont]
		if (PicDisplay_fld[cont].numchars > 0) then
			select (cont)
				case 0
					enablecontrol PBcb0
					break
				case 1
					enablecontrol PBcb1
					break
				case 2
					enablecontrol PBcb2
					break
				case 3
					enablecontrol PBcb3
					break
				case 4
					enablecontrol PBcb4
					break
				case 5
					enablecontrol PBcb5
					break
				case 6
					enablecontrol PBcb6
					break
			end select
			call giros:CDSpongo_descripcion(cont)
			refresh PicDescripcion_fld[cont]
			cont = cont + 1
			posicion = item
			item = item + 1
		end if
		index = cont
		contador = contador + 1
	END WHILE
	/* Si en el picklist hay mas de 7 elementos habilito el boton PickAbajo */
	/* Deshabilito el boton PickArriba porque siempre voy a estar parado en el 1ero */	
	disablecontrol PBcb7
	if (index < giros:total) then
		enablecontrol PBcb8
	end if
end sub

/*******/
