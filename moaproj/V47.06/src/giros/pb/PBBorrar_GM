/****o* Giros Masivos/OFB:giros:PBBorrar_GM
* NOMBRE
*   OFB:giros:PBBorrar_GM
* DESCRIPCION
*   Esta rutina verifica el estado del giro seleccionado del Combo "Seleccionar", y si el giro
*   no fue enviado pregunta al operador si desea borrarlo y luego llama a la rutina que lo borra.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   RETVAL -2, cuando el giro tiene estado Enviado o el operador no está seguro de borrarlo.
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospb.h"

SUB giros:PBBorrar_GM
local l_retval like lib:err_retval
local l_last_button like drv:last_button

	l_last_button = drv:last_button
	drv:button = drv:last_button    
	CALL drv:but_down_disable   
	
	if (giros:Giros_cargados.numchars == 0) then
	    msgbox "Debe seleccionar un giro para borrar.",0x00,"ERROR"
	    drv:button = l_last_button
	    CALL drv:but_up_enable
	    return -2
	endif
		
	//Verificar que el giro tenga estado "I" ya que son los unicos que se pueden modificar.
	if (estado_gm != "I") then
	    	if (tipo_gm != "H")
	    		MSGBOX "El giro seleccionado no puede borrarse.",0x00,"ERROR"
	    	else
	    		MSGBOX "Existe al menos un giro CEC enviado/facturado/cancelado, por lo tanto el lote no podrá borrarse.",0x00,"ERROR"
	    	endif
	    	drv:button = drv:last_button
		CALL drv:but_up_enable
	    	RETURN -2
	else
		if (tipo_gm == "H") then
			//buscar en la tabla
			CALL CDSBuscarCEC_enviado
			if (retval < 0) then
				MSGBOX "Existe al menos un giro CEC enviado/facturado/cancelado, por lo tanto el lote no podrá borrarse.",0x00,"ERROR"
				drv:button = drv:last_button
				CALL drv:but_up_enable
				RETURN -2
			endif
		endif
	endif
	
	MSGBOX "Está seguro que desea borrar el giro?",OFB_YESNO,"ATENCION"
   	if (retval == 7) then //NO
		drv:button = drv:last_button
		CALL drv:but_up_enable
		RETURN -2
 	end if
	CDS BEGINWORK
	//resguardar campos de cantidad e importes (con y sin impuestos) 
	//para luego restarlos al confirmar la modificacion.
	if (tipo_gm == "H") then
		Cantgm_cec_bck = Cantgm_cec
	else
		Cantgm_cec_bck = 1
	endif
	Importegm_cec_bck = giros:ImporteNeto
	Importegm_tot_bck = giros:ImporteTotal_fld
        //Borrar los CEC que se modificaron y volverlos a ingresar
        CALL CDSBorrar_gm(tipo_gm)
       	l_retval = RETVAL
       	IF (l_retval == 0) then
	       	//restar!
	        cantidad_chk_emi =  cantidad_chk_emi - Cantgm_cec_bck
		SumaImpGiros = SumaImpGiros - (Importegm_cec_bck * Cantgm_cec_bck)
     		ImpTotGiros  = ImpTotGiros  - (Importegm_tot_bck * Cantgm_cec_bck)
     	endif
      	clearfield giros:Giros_cargados
      	clearfield giros:nro_trx_gm
      	clearfield giros:codagrupacion_gm
      	CDS COMMITWORK
      	
	//Refresco los campos de Totales
	refresh cantidad_chk_emi
	refresh SumaImpGiros
	refresh ImpTotGiros
	refresh giros:Giros_cargados
	      		
	drv:button = l_last_button
	CALL drv:but_up_enable

END SUB

/*******/

