/****o* Pendientes de agrupación/OFB:giros:PBcons_mult_70388
* NOMBRE
*   OFB:giros:PBcons_mult_70388
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospb.h"

SUB giros:PBcons_mult_70388
     CALL CSR:f_sadopl DSC:consulta_multiple siaf:nota_1
     if ( RETVAL >= 0 )
        siaf:i = PL_GETITEM + ( Retval * 2 ) + 1
     	Call csr:myPickcontrol DSC:consulta_multiple common:csr_string_171 siaf:i
		UNGETKEY RT_SEND


	//obtengo los datos para enviar la consulta simple
	new_mtcn_WI_comm = SUBSTR(common:csr_string_171,65,16)

/*


    FPRINT fechaEmi_comm,"%04.4s%02.2s%02.2s",SUBSTR(common:csr_string,6,4), \
    SUBSTR(common:csr_string,3,2),SUBSTR(common:csr_string,0,2)

    Nombre_comm = SUBSTR(common:csr_string,11,20)
    Apellido_comm = SUBSTR(common:csr_string,32,20)
    Serie_comm = SUBSTR(common:csr_string,53,1)
    NroGiro_comm = SUBSTR(common:csr_string,55,6)
    digito_comm = SUBSTR(common:csr_string,62,1)
    ClaveMTC_comm = SUBSTR(common:csr_string,64,12)

    if ( giros:flia_giro_fld  != "I" )
    	Moneda_comm       = SUBSTR(common:csr_string,78,3)
    	ImportePagar_comm = SUBSTR(common:csr_string_171,2,12)
    	EstadoGiro_comm   = SUBSTR(common:csr_string_171,19,2)
    else
    	money_key         = SUBSTR(common:csr_string,95,10)
    	Moneda_comm       = SUBSTR(common:csr_string,81,3)
    	ImportePagar_comm = SUBSTR(common:csr_string_171,2,10)
    end if

    EmisorNombre_comm = SUBSTR(common:csr_string_171,33,20)
    Emisor_Apell_comm = SUBSTR(common:csr_string_171,55,20)

*/


     end if
END SUB

/*******/
