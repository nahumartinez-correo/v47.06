/****o* Pendientes de agrupación/OFB:giros:PBProvSucBen2
* NOMBRE
*   OFB:giros:PBProvSucBen2
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospb.h"

SUB giros:PBProvSucBen2
/*  Muestra el picklist para elegir una provincia */
    LOCAL CodProv LIKE adt_impp_prov
    LOCAL DescProv LIKE ProvSucBenef_fld

    
    drv:button = drv:last_button
    CALL drv:but_down_disable
    
 /* Muestra el combo de provincias para elegir una: */
    CDS SELECT FROM DSC:post:adt_pcia_table BECOMES DSC:post:adt_pcia_ctx 
    CDS MULTIDISPLAY DSC:post:adt_pcia_ctx LISTprovincias     
    IF (CDSRETVAL > 0) THEN
     /* Se eligió una provincia válida */
        MOVE SUBSTR(common:csr_string,2,30) TO ProvSucBenef_fld
        MOVE SUBSTR(common:csr_string,0,1) TO adt_impp_prov
        
        /*Para que no quede con espacios - Gabriel Falciola*/
        call csr:trimfield ProvSucBenef_fld
        
      ;  CALL post:MISCset_sidebar(0, 0, 0, 0)
    ELSE 
     /* No se eligió una opción válida; devuelvo -2 */
        CDS ENDSELECT DSC:post:adt_pcia_ctx 
        INIT 33,0
        drv:button = drv:last_button
        CALL drv:but_up_enable
        RETURN (-2)
    END IF 
    CDS ENDSELECT DSC:post:adt_pcia_ctx 
    INIT 33,0
    drv:button = drv:last_button
    CALL drv:but_up_enable

    CALL CSR:proc_list(170,LST:LISTImpuProv_fld2)
    CALL MISCabmImpuprov_init
    CALL CSR:proc_list(190,LST:LISTImpuProv_fld)

	setvaldone adt_impp_prov
    RETURN (0)
END SUB

/*******/
