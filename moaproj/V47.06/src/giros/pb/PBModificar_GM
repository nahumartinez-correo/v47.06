/****o* Giros Masivos/OFB:giros:PBModificar_GM
* NOMBRE
*   OFB:giros:PBModificar_GM
* DESCRIPCION
*   Esta rutina verifica el estado del giro seleccionado del Combo "Seleccionar", y si el giro
*   no fue enviado pregunta al operador si desea modificarlo y muestra en pantalla los datos
*   correspondientes al giro.
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girospb.h"

SUB giros:PBModificar_GM
local l_retval like lib:err_retval
local l_last_button like drv:last_button
local bck_ImporteNeto like ImporteNeto   
local bck_ImporteTotal_fld like ImporteTotal_fld

	;l_last_button = drv:last_button
	drv:button = drv:last_button    
	;CALL drv:but_down_disable   
	call drv:but_up_enable	
	
	if (giros:Giros_cargados.numchars == 0) then
	    msgbox "Debe seleccionar un giro para modificar.",0x00,"ERROR"
	    drv:button = l_last_button
	    CALL drv:but_up_enable
	    return -2
	endif
	
	//Verificar que el giro tenga estado "I" ya que son los unicos que se pueden modificar.
	if (estado_gm != "I") then
	    	if (tipo_gm != "H")
	    		msgbox "El giro seleccionado no puede modificarse.",0x00,"ERROR"
	    	else
	    		msgbox "Existe al menos un giro CEC enviado/facturado/cancelado, por lo tanto el lote no podrá modificarse.",0x00,"ERROR"
	    	endif
	    	drv:button = l_last_button
		CALL drv:but_up_enable
	    	return -2
	else
		if (tipo_gm == "H") then
			//buscar en la tabla
			CALL CDSBuscarCEC_enviado
			if (retval < 0) then
				MSGBOX "Existe al menos un giro CEC enviado/facturado/cancelado, por lo tanto el lote no podrá modificarse.",0x00,"ERROR"
    				drv:button = l_last_button
				CALL drv:but_up_enable
				RETURN -2
			endif
		endif
	endif
	
	MSGBOX "Está seguro que desea modificar el giro?.",OFB_YESNO,"ATENCION"
	if (retval == 7) then //NO
    		drv:button = l_last_button
		CALL drv:but_up_enable
		RETURN -2
 	end if
	clearfield giros:Giros_cargados
	select (tipo_gm)
	
	case "H" // CEC
	       //resguardar campos de cantidad e importes (con y sin impuestos) 
	       //para luego restarlos al confirmar la modificacion.
	       Cantgm_cec_bck = Cantgm_cec //substr()tomarlos del picklist
	       Importegm_cec_bck = giros:ImporteNeto //substr() tomarlos del picklist
	       Importegm_tot_bck = giros:ImporteTotal_fld
	       //borro campos que se usan en postal y telegrafico pero no en CEC
	       clearfield post:medio_pago_desc
	       clearfield siaf:moneda
	       clearfield post:sel_opc
	       clearfield post:costo_opc
	       call csr:cleararray(post:cod_opc)
	       clearfield CodSucBenef_fld
	       clearfield TrackTrace_giros
	       
	       POPUP SCRNgm_CEC,PRESgm_CEC,PCOLgm_CEC,SVALgm_CEC		
	       if (LASTKEY != RT_ESC) then
	        	CDS BEGINWORK
	        	//restar!
		        cantidad_chk_emi =  cantidad_chk_emi - Cantgm_cec_bck
      			SumaImpGiros = SumaImpGiros - (Importegm_cec_bck * Cantgm_cec_bck)
      			ImpTotGiros  = ImpTotGiros  - (Importegm_tot_bck * Cantgm_cec_bck)
	        	//Borrar los CEC que se modificaron y volverlos a ingresar
	        	CALL CDSBorrar_gm("H")
	        	//Grabar los CEC ingresados en la tabla Sesion_GM
			    CALL CDSIngresar_gm("H")
        		l_retval = RETVAL
        		IF (l_retval == 0) then
        			//Acumular importes y cantidad de giros de pantalla principal
      				cantidad_chk_emi =  cantidad_chk_emi + Cantgm_cec
      				SumaImpGiros = SumaImpGiros + (giros:ImporteNeto * Cantgm_cec)
      				ImpTotGiros  = ImpTotGiros  + (giros:ImporteTotal_fld * Cantgm_cec)
      			endif
      			CDS COMMITWORK
      			clearfield giros:Giros_cargados
            	clearfield giros:nro_trx_gm
            	clearfield giros:codagrupacion_gm
      		endif
		break	
	
	case else
            bck_ImporteNeto = ImporteNeto          
            bck_ImporteTotal_fld = ImporteTotal_fld

            select (tipo_gm)
            case "P" //Postales
                POPUP giros:SCRNgmPostal,giros:PRESgm_post,giros:PCOL70030,SVALgm_post  
                break
            case "T" //Telegraficos
                POPUP giros:SCRNgmTelegrafico,giros:PRESgm_tele,giros:PCOL70030,SVALgm_tele 
                break
            case else
                MSGBOX "No hay ningún tipo de giro seleccionado.",0x00,"Error"
    		drv:button = l_last_button
		CALL drv:but_up_enable
                return
                break
            end select
            if (LASTKEY != RT_ESC) then
                CDS BEGINWORK
                CALL CDSBorrar_gm(tipo_gm)
                CALL CDSIngresar_gm(tipo_gm)
                if (retval == 0) then
                    //Acumular importes y cantidad de giros de pantalla principal
                    SumaImpGiros = SumaImpGiros + ImporteNeto - bck_ImporteNeto
                    ImpTotGiros = ImpTotGiros + ImporteTotal_fld - bck_ImporteTotal_fld
                endif
                CDS COMMITWORK
                
            endif
            break
    end select
	//Borro todos los campos que se graban en sesion_gm para que no queden sucios en las siguientes cargas
    call csr:proc_list(F_CLEAR,LST:LISTgm_clear)
    
    clearfield giros:nro_trx_gm
    clearfield giros:codagrupacion_gm
	//Refresco los campos de Totales
	refresh cantidad_chk_emi
	refresh SumaImpGiros
	refresh ImpTotGiros
	refresh giros:Giros_cargados
	
	//Recupero los campos correspondientes a la transacción de giros masivos
    	call giros:MISCgmleotransac(70610)
    	refresh siaf:nombre_transac
    	refresh siaf:codigo_siaf
    
	;drv:button = l_last_button
	;CALL drv:but_up_enable

END SUB

/*******/
