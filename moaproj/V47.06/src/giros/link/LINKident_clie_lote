/****o* Pendientes de agrupación/OFB:giros:LINKident_clie_lote
* NOMBRE
*   OFB:giros:LINKident_clie_lote
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "giroslink.h"

SUB giros:LINKident_clie_lote

if (!testflag(tlr:tran_flags,correction))

	/*Si no es caida o la caida fue sin sesion, considero 
	como si fuese lo mismo*/
	
/*	if ( !testflag(giros:giros_masivos,caida_gir_masivos) ) || \
	   (testflag(giros:giros_masivos,caida_gir_masivos) && \
	    giros:estado_caida_gm == GM_SIN_SESION )
    */
		//Procedimiento Normal GM

		;call giros:OFBmarca_gm_inicio
	
		clearfield lib:stat_message
		refresh    lib:stat_message

		siaf:codigo_siaf = 70610
		let siaf:adt_tran_codigo = siaf:codigo_siaf
		call siaf:CDSadt_tran_load
		if ((retval < 0) || (siaf:adt_tran_disp == "N")) then
			errmsg LST:common:errmsg_list,siaf:ERRtran_no_disp
			return -1
		endif
		let  siaf:posible_off = siaf:adt_tran_posoff
		let  siaf:tiene_reverso = siaf:adt_tran_tiene_rev
		let  tlr:tran_mnemonic = siaf:adt_tran_mnemonic
		let  drv:descrip = siaf:adt_tran_mnemonic
		let  siaf:nombre_transac = siaf:adt_tran_desc
		move siaf:adt_tran_afec_efvo to siaf:afecta_efectivo
		let  post:captura_mp = siaf:adt_tran_med_pago
		let  post:SupMedPago = "N"
		move siaf:adt_tran_fliatran to post:tipo_transac
		move siaf:adt_tran_fliatran to post:jnl_flia_tran

		;call csr:proc_list(F_SWAP,LST:LISTrest_trx_gm)
		;call csr:proc_list(F_REFRESH,LST:LISTrest_trx_gm)

       		;Obtengo el secuenciador de cabecera
        	call post:CDSobtiene_secuen("CABEC")
        	post:cod_agrupacion = post:adt_codseq_nro
	
       		FYIMSG drv:fyimsg_list,\
       		"Generacion del Presupuesto de Giros Masivos ... "
		
		call giros:OFBresultado_masivos(giros:nro_sesion_gm)
		if (retval < 0 ) then
			if (retval == -1)
				msgbox "NO HAY OPERACIONES A PROCESAR.",OFB_OK,"Error"	
				//journalizo el fin de sesion				
				let drv:INDrun_funct = LST:post:TRANimpre_fiscal
				call drv:do_mode 					
			else
				msgbox "ERROR AL PROCESAR GIROS MASIVOS.",OFB_OK,"Error"
			end if
			return  -1
		end if
		return 0

	;end if
end if

END SUB

/*******/

