/****o* Pendientes de agrupación/OFB:giros:JNL70030
* NOMBRE
*   OFB:giros:JNL70030
* DESCRIPCION
*   Hace el append en el contexto del journal de los campos que se grabaran en la tabla "journal"
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:giros:JNL70050; LST:giros:TRAN70030; LST:giros:TRAN70040; LST:giros:TRAN70041;
*	LST:giros:TRAN70050; LST:giros:TRAN70060; LST:giros:TRAN70322; LST:giros:TRAN70323 
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosjnl.h"
#include "desktop.h"
#include "gsp.h"
#include "ofbdefs.h"
#include "csr.h"
#include "giros.h"
#include "reporte.h"

SUB giros:JNL70030
local x like siaf:i
	call MISCmuevo_RS_Apell

    CDS APPEND DSC:tlr:CONjnl_write \
	post:ver_anulacion \
	post:cod_agrupacion
		
    call giros:JNLfirma_clave

    CDS APPEND DSC:tlr:CONjnl_write \
		FLD:cancelacion \
		FLD:codigo_procesamiento \
	    FLD:flia_giro_fld
    CDS APPEND DSC:tlr:CONjnl_write \
    	FLD:FechaEmision_fld \
    	FLD:Serie_fld  \
		FLD:digito_fld \
		FLD:NroGiro_fld \
		FLD:SucSel2_fld \
		FLD:ProvBenef_fld \
		FLD:CodSucBenef_fld \
		FLD:ComisionSinIva_fld \
		FLD:IvaComision_fld \
		FLD:Comision_fld \
		FLD:ImporteSelloEmis  \
		FLD:ImporteSelloPag  \
		FLD:Impuesto  \
		FLD:Impuesto_abonado \
		FLD:ImporteTotal_fld \
		FLD:ImporteNeto \
		FLD:totalAcreditado FLD:totalRestante \
		FLD:TasaSinIva_fld \
		FLD:IvaTasa_fld
    CDS APPEND DSC:tlr:CONjnl_write \
    	FLD:post:ImpServUP \
		FLD:post:AliServUP \
		FLD:post:cant_bloq \
		FLD:post:imp_bloques \
		FLD:post:adt_bloque_descor
	CDS APPEND DSC:tlr:CONjnl_write \
		FLD:post:adt_tarif_fijo \
		FLD:post:adt_tarif_fijo_des \
		FLD:post:adt_serv_aliciva \
		FLD:post:adt_tarif_fj_aliciva \
		FLD:post:adt_tarif_desde \
		FLD:post:adt_tarif_hasta \
		FLD:post:adt_tarif_um \
		FLD:post:adt_tarif_hasta_eq \
		FLD:post:adt_tarif_um_eq \
		FLD:post:adt_tarif_uneg \
		FLD:post:destino \
		FLD:post:PreDForFis  \
		fld:genera_teleg
				
		IF (post:enCombo == "S" && post:jnl_flia_tran == "CSM")
		    CDS APPEND DSC:tlr:CONjnl_write FLD:giros:ImporteNeto AS FLD:siaf:importe 
		ELSE
		    CDS APPEND DSC:tlr:CONjnl_write FLD:siaf:importe 
		ENDIF		
		
		CDS APPEND DSC:tlr:CONjnl_write \
		FLD:siaf:moneda \
		FLD:post:ImporteConIva FLD:post:ImporteSinIva \
		FLD:post:cant_opc \
		FLD:post:costo_opc
	CDS APPEND DSC:tlr:CONjnl_write \
		FLD:post:cod_opc[0] FLD:post:cod_opc[1] FLD:post:cod_opc[2] \
		FLD:post:cod_opc[3] FLD:post:cod_opc[4] FLD:post:cod_opc[5] \
		FLD:post:vec_opc[0] FLD:post:vec_opc[1]  FLD:post:vec_opc[2] \
		FLD:post:vec_opc[3] FLD:post:vec_opc[4] FLD:post:vec_opc[5] \
		FLD:post:vec_opc2[0] FLD:post:vec_opc2[1] FLD:post:vec_opc2[2] \
		FLD:post:vec_opc2[3] FLD:post:vec_opc2[4] FLD:post:vec_opc2[5] \
		FLD:post:ali_opc[0] FLD:post:ali_opc[1] FLD:post:ali_opc[2] \
		FLD:post:ali_opc[3] FLD:post:ali_opc[4] FLD:post:ali_opc[5] 
	CDS APPEND DSC:tlr:CONjnl_write \
		FLD:post:cos_opc[0] FLD:post:cos_opc[1] FLD:post:cos_opc[2] \
		FLD:post:cos_opc[3] FLD:post:cos_opc[4] FLD:post:cos_opc[5] \
		FLD:post:inf_opc[0] FLD:post:inf_opc[1] FLD:post:inf_opc[2] \
		FLD:post:inf_opc[3] FLD:post:inf_opc[4] FLD:post:inf_opc[5] \
		FLD:post:comb_opc[0] FLD:post:comb_opc[1] FLD:post:comb_opc[2] \
		FLD:post:comb_opc[3] FLD:post:comb_opc[4] FLD:post:comb_opc[5] \
		FLD:post:flia_opc[0] FLD:post:flia_opc[1] FLD:post:flia_opc[2] \
		FLD:post:flia_opc[3] FLD:post:flia_opc[4] FLD:post:flia_opc[5] \
		FLD:post:siniva_opc[0] FLD:post:siniva_opc[1] FLD:post:siniva_opc[2] \
		FLD:post:siniva_opc[3] FLD:post:siniva_opc[4] FLD:post:siniva_opc[5] \
		FLD:post:texto_opc[0] FLD:post:texto_opc[1] FLD:post:texto_opc[2] \
		FLD:post:texto_opc[3] FLD:post:texto_opc[4] FLD:post:texto_opc[5]
		CDS APPEND DSC:tlr:CONjnl_write \
		array FLD:post:fliatran_vec \
		array FLD:post:impciva_vec \
		array FLD:post:impsiva_vec
	 CALL CSR:listappend(DSC:tlr:CONjnl_write,LST:LISTbenef_flds)
	 CALL CSR:listappend(DSC:tlr:CONjnl_write,LST:LISTemis_flds)
	 CALL CSR:listappend(DSC:tlr:CONjnl_write,LST:giros:LISTemis3_flds) //nuevos campos Reemplazo chequera GP

	 CDS APPEND DSC:tlr:CONjnl_write \
	 	FLD:post:NroCompPago \
	 	FLD:post:NroCompPago2
	 CALL post:JNLcamp_nota_credito
	 CDS APPEND DSC:tlr:CONjnl_write \
	 	FLD:TrackTrace_giros \
	 	env_post_flag
	 CALL JNLmarca_emision

	//call MISCdesglosa_puni(post:adt_tarif_precio, post:AliServUP,1)			
	/* MLD Muchas tx usan esta rutina */
	call post:MISCcampos_reporte(giros:ComisionSinIva_fld,1,giros:ComisionSinIva_fld,post:adt_tarif_modo)
	CALL csr:proc_list(F_APPEND,DSC:tlr:CONjnl_write,LST:post:LISTreporte,0)		

	if ( siaf:codigo_siaf != 70322 && siaf:codigo_siaf != 70323) then
    	CDS APPEND DSC:tlr:CONjnl_write \
	 	FLD:giros:ImporteNeto as post:adt_dump_ImpNeto	 
	 end if
	 if (siaf:codigo_siaf == 70041 || siaf:codigo_siaf == 95000) then
	    CDS APPEND DSC:tlr:CONjnl_write \
	    ImporteCremAcumulado
	    x = 0
	    while (x < 10)
	        CDS APPEND DSC:tlr:CONjnl_write \
	        FLD:post:track[x]
	        x = x + 1
   		end while
   		x = 0
	    while (x < 10)
	        CDS APPEND DSC:tlr:CONjnl_write \
	        FLD:post:importe_crem[x]
	        x = x + 1
   		end while
   		CDS APPEND DSC:tlr:CONjnl_write \
   		array FLD:desc_impre \
        array FLD:formuCalc
	 end if
END SUB

/*******/
