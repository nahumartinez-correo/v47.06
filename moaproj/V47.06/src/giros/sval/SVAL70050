/****o* Pendientes de agrupación/OFB:giros:SVAL70050
* NOMBRE
*   OFB:giros:SVAL70050
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girossval.h"

SUB giros:SVAL70050
	LOCAL ind            LIKE siaf:i
	LOCAL importe_aux    LIKE siaf:importe
	LOCAL formulario_aux LIKE post:PreDForFis
	LOCAL enSesion_aux   LIKE post:enSesion
	local loc_combostr	 like common:csr_string
	
	// FGB 13.6.2001: Dado que la SVAL de una emision contiene toda la logica de la transaccion,
	//  y que una caida del sistema resulta critica si no se reestablece a la misma en el punto 
	// donde se cayo, es que se graba en la PresuDet un checkpoint indicando los pasos ya 
	// realizados con el fin de continuar la transaccion sin repetir pasos.
	// (situaciones desesperadas, requieren medidas desesperadas).
	select (checkpoint_emision)
		case ANTES_JNL
			goto antes_jnl
			break
		case ANTES_ANULACION
			goto antes_anulacion
			break
		case ANTES_IMPRESION
			goto antes_impresion
			break
		case ANTES_TOTAL_TRANSAC_1
			goto antes_TotalTransac_1
			break
		case ANTES_TOTAL_TRANSAC_2
			goto antes_TotalTransac_2
			break
		case ANTES_PRESUDET
			goto antes_PresuDet
			break
		case else
	end select
	// FGB FIN 

	// FGB 19.12.2001: Las emisiones de Giros NO PUEDEN ser hechas en modo teclas rapidas, por lo tanto, modifico
    // las condiciones donde se pregunta por el estado del presupuesto (obviando la posibilidad de que sea 1) y
	// controlo al principio que de no haber sesion, no se pueda continuar.
	if (post:estado_presu == 1 || post:Modo == "R") then
		if (post:estado_presu == 1) then
			msgbox "NO HAY PRESUPUESTO ACTIVO\nIMPOSIBLE CONTINUAR",OFB_ICONEXCLAMATION,"Error"
			ungetkey RT_ESC
			return (-2)
		else
			let post:Modo = "NR"
		endif
	end if

	;if (post:estado_presu == 1 || post:estado_presu == 4 || post:estado_presu == 3) then
	
	
	//if (post:estado_presu == 4 || post:estado_presu == 3) then = ANTES REING
	if (post:estado_presu == 2 || post:estado_presu == 3) then
	    select (siaf:codigo_siaf)		
		    case 70050
		    case 70060
		    case 70192
		    case 70193
		    case 70323
		        popup giros:SCRNemis2_locali,PRESbenef,PCOLemis2_locali,POSTCOLemis2_locali
		        break
            case else		    
		        popup giros:SCRNemis2,PRESbenef,PCOLemis2,POSTCOLemis2		        		        
		        break
		end select
		if (lastkey == RT_ESC) then
			return (-2)
		end if



	    select (siaf:codigo_siaf)		
		    case 70050
		    case 70060
		    case 70192
		    case 70193
		    case 70323
		        popup giros:SCRNemis1_locali,PRESemis,PCOLemis1,POSTCOLemis1_locali
		        break
            case else		    
		        popup giros:SCRNemis1,PRESemis,PCOLemis1,POSTCOLemis1
		        break
		end select
		if (lastkey == RT_ESC) then
			return (-2)
		end if
		
 // 2 ETAPA- COLECTAR NUEVOS CAMPOS
        select (siaf:codigo_siaf)		
		    case 70050
		    case 70060
		    case 70192
		    case 70193
		    case 70323
		       popup giros:SCRNemis3_locali,PRESemis3,PCOLemis3,POSTCOLemis3
		       break
		       case else		    
		        popup giros:SCRNemis3,PRESemis3,PCOLemis3,POSTCOLemis3
		        break
        end select
      if (lastkey == RT_ESC) then
			return (-2)
		end if 


		// FGB 16.02.2005: me trato de asegurar de que no ingresen caracteres inválidos en los campos
		call valido_flds_list
		if (retval != 0) then
			msgbox "Hay caracteres inválidos cargados (en Emisor o Beneficiario).\n (Ej: |, >, <, \, !, etc.)",OFB_OK,"Error"
			return (-2)
		endif
		
		if (lastkey == RT_ESC) then
			return (-2)
		end if
		setflag camara_flags,emis2
		setflag camara_flags,emis1
	end if




	;if (post:estado_presu == 1 || post:estado_presu == 2 || post:estado_presu == 3) then
	if (post:estado_presu == 2 || post:estado_presu == 3) then
		msgbox "¿Desea confirmar la transacción?",OFB_YESNO,"Atención"
	 if (retval == 7) then //NO
		    	MSGBOX "NO SE OLVIDE de imprimir el Formulario Previo y verificar los datos con el cliente.",0x00,"ATENCION"
				//	ungetkey RT_ESC
					return -2
		    else //6 (SI)  
					msgbox "¿Confirma que el cliente verificó los datos filiatorios indicados en el Formulario Previo?",OFB_YESNO2,"Atencion"
					if (retval == 7) then //NO
					//	ungetkey RT_ESC
						return -2
					else //6 (SI)
					endif
			endif
	end if

	if (post:estado_presu < 4) then
		if (siaf:codigo_siaf == 70060) then
			call MISCsupervision
			if (retval < 0) then
				return (-2)
			end if
		end if
	end if

	;if (post:estado_presu < 4) then
	if (post:estado_presu == 2 || post:estado_presu == 3) then
		//
		post:destino 	= post:adt_tarif_dest
		post:unidad_fac = post:adt_tarif_um
		//
		//SC 50170
		CALL post:MISCdesglosaIva(Comision_fld,post:adt_serv_aliciva,1,0)
		ComisionSinIva_fld = post:ImporteSinIva
		IvaComision_fld = post:ImporteIva
		//SC 50170 FACTURACION
		giros:ComisionSinIva4_fld =  post:ImporteSinIva_bis
		//
		post:ImpServUP = Comision_fld
		post:AliServUP = post:adt_serv_aliciva
		//
		//SC 50170
		CALL post:MISCdesglosaIva(post:adt_tarif_fijo,post:adt_tarif_fj_aliciva,1,0)
		TasaSinIva_fld = post:ImporteSinIva
		IvaTasa_fld = post:ImporteIva
		//SC 50170 FACTURACION
		giros:TasaSinIva4_fld = post:ImporteSinIva_bis
		//
		post:ImporteConIva = Comision_fld + post:adt_tarif_fijo + post:costo_opc
	    post:ImporteSinIva = ComisionSinIva_fld + TasaSinIva_fld
		//
		ind = 0
		while (ind < post:cant_opc)
		    post:ImporteSinIva = post:ImporteSinIva + post:siniva_opc[ind]
		    ind = ind + 1
		end while
		//
		siaf:ProvImpuesto = SucSel2_fld
	    call post:MISCImpSellosTratam("ING/EGR") /* llamo rutina de tratamiento de Sellados */
		//
		siaf:ImporteConIva = post:ImporteConIva
		siaf:ImporteSinIva = post:ImporteSinIva
		//
	    siaf:importe = post:costo_opc + Comision_fld + post:adt_tarif_fijo
		if (siaf:codigo_siaf != 70323) then
			siaf:importe = siaf:importe + ImporteNeto
		endif
		//
		call csr:cleararray(post:fliatran_vec)
		call csr:cleararray(post:impciva_vec)
		call csr:cleararray(post:impsiva_vec)
		//
		call MISCsumo_a_vectores(siaf:adt_tran_fliatran,Comision_fld,ComisionSinIva_fld)
		//
		call MISCsumo_a_vectores(post:adt_tarif_uneg,post:adt_tarif_fijo,TasaSinIva_fld)
		//
		ind = 0
		while (ind < post:cant_opc)
			call MISCsumo_a_vectores(post:flia_opc[ind],post:cos_opc[ind],post:siniva_opc[ind])
		    ind = ind + 1
		end while
		/* FGB 22.12.2000:
		 * Si la transaccion se cobra por porcentaje, esta SVAL deja la formula en el 
		 * campo formuCalc para ser impreso en la factura 
		 */
		call SVALgralFormCalGiro
	end if

	consulta = 0
	siaf:siaf_status = HOST_ACCEPTED

    ;if (post:estado_presu == 1 || post:estado_presu == 4) then
    if (post:estado_presu == 4) then
		call giros:MISCemi_snapshot
		call giros:CDSsval_chkpoint(ANTES_JNL)
antes_jnl:

		/* sba 20020108 - En caso que se haya caido la aplicación, despues de journalizar */
		/* y quedando la sesión abierta, al reingresar hay que terminar la sesión. */
		/* No tiene que volver a ejecutar la JNLtran */
		call giros:CDSbusco_trx_jnl
		if (retval == 0) then
			let hcomm:tran_status = 003
			goto after_jnl
		end if
		//

		//
		clave_hdr_giros  = 0
    	codigo_procesamiento = siaf:codigo_proc
		giros:hora_viaje = common:time_of_day
		giros:dia_viaje  = common:system_date
		Call post:CDSobtiene_secuen("STAN")
		//
		post:ImporteConIva = siaf:ImporteConIva
	    post:ImporteSinIva = siaf:ImporteSinIva
		//
		post:ctrol_ult_tt = "S"
		// SBA 04.02.2002 - parece que hay veces que el campo post:enSesion queda sucio
		// y esto hace que el Pago quede journalizado con tlr:jnl_status = 002 (MEMO)
		enSesion_aux = post:enSesion
		clearfield post:enSesion
		
    	call tlr:JNLtran
		post:enSesion = enSesion_aux
after_jnl:
		post:ctrol_ult_tt = ""
		//
		let siaf:siaf_status = hcomm:tran_status // FGB: resguardo el resultado de la comunicacion...
		call giros:MISCemi_snapshot
		//
		IF (hcomm:tran_status != HOST_ACCEPTED) THEN
			// FGB 13.6.2001: grabo estado de confirmacion alcanzado por si se cae el sistema.
			call giros:CDSsval_chkpoint(ANTES_ANULACION)
antes_anulacion:
			call MISCanulo_transac("NONE")
		else
			// FGB 13.6.2001: grabo estado de confirmacion alcanzado por si se cae el sistema.
			call giros:CDSsval_chkpoint(ANTES_IMPRESION)
antes_impresion:

			/*msgbox "INGRESAR EL COMPROBANTE DE EMISION DE GIRO TELEGRAFICO PARA IMPRIMIR",OFB_OK,"Atención"
						
			INIT 76,"docprt WAIT 0"
			PRINTDOC OFB:PRT_comp_tele,docprt,"Imprimiendo comprobante"
			INIT 76,"docprt WAIT 1"
			msgbox "Desea reimprimir el comprobante",OFB_YESNO2,"Atención"
			if (retval == 6)
                msgbox "INGRESAR EL COMPROBANTE DE EMISION DE GIRO TELEGRAFICO PARA IMPRIMIR",OFB_OK,"Atención"
				INIT 76,"docprt WAIT 0"
				PRINTDOC OFB:PRT_comp_tele,docprt,"ReImprimiendo comprobante"
				INIT 76,"docprt WAIT 1"
			end if*/
			//REEMPLAZO CHEQUERA GIRO
			CALL giros:rutina_form_emision
			call giros:CDSsval_chkpoint(ANTES_TOTAL_TRANSAC_1)
antes_TotalTransac_1:			
			/* Llamo a la MISCTotalTransac solo si la transacción
			fue ACEPTADA. Hernán 21/12/2000*/				

			// FGB 19.6.2001: en caso de caida del sistema, tengo que restaurar algunos campos...
			call MISCemi_recall

			/*CSZ - resguardo el importe de la tx y el formulario fiscal*/
			importe_aux = siaf:importe
			formulario_aux = post:PreDForFis


			/*CSZ - Primero se llama a la rutina con el monto del giro emitido y el 
			formulario fiscal vacio*/
			CLEARFIELD post:PreDForFis
			siaf:importe = ImporteNeto
			CALL post:MISCTotalTransac(siaf:codigo_siaf)

			// FGB 12.02.2004 - Combos -
			fprint loc_combostr "%s-%e/%d ($%e)" Serie_fld,NroGiro_fld,digito_fld,ImporteNeto
			call post:CDScb_prt_aux_save(post:adt_serv_nemonico,loc_combostr)

			call giros:CDSsval_chkpoint(ANTES_TOTAL_TRANSAC_2)
antes_TotalTransac_2:			

			// FGB 19.6.2001: en caso de caida del sistema, tengo que restaurar algunos campos...
			call MISCemi_recall

			/*CSZ - Luego se llama a la rutina con el monto del servicio(comision,
			tasa y opcionales) que se cobra por la emision y el formulario fiscal
			asociado al servicio*/
			siaf:importe = post:ImporteConIva
			post:PreDForFis = formulario_aux			  
			CALL post:MISCTotalTransac(siaf:codigo_siaf)
			  
			/*Restauro el importe de la tx*/
			siaf:importe = importe_aux
			
		end if
		//
		call giros:CDSsval_chkpoint(ANTES_PRESUDET)
antes_PresuDet:
    	CLEARFIELD drv:INDhcomm_rtn
    	CLEARFIELD drv:INDspc_rtn[1]
    	CLEARFIELD drv:INDcur_tran
    	CLEARFIELD drv:INDjnl_rtn
    	CLEARFIELD drv:INDspc_rtn[0]
    	//
	end if
	//
	if (post:estado_presu == 2 || post:estado_presu == 3) then
		post:PreDForFis = post:adt_serv_formfiscal
		call post:MISCAcumTotalesSes /* llamo rutina de calculo de Ingresos Brutos */
	end if
	call post:MISCGrabaDetalleTrn
	call post:MISCgrabo_sinsesion
end sub

/*******/
