/****o* Pendientes de agrupación/OFB:giros:SVAL70324
* NOMBRE
*   OFB:giros:SVAL70324
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girossval.h"

SUB giros:SVAL70324()

   ; [PAW - 30/03/99]      Esta rutina se encarga de grabar los datos de los remitos seleccionados.


	// [PAW] --> Grabo los datos del giro. (les pongo un flag de seleccionados!)

	local i like siaf:cantidad
	local tmp like common:csr_string
	local tmpCuentas like cantidad
	local Lmsg_string like common:csr_string 
	local Lreg_inserted like siaf:cantidad

	if (post:estado_presu != 4)
		if (totalAcreditado == 0)
			msgbox "Debe ingresar algun Remito con crédito!", OFB_OK ,"Aviso"
			return (-2)
		endif

    	msgbox "Los datos ingresados son correctos?", OFB_YESNO ,"Aviso"
    	IF (RETVAL != OFB_IDYES) then
			return (-2)
	    ENDIF
		i = 1
		marcaSelec = "S"
		let Lreg_inserted = 0
		while (i <= cantidad)
			tmpCuentas =  (i - 1) * 40 + 1
			move substr(listaRecibosSel, tmpCuentas, 13) to tmp
			call CDSchk_inuse_remit(tmp)
			if (retval < 0) then
				CDS SELECT FROM DSC:remitTmpTAB BECOMES DSC:remitTmpCON where \
					op:op_operator_id == op:op_operator_id && adt_girChqtmp_rem == tmp
				CDS FINDFIRST DSC:remitTmpCON LOCK
				IF (CDSRETVAL == 0) THEN
    				CDS APPEND DSC:remitTmpCON marcaSelec
    				CDS UPDATE DSC:remitTmpCON LOCK
					let Lreg_inserted = Lreg_inserted + 1
    			ENDIF
				CDS ENDSELECT DSC:remitTmpCON
			else
				fprint Lmsg_string "El Remito %s fue seleccionado por otro operador.\n" tmp
				fprint Lmsg_string "%sNo podrá ser utilizado para este presupuesto" Lmsg_string
				msgbox Lmsg_string,OFB_OK,"Aviso"
			endif
			i = i + 1
		end while
		totalRestante = totalAcreditado
	endif

	if (Lreg_inserted != cantidad) then
		msgbox "CONFECCIONE LA LISTA DE REMITOS NUEVAMENTE",OFB_OK,"Aviso"
		return (-2)
	endif

	siaf:importe = 0
	siaf:moneda = "00"
	clearfield post:modificandoRemit
END SUB

/*******/
