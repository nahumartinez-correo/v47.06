/****o* Transferencias Internacionales/OFB:giros:SVAL70383
* NOMBRE
* OFB:giros:SVAL70383
* DESCRIPCION
* Envio de Transferencia Internacional (SVAL). Tiene en cuenta los distintos estado de presupuesto de la sesion.
* ENTRADAS
* SALIDAS
* RETURN (-2): No permite avanzar en la transaccion, vuelve a la Pantalla segun corresponda.
* RETURN (-3): No permite avanzar en la transaccion, se ejecuta el ESC de la transaccion.
* REFERENCIADO POR
* LST:giros:TRAN70383
* SOURCE
*/
#include "girossval.h"

SUB giros:SVAL70383
    LOCAL ind LIKE siaf:i
    LOCAL importe_aux LIKE siaf:importe
    LOCAL formulario_aux LIKE post:PreDForFis
    LOCAL enSesion_aux LIKE post:enSesion

    //Se fuerza que pase directamente a la ultima pantalla, sino queda en un loop infinito
    //Por Reingeniera (ya que no se muestran mas las pantallas para confirmar).
    if (post:estado_presu == 4)
	drv:screen_active = 5
    end if

    select (drv:screen_active)
	
	case 0 //Importes
		giros:SucSoli_fld = SUBSTR(common:sucursal_activa,0,1)
		if (giros:ImporteEmis_fld.numchars == 0 && giros:ImportePago_fld.numchars == 0)
		    msgbox "Debe ingresar el importe de emision o de destino",OFB_OK,"Error"
		    return -2
		end if
		
		if (giros:ImporteEmis_fld.numchars != 0)
		    call giros:MISCimporte_pagsver(monpas_codmonwu,CodPaisEmis_fld)
		    if (retval < 0)
			return -2
		    elseif (testflag(giros:opcionales_inter,opc_pag_sver) && !testflag(giros:opcionales_inter,opc_desc_fisica) && \
			    ImporteEmis_fld >= adt_monpas_montomax)
			    msgbox "Debe seleccionar opcional de DESC.FISICA",OFB_OK,"Error"
			    return -2
		    end if
		end if
		
		IF (giros:CodPaisBenef_fld == "CU")
			popup SCR:POPcorredor_cuba
		END IF

		drv:next_screen = 1	
		break
	
	case 1	//Beneficiario
		if (CalleBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telefonico) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD CalleBenef_inter
		    RETURN -2
		endif	
		if (TelBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,aviso_telefonico) || \
		    testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD TelBenef_inter
		    RETURN -2
		endif	
		if (CiudadBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telefonico) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD CiudadBenef_inter
		    RETURN -2
		endif	
		if (CodPostBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD CodPostBenef_inter
		    RETURN -2
		endif

		if (ProvBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telefonico) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD ProvBenef_inter
		    RETURN -2
		endif	

		if (LocBenef_inter.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD LocBenef_inter
		    RETURN -2
		endif	
 
		if (CodPaisResidBenef.NUMCHARS == 0 && \
		   (testflag(giros:delivery_service,entre_domicilio) || \
		    testflag(giros:delivery_service,aviso_telefonico) || \
		    testflag(giros:delivery_service,aviso_telegrafico))) then
		    ERRMSG LST:common:errmsg_list,gali:ERRcampo_requerido
		    NEXTFIELD  CodPaisResidBenef
		    RETURN -2
		endif	

		drv:next_screen = 2	
		break
	
	case 2	//Emisor Pantalla 1
		drv:next_screen = 3
		break
	
	case 3	//Emisor Pantalla 2
		/*IF ((CodPaisTele_WI.numchars == 0 || TelEmis_inter.numchars == 0))
			IF (CodPaisCelu_WI.numchars == 0 || NroCelu_WI.numchars == 0) 
				MSGBOX "\'TELEFONO FIJO\' o \'CELULAR\' Obligatorio con Codigo de Pais",0x00,"ATENCION"
				NEXTFIELD CodPaisTele_WI
				RETURN -2
			END IF
		END IF*/
		drv:next_screen = 4
		break	
	
	case 4 //Emisor Pantalla 3
		drv:next_screen = 5
		break
	
	
	case 5	//Confirmacion
		// Se va a enviar la consulta.
		//(inter. maneja la flag de consulta a la inversa que nacionales)
		if (giros:consulta == 1)
		    msgbox "Desea enviar la consulta?",OFB_YESNO2,"CONTINUAR"
		    if (retval == 7) then //NO
		    	MSGBOX "NO SE OLVIDE de imprimir el Formulario Previo y verificar los datos con el cliente",0x00,"ATENCION"
				ungetkey RT_ESC
				return -2
		    else //6 (SI)  

				msgbox "Confirma que el cliente Verificó los datos filiatorios indicados en el Formulario Previo?",OFB_YESNO2,"Atencion"
				if (retval == 7) then //NO
					ungetkey RT_ESC
					return -2
				else //6 (SI)
					// ENVIO DE 1 FASE (CONSULTA).
					//obtengo reference Number
					call post:CDSobtiene_secuen("IDWUI")
					fprint id_wui_comm "%5.5s%07.07e",common:sucursal_activa,post:adt_codseq_nro
					hcomm:INDhost_sndrt = drv:INDhcomm_rtn
					hcomm:INDhost_rcvrt = drv:INDspc_rtn[1]
					Call post:CDSobtiene_secuen("STAN")
					call giros:OFBconsulta_giro
					clearfield lib:stat_message
					refresh    lib:stat_message
					common:trap_reset = OFB:drv:KEYSreset_esc
					if (hcomm:tran_status == HOST_ACCEPTED)
					    // CONSULTA ACEPTADA
						new_mtcn_WI = new_mtcn_WI_comm
					    call giros:OFBcalcula_importes
			    		if (retval < 0)
							// No encontro tasa de iva.
							lib:stat_override.highlite = 0
							clearfield lib:stat_override
							refresh lib:stat_override
							clearfield ovr:ovr_sup_id
							refresh lib:stat_override
							resetflag tlr:tran_flags,oprovr_granted
							resetflag tlr:tran_flags,supovr_granted
							ungetkey RT_ESC
							//cgw: Se agrega un llamado a post:ESCtransaccion para que se vuelva a regenerar la AuxIva.
							call post:ESCtransaccion
		        			return -3
				    	end if
				    	// JLA 21-2-01 se fuerza un cero 
					    // en el campo consulta	
					    giros:consulta = 0
			
					    STACK common:trap_reset PUSH
	    			    common:trap_reset = OFB:lib:KEYSreset_lockout
			    		FYIMSG drv:fyimsg_list,"Presione [ENTER] para continuar o Ajustes Monetarios ... "
					    call giros:MISCprot_cons_envio
					    return -2
								
					elseif (hcomm:tran_status != HOST_ACCEPTED)
						// CONSULTA RECHAZADA
						msgbox "Desea realizar la consulta nuevamente ?",OFB_YESNO,"CONTINUAR"
						if (retval == 7) //NO
						    // Salir de la transaccion.
					    	ungetkey RT_ESC
						    //cgw: Se agrega un llamado a post:ESCtransaccion para que se vuelva a regenerar la AuxIva.
					   		call post:ESCtransaccion
					    	return -3
						else
						    // Volver a 1era. pantalla.
						    ;	ungetkey RT_ESC
						    return -2
						end if
					end if
				end if
			end if
		else
	    	STACK common:trap_reset POP
			// Se va a enviar la confirmacion.
			if (post:estado_presu < 4) then
				msgbox "Desea confirmar la transaccion ?",OFB_YESNO,"CONTINUAR"
				if (retval == 7)
				    ungetkey RT_ESC
				    call post:ESCtransaccion
				    return -3
				else
				    siaf:ProvImpuesto = SucSoli_fld
			    	call post:MISCImpSellosTratam("ING/EGR")
				end if
		    end if
		    //
		    lib:stat_override.highlite = 0
		    clearfield lib:stat_override
		    refresh lib:stat_override
		    clearfield ovr:ovr_sup_id
		    refresh lib:stat_override
		    resetflag tlr:tran_flags,oprovr_granted
		    resetflag tlr:tran_flags,supovr_granted
		    //
		    siaf:siaf_status = HOST_ACCEPTED
		    //
		    post:ImpServUP = Comision_fld
		    post:AliServUP = post:adt_serv_aliciva
			//
		    giros:ImporteTotal_WU = giros:ImporteEmis_fld + giros:comision_siniva + giros:opc_impsiniva[2] + giros:CargosAdic_fld
		    //
		    post:ImporteConIva = Comision_fld + CargosAdic_fld + opc_impsiniva[2] + CargosIva_fld + opc_impiva[2]
		    post:ImporteSinIva = comision_siniva + CargosAdic_fld + opc_impsiniva[2]
		    //
		    siaf:ImporteConIva = post:ImporteConIva
		    siaf:ImporteSinIva = post:ImporteSinIva
		    //
		    call csr:cleararray(post:fliatran_vec)
		    call csr:cleararray(post:impciva_vec)
		    call csr:cleararray(post:impsiva_vec)
		    //
		    call MISCsumo_a_vectores(siaf:adt_tran_fliatran,Comision_fld,comision_siniva)
		    //
		    ind = 0
		    
		    
		    while (ind < post:cant_opc)
				call MISCsumo_a_vectores(post:flia_opc[ind],post:cos_opc[ind],post:siniva_opc[ind])
				ind = ind + 1
		    end while
		    //
	    	if (post:estado_presu == 1 || post:estado_presu == 4) then
				//
				giros:hora_viaje = common:time_of_day
				giros:dia_viaje  = common:system_date
				Call post:CDSobtiene_secuen("STAN")
				//
				tlr:INDdcol_scrn[0] = SCR:SCRN70383jnl
				tlr:INDdcol_scrn[1] = 0
				tlr:INDdcol_scrn[2] = 0
				tlr:INDdcol_scrn[3] = 0
				//tlr:INDdcol_scrn[4] = 0
			
				// parece que hay veces que el campo post:enSesion queda sucio
				// y esto hace que la tx quede journalizado con tlr:jnl_status = 002 (MEMO)
				enSesion_aux = post:enSesion
				clearfield post:enSesion
				
	    		post:ctrol_ult_tt = "S"
	    		call tlr:JNLtran
	    		post:ctrol_ult_tt = ""
				
				post:enSesion = enSesion_aux
				
				IF (hcomm:tran_status != HOST_ACCEPTED) THEN
			    	call MISCanulo_transac("NONE")
				ELSE
				    /* Llamo a la MISCTotalTransac solo si la transacción fue ACEPTADA. Hernán 21/12/2000*/
				    /*CSZ - resguardo el importe de la tx y el formulario fiscal*/
				    importe_aux = siaf:importe
				    formulario_aux = post:PreDForFis
					
			    	/*CSZ - Primero se llama a la rutina con el monto del giro emitido y el 
				    formulario fiscal vacio*/
				    CLEARFIELD post:PreDForFis
				    siaf:importe = ImporteNeto
				    CALL post:MISCTotalTransac(siaf:codigo_siaf)
					
				    /*CSZ - Luego se llama a la rutina con el monto del servicio(comision,
				      tasa y opcionales) que se cobra por la emision y el formulario fiscal
				      asociado al servicio*/
			    	siaf:importe = siaf:ImporteConIva
				    post:PreDForFis = formulario_aux			  
			    	CALL post:MISCTotalTransac(siaf:codigo_siaf)
					
				    /*Restauro el importe de la tx*/
				    siaf:importe = importe_aux
					
					//gpb:NI50547 HOLD TRANSACTION WESTERN UNION INTERNACIONAL
					CALL post:DOCSwuiHoldTransac
				END IF
	    		CLEARFIELD drv:INDhcomm_rtn
	    		CLEARFIELD drv:INDspc_rtn[1]
	    		CLEARFIELD drv:INDcur_tran
	    		CLEARFIELD drv:INDjnl_rtn
	    		CLEARFIELD drv:INDspc_rtn[0]
				//
			end if
		    //
		    if (post:estado_presu == 2 || post:estado_presu == 3) then
				post:PreDForFis = post:adt_serv_formfiscal
				call post:MISCAcumTotalesSes /* llamo rutina de calculo de Ingresos Brutos */
		    end if
		    //
		    call post:MISCGrabaDetalleTrn
		end if
	    break
    end select
END SUB
/*******/
