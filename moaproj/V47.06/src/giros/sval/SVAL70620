/****o* Pendientes de agrupación/OFB:giros:SVAL70620
* NOMBRE
*   OFB:giros:SVAL70620
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girossval.h"

SUB giros:SVAL70620

	// local importe_aux    like siaf:importe
	// local formulario_aux like post:PreDForFis
	// local status_aux     like hcomm:tran_status

	local ImpLoteFact    like giros:ImporteNeto
	local ImpLoteTot     like giros:ImporteNeto
	local ImpLoteNeto    like giros:ImporteNeto
	local ImpFact        like giros:ImporteNeto
	local ImpNeto        like giros:ImporteNeto

	// FALTANTE DE CHEQUE ACREDITADO

	ImpLoteFact = giros:gir_totimp_fact
	ImpLoteNeto = giros:gir_totimp_emi
	ImpLoteTot  = ImpLoteNeto + ImpLoteFact


	if ( post:estado_presu == 2 )
		resetflag giros:giros_masivos_trx,proc_trx_masivos
   		call post:MISCGrabaDetalleTrn
	end if

   	if (post:estado_presu == 4 ) 

		if ( giros:checkpoint_emision == JNL_TRX && post:PreDEst == 1 )
			// Transaccion Journaliza pero no actualizada
			// en PresuDet como procesado por caida.
	   		call post:MISCGrabaDetalleTrn

			// Transaccion no debe journalizar.
			clearfield drv:INDjnl_rtn
		else
			call giros:CDSsval_chkpoint(ANTES_JNL)
		end if

		/*********************************************
		// Importe de la Trx.
		importe_aux    = siaf:importe
		formulario_aux = post:PreDForFis
		status_aux     = hcomm:tran_status
		hcomm:tran_status = HOST_ACCEPTED
		**********************************************/

		if ( gir_imp_acre <= ImpLoteNeto )
			ImpNeto = ImpLoteNeto - gir_imp_acre
			ImpFact = ImpLoteFact
		else
			ImpNeto = 0
			ImpFact = giros:gir_totimp_lote - gir_imp_acre

		end if
		giros:ImpNetoChq = ImpNeto
		giros:ImpFactChq = ImpFact

		/**********************************************
		clearfield post:PreDForFis
		siaf:importe = ImpNeto
		giros:ImpNetoChq = siaf:importe
		call post:MISCTotalTransac(siaf:codigo_siaf)

		siaf:importe = ImpFact
		post:PreDForFis = "FACTU"
		giros:ImpFactChq = siaf:importe
		call post:MISCTotalTransac(siaf:codigo_siaf)
	 
		// Restauro el importe de la trx
		siaf:importe = importe_aux
		post:PreDForFis = formulario_aux
		hcomm:tran_status = status_aux
		***********************************************/

		call giros:MISCdatosChqAcred

		siaf:importe = giros:gir_totimp_lote - giros:gir_imp_acre
   	endif

END SUB

/*******/
