/****o* Pendientes de agrupación/OFB:giros:FVALprov_est_wuB
* NOMBRE
*   OFB:giros:FVALprov_est_wuB
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosfval.h"

sub giros:FVALprov_est_wuB
//SETVALDONE fLD:CodProvBenef_fld

//if (internacionales != true)
if (currentfield.numchars == 0)
	clearfield ProvBenef_WU
	refresh ProvBenef_WU
	if (!(testflag(opcionales_wu,fijo_dest)) || (testflag(opcionales_wu,telegrama)))
		msgbox "DEBE INGRESAR LA PROVINCIA DEL BENEFICIARIO",OFB_OK,"ERROR"
		return - 2
	ELSE
		common:csr_string = "A"
		/*CALL MISCcalculo_impuesto(CodProvSel_WU,ImporteNeto,common:csr_string,post:adt_serv_serv)
		if ( Impuesto == 0)	
			msgbox "DEBE INGRESAR LA PROVINCIA DEL BENEFICIARIO",OFB_OK,"ERROR"
			return - 2	
		else
			return 0
		end if */
	end if
ELSE

	call giros:FVALprov_resid_wu(fLD:CodProvBenef_fld,LST:giros:LISTProvResid_B)
	LET lib:err_retval = RETVAL
	RETURN RETVAL
end if
//end if
end sub

/*******/
