/****o* Pendientes de agrupación/OFB:giros:FVALcant_cheq_gm
* NOMBRE
*   OFB:giros:FVALcant_cheq_gm
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosfval.h"

SUB giros:FVALcant_cheq_gm

	/* Se controla que la cantidad de cheques disponibles supere
	   en un 25 % a la cantidad de giros postales a imponer */

	local cant_chk   like giros:cantidad_chk_emi
	local indice     like giros:cantidad_chk_emi
	local cant_req   like giros:cantidad_chk_emi
	local cantidad   like post:ImporteSinIva

	let cant_chk  = 0
	let cant_req  = 0
   	let indice    = 0

	/*Valido que la cantidad de cheques supere el 25% */

	CDS SELECT FROM dsc:giros:RecepChk_tab \
	BECOMES dsc:giros:RecepChk_ctx WHERE \
	adt_chk_suc == common:sucursal_activa && \
	adt_chk_op  == op:op_operator_id && \
	adt_chk_estado == 2
	
	CDS FINDFIRST dsc:giros:RecepChk_ctx nolock
    	let lib:err_retval = CDSRETVAL

	DO
		If (lib:err_retval != 0) THEN
			break
		end if

		CDS EXTRACT dsc:giros:RecepChk_ctx all

		/*Acumulo solo aquellos cheques que esten HA*/

		While (indice < giros:adt_chk_cantid)

			if (giros:adt_chk_cheque[indice] == "HA") then
				/*el cheque esta disponible*/
				let cant_chk = cant_chk + 1
			end if

			let indice = indice + 1
		End While
		
		CDS FINDNEXT dsc:giros:RecepChk_ctx nolock
		let lib:err_retval = CDSRETVAL
		indice = 0
	LOOP
	
	// let cant_chk = cant_chk / 0.25
	// cant_chk va a tener la cantidad maxima de cheques que 
	// puedo emitir

	init 22,1
	cantidad = ( giros:cantidad_chk_emi * 25 ) / 100
	init 22,0

	let cant_req = cantidad + cantidad_chk_emi

	If (cant_chk < cant_req ) then
		/*No supera*/
		MSGBOX \
		"DEBERA REQUERIR ADJUDICACION DE CHEQUERAS.",OFB_OK,"ERROR"
		nextfield giros:cantidad_chk_emi
		CDS ENDSELECT dsc:giros:RecepChk_ctx
		return -2
	end if

	CDS ENDSELECT dsc:giros:RecepChk_ctx
END SUB

/*******/
