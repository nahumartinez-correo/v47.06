/****o* Pendientes de agrupación/OFB:giros:OFBobtengo_cli_gm
* NOMBRE
*   OFB:giros:OFBobtengo_cli_gm
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:OFBobtengo_cli_gm
	local l_Cuit 		like post:CloCuit

	DLL "DBdoQuery" (odbc:db_handle_giros_m,1,\
	DSC:odbc:select_cli_gm,0,post:CliRaz,post:CloCuit,post:CloTipDoc,\
	giros:cantidad_chk_emi,giros:NroDocEmisGm_fld,0)

	if (retval < 0) then
		return -3
	end if
	
	// sba - El Nro de Cuit solo va cuando el Tipo Doc es 80 CUIT o 99 CUIL
	// Sino para la CliOca va el Nro de Documento
	if (post:CloTipDoc != "80" && post:CloTipDoc != "99") then
		l_Cuit = giros:NroDocEmisGm_fld
	else
		l_Cuit = post:CloCuit
	end if 

	CDS SELECT FROM DSC:post:clioca_tbl BECOMES DSC:post:clioca_ctx WHERE \
	post:CloRazon == FLD:post:CliRaz && \
	post:CloTipDoc == FLD:post:CloTipDoc && \
	post:CloCuit == l_Cuit
	CDS FINDFIRST DSC:post:clioca_ctx NOLOCK
	let lib:err_retval = CDSRETVAL
	if (lib:err_retval != 0) then
		return -3
	end if

	call csr:proc_list(F_CLEAR,LST:post:LISTClient_flds)
	CDS EXTRACT DSC:post:clioca_ctx ALL	
			
	Call giros:MISCdatos_cliente
END SUB

/*******/
