/****o* Pendientes de agrupación/OFB:giros:verifico_rango
* NOMBRE
*   OFB:giros:verifico_rango
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:verifico_rango(x,y)
    LOCAL cuenta LIKE common:local_int
    LOCAL hasta LIKE common:local_int
    LOCAL hastamas LIKE common:local_int
    LOCAL desde LIKE common:local_int
    LOCAL desdemas LIKE common:local_int
    desde = x - 1
    desdemas = x + 1
    hasta = y - 1
    hastamas = y + 1
    SELECT (x)
      CASE 1
        CDS SELECT FROM DSC:chequera_tab_dsc BECOMES DSC:sucur_ctx WHERE  \
adt_chk_serie == FLD:Serie_fld && adt_chk_ultimo == FLD:num_giro_h_fld ||  \
adt_chk_ultimo == FLD:hastamas || adt_chk_ultimo == FLD:hasta &&  \
adt_chk_primero == FLD:num_giro_d_fld || adt_chk_primero == FLD:desdemas ||  \
adt_chk_primero == FLD:desde 
        CDS FINDFIRST DSC:sucur_ctx NOLOCK 
        IF (CDSRETVAL == -801) THEN
          RETURN (1)
        ELSE 
          RETURN (-1)
        END IF 
        CDS ENDSELECT DSC:sucur_ctx 
        BREAK 
      CASE ELSE 
        CDS SELECT FROM DSC:chequera_tab_dsc BECOMES DSC:sucur_ctx WHERE  \
adt_chk_serie == FLD:Serie_fld && adt_chk_ultimo == FLD:num_giro_h_fld ||  \
adt_chk_ultimo == FLD:hastamas || adt_chk_ultimo == FLD:hasta &&  \
adt_chk_primero == FLD:num_giro_d_fld || adt_chk_primero == FLD:desdemas ||  \
adt_chk_primero == FLD:desde 
        CDS FINDFIRST DSC:sucur_ctx NOLOCK 
        IF (CDSRETVAL == -801) THEN
          CDS ENDSELECT DSC:sucur_ctx 
          CDS SELECT FROM DSC:chequera_tab_dsc BECOMES DSC:sucur_ctx WHERE  \
ultimo_fld < FLD:num_giro_h_fld 
          CDS FINDFIRST DSC:sucur_ctx NOLOCK 
          DO 
            CDS EXTRACT DSC:sucur_ctx FLD:adt_chk_ultimo 
            IF (cuenta < adt_chk_ultimo) THEN
              cuenta = adt_chk_ultimo
            END IF 
            CDS FINDNEXT DSC:sucur_ctx NOLOCK 
            IF (CDSRETVAL == -801) THEN
              BREAK 
            END IF 
          LOOP 
          IF (num_giro_h_fld == (cuenta + 1)) THEN
            RETURN (-1)
          ELSE 
            RETURN (1)
          END IF 
        ELSE 
          RETURN (-1)
        END IF 
        CDS ENDSELECT DSC:sucur_ctx 
        BREAK 
    END SELECT 
END SUB 

/*******/
