/****o* Pendientes de agrupación/OFB:giros:OFBarmar_pick_giros
* NOMBRE
*   OFB:giros:OFBarmar_pick_giros
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:OFBarmar_pick_giros(LTipoReporte)

local varl_codigo         like siaf:codigo_siaf
local varl_codigo_ant     like siaf:codigo_siaf
local varl_ImporteGiro    like giros:ImporteNeto
local varl_ImporteCargos  like giros:ImporteNeto
local varl_retval	  like lib:err_retval
local descripcion_trx     like siaf:adt_tran_desc
local varl_estado         like common:csr_string
local varl_estado_ant     like common:csr_string
local varl_visual         like giros:Serie_fld
local varl_tipo_giro      like giros:tipo_giro_fld
local varl_observ_dupli   like giros:observ_dupli_gir

if ( siaf:pantalla_impreso == "P" )
	// PICKLIST DE PANTALLA - VISUALIZACION -
	call CSR:f_sadroppl(DSC:odbc:pick)
	call CSR:f_sanewpl(DSC:odbc:pick,PIC:giros:giros_listado)
	if (retval < 0) then
		MSGBOX "ERROR AL CREAR EL PICKLIST.",OFB_OK,"Error"
		return -2
	end if
end if

clearfield giros:item_picklist
let numero_item = 0
move dsc:giros:pick_listado  to fld:nombre_picklist

// EXTRACT DE PICK DE DATOS DE GIROS.
call giros:OFBpicklist_item
varl_retval = retval
if ( varl_retval < 0 )
	return -2
end if

varl_codigo      = substr(giros:item_picklist,0,5)
varl_codigo_ant  = substr(giros:item_picklist,0,5)
varl_estado      = substr(giros:item_picklist,6,4)
varl_estado_ant  = substr(giros:item_picklist,6,4)
varl_visual      = substr(giros:item_picklist,10,1)

WHILE (varl_retval == 0 && varl_visual == " " )

	call csr:proc_list(F_CLEAR,LST:LISTrep_giros_tot)

	call giros:MISCstatus_trx_giros(varl_estado)

	WHILE ( varl_retval == 0 && varl_visual == " " && varl_estado == varl_estado_ant )

		call csr:proc_list(F_CLEAR,LST:LISTrep_giros_trx)
		
		call siaf:CDSget_tran_descrip(varl_codigo,descripcion_trx)
		
		fprint siaf:nota_1,"%-40.40s",descripcion_trx
		call giros:MISCwrite_listado
		if ( retval < 0 )
			break
		end if
		
		fprint siaf:nota_1,\
		"---------------------------------------------------------------------------------------------"
		call giros:MISCwrite_listado
		if ( retval < 0 )
			break
		end if

		if ( siaf:pantalla_impreso == "I" )
			call giros:MISCtitle_rep_giros(LTipoReporte)
			if ( retval < 0 )
				break
			end if
		end if

		WHILE (varl_retval == 0 && varl_visual == " " && \
				varl_codigo == varl_codigo_ant && \
		       		varl_estado == varl_estado_ant )

			varl_ImporteCargos = substr(item_picklist,119,13)
			varl_ImporteGiro   = substr(item_picklist,106,13)

			cant_trx_giros = cant_trx_giros + 1
			neto_trx_giros = neto_trx_giros + varl_ImporteGiro
			carg_trx_giros = carg_trx_giros + varl_ImporteCargos
			
			clearfield siaf:nota_1
			move substr(giros:item_picklist,66,81) to siaf:nota_1
			
			//cgw:la posicion en el piklist del tipo de giro en la consulta de pago
			//    se pisa con la observacion de duplicados en la consulta de emisiones.
			clearfield varl_tipo_giro
			if (LTipoReporte == DSC_PAG)
			    move substr(giros:item_picklist,187,1) to varl_tipo_giro
			end if
			
			fprint siaf:nota_1,"%s %s",siaf:nota_1,varl_tipo_giro
			call giros:MISCwrite_listado
			if ( retval < 0 )
				break
			end if
			
			move substr(giros:item_picklist,11,55) to siaf:nota_1
			fprint siaf:nota_1," %s",siaf:nota_1

            //cgw: Se agrega observacion que tendra el nro.giro duplicado, o por el que
            //     sera duplicado en caso de corresponder. La posicion de la observacion
            //     en el picklist se pisa con la del tipo de giro en la consulta de pago.
            clearfield varl_observ_dupli
			if (LTipoReporte == DSC_EMI && \
			    (varl_codigo == 70030 || varl_codigo == 70040 || \
			     varl_codigo == 70140 || varl_codigo == 70141)) then
			     move substr(giros:item_picklist,169,25) to varl_observ_dupli
                 fprint siaf:nota_1,"%s %25.25s",siaf:nota_1,varl_observ_dupli
			end if
			
			call giros:MISCwrite_listado
			if ( retval < 0 )
				break
			end if

			numero_item = numero_item  + 1
			// EXTRACT DE PICK DE DATOS DE GIROS.
			call giros:OFBpicklist_item
			varl_retval = retval
			if (  varl_retval < 0 )
				break
			end if
			varl_codigo = substr(giros:item_picklist,0,5)
			varl_estado = substr(giros:item_picklist,6,4)
			varl_visual = substr(giros:item_picklist,10,1)

		END WHILE

		varl_codigo_ant = substr(giros:item_picklist,0,5)

		call giros:MISCtotal_trx_giros
		if ( retval < 0 )
			break
		end if

		cant_tot_giros = cant_tot_giros + cant_trx_giros 
		neto_tot_giros = neto_tot_giros + neto_trx_giros 
		carg_tot_giros = carg_tot_giros + carg_trx_giros

	END WHILE
	
	varl_estado_ant = substr(giros:item_picklist,6,4)
	call giros:MISCtotal_gral_giros
	if ( retval < 0 )
		return -2
	end if

END WHILE

call CSR:f_sadroppl(DSC:giros:pick_listado)

END SUB

/*******/
