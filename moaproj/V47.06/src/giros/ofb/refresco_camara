/****o* Pendientes de agrupación/OFB:giros:refresco_camara
* NOMBRE
*   OFB:giros:refresco_camara
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

sub giros:refresco_camara
		/*por cada uno de los siete campos del array se pasa el string del picklist
		al campo correspondiente, se pregunta si lleva codigo de error, y si es asi,
		se modifican los flags como corresponda y se transfiere el codigo de error al
		array de campos PicError_fld*/

	local len like common:local_int
	local contador like giros:cont

		len = index - 1 + PL_GETITEM
		call csr:myPickcontrol("PLBCamara",common:csr_string,len)
		if (common:csr_string == "" || retval < 0) then
			return (-2)
		end if
		setflag camara_flags,muevo
		cont = 0
		contador = 0
		WHILE (contador <= 6)
			call csr:myPickcontrol("PLBCamara",PicDisplay_fld[cont],posicion)
			if (PicDisplay_fld[cont] == "") then
				break
			end if
			;len = PicDisplay_fld[cont].numchars - 3
			len = PicDisplay_fld[cont].numchars - 4
			if (substr(PicDisplay_fld[cont],len,3) == "R06" || substr(PicDisplay_fld[cont],len,3) == "R08" || substr(PicDisplay_fld[cont],len,3) == "M01" || substr(PicDisplay_fld[cont],len,3) == "M02" || substr(PicDisplay_fld[cont],len,3) == "M03" || substr(PicDisplay_fld[cont],len,3) == "M04" || substr(PicDisplay_fld[cont],len,3) == "M05" || substr(PicDisplay_fld[cont],len,3) == "M06" || substr(PicDisplay_fld[cont],len,3) == "M07" || substr(PicDisplay_fld[cont],len,3) == "M08" || substr(PicDisplay_fld[cont],len,3) == "M09" || substr(PicDisplay_fld[cont],len,3) == "M10") then
				select (cont)
					case 0
						setflag camara_flags,0
						altercontrolset giros:PBcb0
						break
					case 1
						setflag camara_flags,1
						altercontrolset giros:PBcb1
						break
					case 2
						setflag camara_flags,2
						altercontrolset giros:PBcb2
						break
					case 3
						setflag camara_flags,3
						altercontrolset giros:PBcb3
						break
					case 4
						setflag camara_flags,4
						altercontrolset giros:PBcb4
						break
					case 5
						setflag camara_flags,5
						altercontrolset giros:PBcb5
						break
					case 6
						setflag camara_flags,6
						altercontrolset giros:PBcb6
						break
				end select
				PicError_fld[cont] = substr(PicDisplay_fld[cont],len,3)
				PicDisplay_fld[cont] = substr(PicDisplay_fld[cont],0,len)
			else
				PicDisplay_fld[cont] = substr(PicDisplay_fld[cont],0,len)
				PicError_fld[cont] = ""
				PicDescripcion_fld[cont] = ""
				refresh PicDescripcion_fld[cont]
				select (cont)
					case 0
						resetflag camara_flags,0
						altercontrolset giros:PBcb0
						break
					case 1
						resetflag camara_flags,1
						altercontrolset giros:PBcb1
						break
					case 2
						resetflag camara_flags,2
						altercontrolset giros:PBcb2
						break
					case 3
						resetflag camara_flags,3
						altercontrolset giros:PBcb3
						break
					case 4
						resetflag camara_flags,4
						altercontrolset giros:PBcb4
						break
					case 5
						resetflag camara_flags,5
						altercontrolset giros:PBcb5
						break
					case 6
						resetflag camara_flags,6
						altercontrolset giros:PBcb6
						break
				end select
			end if
			call giros:CDSpongo_descripcion(cont)
			cont = cont + 1
			posicion = posicion + 1
			contador = contador + 1
		END WHILE	
				
	refresh PicDisplay_fld[0]
	refresh PicDisplay_fld[1]
	refresh PicDisplay_fld[2]
	refresh PicDisplay_fld[3]
	refresh PicDisplay_fld[4]
	refresh PicDisplay_fld[5]
	refresh PicDisplay_fld[6]
	refresh PicError_fld[0]
	refresh PicError_fld[1]
	refresh PicError_fld[2]
	refresh PicError_fld[3]
	refresh PicError_fld[4]
	refresh PicError_fld[5]
	refresh PicError_fld[6]
end sub
/* fin de rutinas de camara compensadora */

/*******/
