/****o* Giros Masivos/OFB:giros:OFBproceso_val_cec
* NOMBRE
*   OFB:giros:OFBproceso_val_cec
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"


SUB giros:OFBproceso_val_cec(tipo_giro,sesion_nro)

	local varl_tipo_giro    like giros:tipo_giro_fld
	local varl_sesion_gm    like giros:nro_sesion_gm
	local varl_mensaje3     like common:csr_string
	local varl_cec_msg      like giros:EstadoGiro_fld
	local codagrupacion_aux like giros:codagrupacion_gm
	local varl_restante     like giros:Cantgm_cec
	local varl_cantidad     like giros:Cantgm_cec
	local cantidad          like giros:Cantgm_cec
	local loc_retval        like lib:err_retval
	
	fprint varl_tipo_giro,"%s",tipo_giro
	fprint varl_sesion_gm,"%s",sesion_nro

	CDS SELECT FROM DSC:TABsesion_gm BECOMES DSC:CONsesion_gm WHERE \
	post:op_operator_id == FLD:op:op_operator_id && \
	giros:nro_sesion_gm == varl_sesion_gm && \
	giros:tipo_giro_fld == varl_tipo_giro && \
	giros:estado_gm == "I"

	CDS FINDFIRST DSC:CONsesion_gm  LOCK
	lib:err_retval = CDSRETVAL
	if (lib:err_retval != 0 )
		CDS UNLOCK    DSC:CONsesion_gm
		CDS ENDSELECT DSC:CONsesion_gm
		return 4
	else
		if (lib:err_retval != 0 )
			msgbox "Error al obtener los datos para validar.",OFB_OK,"Atencion"
			CDS UNLOCK    DSC:CONsesion_gm
			CDS ENDSELECT DSC:CONsesion_gm			
			return -2
		end if
	end if

	CALL CSR:proc_list(F_CLEAR,LST:LISTproceso_masivos)
	CALL CSR:proc_list(F_CLEAR,LST:LISTemis_flds)
	CALL CSR:proc_list(F_CLEAR,LST:LISTbenef_flds)
        call csr:cleararray post:cos_opc
        call csr:cleararray post:ali_opc
        call csr:cleararray post:texto_opc

	CDS EXTRACT DSC:CONsesion_gm ALL
	clearfield codagrupacion_aux

	DO
		if ( codagrupacion_aux != giros:codagrupacion_gm)
			cantidad = 0
			codagrupacion_aux = giros:codagrupacion_gm
			call giros:OFBvalido_cta_efvo
			if ( retval < 0 )
				loc_retval = -2
				break
			end if

			if (giros:cantidad_coi_comm != "96")
				if ( giros:Cantgm_cec + giros:cantidad_coi_comm > 20 )
					varl_restante = \
					(giros:Cantgm_cec + giros:cantidad_coi_comm) - 20
					fprint varl_mensaje3,"%s %s %s  %s %s",\
					"La cantidad de giros a emitir para",giros:NombreBenef_fld,\
					giros:ApellidoBenef_fld,"supera el limite permitido en",\
					varl_restante
					msgbox varl_mensaje3,OFB_OK,"Atencion"

					msgbox "Desea eliminar giros sobrantes y continuar?",OFB_YESNO,"Atencion"
					if (retval == 7)	
						; NO ELIMINAR
						loc_retval = -1
						break
					else
						if ( giros:cantidad_coi_comm > 20 )
							varl_cantidad = 0
						end if
						varl_cantidad = 20 - giros:cantidad_coi_comm
					end if
				end if
			else
				fprint varl_mensaje3,"%s %s %s  %s",\
				"La cantidad de giros a emitir para",giros:NombreBenef_fld,\
				giros:ApellidoBenef_fld,"supera el limite permitido"
				msgbox varl_mensaje3,OFB_OK,"Atencion"
				msgbox "Desea eliminar giros sobrantes y continuar?",OFB_YESNO,"Atencion"
				if (retval == 7)	
					; NO ELIMINAR
					loc_retval = -1
					break
				else
					varl_cantidad = 0
				end if

			end if
	
		end if

		cantidad = cantidad + 1 
		

		if ( giros:Cantgm_cec + giros:cantidad_coi_comm > 20 )
			if (cantidad > varl_cantidad)
				CDS DELETE DSC:CONsesion_gm
				
				//Actualizo totales de pantalla
				giros:Cantgm_cec = - giros:Cantgm_cec - 1
				SumaImpGiros = SumaImpGiros - giros:ImporteNeto 
				ImpTotGiros  = ImpTotGiros  - giros:ImporteTotal_fld
				REFRESH cantidad_chk_emi
				REFRESH SumaImpGiros
				REFRESH ImpTotGiros				
			else
				//actualizo los giros CEC con la nueva Cantgm_cec
				CDS CLEARBUFFER DSC:CONsesion_gm
				CDS APPEND DSC:CONsesion_gm varl_cantidad as Cantgm_cec
				CDS UPDATE DSC:CONsesion_gm LOCK
			end if
		end if
	
		CDS FINDNEXT DSC:CONsesion_gm LOCK
		lib:err_retval = CDSRETVAL
		if ( lib:err_retval != 0 )
			break
		end if

		CALL CSR:proc_list(F_CLEAR,LST:LISTproceso_masivos)
		CALL CSR:proc_list(F_CLEAR,LST:LISTemis_flds)
		CALL CSR:proc_list(F_CLEAR,LST:LISTbenef_flds)
	        call csr:cleararray post:cos_opc
	        call csr:cleararray post:ali_opc
	        call csr:cleararray post:texto_opc

		CDS EXTRACT DSC:CONsesion_gm ALL

	LOOP

	CDS UNLOCK DSC:CONsesion_gm
	CDS ENDSELECT DSC:CONsesion_gm

	return loc_retval

END SUB

/*******/


