/****o* Pendientes de agrupación/OFB:giros:common_pres_rtn
* NOMBRE
*   OFB:giros:common_pres_rtn
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:common_pres_rtn
	//
    resetflag flags_back,tiene_titulo
    altercontrolset drv:PBcb16
	resetflag flags_back,manual
	resetflag flags_back,ya_pasado
	resetflag camara_flags,clear1
	resetflag camara_flags,clear2
	resetflag camara_flags,emis1
	resetflag camara_flags,emis2
	resetflag flags_back,vencido
	
	resetflag flags_back,aviso_pago
	
	altercontrolset drv:PBcb0
    es_emision_postal = "N"
    es_emision_tele = "N"
    es_envio_WU = "N"
    es_emision_correohoy = "N"
    
    resetflag env_post_flag,envia_postal

	//Llamada a consulta multiple
    CALL MISCconsulta_multi
    if (Retval < 0) then
   		ungetkey RT_ESC
		return (-2)
    End If
   
   tipo_giro_fld = tipo_giro_comm
	
	EstadoGiro_fld = EstadoGiro_comm
	REFRESH EstadoGiro_fld
	
    FPRINT FechaEmision_fld "%4.4e%2.2e%2.2e" \
    	SUBSTR(fechaEmi_comm,4,4) SUBSTR(fechaEmi_comm,2,2) SUBSTR(fechaEmi_comm,0,2) 
	refresh FechaEmision_fld
	
    CodSucEmis_fld = SucursalEmi_comm
    SucSel_fld = SUBSTR(SucursalEmi_comm,0,1)
    CALL CDSpongo_provincia(SucSel_fld,ProvEmis_fld)
    REFRESH CodSucEmis_fld
    
    CodSucBenef_fld = Sucursal_comm
    SucSel2_fld = SUBSTR(CodSucBenef_fld,0,1)
    CALL CDSpongo_provincia(SucSel2_fld,ProvBenef_fld)
    REFRESH CodSucBenef_fld
    
	ImporteNeto = ImporteRcve
;	call CDSPasMonWU(adt_pais_cod,CodMoneda_comm)
;	siaf:moneda = adt_monpas_codmon
;	post:medio_pago_desc = adt_monpas_desmon
	
	if (siaf:codigo_proc == 992007) then
        vieja_serie_fld = Serie_fld
        viejo_num_giro_fld = NroGiro_fld
        viejo_dig_fld = digito_fld
        refresh vieja_serie_fld
        refresh viejo_num_giro_fld
        refresh viejo_dig_fld
		clearfield Serie_fld
		clearfield NroGiro_fld
		clearfield digito_fld
		unprotfield Serie_fld
		unprotfield NroGiro_fld
		unprotfield digito_fld
	else	
		protfield Serie_fld
		protfield NroGiro_fld
		protfield digito_fld
	end if
	refresh Serie_fld
	refresh NroGiro_fld
	refresh digito_fld
	refresh ImporteNeto
;	refresh siaf:moneda
;	refresh post:medio_pago_desc
    if (siaf:codigo_siaf != 70090 && siaf:codigo_siaf != 70110 && siaf:codigo_siaf != 70120) then
	    post:adt_tarif_desde = ImporteNeto
	    call post:MISCactualizo_tarifa
	    IF (RETVAL < 0)
	    	UNGETKEY RT_ESC
	    	RETURN (-2)
	    END IF
	   if (post:enCombo != "S") then
	       //cgw:si no es un producto de un combo, calcula importes.
	       imp_servicio_fld = post:tarifa
	   end if    
	else    
	    imp_servicio_fld = 0
	endif    
    refresh imp_servicio_fld
    
    // sba 20031126 - Me fijo si tiene opcional AVPP
    // lo necesito para la impresion del cheque de duplicado.
	call giros:MISCopcional_AVPP
END SUB

/*******/
