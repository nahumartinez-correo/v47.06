/****o* Lista de Giros/OFB:giros:OFBenvio_lg
* NOMBRE
*   OFB:giros:OFBenvio_lg
* DESCRIPCION
*   Rutina que envía los giros postales/ telegraficos que estan en condiciones de una lista de giros. Tambien
*	envía anulaciones de cheques postales.
* ENTRADAS
*   flia_giro: tipo de familia del giro a emitir
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   OFB:giros:OFBproceso_lg
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"


SUB giros:OFBenvio_lg(flia_giro)

	local  varl_flia_giro like giros:flia_giro_fld
	local varl_importe_aux like giros:ImporteNeto
	
	varl_importe_aux = giros:ImporteNeto
	fprint varl_flia_giro,"%s",flia_giro

	select (varl_flia_giro)
		case "P"
			IF (lg_cheque == "AN")
				//Se envia anulación de cheque mal impreso
				giros:codigo_procesamiento = 991101
				siaf:codigo_siaf = 70300
				giros:cod_mot_fld = "C0002"	
				clearfield giros:ImporteNeto				
				hcomm:INDhost_sndrt = OFB:giros:SEND70300
				hcomm:INDhost_rcvrt = OFB:giros:RCVE70300_masivos
			ELSE
				//Se envia emision de giro postal
				giros:codigo_procesamiento = 992001
				siaf:codigo_siaf = 70030
				giros:consulta = 0
				hcomm:INDhost_sndrt = OFB:giros:SEND70030
				hcomm:INDhost_rcvrt = OFB:giros:RCVE70030_masivos
			END IF
			break
		case "T"
			//Se envia emision de giro telegrafico
			giros:codigo_procesamiento = 992002
			siaf:codigo_siaf = 70050
			hcomm:INDhost_sndrt = OFB:giros:SEND70050
			hcomm:INDhost_rcvrt = OFB:giros:RCVE70030_masivos
			break

	end select

	resetflag  giros:tran_send_mode,consulta_simple
	resetflag  giros:tran_send_mode,consulta_multiple

	call post:CDSobtiene_secuen("STAN")
	let siaf:fecha = common:system_date
	let siaf:hora = common:time_of_day
	giros:hora_viaje = siaf:hora
	giros:dia_viaje  = siaf:fecha

	call hcomm:COMM_stat_init

	CDS CLEARBUFFER DSC:CONses_lg
	CDS APPEND DSC:CONses_lg \
		hcomm:tran_status AS giros:lg_status \
		giros:codigo_procesamiento \
		giros:CodRespuesta_comm \
		post:adt_codseq_nro \
		giros:hora_viaje \
		giros:dia_viaje \
		giros:Serie_fld \
		giros:NroGiro_fld \
		giros:digito_fld


	CDS UPDATE DSC:CONses_lg LOCK NOWAIT
	CDS WAIT DSC:CONses_lg
	IF (cdsretval < 0)
		giros:ImporteNeto = varl_importe_aux
		CALL  OFB:lib:MISCcds_find_err /* display error msg */
		return -2
	END IF

	//Recuperacion de caidas que pudieran exixtir de otros viajes...
	call siaf:CDSchk_trxs_caidas
   	if (retval == 0 && testflag(hcomm:state_flags,on_line))
		FYIMSG drv:fyimsg_list,\
		"Proceso de Recuperacion de Transacciones Caidas en Vuelo"
		call siaf:CDSjnl_mayor_cien	
		if ( retval == TRAN_CAIDA_VUELO )
    		clearfield hcomm:INDhost_sndrt 
    		clearfield hcomm:INDhost_rcvrt 
		end if
		FYIMSG CLEAR
    elseif (retval == -5) then
		// quedaron trx's pendientes de recuperacion por el proc. batch...
    	clearfield hcomm:INDhost_sndrt
    	clearfield hcomm:INDhost_rcvrt
    end if

    call giros:OFBdisable_bt_msg
	call hcomm:COMM_host_tran
	common:trap_reset = OFB:drv:KEYSreset_esc
   	call giros:OFBenable_bt_msg
	clearfield lib:stat_message
	refresh    lib:stat_message
	refresh    statusline


	giros:ImporteNeto = varl_importe_aux
/*if (hcomm:tran_status > HOST_REJECTED) then
		return -2
	end if*/

END SUB


/*******/

