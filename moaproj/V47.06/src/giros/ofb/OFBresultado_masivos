/****o* Pendientes de agrupación/OFB:giros:OFBresultado_masivos
* NOMBRE
*   OFB:giros:OFBresultado_masivos
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:OFBresultado_masivos(sesion_nro)

	local orden           like giros:pos0
	local varl_sesion_gm  like giros:nro_sesion_gm

	fprint varl_sesion_gm,"%s",sesion_nro
    
    

	CDS SELECT FROM DSC:TABsesion_gm BECOMES DSC:CONsesion_gm WHERE \
	post:op_operator_id == FLD:op:op_operator_id && \
	giros:nro_sesion_gm == varl_sesion_gm && \
	giros:estado_gm == "E"

	CDS FINDFIRST DSC:CONsesion_gm NOLOCK
	lib:err_retval = CDSRETVAL
	
	if (lib:err_retval != 0 )
		CDS ENDSELECT DSC:CONsesion_gm
		if (lib:err_retval == -801)
			return -1
		end if
	end if
	
   	DO
 		CALL CSR:proc_list(F_CLEAR,LST:LISTproceso_masivos)
		CALL CSR:proc_list(F_CLEAR,LST:LISTemis_flds)
		CALL CSR:proc_list(F_CLEAR,LST:LISTbenef_flds)

		call csr:cleararray post:cod_opc
		call csr:cleararray post:ali_opc
		call csr:cleararray post:cos_opc
		call csr:cleararray post:comb_opc
		call csr:cleararray post:siniva_opc
		call csr:cleararray post:flia_opc
		call csr:cleararray post:texto_opc
		call csr:cleararray post:inf_opc
		clearfield post:costo_opc
		 //SC 50170-FACTURACION
		 call csr:cleararray post:siniva_opc4
		 
		CDS EXTRACT DSC:CONsesion_gm ALL
		
		//extraigo campos NO Auto Extract
		CDS EXTRACT DSC:CONsesion_gm giros:clave_hdr_giros giros:firma_enviada

		if ( post:adt_tarif_modo == "P" )
		 	post:tarif_aux = ( ( giros:ComisionSinIva_fld + \
			giros:IvaComision_fld ) * 100 ) / giros:ImporteNeto
		end if

		call giros:CDSdesc_servicio

		// Impuestos Sellos
		clearfield giros:Impp_pdesc_emi
		clearfield giros:Impp_impdesc_emi
		clearfield giros:Impp_pdesc_pag
		clearfield giros:Impp_impdesc_pag
	    
		call giros:OFBGrDet_gm
        	
        	/*CDS CLEARBUFFER DSC:CONsesion_gm
		giros:estado_gm = "PF"
		CDS APPEND DSC:CONsesion_gm \
			giros:estado_gm
	
		CDS UPDATE DSC:CONsesion_gm LOCK NOWAIT
		CDS WAIT DSC:CONsesion_gm
		IF (cdsretval < 0)
			CALL  OFB:lib:MISCcds_find_err
			return -2
		END IF
        	
		CDS FINDNEXT DSC:CONsesion_gm  LOCK*/
		CDS FINDNEXT DSC:CONsesion_gm  NOLOCK
		lib:err_retval = CDSRETVAL
		if (lib:err_retval == -801 )
			CDS ENDSELECT DSC:CONsesion_gm
			break
		end if
	LOOP
	/*
	singlestep on
	CDS BEGINWORK
	    
	CDS SELECT FROM DSC:TABsesion_gm BECOMES DSC:CONsesion_gm WHERE \
	post:op_operator_id == FLD:op:op_operator_id && \
	giros:nro_sesion_gm == varl_sesion_gm && \
	giros:estado_gm == "E"
    
	;CDS FINDFIRST DSC:CONsesion_gm LOCK
	
	CDS CLEARBUFFER DSC:CONsesion_gm
	giros:estado_gm = "PF"
	CDS APPEND DSC:CONsesion_gm \
		giros:estado_gm
		
	CDS UPDATE DSC:CONsesion_gm ALL COMMITWORK

	IF (cdsretval < 0)
		CALL  OFB:lib:MISCcds_find_err 
		return -2
	END IF
	    */
	
	
	// Flag para transaccion de emisiones de giros masivos.
	resetflag giros:giros_masivos_trx,proc_trx_masivos

END SUB

/*******/
