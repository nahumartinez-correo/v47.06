/****o* Pendientes de agrupación/OFB:giros:rutina_cheque
* NOMBRE
*   OFB:giros:rutina_cheque
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"
#include <tlr.h>
#include "drv.h"            /*averiguar ?*/
#include "base.h"           /*averiguar ?*/
#include "cdserdef.h"       /*averiguar ?*/
#include "gsp.h"            /*averiguar ?*/
#include "ofbdefs.h"        /*averiguar ?*/
#include "csr.h"            /*averiguar ?*/
#include "pickdrv.h"              /*averiguar ?*/
#include <dberrs.h>
#include "impresio.h"
#include "hcommstd.h"
#include "giros.h"

sub giros:rutina_cheque
local varl_mensaje     like common:csr_string
	select (checkpoint_emision)
		case ANTES_IMPRE_SUB_1
			goto antes_impre_chk_1
			break
		case ANTES_IMPRE_SUB_2
			goto antes_impre_chk_2
			break
		case ANTES_IMPRE_SUB_3
			goto antes_impre_chk_3
			break
		case else
	end select
    
    do  
        clearfield clave_hdr_giros
        ;clearfield clave_hdr_prev
        clearfield post:nro_autorizac
        while (1)
            init 33,0
            popup giros:SCRNingreso_ctrol
            ;popup giros:SCRNingreso_nroCtrol
            if (lastkey == RT_ESC)
				MSGBOX "No puede cancelar la transaccion",0x00,"Error"
			else
			    ;clave_hdr_giros = clave_hdr_prev
			    clave_hdr_giros = post:nro_autorizac
                if (clave_hdr_giros.numchars > 0) then
		       	    break
		        end if
			end if
		end while
	   // CALL CDSavanza_cheq("AN")
	
	    //Si el cheque utilizado pertenece a una chequera que se encuentra en un Pase (estado = P", todavía 
	    //no ha sido recepcionado por el operador), la marco con estado = I (intermedio).
	 //   CALL tes:CDSactMarcaTesChkMov
	
	   // call giros:digito_verificador(Serie_fld,NroGiro_fld,digito_fld)	 //esto no se porque se hace y si tendria que estar vigente en esta version...
			/*	fprint varl_mensaje,"%s%s-%s-%s %s","Ingrese el Cheque Nro: ",\
				giros:Serie_fld,giros:NroGiro_fld,giros:digito_fld," para su impresión"
				msgbox varl_mensaje,OFB_OK,"Atencion"*/

	  //  INIT 76,"docprt WAIT 0"	
//	    printdoc OFB:giros:imprime_cheque,docprt,"Imprimiendo Cheque"
   printdoc OFB:giros:PRT_OP_EmisGP,docprt,"Imprimiendo Orden de Pago"
	    //INIT 76,"docprt WAIT 1"
	    	
	    call giros:CDSsval_chkpoint(ANTES_IMPRE_SUB_1)
antes_impre_chk_1:
	
		//MSGBOX "Se imprimio correctamente el cheque?",OFB_YESNO,"Comprobación"
		MSGBOX "¿SE IMPRIMIO CORRECTAMENTE LA ORDEN DE PAGO?", OFB_YESNO1, "ATENCION"
		IF (RETVAL != 6) THEN //NO
		post:reimpresion = "S"
		PRINTDOC OFB:giros:PRT_OP_EmisGP,docprt,"(L)IMPRIMIENDO ORDEN DE PAGO"				
		MSGBOX "¿SE IMPRIMIO CORRECTAMENTE LA ORDEN DE PAGO?", OFB_YESNO1, "ATENCION"
		post:reimpresion = "N"
		IF (RETVAL != 6) THEN //NO
				MSGBOX "DEBERA REIMPRIMIRLA DESDE EL JOURNAL.",OFB_OK,"ATENCION"
				return -2
		endif

		//endif
		//IF (RETVAL == 7) THEN
			//call giros:CDSsval_chkpoint(ANTES_IMPRE_SUB_2)
antes_impre_chk_2:
			
			/*fprint common:csr_string "COMUNIQUESE CON CALL CENTER\nSOLICITANDO LA ANULACION DE LA EMISION DEL GIRO %s-%s/%s" \
					Serie_fld NroGiro_fld digito_fld
			msgbox common:csr_string,OFB_OK,"Atención"*/
		call giros:CDSsval_chkpoint(ANTES_IMPRE_SUB_3)
antes_impre_chk_3:
            WHILE (1)
				popup giros:SCRNingreso_giro,PRESnuevo_giro,PCOLnuevo_giro,SVALnuevo_giro
				lib:err_retval = RETVAL
				if (lastkey == RT_ESC)
					MSGBOX "No puede cancelar la transaccion",0x00,"Error"
				else
				    break
			    end if
			END WHILE	
		ELSE
		    //CALL CDSavanza_cheq("EM")
			BREAK
		END IF
	LOOP
end sub

/*******/
