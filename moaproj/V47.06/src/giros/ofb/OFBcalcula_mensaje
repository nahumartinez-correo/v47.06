/****o* Pendientes de agrupación/OFB:giros:OFBcalcula_mensaje
* NOMBRE
*   OFB:giros:OFBcalcula_mensaje
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosofb.h"

SUB giros:OFBcalcula_mensaje
	local imp_opc     like giros:ImporteEmis_fld
	local opc_id      like post:adt_opc_opci
	local ind		like siaf:i

	if (giros:opc_impsiniva[2] == 0) then
		giros:opc_impiva[2] = 0
		refresh giros:opc_impiva[2] 
	endif
		
	// TARIFA DEL MENSAJE DEL BENEFICIARIO.
	opc_id = "MBTI"
	call giros:MISCiva_opc_inter(opc_id)
	if ( retval < 0 )
		// msgbox " TASA DE IVA INEXISTENTE",OFB_OK,"Error"
		// return -2
	else
		init 22,1
		giros:opc_impiva[2] = (giros:opc_impsiniva[2] * post:adt_opc_aliciva) / 100
		init 22,0
		refresh giros:opc_impiva[2] 

		imp_opc = giros:opc_impsiniva[2] + giros:opc_impiva[2]

		ind = 0
		while (ind < MAX_VEC_OPC)
			if (post:cod_opc[ind].NUMCHARS == 0)
				post:cod_opc[ind] = opc_id
				post:costo_opc = post:costo_opc + imp_opc
				post:cant_opc = post:cant_opc + 1
			endif
			if (post:cod_opc[ind] == opc_id)
				post:flia_opc[ind] = post:adt_opcserv_uneg
				post:comb_opc[ind] = post:adt_opc_combina
				post:ali_opc[ind]  = post:adt_opc_aliciva
				post:cos_opc[ind]  = imp_opc
				post:siniva_opc[ind] = giros:opc_impsiniva[2]
				break
			endif
			ind = ind + 1	
		end while	

		// Guardar en vector importe sin iva + iva.

	end if

	if ( giros:consulta == 1 )
		giros:aux_mensaje = giros:opc_impsiniva[2]
	end if

END SUB

/*******/
