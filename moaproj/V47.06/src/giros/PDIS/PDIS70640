/****o* Lista de Giros/OFB:giros:PDIS70640
* NOMBRE
*   OFB:giros:PDIS70640
* DESCRIPCION
*   Levanta los datos del cliente medio del inicio de sesion y de la tabla CliMed y le da al 
*   usuario la posibilidad de modificarlos
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   LST:giros:TRAN70640
* DOCUMENTACION
*   http://jira.sibs.net/jira/browse/AUT-520
* SOURCE
*/
#include "girosPDIS.h"

SUB giros:PDIS70640
 
    siaf:codigo_siaf        = 70640
    siaf:adt_tran_codigo    = siaf:codigo_siaf
    call siaf:CDSadt_tran_load 
    siaf:nombre_transac     = siaf:adt_tran_desc
    tlr:tran_mnemonic       = siaf:adt_tran_mnemonic
    siaf:afecta_efectivo    = siaf:adt_tran_afec_efvo
    siaf:tiene_reverso      = siaf:adt_tran_tiene_rev
    siaf:posible_off        = siaf:adt_tran_posoff
           
    
    IF (post:estado_presu != 2 && post:estado_presu != 3 && post:estado_presu != 4)
        errmsg common:errmsg_list,"Inicie una Sesión con Cliente Medio para poder ingresar a la transacción."
        return (-2)
    END IF
    
    //cgw:Recupera datos de la Presu para validar que no realice la Importacion de Lista Giros,
    // si se desea consumir adelanto monetario.
    call post:MISCValidoAdelanto    
    if (post:ConsumoAnticipoMon && post:estado_presu == 2 && \
        siaf:adt_tran_fliatran != "PCL" && siaf:codigo_siaf != 70650)
		errmsg common:errmsg_list,"El cliente informó que desea consumir su Adelanto Monetario.\nSolo podrá realizar Emisión de Listas de Giros."
		return (-2)
	endif

    Call siaf:PRESfecha_hora
  	If ( Retval < 0 )
      	UNGETKEY RT_ESC
      	Return
    Endif
    
    Cds SELECT FROM DSC:post:TABPresu BECOMES DSC:post:CONPresu \
               WHERE (Fld:post:op_operator_id == fld:post:op_operator_id ) && \
                 	(FLD:post:fecha == FLD:common:system_date ) && \
                     (fld:post:PresNro == fld:post:PresNro)
                     
    Cds FINDFIRST DSC:post:CONPresu LOCK
    Let lib:err_retval = cdsretval
    If (lib:err_retval == 0) THEN
        Cds EXTRACT DSC:post:CONPresu post:nisDep_CM post:bloqueo_CM
    End If
    
   //Validaciones
	if (post:estado_presu != 4) then
		IF (post:cli_tipo != CLIMED)
		    errmsg common:errmsg_list,"El cliente no está habilitado para realizar la Importación de Lista de Giros."
		    return (-2)
	    END IF
		IF (post:bloqueo_CM == "S") THEN
            errmsg common:errmsg_list,"El cliente está bloqueado. No podrá realizar la Importación de Lista de Giros."
            return (-2)
		END IF
		
	    IF (post:nisDep_CM != common:sucursal_activa) THEN
		    errmsg common:errmsg_list,"El cliente no pertenece a la sucursal. No podrá realizar la Importación de Lista de Giros."
		    return (-2)
	    END IF
		if (post:consulta_excepcionCM == "S")
		    errmsg common:errmsg_list,"Ud.se encuentra en una venta por excepción.\nNo podrá realizar la Importación de Lista de Giros."
		    return (-2)
		endif 
		if (post:consulta_ordenCM == "S")
		    errmsg common:errmsg_list,"Ud.se encuentra en una venta por Orden de Compra.\nNo podrá realizar la Importación de Lista de Giros."
		    return (-2)
		endif 		  
	    IF (post:cli_tipo != CLIMED)
		    errmsg common:errmsg_list,"El cliente no está habilitado para realizar una Importación de Lista de Giros."
		    return (-2)
	    END IF
	    
	    IF (post:ExcepSinLinea) THEN
		    errmsg common:errmsg_list,"La sesión se ha iniciado fuera de línea.\nPara realizar una Importación deberá iniciar la sesión nuevamente."
		    return (-2)
	    END IF
	    	    
	    IF (post:estado_presu == 2) THEN
		    CALL post:CDSBusca_TxPresuDet
		    if (retval < 0) then
		    	errmsg common:errmsg_list,"La transacción de Importacion debe ser la única del Presupuesto."
		    	return (-2)
		    end if
		END IF	
  	end if

	clearfield post:PreDForFis

    CLEARFIELD TipoDocEmisLG_FCuit
    CLEARFIELD NroDocEmisLG_FCuit
    call MISClistas_giros_clr
    call CDSPresuLoadLG
    IF (retval != -1) THEN
        call CDSCliMedLoadLG
        call CDSCliMedSucuLoadLG
        call FVALProvEmisGm
    END IF
    call MISClistas_giros_ref
    
    IF (giros:TipoDocEmisGm_fld == "80" || giros:TipoDocEmisGm_fld == "99" || \
        giros:TipoDocEmisGm_fld == "86" || giros:TipoDocEmisGm_fld == "87") THEN
        //80(CUIT),86 (CUIL),87(CDI),99(SIN IDENTIFICAT/VENTA GLOB.DIA) 
        NroDocEmisGm_fld   = substr(post:CloCuit,2,8)
        CuitEmisGm = post:CloCuit
    ELSE
        //Tipo de documento sin formato de CUIT
        NroDocEmisGm_fld = post:CloCuit * 1
        CLEARFIELD CuitEmisGm
    END IF
    
    IF (post:es_juridica.NUMCHARS == 0) THEN
        post:es_juridica = "S" // POR DEFAULT
        setflag giros:pers_jur_flag,persona_juridica
    ELSE
        IF (post:es_juridica  == "S") THEN
            setflag giros:pers_jur_flag,persona_juridica
        ELSE
            resetflag giros:pers_jur_flag,persona_juridica
        END IF
    END IF

    //cgw: AUT-1194 - Asigna Codigo de Pais AR (Argentina).
    //Se mostrara como codigo "AR" extrayendola de la tabla Paises.
	CALL giros:CDSbusca_primer_pais(CodPaisResidEmisGm,PaisResidEmisGm)
	IF (giros:CodPaisResidEmisGm.numchars == 0) THEN
        //Si no existe en la parametria, sers fijado con codigo "AR".
        //La descripción se mostrara en blanco, como para que se note que no existe en la parametria
        //y pueda así ser cargado en la misma.
		giros:CodPaisResidEmisGm = "AR"
		CLEARFIELD giros:PaisResidEmisGm
	END IF
	REFRESH giros:CodPaisResidEmisGm
	REFRESH giros:PaisResidEmisGm
END SUB

/*******/
