/****o* Pendientes de agrupación/OFB:giros:RCVEcons_comision
* NOMBRE
*   OFB:giros:RCVEcons_comision
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "girosrcve.h"

SUB giros:RCVEcons_comision

	clearfield giros:clave_hdr_giros
	call  RCVEhdr_giros
	if (hcomm:tran_status == HOST_ACCEPTED ) then 
		call  RCVEgral_giros
	   	if (retval < 0) THEN
//			hcomm:tran_status = MEMO
       		return -2
		else
			siaf:importe2 = giros:Comision_comm
			giros:Comision_fld = siaf:importe2 / 100
			refresh giros:Comision_fld
	
			siaf:importe2 = giros:cargo_adic_comm
			giros:CargosAdic_fld = siaf:importe2 / 100
			refresh giros:CargosAdic_fld

			

			
			
			//Obtengo alicuota de IVA del envio
			//CALL xxx
					
				    CDS SELECT FROM DSC:post:adt_serv_table BECOMES DSC:post:adt_serv_context WHERE \
				    	post:adt_serv_serv == "24101"
    				CDS FINDFIRST DSC:post:adt_serv_context NOLOCK
    				LET lib:err_retval = CDSRETVAL
    				IF (lib:err_retval < 0) THEN
      					MSGBOX "No se pudo obtener el Alicuota de IVA. Se mostrará el importe a cobrar sin el IVA de la Comision incluido",0x00,"ADVERTENCIA"
    				ELSE
    					CDS EXTRACT DSC:post:adt_serv_context post:adt_serv_aliciva
						//Calculo Iva de la comision
						giros:comision_iva = ( giros:Comision_fld * post:adt_serv_aliciva ) / 100
      					refresh comision_iva
      				END IF

			
			giros:ImporteTotComi_fld = giros:ImporteEmis_fld + giros:Comision_fld + giros:CargosAdic_fld + giros:comision_iva
		 
			refresh giros:ImporteTotComi_fld
		
	
	   	end if 
	else
//		hcomm:tran_status = MEMO
	end if  
	
END SUB

/*******/
