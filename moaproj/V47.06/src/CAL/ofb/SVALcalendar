/****o* Pendientes de agrupación/OFB:cal:SVALcalendar
* NOMBRE
*   OFB:cal:SVALcalendar
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "calofb.h"

	SUB cal:SVALcalendar
	IF (cal:cal_exit == "Y") THEN
                INIT 33,0
		return 
	ENDIF
	IF (cal_out.NUMCHARS > 0)
		LET days_tmp = cal_out - days_tmp
		IF (days_tmp != 0)
			CALL  CSR:date_add cal:work_date_tmp days_tmp "d" cal:work_date_tmp
		END IF
	END IF
	IF (cal_in.NUMCHARS > 0)
            FPRINT common:csr_string "%s" cal_in
	    SELECT (cal:cal68)
		CASE "D"
		    CALL  CSR:date_add cal:work_date_tmp common:csr_string "d" cal:work_date_tmp
		BREAK
		CASE "W"
                    let cal_in = 7 * cal_in
                    FPRINT common:csr_string "%s" cal_in
		    CALL  CSR:date_add cal:work_date_tmp common:csr_string "d" cal:work_date_tmp
		BREAK
		CASE "M"
		    CALL  CSR:date_add cal:work_date_tmp common:csr_string "M" cal:work_date_tmp
		BREAK
		CASE "Y"
		    CALL  CSR:date_add cal:work_date_tmp common:csr_string "Y" cal:work_date_tmp
		BREAK
	    END SELECT
	END IF
	CALL  CSR:proc_list F_CLEAR LST:fld_list
	CALL  CSR:proc_list F_REFRESH LST:fld_list
	CALL  OFB:setup_cal
        RETURN (-1)
	END SUB

/*******/
