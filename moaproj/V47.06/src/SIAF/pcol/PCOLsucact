/****o* Pendientes de agrupación/OFB:siaf:PCOLsucact
* NOMBRE
*   OFB:siaf:PCOLsucact
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafpcol.h"

SUB siaf:PCOLsucact
   IF (admin:limpiopantalla == 0) THEN
        SELECT (drv:screen_active)
            CASE 1
            /*Desactiva el Highlit de los campos antes de mostrarlos en pantalla*/
            CALL CSR:proc_list(F_NOHIGHLITE,LST:admin:LISTbr_flds)
            CALL CSR:proc_list(F_REFRESH,LST:admin:LISTbr_flds)
            IF (op:Flag_temp == 1)//la transaccion se esta ejecutando desde modif. pendientes
                CALL post:CDSsel_temporal
                	IF (RETVAL == 0) THEN
                		IF (TESTFLAG(op:adt_temp_flag,update)) THEN
                    		CALL CSR:proc_list(F_REFRESH,LST:admin:LISTbr_flds)
                   			CALL ABMadt_motiv_refresh
                    		CALL post:MISCset_sidebar(1,0,0,0)
                    		CALL CSR:proc_list(F_PROTECT,LST:admin:LISTbr_flds)
                    		UNPROTFIELD admin:adt_br_branch                    
                    		PROTFIELD post:adt_sucur_hs_dump
                    		PROTFIELD post:adt_sucur_dia_dump
                    		PROTFIELD adt_sucur_cierre_dia 
                    		PROTFIELD admin:adt_br_tipo /*giros */
                    		/*Carina- no ejecutan las Fval cuando los datos se extraen de la tabla temporal*/
		            		CALL CSR:proc_list(F_SETVALDONE,LST:admin:LISTbr_flds)
		            		/*Carina- llama a una rutina que resalta los campos modificados*/
		            		CALL post:MISCResaltarCampos ("sucur_act")
                    		CALL CSR:proc_list(F_REFRESH,LST:admin:LISTbr_flds)
                		END IF
                	END IF
            	ELSE
                	CALL CDSadt_sucur_load
                		IF (RETVAL >= 0) THEN
							admin:adt_br_branch = adt_sucur_codigo
                    		CALL admin:CDSadt_br_load
                    	IF (RETVAL < 0) THEN
                        	MSGBOX "SUCURSAL INEXISTENTE",0x00000000,"Error"
                        RETURN (-2)
                    	END IF
                    CALL post:MISCset_sidebar(1,0,0,0)
                    CALL CSR:proc_list(F_REFRESH,LST:admin:LISTbr_flds)
                    REFRESH adt_sucur_codigo
                    REFRESH post:adt_sucur_hs_dump
                    REFRESH post:adt_sucur_dia_dump
                    REFRESH adt_sucur_cierre_dia                                         
                    CALL CSR:proc_list(F_PROTECT,LST:admin:LISTbr_flds)
                    UNPROTFIELD admin:adt_br_branch
                    PROTFIELD post:adt_sucur_hs_dump
                    PROTFIELD post:adt_sucur_dia_dump
                    PROTFIELD adt_sucur_cierre_dia
                    PROTFIELD admin:adt_br_tipo /*giros */
                ELSE
                    MSGBOX "NO SE PUEDE OBTENER LA SUCURSAL ACTIVA",0x00000000,"Error"
                    UNGETKEY RT_ESC
                END IF
            END IF
            BREAK
            CASE 2
            PROTFIELD admin:adt_br_branch
            BREAK
        END SELECT
    END IF
    admin:limpiopantalla = 1
    SELECT (drv:screen_active)
        CASE 1
            UNPROTFIELD admin:adt_br_branch
        BREAK
        CASE 2
            PROTFIELD admin:adt_br_branch
        BREAK
    END SELECT
END SUB

/*******/
