/****o* Pendientes de agrupación/OFB:siaf:PDOCfile_print_gral
* NOMBRE
*   OFB:siaf:PDOCfile_print_gral
* DESCRIPCION
*	La finalidad de este OFB es la de leer uno a uno los registros de 
*	un archivo ASCII y establecer los parámetros establecidos como Metacaracteres
*	en cada línea leida.                                    
*	De esta manera podrá manejarse todo lo necesario de un listado desde su orientación
*   número de líneas, escala, tipo de fuentes, tamaño del fuente y estilos.  *** MDG
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafPDOC.h"

SUB siaf:PDOCfile_print_gral
local LINEAS like siaf:dif /* cuenta las lineas que se van imprimendo*/
local cant_pag like siaf:i
local seteo_T_Pie like siaf:i
local T_Pie like siaf:i
local L_pie like siaf:i
local L_imprimible like siaf:i
LOCAL INDICE_INF LIKE post:cantidad
LOCAL INDICE LIKE post:cantidad
local cant_lineas like siaf:i

	let LINEAS = 1
	cant_lineas = 62
	cant_pag = 1
	T_Pie = 0
	L_pie = 0
	L_imprimible = 0
	seteo_T_Pie = 1
  ;Establezco el tamaño del fuente.
  ;gpb:el campo post:txS debe tener el valor establecido del prt textsize
  prt textsize *100
  post:txS = "100"
  ;Establezco el nombre del fuente.
	PRT TEXTFONTNAME "Courier New"
	PRT MARGIN *8419,*5953,-,-,-,-
	prt language 0

	do
		clearfield common:csr_string_aux
		call csr:file_getline(7,common:csr_string_aux)
		if (retval < 0) then
			if (T_Pie > 0) then
				select (T_Pie)
					case 1
						fprint common:csr_string_aux "Total de Páginas del listado : %s", siaf:indica_calcu
						if (L_imprimible > common:csr_string_aux.numchars) then
							L_pie = L_imprimible - common:csr_string_aux.numchars
							fprint common:csr_string_aux "%*.*s%s",L_pie,L_pie," ", common:csr_string_aux
						end if
						break
					case 2
						fprint common:csr_string_aux "Página %s de %-s", cant_pag, siaf:indica_calcu
						if (L_imprimible > common:csr_string_aux.numchars) then
							L_pie = L_imprimible - common:csr_string_aux.numchars
							fprint common:csr_string_aux "%*.*s%s",L_pie,L_pie," ", common:csr_string_aux
						end if
				end select
				
				while (LINEAS < cant_lineas)
					prt newline
					let LINEAS = LINEAS + 1
				end while
				prt print common:csr_string_aux
			end if
			break
		end if
		if (seteo_T_Pie) then
		   ;Establece tipo de pie
			call post:MISCveoTipoPieDePag(common:csr_string_aux,T_Pie,L_imprimible)
			;Establece la orientación, la escala y el corte de líneas por página
			call post:MISCorientScalCantLn(common:csr_string_aux,cant_lineas)
			;Capturo el tamaño del fuente
			call post:MISCGetFontSize(common:csr_string_aux)

			seteo_T_Pie = 0
		end if
		if (LINEAS == cant_lineas && T_Pie) then 
			;Salto de página
			;Por aca pasan los listados que tienen metainformación de estilos.
			select (T_Pie)
				case 2
					prt newline
					prt newline
					fprint common:csr_string_aux "Página %s de %-s", cant_pag, siaf:indica_calcu
					if (L_imprimible > common:csr_string_aux.numchars) then
						L_pie = L_imprimible - common:csr_string_aux.numchars
						fprint common:csr_string_aux "%*.*s%s",L_pie,L_pie," ", common:csr_string_aux
					end if
					prt print common:csr_string_aux
					clearfield common:csr_string_aux
			end select
			PRT FORMFEED
			PRT FLUSH
			let LINEAS = 1
			cant_pag = cant_pag + 1 
		end if
		
impresion:
		;Si se quiere hacer un salto de página entre dos listados que se diferentes
		;pero que se imprimen contiguamente, se puede insertar al final del primero
		;la línea "<FORMFEED>"
		CALL csr:str_search (common:csr_string_aux,"<FORMFEED>",INDICE,INDICE_INF)
		if (retval == 0) then
			while (LINEAS < (cant_lineas - 1))
				prt newline
				let LINEAS = LINEAS + 1
			end while
			prt newline
		else
			prt newline
			prt positionabs -,3
			if (T_Pie) then
				call post:MISCprintConFormato(common:csr_string_aux)
			end if
       	end if
       	
        clearfield common:csr_string_aux
		prt carriagereturn
		let LINEAS = LINEAS + 1
	loop

	prt flush

END SUB

/*******/
