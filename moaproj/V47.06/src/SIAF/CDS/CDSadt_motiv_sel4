/****o* Pendientes de agrupación/OFB:siaf:CDSadt_motiv_sel4
* NOMBRE
*   OFB:siaf:CDSadt_motiv_sel4
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafcds.h"

SUB siaf:CDSadt_motiv_sel4
	SELECT (jscn_cod[nrow][0])
          move currentfield to adt_mot_codigo_tmp
	case 640
	case 642
		let adt_mot_modulo = 1
		let adt_mot_submodulo = 61
		break
	case 650
	case 652
		let adt_mot_modulo = 1
		let adt_mot_submodulo = 61
		break
	case 840
	case 842
		let adt_mot_modulo = 1
		let adt_mot_submodulo = 64
		break
	case 850
	case 852
		let adt_mot_modulo = 1
		let adt_mot_submodulo = 64
		break
	case 2800
	case 2810
		let adt_mot_modulo    =  2
		let adt_mot_submodulo = 91
		break
	case 3800
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 66
		break
	case 6860
	case 6864
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 58
		break
	case 6600
	case 6800
	case 6604
	case 6804
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 62
		break
	case 6640
	case 6644
	case 6840
	case 6844
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 59
		break
	case 6620
	case 6630
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 67
		break
	case 6650
	case 6654
	case 6850
	case 6854
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 77
		break
	case 6610
	case 6614
	case 6810
	case 6814
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 63
	break
	case 7700
	case 7704
	case 7900
	case 7904
	case 6820
	case 6824
		let adt_mot_modulo    =  1
		let adt_mot_submodulo = 68
	break
   END SELECT
etiqueta:
  move currentfield to adt_mot_codigo_tmp
  if (jscn_moneda.numchars != 0 )
     if (tlr:jscn_branch.numchars != 0)
      cds select from DSC:adt_motiv_table becomes DSC:adt_motiv_context  \
          where (adt_mot_modulo    == fld:adt_mot_modulo)    && \
         	(adt_mot_submodulo == fld:adt_mot_submodulo) && \
                (adt_mot_moneda    == fld:jscn_moneda )      && \
	        ((adt_mot_sucursal == fld:tlr:jscn_branch    || \
	        adt_mot_sucursal == 999 ))
     else
      Cds select from DSC:adt_motiv_table becomes DSC:adt_motiv_context  \
          where (adt_mot_modulo    == fld:adt_mot_modulo)    && \
		(adt_mot_submodulo == fld:adt_mot_submodulo) && \
                (adt_mot_moneda    == fld:jscn_moneda )
     END IF
   else
     if (tlr:jscn_branch.numchars != 0)
      cds select from DSC:adt_motiv_table becomes DSC:adt_motiv_context  \
          where (adt_mot_modulo    == fld:adt_mot_modulo)    && \
         	(adt_mot_submodulo == fld:adt_mot_submodulo) && \
	        ((adt_mot_sucursal == fld:tlr:jscn_branch    || \
	        adt_mot_sucursal == 999 ))
     else
      cds select from DSC:adt_motiv_table becomes DSC:adt_motiv_context  \
          where (adt_mot_modulo    == fld:adt_mot_modulo)    && \
         	(adt_mot_submodulo == fld:adt_mot_submodulo)
     END IF
   END IF
  cds findfirst DSC:adt_motiv_context lock
  let lib:err_retval = CDSRETVAL
  call lib:MISCcds_find_err
  if (RETVAL != 0) then
      return (-2)
  END IF
  let siaf:last_key = LASTKEY
  cds multidisplay DSC:adt_motiv_context LISTadt_motiv
  if (CDSretval == 0x01FD) then
  	goto etiqueta
  END IF
  let lib:err_retval =  CDSretval
  if (lib:err_retval == 0) then
 	move adt_mot_codigo_tmp to currentfield
	refresh currentfield
	return (-1)
  END IF
  let lib:err_retval = CDSretval
  call lib:MISCcds_find_err
  if (retval != 0) then
	return (-1)
  END IF
  cds extract DSC:adt_motiv_context all
  cds unlock  DSC:adt_motiv_context
  move adt_mot_codigo to currentfield
  move adt_mot_desc to jscn_desc_mot[nrow][0]
  if (lastkey == RT_ENTERFIELD)	/* al clickear con el mouse */
	let lastkey = siaf:last_key
  endif
  return (0)
END SUB

/*******/
