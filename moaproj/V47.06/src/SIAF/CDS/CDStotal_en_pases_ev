/****o* Pendientes de agrupación/OFB:siaf:CDStotal_en_pases_ev
* NOMBRE
*   OFB:siaf:CDStotal_en_pases_ev
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafCDS.h"

SUB siaf:CDStotal_en_pases_ev(es_tesoro,oper,ev,total_pases)
    local ev_aux like tes:espv_cod
    local op_orig like tes:adt_espv_op_orig
    local es_tes like tes:adt_espv_pase_tesoro

    ev_aux = ev
    es_tes = es_tesoro
    op_orig = oper

    CDS SELECT from DSC:tes:TesEspVMov_tbl becomes DSC:tes:TesEspVMov_ctx \
    where tes:adt_espv_suc == op:op_branch_id && \
    tes:adt_espv_op_orig == oper && \
    tes:adt_espv_cod == ev_aux && \
    tes:adt_espv_subcod != TOTAL_TESO && \
    tes:adt_espv_pase_tesoro == es_tes && \
    (tes:adt_espv_marca_ing == " " || tes:adt_espv_marca_ing == "E")
    CDS FINDFIRST DSC:tes:TesEspVMov_ctx nolock
    IF (CDSRETVAL == 0) THEN
      CDS AGGREGATE DSC:tes:TesEspVMov_ctx SUM tes:adt_espv_importe
      CDS EXTRACT DSC:tes:TesEspVMov_ctx tes:adt_espv_importe into total_pases
    else
      let total_pases = 0
    END IF
    ;cds unlock dsc:tes:TesEspVMov_context
    CDS ENDSELECT DSC:tes:TesEspVMov_ctx
END SUB

/*******/
