/****o* Pendientes de agrupación/OFB:siaf:MISClst_constotct_mp
* NOMBRE
*   OFB:siaf:MISClst_constotct_mp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISClst_constotct_mp    
	LOCAL loc_total LIKE siaf:importe
	LOCAL ciclo     LIKE siaf:i  
	LOCAL cont like siaf:i    

	CALL tes:MISCwrite_file1(1,"MEDIOS DE PAGO")
	CALL tes:MISCwrite_file1(1," ")
	ciclo     = 1
	loc_total = 0
    
	DO
		IF (ciclo > 2) THEN
			BREAK
		END IF
                                        
		IF ((62 - siaf:lineas_cl) < 4) THEN
			siaf:lineas_cl = 92
			CALL tes:MISCwrite_file1(1," ")
		END IF
              
		CALL MISCsubenc_consolct(ciclo, 1)
		
		CDS SELECT FROM DSC:post:MEDIOS_TAB BECOMES DSC:post:MEDIOS_CTX     
		CDS FINDFIRST DSC:post:MEDIOS_CTX LOCK
		lib:err_retval = CDSRETVAL     
		       
    WHILE (lib:err_retval >= 0)
			CDS EXTRACT DSC:post:MEDIOS_CTX ALL
			SELECT (ciclo)
				CASE 1                    
					FPRINT common:csr_string, "%-2s-%-30.30s   %17.17e     %17.17e", \
					post:adt_mp_cod,post:adt_mp_desc,aux4imp_vec[post:adt_mp_cod],aux5imp_vec[post:adt_mp_cod]
					loc_total = loc_total + aux5imp_vec[post:adt_mp_cod]
					IF (aux4imp_vec[post:adt_mp_cod] != 0 || aux5imp_vec[post:adt_mp_cod] != 0) THEN
						CALL tes:MISCwrite_file1(1,fld:common:csr_string)
					END IF
				BREAK
				CASE 2                    
					FPRINT common:csr_string, "%-2s-%-30.30s   %17.17e     %17.17e", \
					post:adt_mp_cod,post:adt_mp_desc,aux3imp_vec[post:adt_mp_cod],aux6imp_vec[post:adt_mp_cod]
					loc_total = loc_total + aux6imp_vec[post:adt_mp_cod]
					IF (aux3imp_vec[post:adt_mp_cod] != 0 || aux6imp_vec[post:adt_mp_cod] != 0) THEN
						CALL tes:MISCwrite_file1(1,fld:common:csr_string)
					END IF
				BREAK
			END SELECT
             
			CDS FINDNEXT DSC:post:MEDIOS_CTX LOCK
			lib:err_retval = CDSRETVAL
		END WHILE

    CDS UNLOCK DSC:post:MEDIOS_CTX
    CDS ENDSELECT DSC:post:MEDIOS_CTX

   	CALL tes:MISCwrite_file1(1," ")
   	
		IF (siaf:pantalla_impreso != "P") THEN
			//Inicio gpb:ART-706
			/*
		  FPRINT common:csr_string,"<st>1</st>TOTAL                                               %17.17e",loc_total
			*/
;			FPRINT common:csr_string,"<txS>105</txS><st>1</st>TOTAL                                                     %17.17e",loc_total
			FPRINT common:csr_string,"<txS>85</txS><st>1</st>TOTAL                                                     %17.17e",loc_total
			//Fin gpb:ART-706
		ELSE
			FPRINT common:csr_string,"TOTAL                                                     %17.17e",loc_total
		END IF
		
		CALL tes:MISCwrite_file1(1,fld:common:csr_string)
		loc_total = 0
		ciclo = ciclo + 1                
  LOOP
  
	cont = 0
	IF (siaf:pantalla_impreso !=  "P") THEN
		WHILE (siaf:lineas_cl < 61 && cont < 3)
			CALL tes:MISCwrite_file1(1," ")
			cont = cont + 1
		END WHILE
	ELSE
		WHILE (cont < 3)
			CALL tes:MISCwrite_file1(1," ")
			cont = cont + 1
		END WHILE
	END IF      
END SUB

/*******/
