/****o* Pendientes de agrupación/OFB:siaf:MISCgral_reversada
* NOMBRE
*   OFB:siaf:MISCgral_reversada
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

sub siaf:MISCgral_reversada
/* Esta rutina verifica si la transaccion general fue reversada, en caso
   afirmativo, localiza el reverso y modifica los registros a partir del
   que estoy parado (siaf:cant) y hasta el final, como rechazados.
   Tambien marco como rechazados los de la directa. */

/* inicializo un contexto auxiliar del journal para busqueda del reverso */
if (tlr:jnl_sequence_corr.numchars + 0 == 0)
    return -1
else
fprint secuencia_dir,"%.*d",tlr:jnl_sequence_corr.length, \
        tlr:jnl_sequence_corr
/* En secuencia_dir tengo el numero de secuencia con el cual localizar la
   reversa, si es que existe */
cds select from DSC:tlr:TABjnl becomes DSC:tlr:jnl_context where\
       tlr:jnl_sequence == secuencia_dir
if (retval < 0)
    /* Si no la encontre es que la general no esta reversada, devuelvo
       error */
    return -1
endif
/* Encontre la reversa --> marco a partir de donde estoy los registros
   que quedan como rechazados */
cds findfirst dsc:tlr:jnl_context lock
let siaf:i = 0
let siaf:idx = cant
do
 if ( siaf:idx > 14)
    break
 endif
 CDS APPEND dsc:tlr:jnl_context i AS fld:siaf:aceptado[idx]
 idx = idx + 1
loop
cds update dsc:tlr:jnl_context lock
cds endselect dsc:tlr:jnl_context
/* Marco los registros que quedan de la Directa como rechazada */
siaf:idx = siaf:cant
do
    if (siaf:idx == 15) then
        break
    endif
    siaf:aceptado[siaf:idx] = 0
    siaf:idx = siaf:idx + 1
loop
endif
end sub

/*******/
