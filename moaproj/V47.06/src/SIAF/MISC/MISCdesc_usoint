/****o* Pendientes de agrupación/OFB:siaf:MISCdesc_usoint
* NOMBRE
*   OFB:siaf:MISCdesc_usoint
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISCdesc_usoint(idx_tran)
	/* La mayoría de las transacciones de uso interno se pueden obtener de la transac
	pero algunas que tienen un manejo especial (Doble Totalizador, ej GIROS) debe
	cargarse a mono */
	
	common:csr_string = siaf:cod_tran_vec2[idx_tran]
	call csr:PickOp 3 dsc:post:pic_medios common:csr_string
	if (retval > 0) then
		select (idx_tran)
			case 6
			    FPRINT desc_vec2[idx_tran],"%-15.15s","PERCEPCIONES"
			    break
            case 17
                //cgw:se diferencia descripcion entre dif.por redondeo y dif.de caja positiva.
                if (tes:es_redondeo == "S" && total_usoint_vec[17] <= common:emp_limite) then
			        FPRINT desc_vec2[idx_tran],"%-15.15s","DIF.REDOND.POS"
			    else
			    	siaf:adt_tran_tot_desc = substr(common:csr_string,6,15)
			        FPRINT desc_vec2[idx_tran],"%-15.15s",siaf:adt_tran_tot_desc
			    end if	    
			    break
            case 18
                //cgw:se diferencia descripcion entre dif.por redondeo y dif.de caja negativa.
                if (tes:es_redondeo == "S" && total_usoint_vec[18] <= common:emp_limite) then
			        FPRINT desc_vec2[idx_tran],"%-15.15s","DIF.REDOND.NEG"
			    else
			    	siaf:adt_tran_tot_desc = substr(common:csr_string,6,15)
			        FPRINT desc_vec2[idx_tran],"%-15.15s",siaf:adt_tran_tot_desc
			    end if	    
			    break
			case 32
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE GP"
			    break
			case 34
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE GPO"
			    break
			case 36
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE GT"
			    break
			case 38
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE GTO"
			    break
			case 44
			    FPRINT desc_vec2[idx_tran],"%-15.15s","IMP.REEMB.GT"
			    break
			case 46
			    FPRINT desc_vec2[idx_tran],"%-15.15s","IMP.REEMB.GTO"
			    break
			case 48
			    FPRINT desc_vec2[idx_tran],"%-15.15s","IMP.REEMB.GP"
			    break
			case 50
			    FPRINT desc_vec2[idx_tran],"%-15.15s","IMP REEM GPO"
			    break
			case 64
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE TN"
			    break
			case 67
			    FPRINT desc_vec2[idx_tran],"%-15.15s","IMP.REEMB TN"
			    break
			case 76
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO DE TI"
			    break			    
			case 78
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERVICIO G.CONT"
			    break
			case 89
			    FPRINT desc_vec2[idx_tran],"%-15.15s","POLIZA (VIR)"
			    break
			case 90
			    FPRINT desc_vec2[idx_tran],"%-15.15s","ADUANERO (VIR)"
			    break
			case 91
			    FPRINT desc_vec2[idx_tran],"%-15.15s","ENTREGA (VIR)"
			    break
			case 92
			    FPRINT desc_vec2[idx_tran],"%-15.15s","POLIZA INTER"
			    break
			case 93
			    FPRINT desc_vec2[idx_tran],"%-15.15s","TASA PRES.AD"
			    break
			case 94
			    FPRINT desc_vec2[idx_tran] "%-15.15s","TASA GES.ENT"
			    break			
			case 95
			    FPRINT desc_vec2[idx_tran] "%-15.15s","SERV DE GDCH"
			    break
			case 122
			    FPRINT desc_vec2[idx_tran] "%-15.15s","TELEG.S/CARGO"
			    break
			case 155
			    FPRINT desc_vec2[idx_tran],"%-15.15s","SERV HOLD TI"
			    break	
			case else
				siaf:adt_tran_tot_desc = substr(common:csr_string,6,15)
			    FPRINT desc_vec2[idx_tran],"%-15.15s",siaf:adt_tran_tot_desc
			    break
		end select
		siaf:adt_tran_afec_efvo = substr (common:csr_string,27,1)
		siaf:adt_tran_repinv = substr (common:csr_string,29,1)
		siaf:adt_tran_codigo = substr(common:csr_string,0,5)
		siaf:cod_tran_vec2[idx_tran] = siaf:adt_tran_codigo
		 
		if (siaf:adt_tran_afec_efvo == "+") then
			if (siaf:adt_tran_repinv == "S") then
				siaf:opera_vect2[idx_tran] = ENT_INVERSA
			else
				siaf:opera_vect2[idx_tran] = ENTRADA
			end if
		else
			if (siaf:adt_tran_afec_efvo == "-") then
				if (siaf:adt_tran_repinv == "S") then
					siaf:opera_vect2[idx_tran] = SAL_INVERSA
				else
					siaf:opera_vect2[idx_tran] = SALIDA
				end if
			end if
		end if	
	end if		    

END SUB

/*******/
