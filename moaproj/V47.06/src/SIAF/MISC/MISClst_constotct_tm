/****o* Pendientes de agrupación/OFB:siaf:MISClst_constotct_tm
* NOMBRE
*   OFB:siaf:MISClst_constotct_tm
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISClst_constotct_tm
    ;if (siaf:pantalla_impreso ==  "I") then
    ;    CALL MISCconstotct_encab
    ;end if
    
    FPRINT common:csr_string,"TOTAL POR MONEDA"
    call tes:MISCwrite_file1(1,fld:common:csr_string)
    common:csr_string = " "
    call tes:MISCwrite_file1(1,fld:common:csr_string)
    

    IF ((62 - siaf:lineas_cl) < 4) THEN
      siaf:lineas_cl = 92
      common:csr_string = "   "
      call tes:MISCwrite_file1(1,fld:common:csr_string)
    END IF
          
    CALL MISCsubenc_consolct(0,3)
    
        
    CDS SELECT FROM DSC:post:Monedas_tbl BECOMES DSC:post:Monedas_ctx
    CDS FINDFIRST DSC:post:Monedas_ctx LOCK
    lib:err_retval = CDSRETVAL            
    While (lib:err_retval >= 0)
        CDS EXTRACT DSC:post:Monedas_ctx ALL
                        
        FPRINT common:csr_string, "%-15.15s %11.11e %16.16e  %11.11e %16.16e  %11.11e %16.16e", \
        post:adt_mon_desc,taux6imp_vec[post:adt_mon_cod],taux4imp_vec[post:adt_mon_cod],taux2imp_vec[post:adt_mon_cod],\
        taux3imp_vec[post:adt_mon_cod],taux1imp_vec[post:adt_mon_cod],taux5imp_vec[post:adt_mon_cod]
        call tes:MISCwrite_file1(1,fld:common:csr_string)
        
        CDS FINDNEXT DSC:post:Monedas_ctx LOCK
        lib:err_retval = CDSRETVAL
    EndWhile
    CDS UNLOCK DSC:post:Monedas_ctx
    CDS ENDSELECT DSC:post:Monedas_ctx


    if (siaf:pantalla_impreso ==  "I") then   	          
        while (siaf:lineas_cl < 59) 
              let common:csr_string = "    "
              call tes:MISCwrite_file1(1,fld:common:csr_string)
        end while              
        fprint common:csr_string "                                                     Cantidad de Hojas : %s" siaf:indica_calcu
        call tes:MISCwrite_file1(1,fld:common:csr_string)
    else
       common:csr_string = "         "
       call tes:MISCwrite_file1(1,fld:common:csr_string)
    End if          
END SUB

/*******/
