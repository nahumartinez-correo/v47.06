/****o* Pendientes de agrupación/OFB:siaf:MISCMotivos_Hab
* NOMBRE
*   OFB:siaf:MISCMotivos_Hab
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISCMotivos_Hab(codigo)
    LOCAL loc_retval LIKE lib:err_retval
    LOCAL l_cli_tipo LIKE post:cli_tipo
    /*MFM - Genero un picklist dinámico con los Motivos Habilitados*/

    /*Hago el select de la tabla de Motivos*/
    select (post:cli_tipo)
    /*
    case 4
    	CDS SELECT FROM DSC:adt_motiv_table BECOMES DSC:adt_motiv_context WHERE  \
	    (adt_mot_grupoiva == FLD:post:PresGrupoIva || adt_mot_grupoiva == "") && \
	    adt_mot_habilitado == "S" && \
	    adt_mot_submodulo == codigo && \
	    adt_mot_cliente == post:cli_tipo
		break
	*/
	/* Se pueden mezclar motivos del tipo del cliente y de tipo 0 */
	/* Ejemplo: 0 y 2 o 0 y 4*/

	case else
    	CDS SELECT FROM DSC:adt_motiv_table BECOMES DSC:adt_motiv_context WHERE  \
	    (adt_mot_grupoiva == FLD:post:PresGrupoIva || adt_mot_grupoiva == "") && \
	    adt_mot_habilitado == "S" && \
	    adt_mot_submodulo == codigo

	    //&& \
		//siaf:adt_mot_cliente[post:cli_tipo] == "S"
		//(adt_mot_cliente == 0 || adt_mot_cliente == post:cli_tipo)
		break
	end select

    CDS FINDFIRST DSC:adt_motiv_context LOCK

    lib:err_retval = CDSRETVAL
    IF (lib:err_retval == -801) THEN
        CDS UNLOCK DSC:siaf:adt_motiv_context
        CDS ENDSELECT DSC:siaf:adt_motiv_context
    END IF
    /*Creo el picklist*/
    CALL CSR:f_sanewpl("MOTIVOS HAB",PIC:siaf:PICMotivos_Hab,800,600)
    /*Cargo el picklist*/
    WHILE (lib:err_retval == 0)
        CDS EXTRACT DSC:siaf:adt_motiv_context ALL
        if (post:cli_tipo == 0) then
        	l_cli_tipo = 2
        else
        	l_cli_tipo = post:cli_tipo
        end if
        ;Veo si tiene restricciones *** MDG
		CALL post:MISCvalidaVentasRest("MOT", siaf:adt_mot_codigo, siaf:adt_mot_modulo, \
						siaf:adt_mot_submodulo, common:sucursal_activa, l_cli_tipo, "")
		lib:err_retval = RETVAL
        IF (lib:err_retval == 0) THEN
            FPRINT common:csr_string, "%-5.5e %-30.30e %-2.2e %-5.5e", \
            adt_mot_codigo,adt_mot_desc,adt_mot_modulo,adt_mot_submodulo
            CALL CSR:f_saaddpl("MOTIVOS HAB",common:csr_string)
        END IF

        CDS FINDNEXT DSC:siaf:adt_motiv_context LOCK
        lib:err_retval = CDSRETVAL
    END WHILE
END SUB

/*******/
