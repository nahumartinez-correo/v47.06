/****o* Pendientes de agrupación/OFB:siaf:MISClista_tots_aux
* NOMBRE
*   OFB:siaf:MISClista_tots_aux
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISClista_tots_aux(impresora)
    LOCAL ciclo         LIKE i
    LOCAL subtotal      LIKE aux_suma_monto
    LOCAL mone          LIKE cant        
    LOCAL loc_imp_total LIKE siaf:importe
    
    mone = 0
    siaf:indica_calcu = 0
    let i = 0
    
    if (siaf:pantalla_impreso ==  "I") then          	
       IF (impresora == "laser") THEN
          FLD:INDencab_lis = OFB:MISCtots_encabez
       ELSE
          FLD:INDencab_lis = OFB:MISCtots_encabe2
       END IF
    else
       CALL MISCtots_encabez
    End if

    if (desc_moneda_vec[mone].numchars != 0) then
       let desc_moneda = desc_moneda_vec[mone]

       let common:csr_string = "    "
       call MISCwrite_tot2
       /*      
       if (mone == 0) || (mone == 2) then
          FPRINT common:csr_string,"EFECTIVO INICIAL: %13.13e",suma_monto_vec[9]
       else
          FPRINT common:csr_string,"TOTAL INICIAL:    %13.13e",suma_monto_vec[9]
       endif          
       call MISCwrite_tot2
       */
       common:csr_string = "         "
       CALL MISCwrite_tot2
       ciclo = 1
       DO
          IF (ciclo > 3) THEN
             BREAK
          END IF
          common:csr_string = "---------------------------------------------------"
          CALL MISCwrite_tot2
          SELECT (ciclo)
                 CASE 1
       	            common:csr_string = "ENTRADAS           CANT.  PIEZAS      IMPORTE"
       		        BREAK
     	         CASE 2
       		        common:csr_string = "SALIDAS            CANT.  PIEZAS      IMPORTE"
       		        BREAK
     	         CASE 3
       		        common:csr_string = "NO AFECTA EFEC.    CANT.  PIEZAS      IMPORTE"
       		        BREAK
         END SELECT
         CALL MISCwrite_tot2
         common:csr_string = "---------------------------------------------------"
         CALL MISCwrite_tot2
         subtotal = 0
         cant = 0
         DO
     	    IF (cant > IDX_TOTAL) THEN
       	        BREAK
     	    END IF
     	    IF ((impresora == "ticketera") || (impresora == "")) THEN
       	        i = 0
     	    END IF
     	    IF  ((((ciclo == 1) && (opera_vect[cant] == "+"))  || \
     	          ((ciclo == 2) && (opera_vect[cant] == "-"))) || \
     	          ((ciclo == 3) && (opera_vect[cant] == "N"))) THEN
       	          IF (suma_cant_vec[cant] != 0) THEN
         	         IF ((suma_monto_vec[cant].NUMCHARS == 0) || (suma_monto_vec[cant] == 0.0)) THEN
           		        FPRINT common:csr_string,"%-17.17s  %3s    %4s           0,00", \
		                desc_vec[cant],suma_cant_vec[cant],suma_piezas_vec[cant]
         	         ELSE
           		        FPRINT common:csr_string,"%-17.17s  %3s    %4s  %13.13e", \
		                desc_vec[cant],suma_cant_vec[cant],suma_piezas_vec[cant],suma_monto_vec[cant]
           		        subtotal = subtotal + suma_monto_vec[cant]
         	         END IF
         	         CALL MISCwrite_tot2
       	         END IF
     	    END IF
     	    cant = cant + 1
         LOOP
         FPRINT common:csr_string,"TOTAL                           %13.13e",subtotal
         CALL MISCwrite_tot2
         common:csr_string = "         "
         CALL MISCwrite_tot2
         ciclo = ciclo + 1
      LOOP
       /* Aca debo asignar el efvo de cada moneda */
       /*
      if (mone == 0) || (mone == 2) then
          FPRINT common:csr_string,"EFECTIVO EN CAJA:               %13.13e",suma_monto_vec[0][mone]
      else
          FPRINT common:csr_string,"TOTAL:                          %13.13e",suma_monto_vec[0][mone]
      endif    	      	      	         	         	  
      CALL MISCwrite_tot2
      */
      common:csr_string = "         "
      CALL MISCwrite_tot2
      common:csr_string = "         "
      CALL MISCwrite_tot2
    endif
    
    CALL siaf:MISCaper_mp_op(OPERADOR_LIST)

    if (siaf:pantalla_impreso == "I") then   	          
        while (siaf:i < 59) 
              let common:csr_string = "    "
              call MISCwrite_tot2
        end while
        fprint common:csr_string "                                                     Cantidad de Hojas : %s" siaf:indica_calcu
        call MISCwrite_tot2
    else
       common:csr_string = "         "
       CALL MISCwrite_tot2
       common:csr_string = "         "
       CALL MISCwrite_tot2    
    End if
END SUB

/*******/
