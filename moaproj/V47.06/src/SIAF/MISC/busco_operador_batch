/****o* Pendientes de agrupación/OFB:siaf:busco_operador_batch
* NOMBRE
*   OFB:siaf:busco_operador_batch
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:busco_operador_batch

	/* Esta rutina busca el registro de totales del operador y obtiene un numero
   	de secuencia de la transaccion , luego actualiza el registro de totales
   	con el nuevo numero */

	let tlr:tots_branch   = tlr:jnl_branch
	let tlr:tots_operator = tlr:jnl_operator
	let tlr:tots_bus_date = tlr:jnl_bus_date

	cds select from DSC:tlr:TABtots becomes DSC:tlr:CONtots_write where \
        ((tlr:tots_branch == tlr:tots_branch) \
        && (tlr:tots_operator == tlr:tots_operator) \
        && (tlr:tots_bus_date == tlr:tots_bus_date))

    	if (cdsretval != 0)
        	return (-2) /* other error (no context) */
    	end if

    	cds findfirst DSC:tlr:CONtots_write lock
	if (cdsretval != 0 )
		return -2
	end if

    	cds extract DSC:tlr:CONtots_write tlr:tots_sequence
	if (cdsretval != 0 )
		return -2
	end if

    	fprint siaf:secuencia_aux,"%.*d",tlr:jnl_sequence.length, \
        tlr:jnl_sequence

   	let siaf:secuencia_dir = tlr:tots_sequence + 1
	let tlr:sequence = tlr:tots_sequence + 1

    	cds append DSC:tlr:CONtots_write \
    		siaf:secuencia_dir AS tlr:tots_sequence

    	cds update DSC:tlr:CONtots_write lock
	if (cdsretval != 0 )
		return -2
	end if

END SUB

/*******/
