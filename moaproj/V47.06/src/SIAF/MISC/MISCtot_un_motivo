/****o* Pendientes de agrupación/OFB:siaf:MISCtot_un_motivo
* NOMBRE
*   OFB:siaf:MISCtot_un_motivo
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISCtot_un_motivo //(mone)
        LOCAL oper LIKE tlr:jnl_operator
        LOCAL local_retval like lib:err_retval
        
        oper = 0
        CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:CONjnl_write WHERE  \
        FLD:tlr:jnl_branch        == FLD:op:op_branch_id && \
        FLD:tlr:jnl_bus_date      == FLD:fecha_proceso   && \
        FLD:tlr:jnl_status         < 100                 && \
        FLD:tlr:jnl_sequence_corr == 0                   && \
        FLD:motivo                == FLD:adt_mot_codigo
        
        
        IF (CDSRETVAL != 0) THEN
           ERRMSG LST:common:errmsg_list,tlr:ERRjnl_select
           RESET TRAN
           RETURN (-2)
        END IF
        CALL MISCtots_encabez
        FPRINT common:csr_string,"          MOTIVO:   %5s  %30.30s ",adt_mot_codigo,adt_mot_desc
        CALL MISCwrite_tot
        common:csr_string = "   "
        CALL MISCwrite_tot
        FPRINT common:csr_string, \
        "----------------------------------------------------------------------"
        CALL MISCwrite_tot
        FPRINT common:csr_string, \
        "     OPERADOR           INGRESO             EGRESO         NRO CONTROL"
        CALL MISCwrite_tot

        FPRINT common:csr_string, \
        "----------------------------------------------------------------------"
        CALL MISCwrite_tot
        CDS FINDFIRST DSC:CONjnl_write nolock
        local_retval = CDSRETVAL
        FYIMSG CLEAR
        DO
           IF (local_retval != 0) THEN
              BREAK
           END IF
           CDS EXTRACT DSC:CONjnl_write ALL
           IF (tlr:jnl_operator != oper) THEN
              oper = tlr:jnl_operator
              CALL MISCimprimo_operador
           END IF
           CALL MISCimprimo_det_mot
           CDS FINDNEXT DSC:CONjnl_write nolock
           local_retval = CDSRETVAL
           //CALL MISCimprimo_det_mot
        LOOP
        CALL MISCtotal_motivo         
END SUB

/*******/
