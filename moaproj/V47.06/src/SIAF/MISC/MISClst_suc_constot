/****o* Pendientes de agrupación/OFB:siaf:MISClst_suc_constot
* NOMBRE
*   OFB:siaf:MISClst_suc_constot
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISClst_suc_constot    
    LOCAL ciclo      LIKE i    
    LOCAL mone       LIKE i
    LOCAL medpag     LIKE i
    LOCAL Tmonto     LIKE siaf:aux_suma_monto
    LOCAL Tcant      LIKE siaf:aux
    LOCAL Tpiezas    LIKE siaf:aux
    LOCAL Tsinimp    LIKE siaf:aux_suma_monto
    LOCAL Tpminor    LIKE siaf:aux
    LOCAL Tot_monto  LIKE siaf:aux_suma_monto
    LOCAL Tot_sinimp LIKE siaf:aux_suma_monto
    LOCAL loc_aux    LIKE siaf:aux_suma_monto
    LOCAL total      LIKE tefectivo_pes
    /*Para los resultados finales*/    
    LOCAL Lefec       LIKE tefectivo_pes
    
    lineas_cl    = 0
    indica_calcu = 0
            
    
    CALL MISCtotscons_encabez    
    
    
    /*Efectivo inicial de todas las monedas*/
    loc_aux      = 0
   
    ciclo = 1
    DO
       IF (ciclo > 3) THEN
          break
       End if
                                        
       
       IF ((62 - i) < 4) THEN
          i = 92
          common:csr_string = "   "
          CALL MISCwrite_tot
       END IF

       CALL MISCsubenc_consol(ciclo)
              
       Tot_monto  = 0
       Tot_sinimp = 0
       cant       = 0

       While (cant <= IDX_TOTAL)
          IF (pantalla_impreso == "P") THEN
             i = 0
          END IF
                           
          Tmonto  = 0
          Tcant   = 0
          Tpiezas = 0
          Tsinimp = 0
          Tpminor = 0                   
          IF (cant != 0 && cant != 9)
             IF ((((ciclo == 1) && (opera_vect[cant] == "+"))  || \
                  ((ciclo == 2) && (opera_vect[cant] == "-"))) || \
                  ((ciclo == 3) && (opera_vect[cant] == "N"))) THEN
               
                  IF (suma_cant_vec[cant] != 0) THEN                            
                     Tmonto  = Tmonto  + suma_monto_vec[cant]
                     Tcant   = Tcant   + suma_cant_vec[cant]
                     Tpiezas = Tpiezas + suma_piezas_vec[cant]
                     if (impresion_vect[cant] == 1)
                        Tsinimp = Tsinimp + suma_monto_vec[cant]
                     else
                        Tsinimp = Tsinimp + suma_sinimp_vec[cant]
                     end if
                     Tpminor = Tpminor + suma_pminor_vec[cant]
                  END IF
              END IF
          
                          
              IF (Tcant != 0) THEN
                 Select (impresion_vect[cant])
                    case 1
                         FPRINT common:csr_string, "%-15.15s %4.4s                      %17.17e %17.17e", \
                         desc_vec[cant],Tcant,Tmonto,Tmonto
                         break
                    case 2
                         FPRINT common:csr_string, "%-15.15s %4.4s                      %17.17e %17.17e", \
                         desc_vec[cant],Tcant,Tmonto,Tsinimp
                         break
                    case 3
                         aux = Tpiezas - Tpminor
                         FPRINT common:csr_string, "%-15.15s %4.4s  %4.4e    %4.4e   %4.4e %17.17e %17.17e", \
                         desc_vec[cant],Tcant,Tpminor,aux,Tpiezas,Tmonto,Tsinimp
                         break
                    case 4
                         aux = Tcant - Tpminor
                         FPRINT common:csr_string, "%-15.15s %4.4s  %4.4e    %4.4e   %4.4e %17.17e %17.17e", \
                         desc_vec[cant],Tcant,Tpminor,aux,Tcant,Tmonto,Tsinimp
                         break
                End select       
                CALL MISCwrite_tot
             End If

             Tot_monto  = Tot_monto  + Tmonto
             Tot_sinimp = Tot_sinimp + Tsinimp
          END IF     
             
          cant = cant + 1
       End While
              
       common:csr_string = "         "
       CALL MISCwrite_tot
       FPRINT common:csr_string,"TOTAL                                     %17.17e %17.17e",Tot_monto,Tot_sinimp
       CALL MISCwrite_tot
       common:csr_string = "         "
       CALL MISCwrite_tot
           
       ciclo = ciclo + 1                
    LOOP

    CALL siaf:MISCaper_mp_cons
         
    if (siaf:pantalla_impreso ==  "I") then   	          
        while (siaf:i < 59) 
              let common:csr_string = "    "
              call MISCwrite_tot
        end while              
        fprint common:csr_string "                                                     Cantidad de Hojas : %s" siaf:indica_calcu
        call MISCwrite_tot
    End if          
        
    if (siaf:pantalla_impreso ==  "P") then
       common:csr_string = "         "
       CALL MISCwrite_tot
       common:csr_string = "         "
       CALL MISCwrite_tot
    end if
               
END SUB

/*******/
