/****o* Pendientes de agrupación/OFB:siaf:MISCtots_mot_nmone
* NOMBRE
*   OFB:siaf:MISCtots_mot_nmone
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafMISC.h"

SUB siaf:MISCtots_mot_nmone
    local cod_tran like codigo_siaf
    
    cant = 0
    cod_tran = 0
    adt_mot_codigo = 0
   
    siaf:i = 0
    
    call MISCtots_encab_mot    
    
    do
         if (cant > IDX_TOTAL) then
             break
         end if
         if (suma_cant_vec[cant][moneda] != 0) then
             if (cod_tran != cod_transac_vec[cant]) then
                 if (acum_imp_mot == 0) then
                     fprint common:csr_string,"%4s %s ",cod_transac_vec[cant], \
		            desc_vec[cant]
                     call MISCwrite_tot2
                 else
                     call MISCimpri_tot_mot
                     fprint common:csr_string,"%4s %s ",cod_transac_vec[cant], \
		            desc_vec[cant]
                     call MISCwrite_tot2
                     suma_monto     = 0
                     suma_cant      = 0
                     suma_Iva21     = 0
                     suma_Iva27     = 0
                     suma_Sellado   = 0
                     suma_SinIva    = 0
                     acum_cant_mot     = 0
                     acum_imp_mot      = 0
                     acum_imp_SinIva   = 0
                     acum_imp_Iva21    = 0
                     acum_imp_Iva27    = 0
                     acum_imp_Sellados = 0
                 end if
                 cod_tran = cod_transac_vec[cant]
             end if
             move desc_vec[cant] to desc_vec_mot
             adt_mot_codigo = cod_motivo_vec[cant]
             call mod_submod(cod_tran)
             call CDSadt_motiv_load
             if (retval < 0) then
                 fprint common:csr_string,"     MOT INEX           "
             else
                 fprint common:csr_string,"     %4s %-30.30s",adt_mot_codigo,adt_mot_desc
             end if
                                      
             if (modo != "OPERADOR") then
                        fprint common:csr_string,"%-s  %3s %10.10s %10.10s %10.10s %10.10s %10.10s",common:csr_string, \
                        suma_cant_vec[cant][moneda],suma_monto_SinIva[cant][moneda],suma_monto_Iva21[cant][moneda],\
                        suma_monto_Iva27[cant][moneda],suma_monto_Sellado[cant][moneda],suma_monto_vec[cant][moneda]                        
             else
                 fprint common:csr_string,"%-s    %3s %17.17s",common:csr_string, \
                        suma_cant_vec[cant][moneda],suma_monto_vec[cant][moneda]
             end if
             
             call MISCwrite_tot2
             call MISCacumulo_tot_mot
             cod_tran = cod_transac_vec[cant]
         end if
         cant = cant + 1
    loop
    if ((acum_cant_mot == 0) && (acum_imp_mot == 0)) then
        return (0)
    else
        call MISCimpri_tot_mot
    end if
END SUB

/*******/
