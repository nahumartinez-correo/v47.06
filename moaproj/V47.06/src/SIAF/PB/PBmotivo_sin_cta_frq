/****o* Pendientes de agrupación/OFB:siaf:PBmotivo_sin_cta_frq
* NOMBRE
*   OFB:siaf:PBmotivo_sin_cta_frq
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafPB.h"

SUB siaf:PBmotivo_sin_cta_frq
    local LRetVal like lib:err_retval
    
    IF (post:estado_presu == 4) THEN
      drv:button = drv:last_button
      CALL drv:but_up_enable
      RETURN (0)
    END IF 
    drv:button = drv:last_button
    CALL drv:but_disable
    CALL CSR:set_currentfield(motivo)
    /*MFM - Seteo de flags a modo picklist, para que el foco este en el picklist*/
    SETFLAG drv:mode_flags,picklist_mode
    /*MFM - Mediante esta rutina csr se muestra el picklist*/
	CALL csr:f_sadopl "MOTIVOS HAB" common:csr_string
    /*Reseteo de flags de modo picklist*/
    RESETFLAG drv:mode_flags,picklist_mode
	
    //call CDSadt_motiv_sel2	
    ;CALL FVALmotivo_sin_cta
    /* */
    LRetVal = RETVAL
    IF (RETVAL < 0) THEN
	    clearfield motivo
	    clearfield adt_mot_desc
	    clearfield adt_mot_desc_tmp
	    refresh motivo
	    refresh adt_mot_desc_tmp
	    
	    IF (RETVAL == -1) THEN //SI NO HIZO ESC
	        MSGBOX "No hay motivos cargados",0x00,"AVISO"
	    END IF 
    ELSE
	    CALL csr:trimfield common:csr_string
	    LET  motivo = substr(common:csr_string,0,5)
	    LET siaf:adt_mot_desc_tmp = substr(common:csr_string,6,30)
	    REFRESH motivo
	    REFRESH siaf:adt_mot_desc_tmp
    END IF
    
    INIT 33,0
    nextfield motivo	
    IF (motivo.NUMCHARS != 0) THEN
      UNGETKEY 0x018D
    END IF

      /***************************************************************
     Se agrega control para Cliente Medio, por el cual si el producto
     bonifica se habilita el campo para el ingreso del descuento.
     ***************************************************************/
    if (post:cli_tipo == CLIMED) then
   		post:bonificaCM = siaf:adt_mot_bonifCM
   		if (post:ConvenioSesion && siaf:adt_mot_bonifCM == "S" && !post:ExcepSinLinea) then
			unprotfield post:Dcto_CliMed
			refresh     post:Dcto_CliMed
    	 else
			clearfield  post:Dcto_CliMed
			refresh     post:Dcto_CliMed
			protfield   post:Dcto_CliMed
   		end if
    else
	    clearfield  post:Dcto_CliMed
		refresh     post:Dcto_CliMed
		protfield   post:Dcto_CliMed
	end if

    drv:button = drv:last_button
    CALL drv:but_up_enable
    CALL drv:but_redraw
    
    RETURN (LRetVal)
END SUB

/*******/
