/****o* Pendientes de agrupación/OFB:siaf:SVAL_rtot_dia1
* NOMBRE
*   OFB:siaf:SVAL_rtot_dia1
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafSVAL.h"

SUB siaf:SVAL_rtot_dia1
    LET tlr:INDtots_append = ofb:TOTScustom_clear
    LET tlr:jnl_bus_date = tlr:bus_date
    LET tlr:jnl_sequence = tlr:sequence
    clearfield hcomm:tran_status
    //CDS BEGINWORK
    //CALL tlr:TOTScommit
    //IF (RETVAL != 0) THEN
	//return -2
    //END IF
    call siaf:MISCcustom_clear
    LET fecha_proceso = common:system_date
    lib:stat_msg_line = "L) REGENERANDO TOTALES"
    refresh lib:stat_msg_line
    CDS SELECT FROM DSC:tlr:TABjnl BECOMES DSC:tlr:CONjnl_write WHERE  \
tlr:jnl_branch == FLD:op:op_branch_id && tlr:jnl_operator ==  \
FLD:op:op_operator_id && tlr:jnl_bus_date == FLD:tlr:bus_date &&  \
tlr:INDtots_append != 0 && tlr:jnl_status < 100
    IF (CDSRETVAL != 0) THEN
      ERRMSG LST:common:errmsg_list,tlr:ERRjnl_select
      return -2
    END IF
    CDS FINDFIRST DSC:tlr:CONjnl_write NOLOCK
    CALL lib:MISCcds_find_err
    IF (CDSRETVAL == 0) THEN
      DO
        CDS CLEARBUFFER DSC:tlr:CONtots_write
        CDS EXTRACT DSC:tlr:CONjnl_write FLD:tlr:INDtots_append FLD:importe  \
FLD:importe2 FLD:moneda FLD:moneda_cr FLD:tlr:jnl_sequence_corr
        IF (tlr:jnl_sequence_corr.NUMCHARS == 0) THEN
          LET INDscratch = ofb:tlr:TOTSopen_day
          IF (tlr:INDtots_append != INDscratch) THEN
            LET INDscratch = ofb:tlr:TOTSclose_day
            IF (tlr:INDtots_append != INDscratch) THEN
              LET INDscratch = ofb:TOTScustom_clear
              IF (tlr:INDtots_append != INDscratch) THEN
                CALL CSR:total_list tlr:INDtots_append \
DSC:tlr:CONtots_write tlr:jnl_tran_flags 0
              END IF
            END IF
          END IF
        END IF
        CDS FINDNEXT DSC:tlr:CONjnl_write NOLOCK
        IF (CDSRETVAL != 0) THEN
          BREAK
        END IF
      LOOP
      LET tlr:INDtots_append = ofb:TOTSappend
      CDS BEGINWORK
      CALL tlr:TOTSwait
      CALL tlr:TOTScommit
      CALL tlr:TOTSwait
    END IF
END SUB

/*******/
