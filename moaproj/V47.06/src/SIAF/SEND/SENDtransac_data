/****o* Pendientes de agrupación/OFB:siaf:SENDtransac_data
* NOMBRE
*   OFB:siaf:SENDtransac_data
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   siaf:TRANabm_transac
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "siafSEND.h"

SUB siaf:SENDtransac_data
    LOCAL l_tabla LIKE admin:tabla 
    LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 

	  if (siaf:adt_tran_fliatran == "CSP" || siaf:adt_tran_fliatran == "CSE" || \
		  siaf:adt_tran_fliatran == "CMB") then
 	      ERRMSG lst:common:errmsg_list, \
			"Las transacciones con Familia CSP, CSE o CMB deben ser tratadas mediante el Abm de Servicios"
 			CALL CSR:proc_list(170,LST:LISTtransac_flds)
  			CALL CSR:proc_list(190,LST:LISTtransac_flds)
			return (-1)
	  end if
	
	  if (drv:last_button == 27)
		  // Asigno un valor por default porque es obligatorio ya que es indice
		  // (aunque no se use porque es para postales o encomiendas)
		  siaf:adt_tran_jer_vtaPost = 999
	  end if

    //SMC Autorizo Modificaciones
    call post:MISCAutorizoModif("transac")
    if (retval < 0) then
	   return (-2)
    endif

    drv:save_button = drv:last_button
    IF (TESTFLAG(admin:mode_flags,update)) THEN
      CALL CDSadt_tran_save
      CALL drv:side_bar_disable
      RESETFLAG admin:mode_flags,update
      ;SMC journalizo Modificacion
      call post:MISCJournalTablas
    ELSE
      IF (TESTFLAG(admin:mode_flags,delete)) THEN
        RESETFLAG admin:mode_flags,delete
        call MISCind_Transac
            ;SMC Modificacion para Testear por impactos antes de Borrar.
            ;    Si se detecta impacto, se pregunta si se desea imprimir el reporte
            call lib:MISCchk_impacto
            if (retval < 0) then
                return (retval)
            endif
        CALL lib:adt_delete_verify
        IF (RETVAL == 0) THEN
          CALL drv:side_bar_disable
          CALL CDSadt_tran_del
          IF (RETVAL != 0) THEN
            drv:button = drv:save_button
            CALL drv:but_up_enable
            RETURN (-1)
          ELSE
      	    ;SMC journalizo Modificacion
            call post:MISCJournalTablas
            CALL CSR:proc_list(170,LST:LISTtransac_flds)
            CALL CSR:proc_list(190,LST:LISTtransac_flds)
            RETURN (-1)
          END IF
        END IF
      ELSE
        IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
          RESETFLAG admin:mode_flags,imprimir
          /*
          siaf:adt_tabla_context = DSC:adt_tran_context
          siaf:INDencab_lis = OFB:MISCencab_tran
          siaf:INDselect_tabla = OFB:CDSadt_tran_select
          siaf:INDpaso_str_tabla = OFB:MISCpaso_str_tran
          siaf:INDestado_clave = OFB:MISCestado_clave_tra
          siaf:INDadt_sval = 0
          CALL siaf:TRANimprimo_driver*/
          
				//Inicio gpb:AUT-2415 
				/*CALL MISCdumptable 
				CALL CDSdumptable*/  
		    //resguardo los valores originales
		    LET l_tabla = admin:tabla 
		    LET l_INDCamposTablas = post:INDCamposTablas				
				CALL post:MISCdumptableNew 
				admin:tabla = "transac"
				post:INDCamposTablas = LST:LISTtransac_flds
				CALL post:CDSdumptableNew  
				//recupero los valores originales
				LET admin:tabla = l_tabla
				LET post:INDCamposTablas = l_INDCamposTablas
				//Fin gpb:AUT-2415 
          
          CALL CSR:proc_list(170,LST:LISTtransac_flds)
          CALL CSR:proc_list(190,LST:LISTtransac_flds)
          RETURN (-1)
        END IF
      END IF
      RETURN (-1)
    END IF
    CALL CSR:proc_list(170,LST:LISTtransac_flds)
    CALL CSR:proc_list(190,LST:LISTtransac_flds)
    RETURN (-1)
END SUB

/*******/
