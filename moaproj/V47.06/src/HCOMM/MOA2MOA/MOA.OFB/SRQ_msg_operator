/****o* Mensajería entre Operadores/OFB:hcomm:SRQ_msg_operator
 * NOMBRE
 *   OFB:hcomm:SRQ_msg_operator
 * DESCRIPCION
 *   Envia un mensaje a la terminal en donde se encuentra identificado el operador especificado.
 *   Formato del mensaje:
 *   	- código de servicio de pedido (service request code) de 3 byte  (ASCII 105)
 *   	- remitente (operator id)
 *   	- destinatario (operator id)
 *   	- mensaje
 * ENTRADAS
 *   admin:msg_node_id: terminal que debe recibir el mensaje
 *   admin:message: mensaje a enviar
 * SALIDAS
 *   0 - Todo salió bien
 *   1 - error intentando enviar (se muestra el mensaje de error)
 * SOURCE
 */

#include "MOA2MOAMOA.OFB.h"

	SUB hcomm:SRQ_msg_operator
	if (hcomm:host_moa.numchars != 0)
		comm setresource hcomm:host_moa init_send
		if (commhdr(CSH_SESSION_STATUS) != CS_CSDN)
			fyimsg common:fyimsg_list,"Enviando Mensaje Al Operador."
			/*  Concat the resource name onto node name - */
			clearfield hcomm:host_dest_resrc
			fprint hcomm:host_dest_resrc,"$%s:pplus", admin:msg_node_id

			/* Now Build the message to send */
			comm put MSG_OPERATOR msg
			let hcomm:host_len = op:op_operator_id.length
			comm put op:op_operator_id msg length hcomm:host_len
			let hcomm:host_len = admin:msg_operator_id.length
			comm put admin:msg_operator_id msg length hcomm:host_len
			comm put admin:message msg

			clearfield hcomm:host_srv_resp
			resetflag hcomm:event_flags,primary
			comm senddata hcomm:host_dest_resrc
			CALL  OFB:hcomm:SRQ_wait_for_resp (DEFAULT_WAIT_TIME)
			if (retval > 0)
				IF (!TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options != "REC_CAIDAS_VUELO")) 
				    CALL  OFB:nodeliver_msg
				END IF
				return 1
			END IF
		else
			IF (!TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options != "REC_CAIDAS_VUELO")) 
			    CALL  OFB:host_csdn_msg
			END IF
			return 1
		END IF
	else
		IF (!TESTFLAG(common:rt_flags,batch_mode) && (batch:batch_options != "REC_CAIDAS_VUELO"))
		    CALL  OFB:host_moa_notconfig
		END IF    
		return 1
	END IF
	return
	END SUB

/*******/
