/****o* Pendientes de agrupación/OFB:hcomm:SRQ_wait_for_resp
* NOMBRE
*   OFB:hcomm:SRQ_wait_for_resp
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "MOA2MOAMOA.OFB.h"

/* This module contains pinnacle plus service request related routines. */
/* Service request routines may also be found in .../src/hcomm/reentry  */
/* in files called "inform," "opinit" and "batch" and in .../src/hcomm/ */
/* batch in a file called "srq."                                        */

#include "commdef.h"
#include "ofbdefs.h"
#include "hcomm.h"
#include "base.h"
#if BASE_CFIG_BATCH == 1
#include "batch.h"
#endif


/* NAME: hcomm:SRQ_wait_for_resp                                */
/*                                                              */
/* Wait for a response to determine if operation was performed. */
/*                                                              */
/* This routine returns:                                        */
/*    0 - everything ok                                         */
/*    1 - MOA_ERR (most likely there was error in receive     */
/*    2 - reset out of waiting for message                      */
/*    3 - timed out while waiting for message                   */
/*                                                              */
SUB hcomm:SRQ_wait_for_resp (Pwait_time)
	DO
		if (testflag(hcomm:event_flags,primary))
			break
		END IF
		retval = Pwait_time
		comm waitformsg retval
		if (testflag(hcomm:event_flags,primary))
			break
		END IF
		if (commretval == RESET_OUT)
			resetflag hcomm:event_flags,primary
			resetflag hcomm:event_flags,secondary
			return 2
		END IF
		if (commretval == TIMED_OUT)
			resetflag hcomm:event_flags,primary
			resetflag hcomm:event_flags,secondary
			return 3
		END IF
	LOOP
	/* Must have been a primary event */
	resetflag hcomm:event_flags,primary
	resetflag hcomm:event_flags,secondary
	if (hcomm:host_srv_resp == MOA_ERR)
		return 1
	END IF
	return /* assume all is well */

	END SUB
/*  NAME: hcomm:SRQ_hostall                                               */
/*                                                                        */
/*   This routine sends out a host mode broadcast message to all          */
/*   workstations configured and sets each signed on workstation to host  */
/*   mode provided that the host is actually up.                          */
/*                                                                        */
/*   NOTE: Set the host mode for all the records in the profiles table.   */
/*   The op_host_mode field must be set up before the call to             */
/*   MISCset_host_mode.                                                   */
/*                                                                        */
/*   Message format: - 3 byte service request code (ASCII 100)            */
/*                                                                        */

/*******/
