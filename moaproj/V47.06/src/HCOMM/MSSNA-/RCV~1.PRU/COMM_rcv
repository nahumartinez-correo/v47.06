#include "MSSNA-RCV~1.PRU.h"

SUB hcomm:COMM_rcv
		// If the tran_status is not SEND_RESET, then the desired message has already been received.
	if (hcomm:tran_status != SEND_RESET)
		return
	end if 
	let hcomm:tran_status = RCV_RESET
	do
		if (hcomm:tran_status != RCV_RESET)		// check if came in on loop check
			break
		end if
		move dsc:hcomm:host_reply to lib:stat_message

		/* EC Integ.de cambios hechos anteriormente en Version 2.7 */
		let lib:stat_message.highlite = 0
		/**/

		refresh lib:stat_message
		// this is the point we block waiting for msg,reset, or time out

		/* EC Integ.de cambios hechos anteriormente en Version 2.7 */
		/* Se comentan las siguientes lineas - 7/3/96 - MV - AD 
		if (testflag (common:rt_flags,batch_mode))
			comm waitformsg 15 no_reset_allowed
		else
			comm waitformsg no_reset_allowed 30
		end if */
		comm waitformsg no_reset_allowed 
		/**/
		if (commretval == RESET_OUT || commretval == TIMED_OUT)
			move "SIN RESPUESTA DEL HOST" to lib:stat_message
			refresh lib:stat_message
			break
		end if
	loop
END SUB


//
// This routine is the indirect rcv routine called from the event script 
// The routine is set up before the send is done
//
