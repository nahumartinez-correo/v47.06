/****o* Pendientes de agrupación/OFB:hcomm:RENbat_reentry
* NOMBRE
*   OFB:hcomm:RENbat_reentry
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "REENTRYBATCH.OFB.h"

#if BASE_CFIG_BATCH != 0
SUB hcomm:RENbat_reentry
	if (!testflag(hcomm:state_flags,on_line))
		move dsc:ERRno_host to hcomm:reentry_error
		CALL  hcomm:RENbat_upt_err
		resetflag batch:state_flags,reentry_req
		setflag batch:state_flags,reentry_retry
		return -1
	END IF
	resetflag batch:state_flags,reentry_req
	resetflag batch:state_flags,reentry_retry
	resetflag hcomm:state_flags,reentry_reset
	setflag common:rt_flags,reentry_active
#if REN_INFORM == 1
	CALL  OFB:hcomm:SRQinf_snd_ren_beg
#endif
	if (testflag(hcomm:state_flags,reentry_reset))
		goto exit
	END IF
#if BASE_CFIG_TLR == 1
	CALL  OFB:tlr:MISCsel_all_unpost
	if (retval != 0)
		move dsc:hcomm:ERRjnl_locked to hcomm:reentry_error
		CALL  hcomm:RENbat_upt_err
	else
		CALL  OFB:hcomm:RENmisc_cnt_pend
		if (retval == 0)
			let hcomm:INDreentry_update = ofb:tlr:JNLreentry_upd
			CALL  OFB:hcomm:RENmisc_reentry
		END IF
	END IF
	cds endselect dsc:hcomm:CONreentry
#endif
	if (testflag(hcomm:state_flags,reentry_reset))
		goto exit
	END IF
#if BASE_CFIG_NA == 1
	CALL  OFB:na:MISCsel_all_unpost
	if (retval != 0)
		move dsc:hcomm:ERRjnl_locked to hcomm:reentry_error
		CALL  hcomm:RENbat_upt_err
	else
		CALL  OFB:hcomm:RENmisc_cnt_pend
		if (retval == 0)
			let hcomm:INDreentry_update = ofb:na:JNLreentry_update
			CALL  OFB:hcomm:RENmisc_reentry
		END IF
	END IF
	cds endselect dsc:hcomm:CONreentry
#endif
	if (testflag(hcomm:state_flags,reentry_reset))
		goto exit
	END IF
#if BASE_CFIG_CL == 1
	CALL  OFB:cl:MISCsel_all_unpost
	if (retval != 0)
		move dsc:hcomm:ERRjnl_locked to hcomm:reentry_error
		CALL  hcomm:RENbat_upt_err
	else
		CALL  OFB:hcomm:RENmisc_cnt_pend
		if (retval == 0)
			let hcomm:INDreentry_update = ofb:cl:MISCreentry_update
			CALL  OFB:hcomm:RENmisc_reentry
		END IF
	END IF
	cds endselect dsc:hcomm:CONreentry
#endif
exit:
	CALL  OFB:op:MISCupt_ren_stat
	if (retval == RET_FAILURE)
		move dsc:hcomm:ERRren_no_prof_updt to hcomm:reentry_error
		CALL  hcomm:RENbat_upt_err
	END IF
#if REN_INFORM == 1
	CALL  OFB:hcomm:SRQinf_snd_ren_cmpl
#endif
	resetflag common:rt_flags,reentry_active
	END SUB
#endif

/*******/
