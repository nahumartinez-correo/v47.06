/****o* Pendientes de agrupación/OFB:plataf:LINKcalcula_impuesto
* NOMBRE
*   OFB:plataf:LINKcalcula_impuesto
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "platafOFB.OFB.h"

//////////////////////////////////////////////////////////////////////
// Esta rutina revisa si la transaccion a la que se esta retornando //
// (la pila de trx's se guarda en la INDstack_funct) es la transac_ //
// cion de caja o la de merchandising. De ser una de estas, y de    //
// encontrarse en un presupuesto, y habiendo una linkeditacion ya   //
// establecida (ej. Pago Facil y Afip linkeditan con si mismas), se //
// realiza una pseudo-linkeditacion con la rutina que calcula       //
// los impuestos antes de volver a las mencionadas transacciones... //
//                                                                  //
// Si las condiciones se dan:   drv:INDrun_funct = rutina de imp.   //
// Si las condiciones no se dan:  drv:INDrun_funct no tuvo cambios  //
//////////////////////////////////////////////////// FGB 06.08.2003 //
SUB plataf:LINKcalcula_impuesto

let drv:cnt_tmp = drv:stack_cnt - 1
IF (drv:cnt_tmp >= 0) then // ------------------------------------------------------------ [A] 

	SELECT (drv:dt_app)

	case APP_CAJA

		// si estoy volviendo al menu de caja...
		let drv:INDtemp_list = LST:tlr:TRAN_teller
		IF (drv:INDstack_funct[drv:dt_app][drv:cnt_tmp] == drv:INDtemp_list) then // ----- [B] 
			// FGB (reingenieria): Si estoy en modo Sesion, y termine de 
			// cargar una transaccion, entonces, calculo los totales del 
			// presupuesto...
			call check_and_link_impu
		ELSE //  ------------------------------------------------------------------------- [B] 
			let drv:INDtemp_list = LST:tlr:TRAN_teller_func
			IF (drv:INDstack_funct[drv:dt_app][drv:cnt_tmp] == drv:INDtemp_list) then // - [C] 
				call check_and_link_impu
			ENDIF  // -------------------------------------------------------------------- [C] 
		ENDIF//  ------------------------------------------------------------------------- [B] 
		break

	case APP_MERCHA

		// si estoy volviendo al menu de merchandising...
		let drv:INDtemp_list = LST:tlr:TRAN_admin
		IF (drv:INDstack_funct[drv:dt_app][drv:cnt_tmp] == drv:INDtemp_list) then // ----- [B] 
			call check_and_link_impu
		ELSE  // ------------------------------------------------------------------------- [B]
			let drv:INDtemp_list = LST:tlr:TRAN_teller_func2
			IF (drv:INDstack_funct[drv:dt_app][drv:cnt_tmp] == drv:INDtemp_list) then // - [C] 
				call check_and_link_impu
			ENDIF  // -------------------------------------------------------------------- [C] 
		ENDIF  // ------------------------------------------------------------------------ [B] 

	END SELECT
ENDIF // --------------------------------------------------------------------------------- [A] 


END SUB

/*******/
