/****o* Pendientes de agrupación/OFB:plataf:recovery_confirma
* NOMBRE
*   OFB:plataf:recovery_confirma
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "platafdrv.ofb.h"

SUB plataf:recovery_confirma

	// para el proceso de confirmacion, el estado_presu tiene q' ser 4
	post:estado_presu = 4
	CALL post:CDSadt_presuact_upd

	// abro el contexto del journal 
	call tlr:JNLinitialize

	// Obtiene el Nro. de Presupuesto Actual (por si las moscas... vio?)
	call post:CDSobtPresNro


	//Solicitud 50170
	//verifico en la presudet cual fue la ultima tx journalizada del presupuesto activo
	//si no existe ninguna borro la DifFact (en caso de que exista) y la vuelvo a 
	//generar, calcular dif y demas
	CALL post:MISCtrat_caida_dif
	


	// Continuo con el proceso de confirmacion...
	call confirma_driver
	clearfield drv:INDrun_funct
	call CDSset_curr_state(op:op_operator_id,FORM_PRINTING)

	// armo los campos necesarios para el fin de sesion...
	if (testflag(giros:giros_masivos,proc_gir_masivos))
		setflag giros:giros_masivos,proc_anul_masivos
	else
		resetflag giros:giros_masivos,proc_anul_masivos
	end if

	// ejecuto las rutinas del fin de sesion (impresion fiscal) 
	//call post:PRESimpre_fiscal
	//call post:PCOLimpresion_fiscal
	//call post:SVALimpre_fiscal

	// quito las pantallas...
	cutscreen post:SCRNerror_finses,NOCURSOR
	undisplay post:SCRNanulacion_inc

	// cierro contexto del journal...
	call tlr:JNLterminate

	// estas lineas las copie de post:MISCrecupera_anula (who knows what they're made for...)
	drv:mode_flags = 0
	call post:MISCrestauroNC
	if (testflag(giros:giros_masivos,proc_anul_masivos))
		resetflag giros:giros_masivos,proc_anul_masivos
	end if

	// fijo el estado como listo para iniciar una nueva sesion...
	call CDSset_curr_state(op:op_operator_id,READYTOSTART)

	// restauro valores del desktop...
	call clear_drv_lst_flds
	let drv:INDcur_list = LST:drv:TRAN_desktop
	let drv:INDcur_tran = LST:drv:TRAN_desktop
	call load_drv_trn_flds
	call load_drv_trn_flds1
	call load_drv_trn_flds2
	call load_drv_trn_flds3
	call load_drv_trn_flds4
	call load_drv_trn_flds5
	let drv:screen_active = 1
	let drv:INDscr = SCR:drv:logo

END SUB

/*******/
