/****o* Pendientes de agrupación/OFB:plataf:recalc_iva_conf_drv
* NOMBRE
*   OFB:plataf:recalc_iva_conf_drv
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "platafdrv.ofb.h"

SUB plataf:recalc_iva_conf_drv
local l_cantidad like post:cantidad
local l_tarifa	 like post:tarifa
local l_descuento like post:descuento
local l_tarif_unit like siaf:importe
local l_bloq_unit like siaf:importe
local l_desc_unit like siaf:importe
local l_bloques  like post:imp_bloques
local ll_cant_aux like post:cantidad
local l_cant_aux like post:cantidad
LOCAL cos_opc_aux[6] LIKE siaf:importe

l_cantidad = post:cantidad
l_tarifa   = post:tarifa
l_bloques  = post:imp_bloques
l_descuento = post:descuento

// resguardo el valor de los opcionales
l_cant_aux = 0
while (l_cant_aux < 6)
	post:cos_opc_aux[l_cant_aux] = post:cos_opc[l_cant_aux]
	l_cant_aux = l_cant_aux + 1
end while

// por ahora => solo postales y encomiendas
if (post:adt_serv_tipo == "PO" || post:adt_serv_tipo == "EN") then

	// para esto, tengo que calcular la tarifa anterior...
	l_tarif_unit = (l_tarifa - post:promo_imp_srv_tot) / l_cantidad
	l_bloq_unit = (l_bloques - post:promo_imp_blq_tot) / l_cantidad
	l_desc_unit = l_descuento / l_cantidad
	post:tarifa = l_tarif_unit * post:cant_ori
	post:imp_bloques = l_bloq_unit * post:cant_ori
	post:descuento = l_desc_unit * post:cant_ori
	// obtengo el valor anterior de los opcionales...
	l_cant_aux = 0
	while (l_cant_aux < 6)
		post:cos_opc[l_cant_aux] = ((post:cos_opc_aux[l_cant_aux] - post:promo_imp_opc_tot[l_cant_aux]) / l_cantidad) * post:cant_ori
		l_cant_aux = l_cant_aux + 1
	end while

	// borro el IVA calculado anteriormente
	post:cantidad = post:cant_ori
	post:tran_presu_est = "M"
	call post:MISCborrarIva

	// se restauran valores
	post:cantidad = l_cantidad
	post:tarifa = l_tarifa - post:promo_imp_srv_tot
	post:imp_bloques = l_bloques - post:promo_imp_blq_tot
	post:descuento = l_descuento
	l_cant_aux = 0
	while (l_cant_aux < 6)
		//restauro el valor de los opcionales
		post:cos_opc[l_cant_aux] = post:cos_opc_aux[l_cant_aux] - post:promo_imp_opc_tot[l_cant_aux]
		l_cant_aux = l_cant_aux + 1
	end while
	// genero el nuevo iva
	call post:MISCgenerarIva
	clearfield post:tran_presu_est

	post:cantidad = l_cantidad
	post:tarifa = l_tarifa
	post:imp_bloques = l_bloques
	l_cant_aux = 0
	while (l_cant_aux < 6)
		//restauro el valor de los opcionales
		post:cos_opc[l_cant_aux] = post:cos_opc_aux[l_cant_aux]
		l_cant_aux = l_cant_aux + 1
	end while
endif

END SUB

/*******/
