/****o* Pendientes de agrupación/OFB:nauser:COMM_rcv_event
* NOMBRE
*   OFB:nauser:COMM_rcv_event
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
# include	<hcommstd.h>
# include 	<commdef.h>
# include	<hcommstd.h>
# include	<hcomm_st.h>
# include	<hcomm.h>
# include	<ofbdefs.h>

# define	TACCEPT 	0xf1
# define	TREJECT 	0xf2

/* EC Integ.de cambios hechos anteriormente en Version 2.7 */
/* Esta rutina se reemplaza  ya que Mosaic 3.6 con lua tiene ahora una
unica rutina de receive: hcomm:lua_event. En ella, si esta seteado un flag
que determina que el mensaje esperado es de AUTOCONSULTA, se reseta esta flag,
se setea otra flag que indica que el proximo mensaje es descartable y 
viene aca,  donde la unica logica que le queda es la que tenia por CS_DATA */

SUB nauser:COMM_rcv_event
/*NO se usa
		if (fld:hcomm:INDhost_rcvrt != 0) then
			call ofb:RECVgenerico
			let sav_retval = retval
		END IF
*/
END SUB

/*
SUB nauser:COMM_rcv_event
	SELECT (commhdr(CSH_VERB))
	case CS_DATA
		if (hcomm:tran_status == HOST_REJECTED)
			break
		END IF
		comm set_event hcomm:host2,"hcomm:COMM_unso"
		if (fld:hcomm:INDhost_rcvrt != 0) then
			call ofb:RECVgenerico
			let sav_retval = retval
		END IF
		break
	case CS_ERROR
		* Se recibio error del PPCS *
		let hcomm:tran_status = SEND_ERROR
		break
	case CS_STATUS
	case CS_ESTATUS
		* Se recibio mensaje de status del PPCS *
		* Se actualiza el estado de la sesion de acuerdo al
		   mensaje recibido *
		if (commhdr (CSH_SESSION_STATUS) != CS_UP)
			if (commhdr (CSH_SESSION_STATUS) == CS_SSCP)
				* Se cayo la sesion *
				let hcomm:tran_status = SESSION_LOST
			else
				if (commhdr(CSH_SESSION_STATUS) ==  CS_DOWN)
					* Se cayo el host *
					let hcomm:tran_status = HOST_RCV_DOWN
				else * Se cayo el comm server *
					let hcomm:tran_status = \
						HOST_COMMSRVR_DOWN
				END IF
			END IF
		END IF
		break
	case CS_COMM
		call ofb:hcomm:COMM_pro_commreq * received a comm request *
		let hcomm:tran_status = RCV_ERROR
	END SELECT
END SUB
*/
/**/
------------------------

/*******/
