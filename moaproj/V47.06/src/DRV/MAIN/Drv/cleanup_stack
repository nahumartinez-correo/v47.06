/****o* Pendientes de agrupación/OFB:drv:cleanup_stack
* NOMBRE
*   OFB:drv:cleanup_stack
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "MainDrv.h"

SUB drv:cleanup_stack
    stack_var = stack_ptr[drv:clear_app]
    RETVAL = OFB_IDYES
    IF (INDstack_funct[clear_app][drv:stack_var] != 0) THEN
        let common:msgbox_type = OFB_YESNO
  	    clearfield common:csr_string
        IF (drv:clear_app == APP_NA) THEN
	       msgbox "THE ACTIVE NEW ACCOUNTS TRANSACTION WILL BE CLEARED.\n DO YOU WANT TO CONTINUE?",common:msgbox_type,common:csr_string
        END IF
        IF (drv:clear_app == APP_LOAN) THEN
    	   	msgbox "THE ACTIVE LOAN TRANSACTION WILL BE CLEARED.\n DO YOU WANT TO CONTINUE?",common:msgbox_type,common:csr_string
        END IF
        IF (drv:clear_app == APP_CL_CALC) THEN
    		msgbox "THE LOANS CALCULATION TRANSACTION WILL BE CLEARED.\n DO YOU WANT TO CONTINUE?",common:msgbox_type,common:csr_string
        END IF
    END IF
    move dt_app to common:csr_string
    IF (RETVAL == OFB_IDYES) THEN
    	stack_var = drv:stack_cnt
        LET drv:stack_cnt = drv:stack_ptr[drv:dt_app]
        MOVE clear_app to dt_app
        CALL drv:reset_this
        MOVE common:csr_string TO drv:dt_app
        MOVE drv:stack_var TO drv:stack_cnt
        drv:stack_ptr[drv:clear_app] = 0
        IF (drv:dt_app == drv:clear_app) THEN
			IF (drv:INDscreen[screen_active] != 0)
				LET FLD:drv:INDscr = FLD:drv:INDscreen[screen_active]
				CUTSCREEN FLD:drv:INDscr,CURRENTFIELD
			END IF
			LET drv:INDfld = drv:INDstack_side_scr[dt_app][stack_cnt]
			IF (drv:INDfld != 0)
		    		CUTSCREEN FLD:drv:INDfld,CURRENTFIELD
			END IF
	        IF (TESTFLAG(drv:mode_flags,notecards_mode)) THEN
	   			IF (drv:subscreen[drv:dt_app]  != "Y")
					IF (drv:tab_active >= 0) THEN
		      			LET drv:INDscr = FLD:drv:tab_screen[drv:tab_active]
		      			IF (drv:INDscr != 0) THEN
			  				CUTSCREEN FLD:drv:INDscr,CURRENTFIELD
            	            CALL drv:enable_tab
	      				END IF
					END IF
	      			LET drv:INDscr = FLD:drv:INDstack_notes[drv:dt_app]
	      			IF (drv:INDscr != 0) THEN
		 				CUTSCREEN FLD:drv:INDscr,CURRENTFIELD
	      			END IF
	   			ELSE
	      			RESETFLAG drv:mode_flags,notecards_mode
	   			END IF
			END IF
            drv:stack_cnt = 0
            setflag drv:mode_flags,no_stack_list
        END IF
    ELSE
    	RETURN -2
    END IF
END SUB

/*******/
