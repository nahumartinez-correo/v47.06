/****o* Pendientes de agrupación/OFB:drv:history
* NOMBRE
*   OFB:drv:history
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "MainHistory.h"

	SUB drv:history
	LET new_app = -1
	LET cnt_tmp = hist_cur
	CALL  OFB:drv:hist_clear
	IF (hist_cur == 0)
		LET hist_cur = STACK_SIZE - 1
	ELSE
		LET hist_cur = hist_cur - 1
	END IF
	IF (dt_app != hist_app[hist_cur])
		LET INDrun_funct = INDstack_funct[APP_HISTORY][hist_cur]
		LET new_app = hist_app[hist_cur]
		LET dt_app_tmp = dt_app
		LET dt_app = new_app
		CALL  OFB:drv:set_dt_key
		LET dt_app = dt_app_tmp
		IF (stack_ptr[new_app].NUMCHARS > 0 && stack_ptr[new_app] > 0)
			LET drv:funct_rest = 1
		END IF
		CALL  FLD:drv:INDsave_rtn
		CALL  OFB:drv:save_stack
		CALL  OFB:drv:back_but_on
		RETURN (0)
	END IF

	IF (INDcur_list != INDstack_funct[APP_HISTORY][hist_cur])
		LET INDrun_funct = INDstack_funct[APP_HISTORY][hist_cur]
		IF (stack_cnt > 0)
			LET drv:stack_cnt_tmp = stack_cnt - 1
			IF (INDstack_funct[dt_app][stack_cnt_tmp] == INDrun_funct)
				LET stack_cnt = stack_cnt - 1
				LET drv:INDrun_funct = drv:INDstack_funct[dt_app][stack_cnt]
				LET drv:funct_rest = 1
				CALL  OFB:drv:back_but_on
				RETURN (0)
			END IF
		END IF
		CALL  FLD:drv:INDsave_rtn
		CALL  OFB:drv:save_stack
		CALL  OFB:drv:back_but_on
		RETURN (2)
	END IF

	LET drv:next_screen = stack_act[APP_HISTORY][hist_cur]
	CALL  OFB:drv:back_but_on
	RETURN (1)
	END SUB

/*******/
