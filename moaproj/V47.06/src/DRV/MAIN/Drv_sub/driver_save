/****o* Pendientes de agrupación/OFB:drv:driver_save
* NOMBRE
*   OFB:drv:driver_save
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "MainDrv_sub.h"

SUB drv:driver_save
next_funct:
	// ---------------------------------------------------------------------
	// Save the stack fields if we are jumping into another DeskTop
	// transaction. Otherwise simply execute ofb procedure pointed to
	// by the INDrun_funct
	// Returns -1 if we want to go back to collect of the same screen
	// (without executing the precollect routine)
	// Returns -2 if we want to do the same as when -1 is returned but 
	// execute the pre collect routine
	// returns -3 if we want to clear the application stack fields 
	// before ending the current transaction
	// Returns 0 if either we want to exit the transaction and not clear the
	// stack or we simply want to move onto the next_screen
	// ---------------------------------------------------------------------
	IF (drv:INDrun_funct != 0)
		// FGB 10.01.2003: Cuando se llama a la rutina estado_presu_accion, se debe 
		// ejecutar como si fuera una lista nueva... (o sea, la actual debe finalizar)
		let drv:INDfld_tmp = OFB:plataf:estado_presu_accion
		LET lib:ind_type = (INDrun_funct >> 24) & 0xff
		IF (lib:ind_type == OFB_OBJ && drv:INDrun_funct != drv:INDfld_tmp)
			LET drv:last_key = 0
			CALL  CSR:proc_list F_CPTODUP INDrun_funct
#if DT_DEBUG == 1
			IF (TESTFLAG(debug_flags,button_rtn))
				DPRINT "Debuging In PROC drv:driver_save\r\n"
				DPRINT "            Calling button routine\r\n"
				SINGLESTEP ON
			END IF
#endif
			CALL  FLD:INDrun_funct
			CALL  CSR:proc_list F_COMPARE INDrun_funct
			IF (RETVAL == 0)
				CLEARFIELD INDrun_funct
			END IF
			IF (drv:last_key != 0)
				LET LASTKEY = drv:last_key
				LET drv:last_key = 0
			END IF
			IF (drv:next_screen != -1)
				RETURN
			END IF
			IF (drv:INDrun_funct != 0)
				GOTO next_funct
			END IF
			IF (drv:last_button == ESC)
				GOTO next_funct
			END IF
			IF (SUBSTR(data_collect,screen_active,1) == "C")
				RETURN (-1)
			ELSE
				RETURN (-2)
			END IF
		END IF
		IF (TESTFLAG(mode_flags,exit_app) || \
		    TESTFLAG(mode_flags,no_stack_list))
			RETURN (-3)
		END IF
#if DT_DEBUG == 1
		IF (TESTFLAG(debug_flags,save))
			DPRINT "Debuging In PROC drv:driver_save\r\n"
			IF (drv:INDsave_rtn == 0)
				DPRINT "            Save = NULL\r\n"
			ELSE
				DPRINT "            Calling save routine\r\n"
			END IF
			singlestep on
		END IF
#endif
		// -------------------------------------------------------------------
		// Run the Save routine if the INDrun_funct points to another TranList
		// Also, save the stack fields because we are going to leave the tran
		// -------------------------------------------------------------------
		CALL  FLD:drv:INDsave_rtn
		CALL  OFB:drv:save_stack
		RETURN (0)
	ELSE
#if DT_DEBUG == 1
		IF (TESTFLAG(debug_flags,escape))
			DPRINT "Debuging In PROC drv:driver_save\r\n"
			IF (drv:INDesc_rtn == 0)
				DPRINT "            Escape = NULL\r\n"
			ELSE
				DPRINT "            Calling escape routine\r\n"
			END IF
			SINGLESTEP ON
		END IF
#endif
		resetflag tlr:state_flags,tran_active
		CALL  FLD:drv:INDesc_rtn
		IF (RETVAL != 0)
			LET lib:err_retval = RETVAL
			IF (drv:next_screen != -1)
				RETURN
			END IF
			IF (drv:INDrun_funct != 0)
				RETURN (-3)
			END IF
			RETURN (lib:err_retval)
		ELSE
			RETURN (-3)
		END IF
	END IF
END SUB

/*******/
