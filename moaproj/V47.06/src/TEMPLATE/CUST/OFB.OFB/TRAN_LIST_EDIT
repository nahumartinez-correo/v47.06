/****o* Pendientes de agrupación/OFB:template:TRAN_LIST_EDIT
* NOMBRE
*   OFB:template:TRAN_LIST_EDIT
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "custOFB.OFB.h"

	SUB template:TRAN_LIST_EDIT

			/* set up list with 33 members with 3 elements each  */

	call csr:wclist WORKINIT 33 3
	call csr:wclist LISTLOAD
	call csr:wclist ELGET 0 0 wkfld
			/* if the first member of the list is a DICTOBJ it should be
	the template list that has all the info needed.If
	not collect the template list name
	*/
	if (retval == DICTOBJ)
		call csr:parsename wkfld listobj listappl listname
		call CSR:getofbindx listappl listname INDcall listobj
		call csr:listcsr GETLIST INDcall
		if (retval == -1)
			call csr:devcsr_info "LIST NOT IN DATA DICTIONARY"
			return -2
		END IF

			/* use as default for popups */

		move listappl to default_appl

			/* RETVAL is = to the number of members in the list.
		max_members is used to control the number of fields
		shown on the screen.
		*/

		let max_members = retval - 1

			/* make sure the list is within bounds	*/

		if (max_members < S1_SIDX)
			call csr:devcsr_info "NO MEMBERS IN TEMPLATE LIST"
			let lastkey = RT_ESC
			return
		END IF

		if (max_members > S2_HIDX)
			call csr:devcsr_info "MORE THAN 31 MEMBERS IN TEMPLATE LIST"
			let lastkey = RT_ESC
			return
		END IF


			/* member 0, element 2 of the template list must
		have the word "template"
		*/

		call csr:listcsr GETMEMBER 0
		call csr:listcsr GETELEMENT 1 listobj listappl listname wkfld
		if (wkfld != "template")
			call csr:devcsr_info "NOT A TEMPLATE LIST"
			let lastkey = RT_ESC
			return
		END IF
	else
		move "LST"  to tmplistobj
		popup TDtmplist PRECflist,-,SVALflist
		if (lastkey == RT_ESC)
			return
		END IF

			/* use as default for popups */

		move tmplistappl to default_appl
	END IF
	move "UPD"  to default_action
	call load_disp_fields

	let start_idx = S1_SIDX
	let high_idx = S1_HIDX
	call show_fields
	call set_title
	let TDcurmember = S1_SIDX
	display tran_driver
	call hide_rb
	if (max_members <= S1_HIDX)
		hidecontrol next_page
	END IF

	collect
	if ((LASTKEY != RT_ESC) && (lastkey != RT_SEND))
		let start_idx = S2_SIDX
		let high_idx = S2_HIDX
		call show_fields
		let TDcurmember = S2_SIDX
		display tran_driver2
		call hide_rb
		collect
	END IF
	endcollects
	if (lastkey == RT_SEND)
		call csr:wclist LISTSAVE
	END IF

	END SUB

/*******/
