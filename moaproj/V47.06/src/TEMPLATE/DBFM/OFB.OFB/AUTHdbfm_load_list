/****o* Pendientes de agrupación/OFB:template:AUTHdbfm_load_list
* NOMBRE
*   OFB:template:AUTHdbfm_load_list
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "DBFMOFB.OFB.h"

sub template:AUTHdbfm_load_list
	Local Lmember Like common:local_int
	Local Loffset Like common:local_int

	Lmember = 0
	// If we have an ofb as the first member we will starting reading 
	// the members from 1 rather than 0
	if ( substr(pre_dbfm,0,4) == "OFB:" )
		Lmember = 1
	else
		move  "0" to pre_dbfm
	end if
	Loffset = 0
	DO
		if (Loffset == MAX_DBFM_MEMBERS)
			break
		END IF
		// this will always be an data dictionary field fld
		// if not, we will abort!
		CALL  csr:wclist ELGET Lmember 0 rt_fld[Loffset]
		if (retval <= 0)
			move "0" to rt_fld[Loffset]
			CALL  csr:wclist ELUPDATE Lmember 0 DICTOBJ rt_fld[Loffset]
		END IF
		if ( substr(rt_fld[Loffset],0,4) != "FLD:" && \
			substr(rt_fld[Loffset],0,4) != "LST:" && \
			substr(rt_fld[Loffset],0,4) != "SCR:" && \
			rt_fld[Loffset] != "0")
			fprint common:csr_string "Invalid List Format (Member %d Element 0 {%s})",Lmember,substr(rt_fld[Loffset],0,3)
			/* EC Le agrego el parametro */
			call debug_write(" ")
			return -1
		end if

		// if this is a field type, we will treat it as the append as
		// field
		clearfield cds_as_fld[Loffset]
		CALL  csr:wclist ELGET Lmember 1 odbc_fld[Loffset]
		if (retval <= 0)
			move " " to odbc_fld[Loffset]
			CALL  csr:wclist ELUPDATE Lmember 0 DICTOBJ cds_as_fld[Loffset]
		else
			if ( retval == DICTOBJ && \
				substr(odbc_fld[Loffset],0,4) != "DSC:" )
				move odbc_fld[Loffset] to cds_as_fld[Loffset]
				move " " to odbc_fld[Loffset]
			end if
		END IF

		CALL  csr:wclist ELGET Lmember 2 wkfld
		if (retval <= 0)
			move "-"  to wkfld
			CALL  csr:wclist ELUPDATE Lmember 2 STROBJ wkfld
		END IF
		if (wkfld != "-" && cds_as_fld[Loffset].numchars > 0)
			fprint common:csr_string, "Bad List Format (Too many elements - Member %d)",Lmember
			/* EC Le agrego el parametro */
			call debug_write(" ")
			return -1
		end if
		if ( cds_as_fld[Loffset].numchars == 0 )
			move wkfld to cds_as_fld[Loffset]
		end if
		if ( cds_as_fld[Loffset] == "-" )
			move "0" to cds_as_fld[Loffset]
		end if
		CALL  csr:wclist ELGET Lmember 3 wkfld
		if (retval > 0)
			fprint common:csr_string, "Bad List Format (Too many elements - Member %d)",Lmember
			/* EC Le agrego el parametro */
			call debug_write(" ")
			return -1
		END IF

		Lmember = Lmember + 1
		Loffset = Loffset + 1
	LOOP
	END SUB

/*******/
