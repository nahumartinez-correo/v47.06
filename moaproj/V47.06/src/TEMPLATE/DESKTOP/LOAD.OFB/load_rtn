/****o* Pendientes de agrupación/OFB:template:load_rtn
* NOMBRE
*   OFB:template:load_rtn
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "DESKTOPLOAD.OFB.h"

	SUB template:load_rtn
		CALL  csr:wclist ELGET PRE_DISPLAY 0 wkfld
		if (retval > 0)
			move wkfld to ms_pre_dis_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE PRE_DISPLAY 0 DICTOBJ wkfld
			move wkfld to ms_pre_dis_rtn
		END IF



		CALL  csr:wclist ELGET PRE_COLLECT 0 wkfld
		if (retval > 0)
			move wkfld to ms_pre_col_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE PRE_COLLECT 0 DICTOBJ wkfld
			move wkfld to ms_pre_col_rtn
		END IF


		CALL  csr:wclist ELGET ESC_EXIT 0 wkfld
		if (retval > 0)
			move wkfld to ms_esc_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE ESC_EXIT 0 DICTOBJ wkfld
			move wkfld to ms_esc_rtn
		END IF


		CALL  csr:wclist ELGET SEND_EXIT 0 wkfld
		if (retval > 0)
			move wkfld to ms_send_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE SEND_EXIT 0 DICTOBJ wkfld
			move wkfld to ms_send_rtn
		END IF


		CALL  csr:wclist ELGET SAVE 0 wkfld
		if (retval > 0)
			move wkfld to ms_save_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE SAVE 0 DICTOBJ wkfld
			move wkfld to ms_save_rtn
		END IF


		CALL  csr:wclist ELGET RESTORE 0 wkfld
		if (retval > 0)
			move wkfld to ms_restore_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE RESTORE 0 DICTOBJ wkfld
			move wkfld to ms_restore_rtn
		END IF


		CALL  csr:wclist ELGET HCOMM_SETUP 0 wkfld
		if (retval > 0)
			move wkfld to ms_hcomm_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE HCOMM_SETUP 0 DICTOBJ wkfld
			move wkfld to ms_hcomm_rtn
		END IF


		CALL  csr:wclist ELGET JOURNALING 0 wkfld
		if (retval > 0)
			move wkfld to ms_jnl_rtn
		else
			move "0"  to wkfld
			CALL  csr:wclist ELUPDATE JOURNALING 0 DICTOBJ wkfld
			move wkfld to ms_jnl_rtn
		END IF


	Let ms_mem = SPC_RTN
	let ms_cnt = 0
	DO
		if (ms_cnt == 8)
			break
		END IF
		CALL  OFB:load_dictobj
		move wkfld to ms_spc_rtn[ms_cnt]
		let ms_mem = ms_mem + 1
		let ms_cnt = ms_cnt + 1
	LOOP

	END SUB

/*******/
