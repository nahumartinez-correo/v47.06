/****o* Pendientes de agrupación/OFB:template:nbs_save_menu
* NOMBRE
*   OFB:template:nbs_save_menu
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "DESKTOPSAVE_BMF.OFB.h"

	SUB template:nbs_save_menu
	let ms_cnt = 0
	let ms_mem = MENU
	CALL  csr:wclist ELUPDATE ms_mem 0 STROBJ menu_title
	let ms_mem = ms_mem + 1
	DO
		if (ms_cnt == 10)
			break
		END IF
		IF (ms_menu[ms_cnt].NUMCHARS == 0)
			MOVE "0" TO ms_menu[ms_cnt]
		END IF
		CLEARFIELD wkfld
		// for the way we do our menu's we need to insure that 10 get written
		if ( ms_menu_dsc[ms_cnt].numchars == 0 && ms_cnt < 10 )
			move " " to ms_menu_dsc[ms_cnt]
		end if
		if ( ms_menu[ms_cnt].numchars == 0 )
			move "0" to ms_menu[ms_cnt]
		end if
		if ( ms_menu_link[ms_cnt].numchars == 0 )
			move " " to ms_menu[ms_cnt]
		end if
		IF (ms_menu_dsc[ms_cnt].NUMCHARS > 0 || \
		    ms_menu[ms_cnt] != "0" )
			IF (ms_menu_dsc[ms_cnt].NUMCHARS == 0)
				MOVE " " TO ms_menu_dsc[ms_cnt]
			END IF
			CALL  csr:wclist ELUPDATE ms_mem 0 NUMOBJ ms_menu_flag1[ms_cnt]
			CALL  csr:wclist ELUPDATE ms_mem 1 NUMOBJ ms_menu_flag2[ms_cnt]
			CALL  csr:wclist ELUPDATE ms_mem 2 STROBJ ms_menu_dsc[ms_cnt]
			CALL  csr:wclist ELUPDATE ms_mem 3 DICTOBJ ms_menu[ms_cnt]
			CALL  csr:wclist ELUPDATE ms_mem 4 STROBJ ms_menu_link[ms_cnt]
			let ms_mem = ms_mem + 1
		ELSE
			IF (ms_prt_flag == 99)
				CALL  csr:wclist MEMDELETE ms_mem
			ELSE
				IF (ms_menu_dsc[ms_cnt].NUMCHARS == 0)
					MOVE " " TO ms_menu_dsc[ms_cnt]
				END IF
				CALL  csr:wclist ELUPDATE ms_mem 0 NUMOBJ ms_menu_flag1[ms_cnt]
				CALL  csr:wclist ELUPDATE ms_mem 1 NUMOBJ ms_menu_flag2[ms_cnt]
				CALL  csr:wclist ELUPDATE ms_mem 2 STROBJ ms_menu_dsc[ms_cnt]
				CALL  csr:wclist ELUPDATE ms_mem 3 DICTOBJ ms_menu[ms_cnt]
				CALL  csr:wclist ELUPDATE ms_mem 4 STROBJ ms_menu_link[ms_cnt]
				let ms_mem = ms_mem + 1
			END IF
		END IF
		let ms_cnt = ms_cnt + 1
	LOOP
	END SUB

/*******/
