/****o* Pendientes de agrupación/OFB:tlr:TOTScommit
* NOMBRE
*   OFB:tlr:TOTScommit
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "totsOFB.OFB.h"

/****************************************************************/
/* Commit Teller Totals											*/
/* This routine is normally invoked by one of the following		*/
/* standard journal routines:									*/
/*   JNLlog_commit												*/
/*   JNLupdate_commit											*/
/* Upon Entry:													*/
/*   FLD:tlr:INDtots_append = rtn to compute/append cust tots	*/
/* Upon Exit:													*/
/*   RETVAL =  0 - if successful								*/
/*          = -1 - if error										*/
/****************************************************************/
SUB tlr:TOTScommit
    /* Se agrega rutina de grabacion de Totales Para todas las transacciones */
    if (siaf:codigo_siaf == 99023) then
	    //Para NC por incumplimiento y NC ped se restan los totales
	    if (post:OperacionNC ||TESTFLAG(post:sesion_ped_flags,genera_nc_ped))
        	let tlr:INDtots_append_gral = LST:tes:TOTS_EMISNC
        else
        	let tlr:INDtots_append_gral = LST:tes:TOTS_CCGRAL
        endif
    endif

	/************************************************************************************
	Tratamiento especial para Nota de Credito:
	Cuando estoy reversando en dicha instancia pueden surgir 3 casos distintos, a saber:
	1)Debo reversar una transaccion que sera anulada, por lo tanto debo actualizar totales
	2)Debo reversar una tran. que, a la que luego sera realizada su directa correspondiente,
	  por lo tanto no actualizao los totales
	3)Debo reversar una tran, que no esta anulada pero que a la cual se le va a cambiar
	  el medio de pago, por lo tanto debo actualizar totales

	Los controles se realizan de la siguiente manera:
	-post:NotaCreditoRev: Tiene valor "S" si estoy reversando en Nota de Credito
	-post:jnl_sequence_dire: Indica si luego se hara una directa de la tran (D) o es
	 una tran. anulada (ND)
	-post:jnl_nuevo_medpag: Indica si a la tran. se le ha cambiado el medio de pago
	Gabriel Falciola
	***********************************************************************************/
;	if (post:NotaCreditoRev == "S" && post:jnl_sequence_dire != "ND" && post:jnl_nuevo_medpag != "S")
;		clearfield INDtots_append
;	end if

	/************************************************************************************
	Tratamiento especial para Nota de Credito2 (El Regreso):
	Algo parecido sucede cuando hago las directas (journalizacion) de las transacciones de
	la Sesion que no fueron anuladas. Se presentan entonces 2 casos:
	1)Debo journalizar una tran, como no se actualizaron los totales cuando se reverso toda
	la Sesion, no debo sumarla ahora.
	2)Debo journalizar una tran. a la cual se le cambio el medio de pago, por lo tanto
	  actualizao los totales de la misma

	Los controles se realizan de la siguiente manera:
	-post:NotaCredito: Tiene valor "S" si estoy journalizando en Nota de Credito
	-post:jnl_nuevo_medpag: Indica si a la tran. se le ha cambiado el medio de pago
	Gabriel Falciola
	***********************************************************************************/
;	if (post:NotaCredito == "S" && post:jnl_nuevo_medpag != "S")
;		clearfield INDtots_append
;	end if

	/***********************************************************************************
	Tratamiento especial para Nota de Credito3 (La Venganza)
	Si el campo enSesion tiene alguna de estos dos valores quiere decir que estoy
	re-imprimiendo una factura o nota de credito. En este caso no debo actualizar nada
	en los totales - Gabriel Falciola
	***********************************************************************************/
;	if (post:enSesion == "S" || post:enSesion == "P")
;		clearfield INDtots_append
;	end if

	cds clearbuffer DSC:CONtots_write
	/* Execute custom totalling whether it is a list or a PCL routine */
	let lib:ind_type = (INDtots_append >> 24) & 0xff
	SELECT (lib:ind_type)
		case OFB_OBJ
			CALL  FLD:INDtots_append
			break
		case LST_OBJ
			CALL  CSR:total_list FLD:INDtots_append DSC:CONtots_write FLD:tlr:jnl_tran_flags 0
			/*MLD Si tiene asociado lista de totales grabo un flag en la tabla de rendicion.
			Esto me indica si debe empezar de nuevo el cierre guiado */
			if (tes:en_cierre != "S") then
				call tes:CDSmarca_tot("TOTALES")
			end if
			break
		case 0
		    /* no new totalling to do, but must still do cds append & commit */
			break
		CASE ELSE
			errmsg common:errmsg_list "Invalid Totaling Routine"
	END SELECT

    ;SMC Agregado para Control de Caja
  	let lib:ind_type = (INDtots_append_gral >> 24) & 0xff
   	SELECT (lib:ind_type)
    		case OFB_OBJ
       			CALL  FLD:INDtots_append_gral
    			break
    		case LST_OBJ
    			CALL  CSR:total_list FLD:INDtots_append_gral DSC:CONtots_write FLD:tlr:jnl_tran_flags 0
    			break
    		case 0
    		/* no new totalling to do, but must still do cds append & commit */
        		;CALL  CSR:total_list FLD:INDtots_append_gral DSC:CONtots_write FLD:tlr:jnl_tran_flags 0
    			break
    		CASE ELSE
    			errmsg common:errmsg_list "Rutina de Totalizacion Invalida"
   	END SELECT
    clearfield FLD:INDtots_append_gral
	;PS9756 a fin de que cuando se esté trabajando con un jnl_bus_day con una fecha anterior al jnl_date
	;para que no se reinicien los totales ante una caida totalizamos el jnl_date. *** MDG
	cds append DSC:CONtots_write \
		jnl_date AS tots_bus_date \
		jnl_sequence AS tots_sequence \
		cctl_cash_in AS tots_cash_in \
		cctl_cash_out AS tots_cash_out \
		cctl_net_cash AS tots_net_cash
#if TLR_TOTS_WAIT == 0
	cds update DSC:CONtots_write lock commitwork nowait
#else
	cds update DSC:CONtots_write lock commitwork
#endif
	if (cdsretval < 0)
		CALL  OFB:lib:MISCcds_find_err /* display error msg */
		return (-1)
	END IF
END SUB

/*******/
