/****o* Pendientes de agrupación/OFB:tlr:TOTScommit1
* NOMBRE
*   OFB:tlr:TOTScommit1
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "totsOFB.OFB.h"

SUB tlr:TOTScommit1
	cds clearbuffer DSC:tlr:CONtots_write_aux
	/* Execute custom totalling whether it is a list or a PCL routine */
	let lib:ind_type = (INDtots_append >> 24) & 0xff
	SELECT (lib:ind_type)
		case OFB_OBJ
			CALL  FLD:INDtots_append
			break
		case LST_OBJ
			CALL  CSR:total_list FLD:INDtots_append DSC:tlr:CONtots_write_aux \
				FLD:tlr:jnl_tran_flags 0
			break
		case 0
		/* no new totalling to do, but must still do cds append & commit */
			break
		CASE ELSE
			errmsg common:errmsg_list "Invalid Totaling Routine"
	END SELECT
	;PS9756 a fin de que cuando se esté trabajando con un jnl_bus_day con una fecha anterior al jnl_date
	;para que no se reinicien los totales ante una caida totalizamos el jnl_date. *** MDG
	cds append DSC:tlr:CONtots_write_aux \
		jnl_date AS tots_bus_date \
		jnl_sequence AS tots_sequence \
		cctl_cash_in AS tots_cash_in \
		cctl_cash_out AS tots_cash_out \
		cctl_net_cash AS tots_net_cash
#if TLR_TOTS_WAIT == 0
	cds update DSC:tlr:CONtots_write_aux lock //commitwork nowait
#else
	cds update DSC:tlr:CONtots_write_aux lock //commitwork
#endif
	if (cdsretval < 0)
		CALL  OFB:lib:MISCcds_find_err /* display error msg */
		return (-1)
	END IF
END SUB

/*******/
