/****o* Pendientes de agrupación/OFB:tlr:TOTSinitialize
* NOMBRE
*   OFB:tlr:TOTSinitialize
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "totsOFB.OFB.h"

/****************************************************************/
/* Teller Totals Initialization									*/
/* Perform any required initialization when entering the teller	*/
/* application.													*/
/* This routine establishes the totals context for this			*/
/* operator, locks the totals record, and extracts the totals	*/
/* fields from the record.										*/
/* Upon Exit:													*/
/*   RETVAL =  0 if successful									*/
/*          = -2 if error initializing totals					*/
/*   tlr:cctl_start_cash    = from last tots rec				*/
/*   tlr:cctl_cash_in       = from last tots rec				*/
/*   tlr:cctl_cash_out      = from last tots rec				*/
/*   tlr:cctl_net_cash      = from last tots rec				*/
/*   totals buckets         = from last tots rec				*/
/****************************************************************/
SUB tlr:TOTSinitialize
	local LRetval like lib:err_retval
	
/* Establish totals context and initialize totals fields */
	cds select from DSC:TABtots becomes DSC:CONtots_write where \
		((tots_branch == op:op_branch_id) \
		&& (tots_operator == op:op_operator_id))
	if (cdsretval == 0) /* if select ok,...*/
		cds findfirst DSC:CONtots_write lock /* find record */
		let LRetval = cdsretval 
		if (cdsretval == 0) /* if find ok,...*/
            #ifdef MENSAJES_CIERRE
	        if (siaf:codigo_siaf == 9560)
	            dprint "Cierre del dia, OK TOTSinitialize\r\n"
	        end if
	        #endif

			cds extract DSC:CONtots_write all /* extract fields */
			let cctl_start_cash = tots_start_cash /* init cash */
			let cctl_cash_in = tots_cash_in
			let cctl_cash_out = tots_cash_out
			let cctl_net_cash = tots_net_cash
			return /* return */

            #ifdef MENSAJES_CIERRE
            else
	            if (siaf:codigo_siaf == 9560)
	                dprint "Cierre del dia, Error inicializando totales. CDRETVAL: %s\r\n",cdsretval
	            end if
	        #endif
		END IF
	END IF
/* if we get here, there was an error */
#ifdef SUCU_VIRTUAL
    if (post:sucu_virtual != "S") then
	    errmsg common:errmsg_list,DSC:ERRtots_locate
	else
	    return (LRetval)
	end if
#else
	errmsg common:errmsg_list,DSC:ERRtots_locate
#endif
	return (-2)
END SUB

/*******/
