/****o* Pendientes de agrupación/OFB:tlr:CCTLinitialize
* NOMBRE
*   OFB:tlr:CCTLinitialize
* DESCRIPCION
* 	Cash Control Initialization									
* 	This routine is invoked upon entry to the teller application	
* 	to perform any cash control initialization that is required.	
* 	It is invoked from JNLinitialize.						
* ENTRADAS
*   tlr:jnl_state_flags   = for last jnl tran					
*   tlr:jnl_payget_start  = for last jnl tran					
*   tlr:jnl_payget_end    = for last jnl tran					
* SALIDAS
*   tlr:state_flags       = list,10k for last jnl tran			
*   tlr:cctl_payget_start = for last jnl tran					
*   tlr:cctl_payget_end   = for last jnl tran					
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "cctlmisc.ofb.h"

	SUB tlr:CCTLinitialize
/* recover list flags from last journaled tran */
	if (testflag(tlr:jnl_state_flags,list))
		setflag state_flags,list
		move DSC:cctl_list to lib:stat_tlr_list
		if (testflag(tlr:jnl_state_flags,start_list))
			setflag state_flags,start_list
			move DSC:cctl_start_list to lib:stat_tlr_list
		END IF
		if (testflag(tlr:jnl_state_flags,end_list))
			setflag state_flags,end_list
			move DSC:cctl_end_list to lib:stat_tlr_list
		END IF
		refresh lib:stat_tlr_list
	END IF
/* recover 10k flag from last journaled tran */
	if (testflag(tlr:jnl_state_flags,ten_k))
		setflag state_flags,ten_k
	END IF
/* recover payget from last journaled tran */
	let cctl_payget_start = jnl_payget_start
	let cctl_payget_end = jnl_payget_end
	END SUB

/*******/
