/****o* Pendientes de agrupación/OFB:tlr:cctl_compute
* NOMBRE
*   OFB:tlr:cctl_compute
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "cctlmisc.ofb.h"

/*--------------------------------------------------------------*/
/* Compute (Temporary) Payget and Cash Position					*/
/*--------------------------------------------------------------*/
	SUB tlr:cctl_compute
	if (! testflag(tlr:tran_flags,correction))
/* compute temporary payget - normal */
		let cctl_payget_temp = cctl_payget_start +\
			cctl_cust_paid_in - cctl_cust_paid_out
/* compute temporary cash position - normal */
		let cctl_cash_in_temp = cctl_cash_in + cctl_cust_paid_in +\
			cctl_ncst_cash_in
		let cctl_cash_out_temp = cctl_cash_out + cctl_cust_paid_out\
			+ cctl_ncst_cash_out
		let cctl_net_cash_temp = cctl_net_cash + cctl_cust_paid_in\
			+ cctl_ncst_cash_in - cctl_cust_paid_out -\
			cctl_ncst_cash_out
	else
/* compute temporary payget - correction */
		let cctl_payget_temp = cctl_payget_start -\
			cctl_cust_paid_in + cctl_cust_paid_out
/* compute temporary cash position - correction */
		let cctl_cash_in_temp = cctl_cash_in - cctl_cust_paid_in -\
			cctl_ncst_cash_in
		let cctl_cash_out_temp = cctl_cash_out - cctl_cust_paid_out\
			- cctl_ncst_cash_out
		let cctl_net_cash_temp = cctl_net_cash - cctl_cust_paid_in\
			- cctl_ncst_cash_in + cctl_cust_paid_out +\
			cctl_ncst_cash_out
	END IF
	END SUB

/*******/
