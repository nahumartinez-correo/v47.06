/****o* Pendientes de agrupación/OFB:admin:CDSsuc_ter_sel
* NOMBRE
*   OFB:admin:CDSsuc_ter_sel
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   Objetos que llaman al objeto documentado (obligatorio)
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adminCDS.h"

SUB admin:CDSsuc_ter_sel
    br_ter_node_id_aux = ""
    MOVE br_cemi_node_id TO br_ter_node_id_tmp
    MOVE adt_cemi_branch TO adt_br_branch_tmp
    CDS SELECT FROM DSC:Suc_ter_tbl BECOMES DSC:Suc_ter_ctx \
         WHERE  adt_cemi_branch == FLD:adt_cemi_branch 
    SETFLAG drv:mode_flags,picklist_mode
    drv:button = 0
    CALL drv:but_disable
    drv:button = 2
    CALL drv:but_disable
    drv:button = 5
    CALL drv:but_disable
    
    CDS MULTIDISPLAY DSC:Suc_ter_ctx  LISTsuc_ter
    drv:button = 0
    CALL drv:but_up_enable
    drv:button = 2
    CALL drv:but_up_enable
    drv:button = 5
    CALL drv:but_up_enable    
    RESETFLAG drv:mode_flags,picklist_mode
    	lib:err_retval = CDSRETVAL
    IF (lib:err_retval == 0) THEN
      MOVE br_ter_node_id_tmp TO br_cemi_node_id
      MOVE adt_br_branch_tmp TO adt_cemi_branch
    
    RETURN (0)
      CALL CDSsuc_ter_load
      RETURN (-2)
    END IF 
    lib:err_retval = CDSRETVAL
    CALL lib:MISCcds_find_err
    CLEARFIELD br_cemi_node_id
    REFRESH br_cemi_node_id
    IF (RETVAL != 0) THEN
      RETURN (-1)
    END IF 
    CDS EXTRACT DSC:Suc_ter_ctx  ALL 
    MOVE adt_br_branch_tmp TO adt_cemi_branch
    br_ter_node_id_aux = br_cemi_node_id
    CALL csr:proc_list(F_COPY,lst:admin:LISTsuc_ter_flds,lst:admin:LISTbck_Suc_ter)    
    
    RETURN (0)
END SUB 

/*******/
