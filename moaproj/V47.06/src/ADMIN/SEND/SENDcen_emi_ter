/****o* Pendientes de agrupación/OFB:admin:SENDcen_emi_ter
* NOMBRE
*   OFB:admin:SENDcen_emi_ter
* DESCRIPCION
*   Comportamiento del objeto (obligatorio)
* ENTRADAS
*   Parámetros de entrada de la rutina, sean argumentos o campos que tiene en cuenta
* SALIDAS
*   Campos modificados como resultado o returns cuyos valores sean no triviales
* IMPACTOS
*   Otros objetos que deberán ser analizados al modificar el objeto actual
* REFERENCIADO POR
*   admin:TRANabm_br_cemi_ter
* DOCUMENTACION
*   Documentación relevante que deberá ser actualizada por la modificación de la rutina
* SOURCE
*/
#include "adminSEND.h"

SUB admin:SENDcen_emi_ter
	LOCAL l_tabla LIKE admin:tabla 
	LOCAL l_INDCamposTablas LIKE post:INDCamposTablas 
	LOCAL l_flag LIKE siaf:i

	//gpb:AUT-2429
	//realizo la validacion de los campos obligatorios (no es la solucion ideal realizarlo aca)
	//se tendria que replantear como esta hecho el ABM
	IF (TESTFLAG(admin:mode_flags,update) || TESTFLAG(admin:mode_flags,delete)) THEN
		RESETVALDONE adt_cemi_CEC
		RESETVALDONE adt_cemi_branch
		RESETVALDONE br_cemi_node_id
			
		l_flag = 0
		CALL post:MISCFtrim(admin:adt_cemi_CEC)
		CALL post:MISCFtrim(admin:adt_cemi_branch)
		CALL post:MISCFtrim(admin:br_cemi_node_id)
		
		IF (adt_cemi_CEC.NUMCHARS == 0) THEN
			l_flag = 1
			NEXTFIELD adt_cemi_CEC
		ELSEIF (adt_cemi_branch.NUMCHARS == 0) THEN
			l_flag = 1
			NEXTFIELD adt_cemi_branch
		ELSEIF (br_cemi_node_id.NUMCHARS == 0) THEN
			l_flag = 1
			NEXTFIELD br_cemi_node_id
		END IF
		
		IF (l_flag > 0) THEN
			UNGETKEY RT_TAB
			RETURN (-2)
		END IF
	END IF

	;SMC Autorizo Modificaciones
	call post:MISCAutorizoModif("SucCe_Ter")
	if (retval < 0) then
		return (-2)
	endif

	drv:save_button = drv:last_button
	IF (TESTFLAG(admin:mode_flags,update)) THEN
		CALL CDSce_emi_ter_save
		CALL drv:side_bar_disable
		;SMC journalizo Modificacion
		call post:MISCJournalTablas
		RESETFLAG admin:mode_flags,update
	ELSE 
		IF (TESTFLAG(admin:mode_flags,delete)) THEN
			RESETFLAG admin:mode_flags,delete
			CALL lib:adt_delete_verify
			IF (RETVAL == 0) THEN
				CALL drv:side_bar_disable
				CALL CDSce_emi_ter_del
					IF (RETVAL != 0) THEN
						drv:button = drv:save_button
						CALL drv:but_up_enable
						RETURN (-1)
					ELSE 
						;SMC journalizo Modificacion
						call post:MISCJournalTablas
						CALL CSR:proc_list(170,LST:LISTce_emi_ter_flds)
						CALL CSR:proc_list(190,LST:LISTce_emi_ter_flds)
						RETURN (-1)
					END IF 
			END IF 
    ELSE 
			IF (TESTFLAG(admin:mode_flags,imprimir)) THEN
				RESETFLAG admin:mode_flags,imprimir
				/*siaf:adt_tabla_context = DSC:SucCe_Ter_ctx
				siaf:INDencab_lis = OFB:MISCencab_ceEmi_ter
				siaf:INDselect_tabla = OFB:CDSceEmi_ter_select
				siaf:INDpaso_str_tabla = OFB:MISCpaso_str_CETer
				siaf:INDestado_clave = OFB:MISCclave_ceEmi_ter
				siaf:INDadt_sval = 0
				CALL siaf:TRANimprimo_driver*/
				
        //Inicio gpb:AUT-2415 
        /*CALL MISCdumptable 
         CALL CDSdumptable*/  
        //resguardo los valores originales
				LET l_tabla = admin:tabla 
				LET l_INDCamposTablas = post:INDCamposTablas 
        CALL post:MISCdumptableNew 
				admin:tabla = "SucCe_Ter"
				post:INDCamposTablas = LST:LISTce_emi_ter_flds
        CALL post:CDSdumptableNew  
        //recupero los valores originales
				LET admin:tabla = l_tabla
				LET post:INDCamposTablas = l_INDCamposTablas
        //Fin gpb:AUT-2415 
				
				CALL CSR:proc_list(170,LST:LISTce_emi_ter_flds)
				CALL CSR:proc_list(190,LST:LISTce_emi_ter_flds)
				RETURN (-1)
			END IF 
		END IF 
		RETURN (-1)
	END IF
	CALL CSR:proc_list(170,LST:LISTce_emi_ter_flds)
	CALL CSR:proc_list(190,LST:LISTce_emi_ter_flds)
	RETURN (-1)
END SUB 

/*******/
